import { enumBalancerVariants, enumDirection, enumItemProcessorTypes, formatItemsPerSecond, MetaBalancerBuilding, T, Vector } from '../shapez.js';
import { RESOURCES } from '../types/common.js';
const var22 = 'two-two-balancer';
export class Balancer22 {
    static install(mod) {
        // @ts-ignore
        enumBalancerVariants[var22] = var22;
        mod.modInterface.addVariantToExistingBuilding(
        // @ts-ignore
        MetaBalancerBuilding, var22, {
            name: "2-2 balancer",
            description: "...The only balancer you ever need",
            tutorialImageBase64: RESOURCES.splitter1,
            regularSpriteBase64: RESOURCES.splitter1,
            blueprintSpriteBase64: RESOURCES.splitter1,
            dimensions: new Vector(1, 1),
            additionalStatistics(root) {
                const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.balancer);
                return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];
            },
            isUnlocked(root) {
                return true;
            },
        });
        // Extend instance methods
        mod.modInterface.extendClass(MetaBalancerBuilding, ({ $old }) => ({
            updateVariants(entity, rotationVariant, variant) {
                if (variant === var22) {
                    entity.components.ItemEjector.setSlots([
                        { pos: new Vector(0, 0), direction: enumDirection.top },
                        { pos: new Vector(0, 0), direction: enumDirection.right },
                    ]);
                    entity.components.ItemAcceptor.setSlots([
                        { pos: new Vector(0, 0), direction: enumDirection.bottom },
                        { pos: new Vector(0, 0), direction: enumDirection.left },
                    ]);
                }
                else {
                    $old.updateVariants.call(this, entity, rotationVariant, variant);
                }
            },
            getAvailableVariants(root) {
                return [var22];
            },
        }));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFsYW5jZXIyMi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idWlsZGluZ3MvYmFsYW5jZXIyMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQVUsb0JBQW9CLEVBQUUsYUFBYSxFQUFFLHNCQUFzQixFQUFFLG9CQUFvQixFQUFZLG9CQUFvQixFQUFPLENBQUMsRUFBRSxNQUFNLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDekssT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRS9DLE1BQU0sS0FBSyxHQUFHLGtCQUFrQixDQUFDO0FBRWpDLE1BQU0sT0FBTyxVQUFVO0lBQ3RCLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBUTtRQUN0QixhQUFhO1FBQ2Isb0JBQW9CLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDO1FBRXBDLEdBQUcsQ0FBQyxZQUFZLENBQUMsNEJBQTRCO1FBQzVDLGFBQWE7UUFDYixvQkFBb0IsRUFDcEIsS0FBSyxFQUNMO1lBQ0MsSUFBSSxFQUFFLGNBQWM7WUFDcEIsV0FBVyxFQUFFLG9DQUFvQztZQUVqRCxtQkFBbUIsRUFBRSxTQUFTLENBQUMsU0FBUztZQUN4QyxtQkFBbUIsRUFBRSxTQUFTLENBQUMsU0FBUztZQUN4QyxxQkFBcUIsRUFBRSxTQUFTLENBQUMsU0FBUztZQUUxQyxVQUFVLEVBQUUsSUFBSSxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUU1QixvQkFBb0IsQ0FBQyxJQUFJO2dCQUN4QixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLHFCQUFxQixDQUFDLHNCQUFzQixDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUNuRixPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsb0JBQW9CLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BGLENBQUM7WUFFRCxVQUFVLENBQUMsSUFBSTtnQkFDZCxPQUFPLElBQUksQ0FBQztZQUNiLENBQUM7U0FDRCxDQUNELENBQUM7UUFFRiwwQkFBMEI7UUFDMUIsR0FBRyxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ2pFLGNBQWMsQ0FBQyxNQUFjLEVBQUUsZUFBb0IsRUFBRSxPQUFlO2dCQUNuRSxJQUFJLE9BQU8sS0FBSyxLQUFLLEVBQUU7b0JBQ3RCLE1BQU0sQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQzt3QkFDdEMsRUFBRSxHQUFHLEVBQUUsSUFBSSxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxhQUFhLENBQUMsR0FBRyxFQUFFO3dCQUN2RCxFQUFFLEdBQUcsRUFBRSxJQUFJLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsU0FBUyxFQUFFLGFBQWEsQ0FBQyxLQUFLLEVBQUU7cUJBQ3pELENBQUMsQ0FBQztvQkFDSCxNQUFNLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7d0JBQ3ZDLEVBQUUsR0FBRyxFQUFFLElBQUksTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxTQUFTLEVBQUUsYUFBYSxDQUFDLE1BQU0sRUFBRTt3QkFDMUQsRUFBRSxHQUFHLEVBQUUsSUFBSSxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxhQUFhLENBQUMsSUFBSSxFQUFFO3FCQUN4RCxDQUFDLENBQUM7aUJBQ0g7cUJBQU07b0JBQ04sSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxlQUFlLEVBQUUsT0FBTyxDQUFDLENBQUM7aUJBQ2pFO1lBQ0YsQ0FBQztZQUNELG9CQUFvQixDQUFDLElBQWM7Z0JBQ2xDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNoQixDQUFDO1NBQ0QsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmltcG9ydCB7IEVudGl0eSwgZW51bUJhbGFuY2VyVmFyaWFudHMsIGVudW1EaXJlY3Rpb24sIGVudW1JdGVtUHJvY2Vzc29yVHlwZXMsIGZvcm1hdEl0ZW1zUGVyU2Vjb25kLCBHYW1lUm9vdCwgTWV0YUJhbGFuY2VyQnVpbGRpbmcsIE1vZCwgVCwgVmVjdG9yIH0gZnJvbSAnLi4vc2hhcGV6LmpzJztcclxuaW1wb3J0IHsgUkVTT1VSQ0VTIH0gZnJvbSAnLi4vdHlwZXMvY29tbW9uLmpzJztcclxuXHJcbmNvbnN0IHZhcjIyID0gJ3R3by10d28tYmFsYW5jZXInO1xyXG5cclxuZXhwb3J0IGNsYXNzIEJhbGFuY2VyMjIge1xyXG5cdHN0YXRpYyBpbnN0YWxsKG1vZDogTW9kKSB7XHJcblx0XHQvLyBAdHMtaWdub3JlXHJcblx0XHRlbnVtQmFsYW5jZXJWYXJpYW50c1t2YXIyMl0gPSB2YXIyMjtcclxuXHJcblx0XHRtb2QubW9kSW50ZXJmYWNlLmFkZFZhcmlhbnRUb0V4aXN0aW5nQnVpbGRpbmcoXHJcblx0XHRcdC8vIEB0cy1pZ25vcmVcclxuXHRcdFx0TWV0YUJhbGFuY2VyQnVpbGRpbmcsXHJcblx0XHRcdHZhcjIyLFxyXG5cdFx0XHR7XHJcblx0XHRcdFx0bmFtZTogXCIyLTIgYmFsYW5jZXJcIixcclxuXHRcdFx0XHRkZXNjcmlwdGlvbjogXCIuLi5UaGUgb25seSBiYWxhbmNlciB5b3UgZXZlciBuZWVkXCIsXHJcblxyXG5cdFx0XHRcdHR1dG9yaWFsSW1hZ2VCYXNlNjQ6IFJFU09VUkNFUy5zcGxpdHRlcjEsXHJcblx0XHRcdFx0cmVndWxhclNwcml0ZUJhc2U2NDogUkVTT1VSQ0VTLnNwbGl0dGVyMSxcclxuXHRcdFx0XHRibHVlcHJpbnRTcHJpdGVCYXNlNjQ6IFJFU09VUkNFUy5zcGxpdHRlcjEsXHJcblxyXG5cdFx0XHRcdGRpbWVuc2lvbnM6IG5ldyBWZWN0b3IoMSwgMSksXHJcblxyXG5cdFx0XHRcdGFkZGl0aW9uYWxTdGF0aXN0aWNzKHJvb3QpIHtcclxuXHRcdFx0XHRcdGNvbnN0IHNwZWVkID0gcm9vdC5odWJHb2Fscy5nZXRQcm9jZXNzb3JCYXNlU3BlZWQoZW51bUl0ZW1Qcm9jZXNzb3JUeXBlcy5iYWxhbmNlcik7XHJcblx0XHRcdFx0XHRyZXR1cm4gW1tULmluZ2FtZS5idWlsZGluZ1BsYWNlbWVudC5pbmZvVGV4dHMuc3BlZWQsIGZvcm1hdEl0ZW1zUGVyU2Vjb25kKHNwZWVkKV1dO1xyXG5cdFx0XHRcdH0sXHJcblxyXG5cdFx0XHRcdGlzVW5sb2NrZWQocm9vdCkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0fSxcclxuXHRcdFx0fVxyXG5cdFx0KTtcclxuXHJcblx0XHQvLyBFeHRlbmQgaW5zdGFuY2UgbWV0aG9kc1xyXG5cdFx0bW9kLm1vZEludGVyZmFjZS5leHRlbmRDbGFzcyhNZXRhQmFsYW5jZXJCdWlsZGluZywgKHsgJG9sZCB9KSA9PiAoe1xyXG5cdFx0XHR1cGRhdGVWYXJpYW50cyhlbnRpdHk6IEVudGl0eSwgcm90YXRpb25WYXJpYW50OiBhbnksIHZhcmlhbnQ6IHN0cmluZykge1xyXG5cdFx0XHRcdGlmICh2YXJpYW50ID09PSB2YXIyMikge1xyXG5cdFx0XHRcdFx0ZW50aXR5LmNvbXBvbmVudHMuSXRlbUVqZWN0b3Iuc2V0U2xvdHMoW1xyXG5cdFx0XHRcdFx0XHR7IHBvczogbmV3IFZlY3RvcigwLCAwKSwgZGlyZWN0aW9uOiBlbnVtRGlyZWN0aW9uLnRvcCB9LFxyXG5cdFx0XHRcdFx0XHR7IHBvczogbmV3IFZlY3RvcigwLCAwKSwgZGlyZWN0aW9uOiBlbnVtRGlyZWN0aW9uLnJpZ2h0IH0sXHJcblx0XHRcdFx0XHRdKTtcclxuXHRcdFx0XHRcdGVudGl0eS5jb21wb25lbnRzLkl0ZW1BY2NlcHRvci5zZXRTbG90cyhbXHJcblx0XHRcdFx0XHRcdHsgcG9zOiBuZXcgVmVjdG9yKDAsIDApLCBkaXJlY3Rpb246IGVudW1EaXJlY3Rpb24uYm90dG9tIH0sXHJcblx0XHRcdFx0XHRcdHsgcG9zOiBuZXcgVmVjdG9yKDAsIDApLCBkaXJlY3Rpb246IGVudW1EaXJlY3Rpb24ubGVmdCB9LFxyXG5cdFx0XHRcdFx0XSk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdCRvbGQudXBkYXRlVmFyaWFudHMuY2FsbCh0aGlzLCBlbnRpdHksIHJvdGF0aW9uVmFyaWFudCwgdmFyaWFudCk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRnZXRBdmFpbGFibGVWYXJpYW50cyhyb290OiBHYW1lUm9vdCkge1xyXG5cdFx0XHRcdHJldHVybiBbdmFyMjJdO1xyXG5cdFx0XHR9LFxyXG5cdFx0fSkpO1xyXG5cdH1cclxufVxyXG4iXX0=