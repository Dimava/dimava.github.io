import { SzLayer } from "./layer.js";
import { SzContext2D } from "./SzContext2D.js";
let cv = document.createElement('canvas');
document.body.append(cv);
cv.style.border = '3px solid #aaa';
cv.height = cv.width = 256;
let ctx = cv.getContext('2d');
const PI = Math.PI;
const PI12 = -PI / 12;
function log(...a) {
    for (let o of a)
        document.body.append(JSON.stringify(o));
}
ctx.scale(cv.width / 2, cv.height / 2);
ctx.translate(1, 1);
ctx.rotate(-Math.PI / 2);
ctx.scale(1 / 1.15, 1 / 1.15);
ctx.lineCap = 'round';
ctx.lineJoin = 'round';
let sctx = new SzContext2D(ctx);
const testTemplate = {
    cuts: [
        { from: 10, to: 10, shape: 'line', color: 'blue' },
        { from: 14, to: 14, shape: 'line', color: 'blue' },
    ],
    quads: [
        { shape: 'square', color: 'green', from: 2, to: 4 },
        { shape: 'circle', color: 'pink', from: 5, to: 19 },
        { shape: 'square', color: 'green', from: 20, to: 22 },
    ],
    areas: [
        { shape: 'sector', color: 'red', from: 11, to: 13 },
    ],
};
let layer = new SzLayer(testTemplate);
// let layer = SzLayer.createTest();
layer.drawCenteredNormalized(sctx);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdF9kcmF3aW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9fc2hhcGVzdC90ZXN0X2RyYXdpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBWSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBSy9DLElBQUksRUFBRSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDMUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDekIsRUFBRSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsZ0JBQWdCLENBQUE7QUFDbEMsRUFBRSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztBQUMzQixJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBRSxDQUFDO0FBQy9CLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7QUFDbkIsTUFBTSxJQUFJLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBQ3RCLFNBQVMsR0FBRyxDQUFDLEdBQUcsQ0FBUTtJQUN2QixLQUFLLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDZCxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUMsQ0FBQztBQUVELEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUN2QyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNwQixHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUN6QixHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQzlCLEdBQUcsQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0FBQ3RCLEdBQUcsQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO0FBRXZCLElBQUksSUFBSSxHQUFHLElBQUksV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBR2hDLE1BQU0sWUFBWSxHQUFhO0lBQzlCLElBQUksRUFBRTtRQUNMLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRTtRQUNsRCxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUU7S0FDbEQ7SUFDRCxLQUFLLEVBQUU7UUFDTixFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUU7UUFDbkQsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFO1FBQ25ELEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtLQUNyRDtJQUNELEtBQUssRUFBRTtRQUNOLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtLQUNuRDtDQUNELENBQUE7QUFFRCxJQUFJLEtBQUssR0FBRyxJQUFJLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUN0QyxvQ0FBb0M7QUFFcEMsS0FBSyxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSVN6TGF5ZXIsIFN6TGF5ZXIgfSBmcm9tIFwiLi9sYXllci5qc1wiO1xyXG5pbXBvcnQgeyBTekNvbnRleHQyRCB9IGZyb20gXCIuL1N6Q29udGV4dDJELmpzXCI7XHJcblxyXG5cclxuXHJcblxyXG5sZXQgY3YgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcclxuZG9jdW1lbnQuYm9keS5hcHBlbmQoY3YpO1xyXG5jdi5zdHlsZS5ib3JkZXIgPSAnM3B4IHNvbGlkICNhYWEnXHJcbmN2LmhlaWdodCA9IGN2LndpZHRoID0gMjU2O1xyXG5sZXQgY3R4ID0gY3YuZ2V0Q29udGV4dCgnMmQnKSE7XHJcbmNvbnN0IFBJID0gTWF0aC5QSTtcclxuY29uc3QgUEkxMiA9IC1QSSAvIDEyO1xyXG5mdW5jdGlvbiBsb2coLi4uYTogYW55W10pIHtcclxuXHRmb3IgKGxldCBvIG9mIGEpXHJcblx0XHRkb2N1bWVudC5ib2R5LmFwcGVuZChKU09OLnN0cmluZ2lmeShvKSk7XHJcbn1cclxuXHJcbmN0eC5zY2FsZShjdi53aWR0aCAvIDIsIGN2LmhlaWdodCAvIDIpO1xyXG5jdHgudHJhbnNsYXRlKDEsIDEpO1xyXG5jdHgucm90YXRlKC1NYXRoLlBJIC8gMik7XHJcbmN0eC5zY2FsZSgxIC8gMS4xNSwgMSAvIDEuMTUpO1xyXG5jdHgubGluZUNhcCA9ICdyb3VuZCc7XHJcbmN0eC5saW5lSm9pbiA9ICdyb3VuZCc7XHJcblxyXG5sZXQgc2N0eCA9IG5ldyBTekNvbnRleHQyRChjdHgpO1xyXG5cclxuXHJcbmNvbnN0IHRlc3RUZW1wbGF0ZTogSVN6TGF5ZXIgPSB7XHJcblx0Y3V0czogW1xyXG5cdFx0eyBmcm9tOiAxMCwgdG86IDEwLCBzaGFwZTogJ2xpbmUnLCBjb2xvcjogJ2JsdWUnIH0sXHJcblx0XHR7IGZyb206IDE0LCB0bzogMTQsIHNoYXBlOiAnbGluZScsIGNvbG9yOiAnYmx1ZScgfSxcclxuXHRdLFxyXG5cdHF1YWRzOiBbXHJcblx0XHR7IHNoYXBlOiAnc3F1YXJlJywgY29sb3I6ICdncmVlbicsIGZyb206IDIsIHRvOiA0IH0sXHJcblx0XHR7IHNoYXBlOiAnY2lyY2xlJywgY29sb3I6ICdwaW5rJywgZnJvbTogNSwgdG86IDE5IH0sXHJcblx0XHR7IHNoYXBlOiAnc3F1YXJlJywgY29sb3I6ICdncmVlbicsIGZyb206IDIwLCB0bzogMjIgfSxcclxuXHRdLFxyXG5cdGFyZWFzOiBbXHJcblx0XHR7IHNoYXBlOiAnc2VjdG9yJywgY29sb3I6ICdyZWQnLCBmcm9tOiAxMSwgdG86IDEzIH0sXHJcblx0XSxcclxufVxyXG5cclxubGV0IGxheWVyID0gbmV3IFN6TGF5ZXIodGVzdFRlbXBsYXRlKTtcclxuLy8gbGV0IGxheWVyID0gU3pMYXllci5jcmVhdGVUZXN0KCk7XHJcblxyXG5sYXllci5kcmF3Q2VudGVyZWROb3JtYWxpemVkKHNjdHgpOyJdfQ==