(function(g,f){typeof exports==='object'&&typeof module!=='undefined'?f(exports,require('twind')):typeof define==='function'&&define.amd?define(['exports','twind'],f):(g=typeof globalThis!=='undefined'?globalThis:g||self,f(g.twindObserve={},g.twind));}(this,(function(exports, twind){'use strict';var l=(e,t)=>{e.size>t&&e.delete(e.keys().next().value);};var p=new WeakMap,S=e=>{let t=p.get(e);return t||(t=new Map,p.set(e,t)),t},g=(e,t,i)=>i.indexOf(e)==t,f=({tw:e=twind.tw}={})=>{if(typeof MutationObserver=="function"){let t=S(e),i=({target:n,addedNodes:d})=>{var c;let s=(c=n.getAttribute)==null?void 0:c.call(n,"class");if(s){let r=t.get(s);r||(r=e(s).split(/ +/g).filter(g).join(" "),t.set(s,r),t.set(r,r),l(t,3e4)),s!==r&&n.setAttribute("class",r);}for(let r=d.length;r--;){let u=d[r];o([{target:u,addedNodes:u.children||[]}]);}},o=n=>{n.forEach(i),n=a.takeRecords(),n&&n.forEach(i);},a=new MutationObserver(o);return {observe(n){return o([{target:n,addedNodes:[n]}]),a.observe(n,{attributes:!0,attributeFilter:["class"],subtree:!0,childList:!0}),this},disconnect(){return a.disconnect(),this}}}return {observe(){return this},disconnect(){return this}}};function h(e,t=typeof this=="function"?void 0:this){return f(t).observe(e)}Object.keys(twind).forEach(function(k){if(k!=='default')Object.defineProperty(exports,k,{enumerable:true,get:function(){return twind[k];}});});exports.createObserver=f;exports.observe=h;Object.defineProperty(exports,'__esModule',{value:true});})));//# sourceMappingURL=observe.umd.js.map
