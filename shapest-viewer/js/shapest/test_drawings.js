import { SzLayer } from "./layer.js";
import { SzContext2D } from "./SzContext2D.js";
let cv = document.createElement('canvas');
document.body.append(cv);
cv.style.border = '3px solid #aaa';
cv.height = cv.width = 256;
let ctx = cv.getContext('2d');
const PI = Math.PI;
const PI12 = -PI / 12;
function log(...a) {
    for (let o of a)
        document.body.append(JSON.stringify(o));
}
ctx.scale(cv.width / 2, cv.height / 2);
ctx.translate(1, 1);
ctx.rotate(-Math.PI / 2);
ctx.scale(1 / 1.15, 1 / 1.15);
ctx.lineCap = 'round';
ctx.lineJoin = 'round';
let sctx = new SzContext2D(ctx);
const testTemplate = {
    cuts: [
        { from: 10, to: 10, shape: 'line', color: 'blue' },
        { from: 14, to: 14, shape: 'line', color: 'blue' },
    ],
    quads: [
        { shape: 'square', color: 'green', from: 2, to: 4 },
        { shape: 'circle', color: 'pink', from: 5, to: 19 },
        { shape: 'square', color: 'green', from: 20, to: 22 },
    ],
    areas: [
        { shape: 'sector', color: '#ff0000', from: 11, to: 13 },
    ],
};
let layer = new SzLayer(testTemplate);
// let layer = SzLayer.createTest();
layer.drawCenteredNormalized(sctx);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdF9kcmF3aW5ncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaGFwZXN0L3Rlc3RfZHJhd2luZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFZLE9BQU8sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUMvQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFLL0MsSUFBSSxFQUFFLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUN6QixFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQTtBQUNsQyxFQUFFLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO0FBQzNCLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFFLENBQUM7QUFDL0IsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQztBQUNuQixNQUFNLElBQUksR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7QUFDdEIsU0FBUyxHQUFHLENBQUMsR0FBRyxDQUFRO0lBQ3ZCLEtBQUssSUFBSSxDQUFDLElBQUksQ0FBQztRQUNkLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBRUQsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3ZDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3BCLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3pCLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDOUIsR0FBRyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7QUFDdEIsR0FBRyxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUM7QUFFdkIsSUFBSSxJQUFJLEdBQUcsSUFBSSxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7QUFHaEMsTUFBTSxZQUFZLEdBQWE7SUFDOUIsSUFBSSxFQUFFO1FBQ0wsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFO1FBQ2xELEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRTtLQUNsRDtJQUNELEtBQUssRUFBRTtRQUNOLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRTtRQUNuRCxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUU7UUFDbkQsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFO0tBQ3JEO0lBQ0QsS0FBSyxFQUFFO1FBQ04sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFO0tBQ3ZEO0NBQ0QsQ0FBQTtBQUVELElBQUksS0FBSyxHQUFHLElBQUksT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQ3RDLG9DQUFvQztBQUVwQyxLQUFLLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJU3pMYXllciwgU3pMYXllciB9IGZyb20gXCIuL2xheWVyLmpzXCI7XHJcbmltcG9ydCB7IFN6Q29udGV4dDJEIH0gZnJvbSBcIi4vU3pDb250ZXh0MkQuanNcIjtcclxuXHJcblxyXG5cclxuXHJcbmxldCBjdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xyXG5kb2N1bWVudC5ib2R5LmFwcGVuZChjdik7XHJcbmN2LnN0eWxlLmJvcmRlciA9ICczcHggc29saWQgI2FhYSdcclxuY3YuaGVpZ2h0ID0gY3Yud2lkdGggPSAyNTY7XHJcbmxldCBjdHggPSBjdi5nZXRDb250ZXh0KCcyZCcpITtcclxuY29uc3QgUEkgPSBNYXRoLlBJO1xyXG5jb25zdCBQSTEyID0gLVBJIC8gMTI7XHJcbmZ1bmN0aW9uIGxvZyguLi5hOiBhbnlbXSkge1xyXG5cdGZvciAobGV0IG8gb2YgYSlcclxuXHRcdGRvY3VtZW50LmJvZHkuYXBwZW5kKEpTT04uc3RyaW5naWZ5KG8pKTtcclxufVxyXG5cclxuY3R4LnNjYWxlKGN2LndpZHRoIC8gMiwgY3YuaGVpZ2h0IC8gMik7XHJcbmN0eC50cmFuc2xhdGUoMSwgMSk7XHJcbmN0eC5yb3RhdGUoLU1hdGguUEkgLyAyKTtcclxuY3R4LnNjYWxlKDEgLyAxLjE1LCAxIC8gMS4xNSk7XHJcbmN0eC5saW5lQ2FwID0gJ3JvdW5kJztcclxuY3R4LmxpbmVKb2luID0gJ3JvdW5kJztcclxuXHJcbmxldCBzY3R4ID0gbmV3IFN6Q29udGV4dDJEKGN0eCk7XHJcblxyXG5cclxuY29uc3QgdGVzdFRlbXBsYXRlOiBJU3pMYXllciA9IHtcclxuXHRjdXRzOiBbXHJcblx0XHR7IGZyb206IDEwLCB0bzogMTAsIHNoYXBlOiAnbGluZScsIGNvbG9yOiAnYmx1ZScgfSxcclxuXHRcdHsgZnJvbTogMTQsIHRvOiAxNCwgc2hhcGU6ICdsaW5lJywgY29sb3I6ICdibHVlJyB9LFxyXG5cdF0sXHJcblx0cXVhZHM6IFtcclxuXHRcdHsgc2hhcGU6ICdzcXVhcmUnLCBjb2xvcjogJ2dyZWVuJywgZnJvbTogMiwgdG86IDQgfSxcclxuXHRcdHsgc2hhcGU6ICdjaXJjbGUnLCBjb2xvcjogJ3BpbmsnLCBmcm9tOiA1LCB0bzogMTkgfSxcclxuXHRcdHsgc2hhcGU6ICdzcXVhcmUnLCBjb2xvcjogJ2dyZWVuJywgZnJvbTogMjAsIHRvOiAyMiB9LFxyXG5cdF0sXHJcblx0YXJlYXM6IFtcclxuXHRcdHsgc2hhcGU6ICdzZWN0b3InLCBjb2xvcjogJyNmZjAwMDAnLCBmcm9tOiAxMSwgdG86IDEzIH0sXHJcblx0XSxcclxufVxyXG5cclxubGV0IGxheWVyID0gbmV3IFN6TGF5ZXIodGVzdFRlbXBsYXRlKTtcclxuLy8gbGV0IGxheWVyID0gU3pMYXllci5jcmVhdGVUZXN0KCk7XHJcblxyXG5sYXllci5kcmF3Q2VudGVyZWROb3JtYWxpemVkKHNjdHgpOyJdfQ==