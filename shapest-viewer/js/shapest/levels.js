import { SzInfo } from "./layer";
class SzLevel {
    index;
    shapeName;
    shape;
    required;
    reward;
    throughputOnly = false;
    constructor(index, required, shape, reward) {
        this.index = index;
        if (named[shape]) {
            this.shapeName = shape;
            shape = named[shape];
        }
        this.shape = shape;
        this.required = required;
        this.reward = reward;
    }
}
const named = SzInfo.quad.named;
export const levelDefinitions = [
    new SzLevel(1, 30, 'circle1', 'reward_cutter_and_trash'),
    new SzLevel(2, 40, 'circleHalfLeft', 'no_reward'),
    new SzLevel(3, 70, 'square2', 'reward_balancer'),
    new SzLevel(4, 70, 'squareHalfRight', 'reward_rotater'),
    new SzLevel(5, 170, 'circleHalfTop2', 'reward_tunnel'),
    new SzLevel(6, 270, 'circleQuad1', 'reward_painter'),
    new SzLevel(7, 300, 'circleRed', 'reward_rotater_ccw'),
    new SzLevel(8, 480, 'square3TopBlue', 'reward_painter_double'),
    new SzLevel(9, 600, 'star3Cyan', 'reward_stacker'),
    // @ts-expect-error
    new SzLevel(8, 480, "RbRb----", 'reward_mixer'),
    // @ts-expect-error
    new SzLevel(9, 600, "CpCpCpCp", 'reward_merger'),
    // @ts-expect-error
    new SzLevel(10, 800, "ScScScSc", 'reward_stacker'),
    // @ts-expect-error
    new SzLevel(11, 1000, "CgScScCg", 'reward_miner_chainable'),
    // @ts-expect-error
    new SzLevel(12, 1000, "CbCbCbRb:CwCwCwCw", 'reward_blueprints'),
];
// 	// Tunnel Tier 2
// 	{
// 		shape: chinaShapes ? "CuCuCuCu:CwCwCwCw:Sb--Sr--" : "RpRpRpRp:CwCwCwCw", // painting t3
// 		required: 3800,
// 		reward: enumHubGoalRewards.reward_underground_belt_tier_2,
// 	},
// 	// 14
// 	// Belt reader
// 	{
// 		shape: "--Cg----:--Cr----", // unused
// 		required: 8, // Per second!
// 		reward: enumHubGoalRewards.reward_belt_reader,
// 		throughputOnly: true,
// 	},
// 	// 15
// 	// Storage
// 	{
// 		shape: "SrSrSrSr:CyCyCyCy", // unused
// 		required: 10000,
// 		reward: enumHubGoalRewards.reward_storage,
// 	},
// 	// 16
// 	// Quad Cutter
// 	{
// 		shape: "SrSrSrSr:CyCyCyCy:SwSwSwSw", // belts t4 (two variants)
// 		required: 6000,
// 		reward: enumHubGoalRewards.reward_cutter_quad,
// 	},
// 	// 17
// 	// Double painter
// 	{
// 		shape: chinaShapes
// 			? "CyCyCyCy:CyCyCyCy:RyRyRyRy:RuRuRuRu"
// 			: "CbRbRbCb:CwCwCwCw:WbWbWbWb", // miner t4 (two variants)
// 		required: 20000,
// 		reward: enumHubGoalRewards.reward_painter_double,
// 	},
// 	// 18
// 	// Rotater (180deg)
// 	{
// 		shape: "Sg----Sg:CgCgCgCg:--CyCy--", // unused
// 		required: 20000,
// 		reward: enumHubGoalRewards.reward_rotater_180,
// 	},
// 	// 19
// 	// Compact splitter
// 	{
// 		shape: "CpRpCp--:SwSwSwSw",
// 		required: 25000,
// 		reward: enumHubGoalRewards.reward_splitter,
// 	},
// 	// 20
// 	// WIRES
// 	{
// 		shape: finalGameShape,
// 		required: 25000,
// 		reward: enumHubGoalRewards.reward_wires_painter_and_levers,
// 	},
// 	// 21
// 	// Filter
// 	{
// 		shape: "CrCwCrCw:CwCrCwCr:CrCwCrCw:CwCrCwCr",
// 		required: 25000,
// 		reward: enumHubGoalRewards.reward_filter,
// 	},
// 	// 22
// 	// Constant signal
// 	{
// 		shape: chinaShapes
// 			? "RrSySrSy:RyCrCwCr:CyCyRyCy"
// 			: "Cg----Cr:Cw----Cw:Sy------:Cy----Cy",
// 		required: 25000,
// 		reward: enumHubGoalRewards.reward_constant_signal,
// 	},
// 	// 23
// 	// Display
// 	{
// 		shape: chinaShapes
// 			? "CrCrCrCr:CwCwCwCw:WwWwWwWw:CrCrCrCr"
// 			: "CcSyCcSy:SyCcSyCc:CcSyCcSy",
// 		required: 25000,
// 		reward: enumHubGoalRewards.reward_display,
// 	},
// 	// 24 Logic gates
// 	{
// 		shape: chinaShapes
// 			? "Su----Su:RwRwRwRw:Cu----Cu:CwCwCwCw"
// 			: "CcRcCcRc:RwCwRwCw:Sr--Sw--:CyCyCyCy",
// 		required: 25000,
// 		reward: enumHubGoalRewards.reward_logic_gates,
// 	},
// 	// 25 Virtual Processing
// 	{
// 		shape: "Rg--Rg--:CwRwCwRw:--Rg--Rg",
// 		required: 25000,
// 		reward: enumHubGoalRewards.reward_virtual_processing,
// 	},
// 	// 26 Freeplay
// 	{
// 		shape: "CbCuCbCu:Sr------:--CrSrCr:CwCwCwCw",
// 		required: 50000,
// 		reward: enumHubGoalRewards.reward_freeplay,
// 	},
// ]),
// ];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGV2ZWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NoYXBlc3QvbGV2ZWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFHakMsTUFBTSxPQUFPO0lBQ1osS0FBSyxDQUFTO0lBQ2QsU0FBUyxDQUFrQztJQUMzQyxLQUFLLENBQWM7SUFDbkIsUUFBUSxDQUFTO0lBQ2pCLE1BQU0sQ0FBcUI7SUFDM0IsY0FBYyxHQUFHLEtBQUssQ0FBQztJQUN2QixZQUFZLEtBQWEsRUFBRSxRQUFnQixFQUFFLEtBQW1ELEVBQUUsTUFBMEI7UUFDM0gsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxLQUFLLENBQUMsS0FBdUMsQ0FBQyxFQUFFO1lBQ25ELElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBdUMsQ0FBQztZQUN6RCxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQXVDLENBQUMsQ0FBQztTQUN2RDtRQUNELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBb0IsQ0FBQztRQUNsQyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN0QixDQUFDO0NBQ0Q7QUFFRCxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztBQUtoQyxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRztJQUMvQixJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSx5QkFBeUIsQ0FBQztJQUN4RCxJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLGdCQUFnQixFQUFFLFdBQVcsQ0FBQztJQUNqRCxJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsQ0FBQztJQUNoRCxJQUFJLE9BQU8sQ0FB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ckIsbURBQW1EO0FBQ25ELE1BQU07QUFFTiw0QkFBNEI7QUFDNUIsS0FBSztBQUNMLHlDQUF5QztBQUN6QyxxQkFBcUI7QUFDckIsMERBQTBEO0FBQzFELE1BQU07QUFFTixrQkFBa0I7QUFDbEIsS0FBSztBQUNMLGtEQUFrRDtBQUNsRCxxQkFBcUI7QUFDckIsZ0RBQWdEO0FBQ2hELE1BQU07QUFDTixNQUFNO0FBQ04sS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgZW51bUh1YkdvYWxSZXdhcmRzIH0gZnJvbSBcInNoYXBlei9nYW1lL3R1dG9yaWFsX2dvYWxzXCI7XHJcbmltcG9ydCB7IFN6SW5mbyB9IGZyb20gXCIuL2xheWVyXCI7XHJcbmltcG9ydCB0eXBlIHsgc3pTaGFwZUhhc2ggfSBmcm9tIFwiLi9TekNvbnRleHQyRFwiO1xyXG5cclxuY2xhc3MgU3pMZXZlbCB7XHJcblx0aW5kZXg6IG51bWJlcjtcclxuXHRzaGFwZU5hbWU/OiBrZXlvZiB0eXBlb2YgU3pJbmZvLnF1YWQubmFtZWQ7XHJcblx0c2hhcGU6IHN6U2hhcGVIYXNoO1xyXG5cdHJlcXVpcmVkOiBudW1iZXI7XHJcblx0cmV3YXJkOiBlbnVtSHViR29hbFJld2FyZHM7XHJcblx0dGhyb3VnaHB1dE9ubHkgPSBmYWxzZTtcclxuXHRjb25zdHJ1Y3RvcihpbmRleDogbnVtYmVyLCByZXF1aXJlZDogbnVtYmVyLCBzaGFwZTogc3pTaGFwZUhhc2ggfCBrZXlvZiB0eXBlb2YgU3pJbmZvLnF1YWQubmFtZWQsIHJld2FyZDogZW51bUh1YkdvYWxSZXdhcmRzKSB7XHJcblx0XHR0aGlzLmluZGV4ID0gaW5kZXg7XHJcblx0XHRpZiAobmFtZWRbc2hhcGUgYXMga2V5b2YgdHlwZW9mIFN6SW5mby5xdWFkLm5hbWVkXSkge1xyXG5cdFx0XHR0aGlzLnNoYXBlTmFtZSA9IHNoYXBlIGFzIGtleW9mIHR5cGVvZiBTekluZm8ucXVhZC5uYW1lZDtcclxuXHRcdFx0c2hhcGUgPSBuYW1lZFtzaGFwZSBhcyBrZXlvZiB0eXBlb2YgU3pJbmZvLnF1YWQubmFtZWRdO1xyXG5cdFx0fVxyXG5cdFx0dGhpcy5zaGFwZSA9IHNoYXBlIGFzIHN6U2hhcGVIYXNoO1xyXG5cdFx0dGhpcy5yZXF1aXJlZCA9IHJlcXVpcmVkO1xyXG5cdFx0dGhpcy5yZXdhcmQgPSByZXdhcmQ7XHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBuYW1lZCA9IFN6SW5mby5xdWFkLm5hbWVkO1xyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IGxldmVsRGVmaW5pdGlvbnMgPSBbXHJcblx0bmV3IFN6TGV2ZWwoMSwgMzAsICdjaXJjbGUxJywgJ3Jld2FyZF9jdXR0ZXJfYW5kX3RyYXNoJyksXHJcblx0bmV3IFN6TGV2ZWwoMiwgNDAsICdjaXJjbGVIYWxmTGVmdCcsICdub19yZXdhcmQnKSxcclxuXHRuZXcgU3pMZXZlbCgzLCA3MCwgJ3NxdWFyZTInLCAncmV3YXJkX2JhbGFuY2VyJyksXHJcblx0bmV3IFN6TGV2ZWwoNCwgNzAsICdzcXVhcmVIYWxmUmlnaHQnLCAncmV3YXJkX3JvdGF0ZXInKSxcclxuXHRuZXcgU3pMZXZlbCg1LCAxNzAsICdjaXJjbGVIYWxmVG9wMicsICdyZXdhcmRfdHVubmVsJyksXHJcblx0bmV3IFN6TGV2ZWwoNiwgMjcwLCAnY2lyY2xlUXVhZDEnLCAncmV3YXJkX3BhaW50ZXInKSxcclxuXHRuZXcgU3pMZXZlbCg3LCAzMDAsICdjaXJjbGVSZWQnLCAncmV3YXJkX3JvdGF0ZXJfY2N3JyksXHJcblxyXG5cdG5ldyBTekxldmVsKDgsIDQ4MCwgJ3NxdWFyZTNUb3BCbHVlJywgJ3Jld2FyZF9wYWludGVyX2RvdWJsZScpLFxyXG5cdG5ldyBTekxldmVsKDksIDYwMCwgJ3N0YXIzQ3lhbicsICdyZXdhcmRfc3RhY2tlcicpLFxyXG5cclxuXHQvLyBAdHMtZXhwZWN0LWVycm9yXHJcblx0bmV3IFN6TGV2ZWwoOCwgNDgwLCBcIlJiUmItLS0tXCIsICdyZXdhcmRfbWl4ZXInKSxcclxuXHQvLyBAdHMtZXhwZWN0LWVycm9yXHJcblx0bmV3IFN6TGV2ZWwoOSwgNjAwLCBcIkNwQ3BDcENwXCIsICdyZXdhcmRfbWVyZ2VyJyksXHJcblx0Ly8gQHRzLWV4cGVjdC1lcnJvclxyXG5cdG5ldyBTekxldmVsKDEwLCA4MDAsIFwiU2NTY1NjU2NcIiwgJ3Jld2FyZF9zdGFja2VyJyksXHJcblx0Ly8gQHRzLWV4cGVjdC1lcnJvclxyXG5cdG5ldyBTekxldmVsKDExLCAxMDAwLCBcIkNnU2NTY0NnXCIsICdyZXdhcmRfbWluZXJfY2hhaW5hYmxlJyksXHJcblx0Ly8gQHRzLWV4cGVjdC1lcnJvclxyXG5cdG5ldyBTekxldmVsKDEyLCAxMDAwLCBcIkNiQ2JDYlJiOkN3Q3dDd0N3XCIsICdyZXdhcmRfYmx1ZXByaW50cycpLFxyXG5cclxuXTtcclxuXHJcblxyXG5cclxuLy8gXHQvLyBUdW5uZWwgVGllciAyXHJcbi8vIFx0e1xyXG4vLyBcdFx0c2hhcGU6IGNoaW5hU2hhcGVzID8gXCJDdUN1Q3VDdTpDd0N3Q3dDdzpTYi0tU3ItLVwiIDogXCJScFJwUnBScDpDd0N3Q3dDd1wiLCAvLyBwYWludGluZyB0M1xyXG4vLyBcdFx0cmVxdWlyZWQ6IDM4MDAsXHJcbi8vIFx0XHRyZXdhcmQ6IGVudW1IdWJHb2FsUmV3YXJkcy5yZXdhcmRfdW5kZXJncm91bmRfYmVsdF90aWVyXzIsXHJcbi8vIFx0fSxcclxuXHJcbi8vIFx0Ly8gMTRcclxuLy8gXHQvLyBCZWx0IHJlYWRlclxyXG4vLyBcdHtcclxuLy8gXHRcdHNoYXBlOiBcIi0tQ2ctLS0tOi0tQ3ItLS0tXCIsIC8vIHVudXNlZFxyXG4vLyBcdFx0cmVxdWlyZWQ6IDgsIC8vIFBlciBzZWNvbmQhXHJcbi8vIFx0XHRyZXdhcmQ6IGVudW1IdWJHb2FsUmV3YXJkcy5yZXdhcmRfYmVsdF9yZWFkZXIsXHJcbi8vIFx0XHR0aHJvdWdocHV0T25seTogdHJ1ZSxcclxuLy8gXHR9LFxyXG5cclxuLy8gXHQvLyAxNVxyXG4vLyBcdC8vIFN0b3JhZ2VcclxuLy8gXHR7XHJcbi8vIFx0XHRzaGFwZTogXCJTclNyU3JTcjpDeUN5Q3lDeVwiLCAvLyB1bnVzZWRcclxuLy8gXHRcdHJlcXVpcmVkOiAxMDAwMCxcclxuLy8gXHRcdHJld2FyZDogZW51bUh1YkdvYWxSZXdhcmRzLnJld2FyZF9zdG9yYWdlLFxyXG4vLyBcdH0sXHJcblxyXG4vLyBcdC8vIDE2XHJcbi8vIFx0Ly8gUXVhZCBDdXR0ZXJcclxuLy8gXHR7XHJcbi8vIFx0XHRzaGFwZTogXCJTclNyU3JTcjpDeUN5Q3lDeTpTd1N3U3dTd1wiLCAvLyBiZWx0cyB0NCAodHdvIHZhcmlhbnRzKVxyXG4vLyBcdFx0cmVxdWlyZWQ6IDYwMDAsXHJcbi8vIFx0XHRyZXdhcmQ6IGVudW1IdWJHb2FsUmV3YXJkcy5yZXdhcmRfY3V0dGVyX3F1YWQsXHJcbi8vIFx0fSxcclxuXHJcbi8vIFx0Ly8gMTdcclxuLy8gXHQvLyBEb3VibGUgcGFpbnRlclxyXG4vLyBcdHtcclxuLy8gXHRcdHNoYXBlOiBjaGluYVNoYXBlc1xyXG4vLyBcdFx0XHQ/IFwiQ3lDeUN5Q3k6Q3lDeUN5Q3k6UnlSeVJ5Unk6UnVSdVJ1UnVcIlxyXG4vLyBcdFx0XHQ6IFwiQ2JSYlJiQ2I6Q3dDd0N3Q3c6V2JXYldiV2JcIiwgLy8gbWluZXIgdDQgKHR3byB2YXJpYW50cylcclxuLy8gXHRcdHJlcXVpcmVkOiAyMDAwMCxcclxuLy8gXHRcdHJld2FyZDogZW51bUh1YkdvYWxSZXdhcmRzLnJld2FyZF9wYWludGVyX2RvdWJsZSxcclxuLy8gXHR9LFxyXG5cclxuLy8gXHQvLyAxOFxyXG4vLyBcdC8vIFJvdGF0ZXIgKDE4MGRlZylcclxuLy8gXHR7XHJcbi8vIFx0XHRzaGFwZTogXCJTZy0tLS1TZzpDZ0NnQ2dDZzotLUN5Q3ktLVwiLCAvLyB1bnVzZWRcclxuLy8gXHRcdHJlcXVpcmVkOiAyMDAwMCxcclxuLy8gXHRcdHJld2FyZDogZW51bUh1YkdvYWxSZXdhcmRzLnJld2FyZF9yb3RhdGVyXzE4MCxcclxuLy8gXHR9LFxyXG5cclxuLy8gXHQvLyAxOVxyXG4vLyBcdC8vIENvbXBhY3Qgc3BsaXR0ZXJcclxuLy8gXHR7XHJcbi8vIFx0XHRzaGFwZTogXCJDcFJwQ3AtLTpTd1N3U3dTd1wiLFxyXG4vLyBcdFx0cmVxdWlyZWQ6IDI1MDAwLFxyXG4vLyBcdFx0cmV3YXJkOiBlbnVtSHViR29hbFJld2FyZHMucmV3YXJkX3NwbGl0dGVyLFxyXG4vLyBcdH0sXHJcblxyXG4vLyBcdC8vIDIwXHJcbi8vIFx0Ly8gV0lSRVNcclxuLy8gXHR7XHJcbi8vIFx0XHRzaGFwZTogZmluYWxHYW1lU2hhcGUsXHJcbi8vIFx0XHRyZXF1aXJlZDogMjUwMDAsXHJcbi8vIFx0XHRyZXdhcmQ6IGVudW1IdWJHb2FsUmV3YXJkcy5yZXdhcmRfd2lyZXNfcGFpbnRlcl9hbmRfbGV2ZXJzLFxyXG4vLyBcdH0sXHJcblxyXG4vLyBcdC8vIDIxXHJcbi8vIFx0Ly8gRmlsdGVyXHJcbi8vIFx0e1xyXG4vLyBcdFx0c2hhcGU6IFwiQ3JDd0NyQ3c6Q3dDckN3Q3I6Q3JDd0NyQ3c6Q3dDckN3Q3JcIixcclxuLy8gXHRcdHJlcXVpcmVkOiAyNTAwMCxcclxuLy8gXHRcdHJld2FyZDogZW51bUh1YkdvYWxSZXdhcmRzLnJld2FyZF9maWx0ZXIsXHJcbi8vIFx0fSxcclxuXHJcbi8vIFx0Ly8gMjJcclxuLy8gXHQvLyBDb25zdGFudCBzaWduYWxcclxuLy8gXHR7XHJcbi8vIFx0XHRzaGFwZTogY2hpbmFTaGFwZXNcclxuLy8gXHRcdFx0PyBcIlJyU3lTclN5OlJ5Q3JDd0NyOkN5Q3lSeUN5XCJcclxuLy8gXHRcdFx0OiBcIkNnLS0tLUNyOkN3LS0tLUN3OlN5LS0tLS0tOkN5LS0tLUN5XCIsXHJcbi8vIFx0XHRyZXF1aXJlZDogMjUwMDAsXHJcbi8vIFx0XHRyZXdhcmQ6IGVudW1IdWJHb2FsUmV3YXJkcy5yZXdhcmRfY29uc3RhbnRfc2lnbmFsLFxyXG4vLyBcdH0sXHJcblxyXG4vLyBcdC8vIDIzXHJcbi8vIFx0Ly8gRGlzcGxheVxyXG4vLyBcdHtcclxuLy8gXHRcdHNoYXBlOiBjaGluYVNoYXBlc1xyXG4vLyBcdFx0XHQ/IFwiQ3JDckNyQ3I6Q3dDd0N3Q3c6V3dXd1d3V3c6Q3JDckNyQ3JcIlxyXG4vLyBcdFx0XHQ6IFwiQ2NTeUNjU3k6U3lDY1N5Q2M6Q2NTeUNjU3lcIixcclxuLy8gXHRcdHJlcXVpcmVkOiAyNTAwMCxcclxuLy8gXHRcdHJld2FyZDogZW51bUh1YkdvYWxSZXdhcmRzLnJld2FyZF9kaXNwbGF5LFxyXG4vLyBcdH0sXHJcblxyXG4vLyBcdC8vIDI0IExvZ2ljIGdhdGVzXHJcbi8vIFx0e1xyXG4vLyBcdFx0c2hhcGU6IGNoaW5hU2hhcGVzXHJcbi8vIFx0XHRcdD8gXCJTdS0tLS1TdTpSd1J3UndSdzpDdS0tLS1DdTpDd0N3Q3dDd1wiXHJcbi8vIFx0XHRcdDogXCJDY1JjQ2NSYzpSd0N3UndDdzpTci0tU3ctLTpDeUN5Q3lDeVwiLFxyXG4vLyBcdFx0cmVxdWlyZWQ6IDI1MDAwLFxyXG4vLyBcdFx0cmV3YXJkOiBlbnVtSHViR29hbFJld2FyZHMucmV3YXJkX2xvZ2ljX2dhdGVzLFxyXG4vLyBcdH0sXHJcblxyXG4vLyBcdC8vIDI1IFZpcnR1YWwgUHJvY2Vzc2luZ1xyXG4vLyBcdHtcclxuLy8gXHRcdHNoYXBlOiBcIlJnLS1SZy0tOkN3UndDd1J3Oi0tUmctLVJnXCIsXHJcbi8vIFx0XHRyZXF1aXJlZDogMjUwMDAsXHJcbi8vIFx0XHRyZXdhcmQ6IGVudW1IdWJHb2FsUmV3YXJkcy5yZXdhcmRfdmlydHVhbF9wcm9jZXNzaW5nLFxyXG4vLyBcdH0sXHJcblxyXG4vLyBcdC8vIDI2IEZyZWVwbGF5XHJcbi8vIFx0e1xyXG4vLyBcdFx0c2hhcGU6IFwiQ2JDdUNiQ3U6U3ItLS0tLS06LS1DclNyQ3I6Q3dDd0N3Q3dcIixcclxuLy8gXHRcdHJlcXVpcmVkOiA1MDAwMCxcclxuLy8gXHRcdHJld2FyZDogZW51bUh1YkdvYWxSZXdhcmRzLnJld2FyZF9mcmVlcGxheSxcclxuLy8gXHR9LFxyXG4vLyBdKSxcclxuLy8gXTsiXX0=