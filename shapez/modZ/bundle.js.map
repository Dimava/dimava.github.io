{"version":3,"file":"bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/ajv/lib/ajv.js","webpack:///./node_modules/ajv/lib/cache.js","webpack:///./node_modules/ajv/lib/compile/async.js","webpack:///./node_modules/ajv/lib/compile/error_classes.js","webpack:///./node_modules/ajv/lib/compile/formats.js","webpack:///./node_modules/ajv/lib/compile/index.js","webpack:///./node_modules/ajv/lib/compile/resolve.js","webpack:///./node_modules/ajv/lib/compile/rules.js","webpack:///./node_modules/ajv/lib/compile/schema_obj.js","webpack:///./node_modules/ajv/lib/compile/ucs2length.js","webpack:///./node_modules/ajv/lib/compile/util.js","webpack:///./node_modules/ajv/lib/data.js","webpack:///./node_modules/ajv/lib/definition_schema.js","webpack:///./node_modules/ajv/lib/dotjs/_limit.js","webpack:///./node_modules/ajv/lib/dotjs/_limitItems.js","webpack:///./node_modules/ajv/lib/dotjs/_limitLength.js","webpack:///./node_modules/ajv/lib/dotjs/_limitProperties.js","webpack:///./node_modules/ajv/lib/dotjs/allOf.js","webpack:///./node_modules/ajv/lib/dotjs/anyOf.js","webpack:///./node_modules/ajv/lib/dotjs/comment.js","webpack:///./node_modules/ajv/lib/dotjs/const.js","webpack:///./node_modules/ajv/lib/dotjs/contains.js","webpack:///./node_modules/ajv/lib/dotjs/custom.js","webpack:///./node_modules/ajv/lib/dotjs/dependencies.js","webpack:///./node_modules/ajv/lib/dotjs/enum.js","webpack:///./node_modules/ajv/lib/dotjs/format.js","webpack:///./node_modules/ajv/lib/dotjs/if.js","webpack:///./node_modules/ajv/lib/dotjs/index.js","webpack:///./node_modules/ajv/lib/dotjs/items.js","webpack:///./node_modules/ajv/lib/dotjs/multipleOf.js","webpack:///./node_modules/ajv/lib/dotjs/not.js","webpack:///./node_modules/ajv/lib/dotjs/oneOf.js","webpack:///./node_modules/ajv/lib/dotjs/pattern.js","webpack:///./node_modules/ajv/lib/dotjs/properties.js","webpack:///./node_modules/ajv/lib/dotjs/propertyNames.js","webpack:///./node_modules/ajv/lib/dotjs/ref.js","webpack:///./node_modules/ajv/lib/dotjs/required.js","webpack:///./node_modules/ajv/lib/dotjs/uniqueItems.js","webpack:///./node_modules/ajv/lib/dotjs/validate.js","webpack:///./node_modules/ajv/lib/keyword.js","webpack:///./node_modules/ajv/lib/refs/data.json","webpack:///./node_modules/ajv/lib/refs/json-schema-draft-07.json","webpack:///./node_modules/circular-json/build/circular-json.node.js","webpack:///./node_modules/clipboard-copy/index.js","webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/fast-deep-equal/index.js","webpack:///./node_modules/fast-json-stable-stringify/index.js","webpack:///./node_modules/howler/dist/howler.js","webpack:///./node_modules/json-schema-traverse/index.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/rusha/dist/rusha.js","webpack:///./node_modules/split-on-first/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/uri-js/dist/es5/uri.all.js","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./src/js/webworkers/background_animation_frame_emittter.worker.js","webpack:///./src/js/webworkers/compression.worker.js","webpack:///./node_modules/worker-loader/dist/workers/InlineWorker.js","webpack:///./res_built/atlas/atlas0_10.json","webpack:///./res_built/atlas/atlas0_100.json","webpack:///./res_built/atlas/atlas0_25.json","webpack:///./res_built/atlas/atlas0_50.json","webpack:///./res_built/atlas/atlas0_75.json","webpack:///./src/js/application.js","webpack:///./src/js/built-temp/base-cz.json","webpack:///./src/js/built-temp/base-de.json","webpack:///./src/js/built-temp/base-en.json","webpack:///./src/js/built-temp/base-es.json","webpack:///./src/js/built-temp/base-fr.json","webpack:///./src/js/built-temp/base-ja.json","webpack:///./src/js/built-temp/base-kor.json","webpack:///./src/js/built-temp/base-nl.json","webpack:///./src/js/built-temp/base-no.json","webpack:///./src/js/built-temp/base-pl.json","webpack:///./src/js/built-temp/base-pt-BR.json","webpack:///./src/js/built-temp/base-pt-PT.json","webpack:///./src/js/built-temp/base-ru.json","webpack:///./src/js/built-temp/base-sv.json","webpack:///./src/js/built-temp/base-tr.json","webpack:///./src/js/built-temp/base-zh-CN.json","webpack:///./src/js/built-temp/base-zh-TW.json","webpack:///./src/js/built-temp/sfx.json","webpack:///./src/js/changelog.js","webpack:///./src/js/core/animation_frame.js","webpack:///./src/js/core/assert.js","webpack:///./src/js/core/async_compression.js","webpack:///./src/js/core/atlas_definitions.js","webpack:///./src/js/core/background_resources_loader.js","webpack:///./src/js/core/buffer_maintainer.js","webpack:///./src/js/core/buffer_utils.js","webpack:///./src/js/core/cachebust.js","webpack:///./src/js/core/click_detector.js","webpack:///./src/js/core/config.js","webpack:///./src/js/core/config.local.js","webpack:///./src/js/core/dpi_manager.js","webpack:///./src/js/core/draw_parameters.js","webpack:///./src/js/core/draw_utils.js","webpack:///./src/js/core/error_handler.js","webpack:///./src/js/core/explained_result.js","webpack:///./src/js/core/factory.js","webpack:///./src/js/core/game_state.js","webpack:///./src/js/core/global_registries.js","webpack:///./src/js/core/globals.js","webpack:///./src/js/core/input_distributor.js","webpack:///./src/js/core/input_receiver.js","webpack:///./src/js/core/loader.js","webpack:///./src/js/core/logging.js","webpack:///./src/js/core/lzstring.js","webpack:///./src/js/core/modal_dialog_elements.js","webpack:///./src/js/core/modal_dialog_forms.js","webpack:///./src/js/core/polyfills.js","webpack:///./src/js/core/query_parameters.js","webpack:///./src/js/core/read_write_proxy.js","webpack:///./src/js/core/rectangle.js","webpack:///./src/js/core/request_channel.js","webpack:///./src/js/core/rng.js","webpack:///./src/js/core/sensitive_utils.encrypt.js","webpack:///./src/js/core/signal.js","webpack:///./src/js/core/singleton_factory.js","webpack:///./src/js/core/sprites.js","webpack:///./src/js/core/state_manager.js","webpack:///./src/js/core/textual_game_state.js","webpack:///./src/js/core/tracked_state.js","webpack:///./src/js/core/utils.js","webpack:///./src/js/core/vector.js","webpack:///./src/js/game/automatic_save.js","webpack:///./src/js/game/base_item.js","webpack:///./src/js/game/belt_path.js","webpack:///./src/js/game/blueprint.js","webpack:///./src/js/game/building_codes.js","webpack:///./src/js/game/buildings/advanced_processor.js","webpack:///./src/js/game/buildings/belt.js","webpack:///./src/js/game/buildings/belt_base.js","webpack:///./src/js/game/buildings/cutter.js","webpack:///./src/js/game/buildings/energy_generator.js","webpack:///./src/js/game/buildings/hub.js","webpack:///./src/js/game/buildings/miner.js","webpack:///./src/js/game/buildings/mixer.js","webpack:///./src/js/game/buildings/painter.js","webpack:///./src/js/game/buildings/rotater.js","webpack:///./src/js/game/buildings/splitter.js","webpack:///./src/js/game/buildings/stacker.js","webpack:///./src/js/game/buildings/trash.js","webpack:///./src/js/game/buildings/underground_belt.js","webpack:///./src/js/game/buildings/wire_base.js","webpack:///./src/js/game/buildings/wire_crossings.js","webpack:///./src/js/game/camera.js","webpack:///./src/js/game/colors.js","webpack:///./src/js/game/component.js","webpack:///./src/js/game/component_registry.js","webpack:///./src/js/game/components/belt.js","webpack:///./src/js/game/components/energy_consumer.js","webpack:///./src/js/game/components/energy_generator.js","webpack:///./src/js/game/components/hub.js","webpack:///./src/js/game/components/item_acceptor.js","webpack:///./src/js/game/components/item_ejector.js","webpack:///./src/js/game/components/item_processor.js","webpack:///./src/js/game/components/miner.js","webpack:///./src/js/game/components/replaceable_map_entity.js","webpack:///./src/js/game/components/static_map_entity.js","webpack:///./src/js/game/components/storage.js","webpack:///./src/js/game/components/underground_belt.js","webpack:///./src/js/game/components/unremovable.js","webpack:///./src/js/game/components/wired_pins.js","webpack:///./src/js/game/core.js","webpack:///./src/js/game/custom/buildings/checker.js","webpack:///./src/js/game/custom/buildings/combiner.js","webpack:///./src/js/game/custom/buildings/counter.js","webpack:///./src/js/game/custom/buildings/levels.js","webpack:///./src/js/game/custom/buildings/painter1.js","webpack:///./src/js/game/custom/buildings/painter2.js","webpack:///./src/js/game/custom/buildings/unstacker.js","webpack:///./src/js/game/custom/colors.js","webpack:///./src/js/game/custom/gameData.js","webpack:///./src/js/game/custom/modBuildings.js","webpack:///./src/js/game/custom/modSpriteDrawer.js","webpack:///./src/js/game/custom/shapes.js","webpack:///./src/js/game/dynamic_tickrate.js","webpack:///./src/js/game/entity.js","webpack:///./src/js/game/entity_components.js","webpack:///./src/js/game/entity_manager.js","webpack:///./src/js/game/game_loading_overlay.js","webpack:///./src/js/game/game_speed_registry.js","webpack:///./src/js/game/game_system.js","webpack:///./src/js/game/game_system_manager.js","webpack:///./src/js/game/game_system_with_filter.js","webpack:///./src/js/game/hub_goals.js","webpack:///./src/js/game/hud/base_hud_part.js","webpack:///./src/js/game/hud/dynamic_dom_attach.js","webpack:///./src/js/game/hud/hud.js","webpack:///./src/js/game/hud/parts/base_toolbar.js","webpack:///./src/js/game/hud/parts/blueprint_placer.js","webpack:///./src/js/game/hud/parts/building_placer.js","webpack:///./src/js/game/hud/parts/building_placer_logic.js","webpack:///./src/js/game/hud/parts/buildings_toolbar.js","webpack:///./src/js/game/hud/parts/color_blind_helper.js","webpack:///./src/js/game/hud/parts/debug_changes.js","webpack:///./src/js/game/hud/parts/debug_info.js","webpack:///./src/js/game/hud/parts/entity_debugger.js","webpack:///./src/js/game/hud/parts/game_menu.js","webpack:///./src/js/game/hud/parts/interactive_tutorial.js","webpack:///./src/js/game/hud/parts/keybinding_overlay.js","webpack:///./src/js/game/hud/parts/mass_selector.js","webpack:///./src/js/game/hud/parts/modal_dialogs.js","webpack:///./src/js/game/hud/parts/notifications.js","webpack:///./src/js/game/hud/parts/pinned_shapes.js","webpack:///./src/js/game/hud/parts/processing_overlay.js","webpack:///./src/js/game/hud/parts/sandbox_controller.js","webpack:///./src/js/game/hud/parts/screenshot_exporter.js","webpack:///./src/js/game/hud/parts/settings_menu.js","webpack:///./src/js/game/hud/parts/shape_viewer.js","webpack:///./src/js/game/hud/parts/shop.js","webpack:///./src/js/game/hud/parts/statistics.js","webpack:///./src/js/game/hud/parts/statistics_handle.js","webpack:///./src/js/game/hud/parts/tutorial_hints.js","webpack:///./src/js/game/hud/parts/unlock_notification.js","webpack:///./src/js/game/hud/parts/vignette_overlay.js","webpack:///./src/js/game/hud/parts/watermark.js","webpack:///./src/js/game/hud/parts/waypoints.js","webpack:///./src/js/game/hud/parts/wires_overlay.js","webpack:///./src/js/game/hud/parts/wires_toolbar.js","webpack:///./src/js/game/hud/trailer_maker.js","webpack:///./src/js/game/hud/trailer_points.js","webpack:///./src/js/game/item_registry.js","webpack:///./src/js/game/items/color_item.js","webpack:///./src/js/game/items/negative_energy_item.js","webpack:///./src/js/game/items/positive_energy_item.js","webpack:///./src/js/game/items/shape_item.js","webpack:///./src/js/game/key_action_mapper.js","webpack:///./src/js/game/logic.js","webpack:///./src/js/game/map.js","webpack:///./src/js/game/map_chunk.js","webpack:///./src/js/game/map_chunk_view.js","webpack:///./src/js/game/map_view.js","webpack:///./src/js/game/meta_building.js","webpack:///./src/js/game/meta_building_registry.js","webpack:///./src/js/game/production_analytics.js","webpack:///./src/js/game/root.js","webpack:///./src/js/game/shape_definition.js","webpack:///./src/js/game/shape_definition_manager.js","webpack:///./src/js/game/shapes.js","webpack:///./src/js/game/sound_proxy.js","webpack:///./src/js/game/systems/belt.js","webpack:///./src/js/game/systems/energy_consumer.js","webpack:///./src/js/game/systems/energy_generator.js","webpack:///./src/js/game/systems/hub.js","webpack:///./src/js/game/systems/item_acceptor.js","webpack:///./src/js/game/systems/item_ejector.js","webpack:///./src/js/game/systems/item_processor.js","webpack:///./src/js/game/systems/map_resources.js","webpack:///./src/js/game/systems/miner.js","webpack:///./src/js/game/systems/static_map_entity.js","webpack:///./src/js/game/systems/storage.js","webpack:///./src/js/game/systems/underground_belt.js","webpack:///./src/js/game/systems/wired_pins.js","webpack:///./src/js/game/theme.js","webpack:///./src/js/game/themes/dark.json","webpack:///./src/js/game/themes/light.json","webpack:///./src/js/game/time/base_game_speed.js","webpack:///./src/js/game/time/fast_forward_game_speed.js","webpack:///./src/js/game/time/game_time.js","webpack:///./src/js/game/time/paused_game_speed.js","webpack:///./src/js/game/time/regular_game_speed.js","webpack:///./src/js/game/tutorial_goals.js","webpack:///./src/js/game/tutorial_goals_mappings.js","webpack:///./src/js/game/upgrades.js","webpack:///./src/js/languages.js","webpack:///./src/js/main.js","webpack:///./src/js/platform/ad_provider.js","webpack:///./src/js/platform/ad_providers/gamedistribution.js","webpack:///./src/js/platform/ad_providers/no_ad_provider.js","webpack:///./src/js/platform/analytics.js","webpack:///./src/js/platform/browser/game_analytics.js","webpack:///./src/js/platform/browser/google_analytics.js","webpack:///./src/js/platform/browser/no_game_analytics.js","webpack:///./src/js/platform/browser/sound.js","webpack:///./src/js/platform/browser/storage.js","webpack:///./src/js/platform/browser/storage_indexed_db.js","webpack:///./src/js/platform/browser/wrapper.js","webpack:///./src/js/platform/electron/storage.js","webpack:///./src/js/platform/electron/wrapper.js","webpack:///./src/js/platform/game_analytics.js","webpack:///./src/js/platform/sound.js","webpack:///./src/js/platform/storage.js","webpack:///./src/js/platform/wrapper.js","webpack:///./src/js/profile/application_settings.js","webpack:///./src/js/profile/setting_types.js","webpack:///./src/js/savegame/savegame.js","webpack:///./src/js/savegame/savegame_compressor.js","webpack:///./src/js/savegame/savegame_interface.js","webpack:///./src/js/savegame/savegame_interface_registry.js","webpack:///./src/js/savegame/savegame_manager.js","webpack:///./src/js/savegame/savegame_serializer.js","webpack:///./src/js/savegame/schemas/1000.js","webpack:///./src/js/savegame/schemas/1000.json","webpack:///./src/js/savegame/schemas/1001.js","webpack:///./src/js/savegame/schemas/1001.json","webpack:///./src/js/savegame/schemas/1002.js","webpack:///./src/js/savegame/schemas/1002.json","webpack:///./src/js/savegame/schemas/1003.js","webpack:///./src/js/savegame/schemas/1003.json","webpack:///./src/js/savegame/schemas/1004.js","webpack:///./src/js/savegame/schemas/1004.json","webpack:///./src/js/savegame/schemas/1005.js","webpack:///./src/js/savegame/schemas/1005.json","webpack:///./src/js/savegame/serialization.js","webpack:///./src/js/savegame/serialization_data_types.js","webpack:///./src/js/savegame/serializer_internal.js","webpack:///./src/js/states/about.js","webpack:///./src/js/states/changelog.js","webpack:///./src/js/states/ingame.js","webpack:///./src/js/states/keybindings.js","webpack:///./src/js/states/main_menu.js","webpack:///./src/js/states/mobile_warning.js","webpack:///./src/js/states/preload.js","webpack:///./src/js/states/settings.js","webpack:///./src/js/translations.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nvar compileSchema = require('./compile')\n  , resolve = require('./compile/resolve')\n  , Cache = require('./cache')\n  , SchemaObject = require('./compile/schema_obj')\n  , stableStringify = require('fast-json-stable-stringify')\n  , formats = require('./compile/formats')\n  , rules = require('./compile/rules')\n  , $dataMetaSchema = require('./data')\n  , util = require('./compile/util');\n\nmodule.exports = Ajv;\n\nAjv.prototype.validate = validate;\nAjv.prototype.compile = compile;\nAjv.prototype.addSchema = addSchema;\nAjv.prototype.addMetaSchema = addMetaSchema;\nAjv.prototype.validateSchema = validateSchema;\nAjv.prototype.getSchema = getSchema;\nAjv.prototype.removeSchema = removeSchema;\nAjv.prototype.addFormat = addFormat;\nAjv.prototype.errorsText = errorsText;\n\nAjv.prototype._addSchema = _addSchema;\nAjv.prototype._compile = _compile;\n\nAjv.prototype.compileAsync = require('./compile/async');\nvar customKeyword = require('./keyword');\nAjv.prototype.addKeyword = customKeyword.add;\nAjv.prototype.getKeyword = customKeyword.get;\nAjv.prototype.removeKeyword = customKeyword.remove;\nAjv.prototype.validateKeyword = customKeyword.validate;\n\nvar errorClasses = require('./compile/error_classes');\nAjv.ValidationError = errorClasses.Validation;\nAjv.MissingRefError = errorClasses.MissingRef;\nAjv.$dataMetaSchema = $dataMetaSchema;\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';\n\nvar META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes', 'strictDefaults' ];\nvar META_SUPPORT_DATA = ['/properties'];\n\n/**\n * Creates validator instance.\n * Usage: `Ajv(opts)`\n * @param {Object} opts optional options\n * @return {Object} ajv instance\n */\nfunction Ajv(opts) {\n  if (!(this instanceof Ajv)) return new Ajv(opts);\n  opts = this._opts = util.copy(opts) || {};\n  setLogger(this);\n  this._schemas = {};\n  this._refs = {};\n  this._fragments = {};\n  this._formats = formats(opts.format);\n\n  this._cache = opts.cache || new Cache;\n  this._loadingSchemas = {};\n  this._compilations = [];\n  this.RULES = rules();\n  this._getId = chooseGetId(opts);\n\n  opts.loopRequired = opts.loopRequired || Infinity;\n  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\n  if (opts.serialize === undefined) opts.serialize = stableStringify;\n  this._metaOpts = getMetaSchemaOptions(this);\n\n  if (opts.formats) addInitialFormats(this);\n  if (opts.keywords) addInitialKeywords(this);\n  addDefaultMetaSchema(this);\n  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\n  if (opts.nullable) this.addKeyword('nullable', {metaSchema: {type: 'boolean'}});\n  addInitialSchemas(this);\n}\n\n\n\n/**\n * Validate data using schema\n * Schema will be compiled and cached (using serialized JSON as key. [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used to serialize.\n * @this   Ajv\n * @param  {String|Object} schemaKeyRef key, ref or schema object\n * @param  {Any} data to be validated\n * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\n */\nfunction validate(schemaKeyRef, data) {\n  var v;\n  if (typeof schemaKeyRef == 'string') {\n    v = this.getSchema(schemaKeyRef);\n    if (!v) throw new Error('no schema with key or ref \"' + schemaKeyRef + '\"');\n  } else {\n    var schemaObj = this._addSchema(schemaKeyRef);\n    v = schemaObj.validate || this._compile(schemaObj);\n  }\n\n  var valid = v(data);\n  if (v.$async !== true) this.errors = v.errors;\n  return valid;\n}\n\n\n/**\n * Create validating function for passed schema.\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\n * @return {Function} validating function\n */\nfunction compile(schema, _meta) {\n  var schemaObj = this._addSchema(schema, undefined, _meta);\n  return schemaObj.validate || this._compile(schemaObj);\n}\n\n\n/**\n * Adds schema to the instance.\n * @this   Ajv\n * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\n * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\n * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n * @return {Ajv} this for method chaining\n */\nfunction addSchema(schema, key, _skipValidation, _meta) {\n  if (Array.isArray(schema)){\n    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\n    return this;\n  }\n  var id = this._getId(schema);\n  if (id !== undefined && typeof id != 'string')\n    throw new Error('schema id must be string');\n  key = resolve.normalizeId(key || id);\n  checkUnique(this, key);\n  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\n  return this;\n}\n\n\n/**\n * Add schema that will be used to validate other schemas\n * options in META_IGNORE_OPTIONS are alway set to false\n * @this   Ajv\n * @param {Object} schema schema object\n * @param {String} key optional schema key\n * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\n * @return {Ajv} this for method chaining\n */\nfunction addMetaSchema(schema, key, skipValidation) {\n  this.addSchema(schema, key, skipValidation, true);\n  return this;\n}\n\n\n/**\n * Validate schema\n * @this   Ajv\n * @param {Object} schema schema to validate\n * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\n * @return {Boolean} true if schema is valid\n */\nfunction validateSchema(schema, throwOrLogError) {\n  var $schema = schema.$schema;\n  if ($schema !== undefined && typeof $schema != 'string')\n    throw new Error('$schema must be a string');\n  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\n  if (!$schema) {\n    this.logger.warn('meta-schema not available');\n    this.errors = null;\n    return true;\n  }\n  var valid = this.validate($schema, schema);\n  if (!valid && throwOrLogError) {\n    var message = 'schema is invalid: ' + this.errorsText();\n    if (this._opts.validateSchema == 'log') this.logger.error(message);\n    else throw new Error(message);\n  }\n  return valid;\n}\n\n\nfunction defaultMeta(self) {\n  var meta = self._opts.meta;\n  self._opts.defaultMeta = typeof meta == 'object'\n                            ? self._getId(meta) || meta\n                            : self.getSchema(META_SCHEMA_ID)\n                              ? META_SCHEMA_ID\n                              : undefined;\n  return self._opts.defaultMeta;\n}\n\n\n/**\n * Get compiled schema from the instance by `key` or `ref`.\n * @this   Ajv\n * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\n * @return {Function} schema validating function (with property `schema`).\n */\nfunction getSchema(keyRef) {\n  var schemaObj = _getSchemaObj(this, keyRef);\n  switch (typeof schemaObj) {\n    case 'object': return schemaObj.validate || this._compile(schemaObj);\n    case 'string': return this.getSchema(schemaObj);\n    case 'undefined': return _getSchemaFragment(this, keyRef);\n  }\n}\n\n\nfunction _getSchemaFragment(self, ref) {\n  var res = resolve.schema.call(self, { schema: {} }, ref);\n  if (res) {\n    var schema = res.schema\n      , root = res.root\n      , baseId = res.baseId;\n    var v = compileSchema.call(self, schema, root, undefined, baseId);\n    self._fragments[ref] = new SchemaObject({\n      ref: ref,\n      fragment: true,\n      schema: schema,\n      root: root,\n      baseId: baseId,\n      validate: v\n    });\n    return v;\n  }\n}\n\n\nfunction _getSchemaObj(self, keyRef) {\n  keyRef = resolve.normalizeId(keyRef);\n  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\n}\n\n\n/**\n * Remove cached schema(s).\n * If no parameter is passed all schemas but meta-schemas are removed.\n * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n * @this   Ajv\n * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\n * @return {Ajv} this for method chaining\n */\nfunction removeSchema(schemaKeyRef) {\n  if (schemaKeyRef instanceof RegExp) {\n    _removeAllSchemas(this, this._schemas, schemaKeyRef);\n    _removeAllSchemas(this, this._refs, schemaKeyRef);\n    return this;\n  }\n  switch (typeof schemaKeyRef) {\n    case 'undefined':\n      _removeAllSchemas(this, this._schemas);\n      _removeAllSchemas(this, this._refs);\n      this._cache.clear();\n      return this;\n    case 'string':\n      var schemaObj = _getSchemaObj(this, schemaKeyRef);\n      if (schemaObj) this._cache.del(schemaObj.cacheKey);\n      delete this._schemas[schemaKeyRef];\n      delete this._refs[schemaKeyRef];\n      return this;\n    case 'object':\n      var serialize = this._opts.serialize;\n      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\n      this._cache.del(cacheKey);\n      var id = this._getId(schemaKeyRef);\n      if (id) {\n        id = resolve.normalizeId(id);\n        delete this._schemas[id];\n        delete this._refs[id];\n      }\n  }\n  return this;\n}\n\n\nfunction _removeAllSchemas(self, schemas, regex) {\n  for (var keyRef in schemas) {\n    var schemaObj = schemas[keyRef];\n    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\n      self._cache.del(schemaObj.cacheKey);\n      delete schemas[keyRef];\n    }\n  }\n}\n\n\n/* @this   Ajv */\nfunction _addSchema(schema, skipValidation, meta, shouldAddSchema) {\n  if (typeof schema != 'object' && typeof schema != 'boolean')\n    throw new Error('schema should be object or boolean');\n  var serialize = this._opts.serialize;\n  var cacheKey = serialize ? serialize(schema) : schema;\n  var cached = this._cache.get(cacheKey);\n  if (cached) return cached;\n\n  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\n\n  var id = resolve.normalizeId(this._getId(schema));\n  if (id && shouldAddSchema) checkUnique(this, id);\n\n  var willValidate = this._opts.validateSchema !== false && !skipValidation;\n  var recursiveMeta;\n  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\n    this.validateSchema(schema, true);\n\n  var localRefs = resolve.ids.call(this, schema);\n\n  var schemaObj = new SchemaObject({\n    id: id,\n    schema: schema,\n    localRefs: localRefs,\n    cacheKey: cacheKey,\n    meta: meta\n  });\n\n  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\n  this._cache.put(cacheKey, schemaObj);\n\n  if (willValidate && recursiveMeta) this.validateSchema(schema, true);\n\n  return schemaObj;\n}\n\n\n/* @this   Ajv */\nfunction _compile(schemaObj, root) {\n  if (schemaObj.compiling) {\n    schemaObj.validate = callValidate;\n    callValidate.schema = schemaObj.schema;\n    callValidate.errors = null;\n    callValidate.root = root ? root : callValidate;\n    if (schemaObj.schema.$async === true)\n      callValidate.$async = true;\n    return callValidate;\n  }\n  schemaObj.compiling = true;\n\n  var currentOpts;\n  if (schemaObj.meta) {\n    currentOpts = this._opts;\n    this._opts = this._metaOpts;\n  }\n\n  var v;\n  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\n  catch(e) {\n    delete schemaObj.validate;\n    throw e;\n  }\n  finally {\n    schemaObj.compiling = false;\n    if (schemaObj.meta) this._opts = currentOpts;\n  }\n\n  schemaObj.validate = v;\n  schemaObj.refs = v.refs;\n  schemaObj.refVal = v.refVal;\n  schemaObj.root = v.root;\n  return v;\n\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var _validate = schemaObj.validate;\n    var result = _validate.apply(this, arguments);\n    callValidate.errors = _validate.errors;\n    return result;\n  }\n}\n\n\nfunction chooseGetId(opts) {\n  switch (opts.schemaId) {\n    case 'auto': return _get$IdOrId;\n    case 'id': return _getId;\n    default: return _get$Id;\n  }\n}\n\n/* @this   Ajv */\nfunction _getId(schema) {\n  if (schema.$id) this.logger.warn('schema $id ignored', schema.$id);\n  return schema.id;\n}\n\n/* @this   Ajv */\nfunction _get$Id(schema) {\n  if (schema.id) this.logger.warn('schema id ignored', schema.id);\n  return schema.$id;\n}\n\n\nfunction _get$IdOrId(schema) {\n  if (schema.$id && schema.id && schema.$id != schema.id)\n    throw new Error('schema $id is different from id');\n  return schema.$id || schema.id;\n}\n\n\n/**\n * Convert array of error message objects to string\n * @this   Ajv\n * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\n * @param  {Object} options optional options with properties `separator` and `dataVar`.\n * @return {String} human readable string with all errors descriptions\n */\nfunction errorsText(errors, options) {\n  errors = errors || this.errors;\n  if (!errors) return 'No errors';\n  options = options || {};\n  var separator = options.separator === undefined ? ', ' : options.separator;\n  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\n\n  var text = '';\n  for (var i=0; i<errors.length; i++) {\n    var e = errors[i];\n    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\n  }\n  return text.slice(0, -separator.length);\n}\n\n\n/**\n * Add custom format\n * @this   Ajv\n * @param {String} name format name\n * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\n * @return {Ajv} this for method chaining\n */\nfunction addFormat(name, format) {\n  if (typeof format == 'string') format = new RegExp(format);\n  this._formats[name] = format;\n  return this;\n}\n\n\nfunction addDefaultMetaSchema(self) {\n  var $dataSchema;\n  if (self._opts.$data) {\n    $dataSchema = require('./refs/data.json');\n    self.addMetaSchema($dataSchema, $dataSchema.$id, true);\n  }\n  if (self._opts.meta === false) return;\n  var metaSchema = require('./refs/json-schema-draft-07.json');\n  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\n  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\n  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\n}\n\n\nfunction addInitialSchemas(self) {\n  var optsSchemas = self._opts.schemas;\n  if (!optsSchemas) return;\n  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\n  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\n}\n\n\nfunction addInitialFormats(self) {\n  for (var name in self._opts.formats) {\n    var format = self._opts.formats[name];\n    self.addFormat(name, format);\n  }\n}\n\n\nfunction addInitialKeywords(self) {\n  for (var name in self._opts.keywords) {\n    var keyword = self._opts.keywords[name];\n    self.addKeyword(name, keyword);\n  }\n}\n\n\nfunction checkUnique(self, id) {\n  if (self._schemas[id] || self._refs[id])\n    throw new Error('schema with key or id \"' + id + '\" already exists');\n}\n\n\nfunction getMetaSchemaOptions(self) {\n  var metaOpts = util.copy(self._opts);\n  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\n    delete metaOpts[META_IGNORE_OPTIONS[i]];\n  return metaOpts;\n}\n\n\nfunction setLogger(self) {\n  var logger = self._opts.logger;\n  if (logger === false) {\n    self.logger = {log: noop, warn: noop, error: noop};\n  } else {\n    if (logger === undefined) logger = console;\n    if (!(typeof logger == 'object' && logger.log && logger.warn && logger.error))\n      throw new Error('logger must implement log, warn and error methods');\n    self.logger = logger;\n  }\n}\n\n\nfunction noop() {}\n","'use strict';\n\n\nvar Cache = module.exports = function Cache() {\n  this._cache = {};\n};\n\n\nCache.prototype.put = function Cache_put(key, value) {\n  this._cache[key] = value;\n};\n\n\nCache.prototype.get = function Cache_get(key) {\n  return this._cache[key];\n};\n\n\nCache.prototype.del = function Cache_del(key) {\n  delete this._cache[key];\n};\n\n\nCache.prototype.clear = function Cache_clear() {\n  this._cache = {};\n};\n","'use strict';\n\nvar MissingRefError = require('./error_classes').MissingRef;\n\nmodule.exports = compileAsync;\n\n\n/**\n * Creates validating function for passed schema with asynchronous loading of missing schemas.\n * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n * @this  Ajv\n * @param {Object}   schema schema object\n * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped\n * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.\n * @return {Promise} promise that resolves with a validating function.\n */\nfunction compileAsync(schema, meta, callback) {\n  /* eslint no-shadow: 0 */\n  /* global Promise */\n  /* jshint validthis: true */\n  var self = this;\n  if (typeof this._opts.loadSchema != 'function')\n    throw new Error('options.loadSchema should be a function');\n\n  if (typeof meta == 'function') {\n    callback = meta;\n    meta = undefined;\n  }\n\n  var p = loadMetaSchemaOf(schema).then(function () {\n    var schemaObj = self._addSchema(schema, undefined, meta);\n    return schemaObj.validate || _compileAsync(schemaObj);\n  });\n\n  if (callback) {\n    p.then(\n      function(v) { callback(null, v); },\n      callback\n    );\n  }\n\n  return p;\n\n\n  function loadMetaSchemaOf(sch) {\n    var $schema = sch.$schema;\n    return $schema && !self.getSchema($schema)\n            ? compileAsync.call(self, { $ref: $schema }, true)\n            : Promise.resolve();\n  }\n\n\n  function _compileAsync(schemaObj) {\n    try { return self._compile(schemaObj); }\n    catch(e) {\n      if (e instanceof MissingRefError) return loadMissingSchema(e);\n      throw e;\n    }\n\n\n    function loadMissingSchema(e) {\n      var ref = e.missingSchema;\n      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');\n\n      var schemaPromise = self._loadingSchemas[ref];\n      if (!schemaPromise) {\n        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);\n        schemaPromise.then(removePromise, removePromise);\n      }\n\n      return schemaPromise.then(function (sch) {\n        if (!added(ref)) {\n          return loadMetaSchemaOf(sch).then(function () {\n            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);\n          });\n        }\n      }).then(function() {\n        return _compileAsync(schemaObj);\n      });\n\n      function removePromise() {\n        delete self._loadingSchemas[ref];\n      }\n\n      function added(ref) {\n        return self._refs[ref] || self._schemas[ref];\n      }\n    }\n  }\n}\n","'use strict';\n\nvar resolve = require('./resolve');\n\nmodule.exports = {\n  Validation: errorSubclass(ValidationError),\n  MissingRef: errorSubclass(MissingRefError)\n};\n\n\nfunction ValidationError(errors) {\n  this.message = 'validation failed';\n  this.errors = errors;\n  this.ajv = this.validation = true;\n}\n\n\nMissingRefError.message = function (baseId, ref) {\n  return 'can\\'t resolve reference ' + ref + ' from id ' + baseId;\n};\n\n\nfunction MissingRefError(baseId, ref, message) {\n  this.message = message || MissingRefError.message(baseId, ref);\n  this.missingRef = resolve.url(baseId, ref);\n  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));\n}\n\n\nfunction errorSubclass(Subclass) {\n  Subclass.prototype = Object.create(Error.prototype);\n  Subclass.prototype.constructor = Subclass;\n  return Subclass;\n}\n","'use strict';\n\nvar util = require('./util');\n\nvar DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nvar DAYS = [0,31,28,31,30,31,30,31,31,30,31,30,31];\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nvar HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\nvar URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nvar URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nvar URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\n// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.\n// var URL = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nvar URL = /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i;\nvar UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nvar JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nvar JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nvar RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n\n\nmodule.exports = formats;\n\nfunction formats(mode) {\n  mode = mode == 'full' ? 'full' : 'fast';\n  return util.copy(formats[mode]);\n}\n\n\nformats.fast = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n  hostname: HOSTNAME,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: UUID,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nformats.full = {\n  date: date,\n  time: time,\n  'date-time': date_time,\n  uri: uri,\n  'uri-reference': URIREF,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: HOSTNAME,\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  uuid: UUID,\n  'json-pointer': JSON_POINTER,\n  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nfunction isLeapYear(year) {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\n\nfunction date(str) {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  var matches = str.match(DATE);\n  if (!matches) return false;\n\n  var year = +matches[1];\n  var month = +matches[2];\n  var day = +matches[3];\n\n  return month >= 1 && month <= 12 && day >= 1 &&\n          day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\n\n\nfunction time(str, full) {\n  var matches = str.match(TIME);\n  if (!matches) return false;\n\n  var hour = matches[1];\n  var minute = matches[2];\n  var second = matches[3];\n  var timeZone = matches[5];\n  return ((hour <= 23 && minute <= 59 && second <= 59) ||\n          (hour == 23 && minute == 59 && second == 60)) &&\n         (!full || timeZone);\n}\n\n\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  var dateTime = str.split(DATE_TIME_SEPARATOR);\n  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);\n}\n\n\nvar NOT_URI_FRAGMENT = /\\/|:/;\nfunction uri(str) {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\n\n\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return false;\n  try {\n    new RegExp(str);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n","'use strict';\n\nvar resolve = require('./resolve')\n  , util = require('./util')\n  , errorClasses = require('./error_classes')\n  , stableStringify = require('fast-json-stable-stringify');\n\nvar validateGenerator = require('../dotjs/validate');\n\n/**\n * Functions below are used inside compiled validations function\n */\n\nvar ucs2length = util.ucs2length;\nvar equal = require('fast-deep-equal');\n\n// this error is thrown by async schemas to return validation errors via exception\nvar ValidationError = errorClasses.Validation;\n\nmodule.exports = compile;\n\n\n/**\n * Compiles schema to validation function\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Object} root object with information about the root schema for this schema\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n * @param  {String} baseId base ID for IDs in the schema\n * @return {Function} validation function\n */\nfunction compile(schema, root, localRefs, baseId) {\n  /* jshint validthis: true, evil: true */\n  /* eslint no-shadow: 0 */\n  var self = this\n    , opts = this._opts\n    , refVal = [ undefined ]\n    , refs = {}\n    , patterns = []\n    , patternsHash = {}\n    , defaults = []\n    , defaultsHash = {}\n    , customRules = [];\n\n  root = root || { schema: schema, refVal: refVal, refs: refs };\n\n  var c = checkCompiling.call(this, schema, root, baseId);\n  var compilation = this._compilations[c.index];\n  if (c.compiling) return (compilation.callValidate = callValidate);\n\n  var formats = this._formats;\n  var RULES = this.RULES;\n\n  try {\n    var v = localCompile(schema, root, localRefs, baseId);\n    compilation.validate = v;\n    var cv = compilation.callValidate;\n    if (cv) {\n      cv.schema = v.schema;\n      cv.errors = null;\n      cv.refs = v.refs;\n      cv.refVal = v.refVal;\n      cv.root = v.root;\n      cv.$async = v.$async;\n      if (opts.sourceCode) cv.source = v.source;\n    }\n    return v;\n  } finally {\n    endCompiling.call(this, schema, root, baseId);\n  }\n\n  /* @this   {*} - custom context, see passContext option */\n  function callValidate() {\n    /* jshint validthis: true */\n    var validate = compilation.validate;\n    var result = validate.apply(this, arguments);\n    callValidate.errors = validate.errors;\n    return result;\n  }\n\n  function localCompile(_schema, _root, localRefs, baseId) {\n    var isRoot = !_root || (_root && _root.schema == _schema);\n    if (_root.schema != root.schema)\n      return compile.call(self, _schema, _root, localRefs, baseId);\n\n    var $async = _schema.$async === true;\n\n    var sourceCode = validateGenerator({\n      isTop: true,\n      schema: _schema,\n      isRoot: isRoot,\n      baseId: baseId,\n      root: _root,\n      schemaPath: '',\n      errSchemaPath: '#',\n      errorPath: '\"\"',\n      MissingRefError: errorClasses.MissingRef,\n      RULES: RULES,\n      validate: validateGenerator,\n      util: util,\n      resolve: resolve,\n      resolveRef: resolveRef,\n      usePattern: usePattern,\n      useDefault: useDefault,\n      useCustomRule: useCustomRule,\n      opts: opts,\n      formats: formats,\n      logger: self.logger,\n      self: self\n    });\n\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                   + sourceCode;\n\n    if (opts.processCode) sourceCode = opts.processCode(sourceCode);\n    // console.log('\\n\\n\\n *** \\n', JSON.stringify(sourceCode));\n    var validate;\n    try {\n      var makeValidate = new Function(\n        'self',\n        'RULES',\n        'formats',\n        'root',\n        'refVal',\n        'defaults',\n        'customRules',\n        'equal',\n        'ucs2length',\n        'ValidationError',\n        sourceCode\n      );\n\n      validate = makeValidate(\n        self,\n        RULES,\n        formats,\n        root,\n        refVal,\n        defaults,\n        customRules,\n        equal,\n        ucs2length,\n        ValidationError\n      );\n\n      refVal[0] = validate;\n    } catch(e) {\n      self.logger.error('Error compiling schema, function code:', sourceCode);\n      throw e;\n    }\n\n    validate.schema = _schema;\n    validate.errors = null;\n    validate.refs = refs;\n    validate.refVal = refVal;\n    validate.root = isRoot ? validate : _root;\n    if ($async) validate.$async = true;\n    if (opts.sourceCode === true) {\n      validate.source = {\n        code: sourceCode,\n        patterns: patterns,\n        defaults: defaults\n      };\n    }\n\n    return validate;\n  }\n\n  function resolveRef(baseId, ref, isRoot) {\n    ref = resolve.url(baseId, ref);\n    var refIndex = refs[ref];\n    var _refVal, refCode;\n    if (refIndex !== undefined) {\n      _refVal = refVal[refIndex];\n      refCode = 'refVal[' + refIndex + ']';\n      return resolvedRef(_refVal, refCode);\n    }\n    if (!isRoot && root.refs) {\n      var rootRefId = root.refs[ref];\n      if (rootRefId !== undefined) {\n        _refVal = root.refVal[rootRefId];\n        refCode = addLocalRef(ref, _refVal);\n        return resolvedRef(_refVal, refCode);\n      }\n    }\n\n    refCode = addLocalRef(ref);\n    var v = resolve.call(self, localCompile, root, ref);\n    if (v === undefined) {\n      var localSchema = localRefs && localRefs[ref];\n      if (localSchema) {\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\n            ? localSchema\n            : compile.call(self, localSchema, root, localRefs, baseId);\n      }\n    }\n\n    if (v === undefined) {\n      removeLocalRef(ref);\n    } else {\n      replaceLocalRef(ref, v);\n      return resolvedRef(v, refCode);\n    }\n  }\n\n  function addLocalRef(ref, v) {\n    var refId = refVal.length;\n    refVal[refId] = v;\n    refs[ref] = refId;\n    return 'refVal' + refId;\n  }\n\n  function removeLocalRef(ref) {\n    delete refs[ref];\n  }\n\n  function replaceLocalRef(ref, v) {\n    var refId = refs[ref];\n    refVal[refId] = v;\n  }\n\n  function resolvedRef(refVal, code) {\n    return typeof refVal == 'object' || typeof refVal == 'boolean'\n            ? { code: code, schema: refVal, inline: true }\n            : { code: code, $async: refVal && !!refVal.$async };\n  }\n\n  function usePattern(regexStr) {\n    var index = patternsHash[regexStr];\n    if (index === undefined) {\n      index = patternsHash[regexStr] = patterns.length;\n      patterns[index] = regexStr;\n    }\n    return 'pattern' + index;\n  }\n\n  function useDefault(value) {\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n        return '' + value;\n      case 'string':\n        return util.toQuotedString(value);\n      case 'object':\n        if (value === null) return 'null';\n        var valueStr = stableStringify(value);\n        var index = defaultsHash[valueStr];\n        if (index === undefined) {\n          index = defaultsHash[valueStr] = defaults.length;\n          defaults[index] = value;\n        }\n        return 'default' + index;\n    }\n  }\n\n  function useCustomRule(rule, schema, parentSchema, it) {\n    if (self._opts.validateSchema !== false) {\n      var deps = rule.definition.dependencies;\n      if (deps && !deps.every(function(keyword) {\n        return Object.prototype.hasOwnProperty.call(parentSchema, keyword);\n      }))\n        throw new Error('parent schema must have all required keywords: ' + deps.join(','));\n\n      var validateSchema = rule.definition.validateSchema;\n      if (validateSchema) {\n        var valid = validateSchema(schema);\n        if (!valid) {\n          var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n          if (self._opts.validateSchema == 'log') self.logger.error(message);\n          else throw new Error(message);\n        }\n      }\n    }\n\n    var compile = rule.definition.compile\n      , inline = rule.definition.inline\n      , macro = rule.definition.macro;\n\n    var validate;\n    if (compile) {\n      validate = compile.call(self, schema, parentSchema, it);\n    } else if (macro) {\n      validate = macro.call(self, schema, parentSchema, it);\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\n    } else if (inline) {\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n    } else {\n      validate = rule.definition.validate;\n      if (!validate) return;\n    }\n\n    if (validate === undefined)\n      throw new Error('custom keyword \"' + rule.keyword + '\"failed to compile');\n\n    var index = customRules.length;\n    customRules[index] = validate;\n\n    return {\n      code: 'customRule' + index,\n      validate: validate\n    };\n  }\n}\n\n\n/**\n * Checks if the schema is currently compiled\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n */\nfunction checkCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var index = compIndex.call(this, schema, root, baseId);\n  if (index >= 0) return { index: index, compiling: true };\n  index = this._compilations.length;\n  this._compilations[index] = {\n    schema: schema,\n    root: root,\n    baseId: baseId\n  };\n  return { index: index, compiling: false };\n}\n\n\n/**\n * Removes the schema from the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n */\nfunction endCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var i = compIndex.call(this, schema, root, baseId);\n  if (i >= 0) this._compilations.splice(i, 1);\n}\n\n\n/**\n * Index of schema compilation in the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Integer} compilation index\n */\nfunction compIndex(schema, root, baseId) {\n  /* jshint validthis: true */\n  for (var i=0; i<this._compilations.length; i++) {\n    var c = this._compilations[i];\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n  }\n  return -1;\n}\n\n\nfunction patternCode(i, patterns) {\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n}\n\n\nfunction defaultCode(i) {\n  return 'var default' + i + ' = defaults[' + i + '];';\n}\n\n\nfunction refValCode(i, refVal) {\n  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\n}\n\n\nfunction customRuleCode(i) {\n  return 'var customRule' + i + ' = customRules[' + i + '];';\n}\n\n\nfunction vars(arr, statement) {\n  if (!arr.length) return '';\n  var code = '';\n  for (var i=0; i<arr.length; i++)\n    code += statement(i, arr);\n  return code;\n}\n","'use strict';\n\nvar URI = require('uri-js')\n  , equal = require('fast-deep-equal')\n  , util = require('./util')\n  , SchemaObject = require('./schema_obj')\n  , traverse = require('json-schema-traverse');\n\nmodule.exports = resolve;\n\nresolve.normalizeId = normalizeId;\nresolve.fullPath = getFullPath;\nresolve.url = resolveUrl;\nresolve.ids = resolveIds;\nresolve.inlineRef = inlineRef;\nresolve.schema = resolveSchema;\n\n/**\n * [resolve and compile the references ($ref)]\n * @this   Ajv\n * @param  {Function} compile reference to schema compilation funciton (localCompile)\n * @param  {Object} root object with information about the root schema for the current schema\n * @param  {String} ref reference to resolve\n * @return {Object|Function} schema object (if the schema can be inlined) or validation function\n */\nfunction resolve(compile, root, ref) {\n  /* jshint validthis: true */\n  var refVal = this._refs[ref];\n  if (typeof refVal == 'string') {\n    if (this._refs[refVal]) refVal = this._refs[refVal];\n    else return resolve.call(this, compile, root, refVal);\n  }\n\n  refVal = refVal || this._schemas[ref];\n  if (refVal instanceof SchemaObject) {\n    return inlineRef(refVal.schema, this._opts.inlineRefs)\n            ? refVal.schema\n            : refVal.validate || this._compile(refVal);\n  }\n\n  var res = resolveSchema.call(this, root, ref);\n  var schema, v, baseId;\n  if (res) {\n    schema = res.schema;\n    root = res.root;\n    baseId = res.baseId;\n  }\n\n  if (schema instanceof SchemaObject) {\n    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);\n  } else if (schema !== undefined) {\n    v = inlineRef(schema, this._opts.inlineRefs)\n        ? schema\n        : compile.call(this, schema, root, undefined, baseId);\n  }\n\n  return v;\n}\n\n\n/**\n * Resolve schema, its root and baseId\n * @this Ajv\n * @param  {Object} root root object with properties schema, refVal, refs\n * @param  {String} ref  reference to resolve\n * @return {Object} object with properties schema, root, baseId\n */\nfunction resolveSchema(root, ref) {\n  /* jshint validthis: true */\n  var p = URI.parse(ref)\n    , refPath = _getFullPath(p)\n    , baseId = getFullPath(this._getId(root.schema));\n  if (Object.keys(root.schema).length === 0 || refPath !== baseId) {\n    var id = normalizeId(refPath);\n    var refVal = this._refs[id];\n    if (typeof refVal == 'string') {\n      return resolveRecursive.call(this, root, refVal, p);\n    } else if (refVal instanceof SchemaObject) {\n      if (!refVal.validate) this._compile(refVal);\n      root = refVal;\n    } else {\n      refVal = this._schemas[id];\n      if (refVal instanceof SchemaObject) {\n        if (!refVal.validate) this._compile(refVal);\n        if (id == normalizeId(ref))\n          return { schema: refVal, root: root, baseId: baseId };\n        root = refVal;\n      } else {\n        return;\n      }\n    }\n    if (!root.schema) return;\n    baseId = getFullPath(this._getId(root.schema));\n  }\n  return getJsonPointer.call(this, p, baseId, root.schema, root);\n}\n\n\n/* @this Ajv */\nfunction resolveRecursive(root, ref, parsedRef) {\n  /* jshint validthis: true */\n  var res = resolveSchema.call(this, root, ref);\n  if (res) {\n    var schema = res.schema;\n    var baseId = res.baseId;\n    root = res.root;\n    var id = this._getId(schema);\n    if (id) baseId = resolveUrl(baseId, id);\n    return getJsonPointer.call(this, parsedRef, baseId, schema, root);\n  }\n}\n\n\nvar PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);\n/* @this Ajv */\nfunction getJsonPointer(parsedRef, baseId, schema, root) {\n  /* jshint validthis: true */\n  parsedRef.fragment = parsedRef.fragment || '';\n  if (parsedRef.fragment.slice(0,1) != '/') return;\n  var parts = parsedRef.fragment.split('/');\n\n  for (var i = 1; i < parts.length; i++) {\n    var part = parts[i];\n    if (part) {\n      part = util.unescapeFragment(part);\n      schema = schema[part];\n      if (schema === undefined) break;\n      var id;\n      if (!PREVENT_SCOPE_CHANGE[part]) {\n        id = this._getId(schema);\n        if (id) baseId = resolveUrl(baseId, id);\n        if (schema.$ref) {\n          var $ref = resolveUrl(baseId, schema.$ref);\n          var res = resolveSchema.call(this, root, $ref);\n          if (res) {\n            schema = res.schema;\n            root = res.root;\n            baseId = res.baseId;\n          }\n        }\n      }\n    }\n  }\n  if (schema !== undefined && schema !== root.schema)\n    return { schema: schema, root: root, baseId: baseId };\n}\n\n\nvar SIMPLE_INLINED = util.toHash([\n  'type', 'format', 'pattern',\n  'maxLength', 'minLength',\n  'maxProperties', 'minProperties',\n  'maxItems', 'minItems',\n  'maximum', 'minimum',\n  'uniqueItems', 'multipleOf',\n  'required', 'enum'\n]);\nfunction inlineRef(schema, limit) {\n  if (limit === false) return false;\n  if (limit === undefined || limit === true) return checkNoRef(schema);\n  else if (limit) return countKeys(schema) <= limit;\n}\n\n\nfunction checkNoRef(schema) {\n  var item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return false;\n      item = schema[key];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  }\n  return true;\n}\n\n\nfunction countKeys(schema) {\n  var count = 0, item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object') count += countKeys(item);\n      if (count == Infinity) return Infinity;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return Infinity;\n      if (SIMPLE_INLINED[key]) {\n        count++;\n      } else {\n        item = schema[key];\n        if (typeof item == 'object') count += countKeys(item) + 1;\n        if (count == Infinity) return Infinity;\n      }\n    }\n  }\n  return count;\n}\n\n\nfunction getFullPath(id, normalize) {\n  if (normalize !== false) id = normalizeId(id);\n  var p = URI.parse(id);\n  return _getFullPath(p);\n}\n\n\nfunction _getFullPath(p) {\n  return URI.serialize(p).split('#')[0] + '#';\n}\n\n\nvar TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';\n}\n\n\nfunction resolveUrl(baseId, id) {\n  id = normalizeId(id);\n  return URI.resolve(baseId, id);\n}\n\n\n/* @this Ajv */\nfunction resolveIds(schema) {\n  var schemaId = normalizeId(this._getId(schema));\n  var baseIds = {'': schemaId};\n  var fullPaths = {'': getFullPath(schemaId, false)};\n  var localRefs = {};\n  var self = this;\n\n  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n    if (jsonPtr === '') return;\n    var id = self._getId(sch);\n    var baseId = baseIds[parentJsonPtr];\n    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;\n    if (keyIndex !== undefined)\n      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));\n\n    if (typeof id == 'string') {\n      id = baseId = normalizeId(baseId ? URI.resolve(baseId, id) : id);\n\n      var refVal = self._refs[id];\n      if (typeof refVal == 'string') refVal = self._refs[refVal];\n      if (refVal && refVal.schema) {\n        if (!equal(sch, refVal.schema))\n          throw new Error('id \"' + id + '\" resolves to more than one schema');\n      } else if (id != normalizeId(fullPath)) {\n        if (id[0] == '#') {\n          if (localRefs[id] && !equal(sch, localRefs[id]))\n            throw new Error('id \"' + id + '\" resolves to more than one schema');\n          localRefs[id] = sch;\n        } else {\n          self._refs[id] = fullPath;\n        }\n      }\n    }\n    baseIds[jsonPtr] = baseId;\n    fullPaths[jsonPtr] = fullPath;\n  });\n\n  return localRefs;\n}\n","'use strict';\n\nvar ruleModules = require('../dotjs')\n  , toHash = require('./util').toHash;\n\nmodule.exports = function rules() {\n  var RULES = [\n    { type: 'number',\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\n    { type: 'string',\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\n    { type: 'array',\n      rules: [ 'maxItems', 'minItems', 'items', 'contains', 'uniqueItems' ] },\n    { type: 'object',\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if' ] }\n  ];\n\n  var ALL = [ 'type', '$comment' ];\n  var KEYWORDS = [\n    '$schema', '$id', 'id', '$data', '$async', 'title',\n    'description', 'default', 'definitions',\n    'examples', 'readOnly', 'writeOnly',\n    'contentMediaType', 'contentEncoding',\n    'additionalItems', 'then', 'else'\n  ];\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\n  RULES.all = toHash(ALL);\n  RULES.types = toHash(TYPES);\n\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      var implKeywords;\n      if (typeof keyword == 'object') {\n        var key = Object.keys(keyword)[0];\n        implKeywords = keyword[key];\n        keyword = key;\n        implKeywords.forEach(function (k) {\n          ALL.push(k);\n          RULES.all[k] = true;\n        });\n      }\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword],\n        implements: implKeywords\n      };\n      return rule;\n    });\n\n    RULES.all.$comment = {\n      keyword: '$comment',\n      code: ruleModules.$comment\n    };\n\n    if (group.type) RULES.types[group.type] = group;\n  });\n\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.custom = {};\n\n  return RULES;\n};\n","'use strict';\n\nvar util = require('./util');\n\nmodule.exports = SchemaObject;\n\nfunction SchemaObject(obj) {\n  util.copy(obj, this);\n}\n","'use strict';\n\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nmodule.exports = function ucs2length(str) {\n  var length = 0\n    , len = str.length\n    , pos = 0\n    , value;\n  while (pos < len) {\n    length++;\n    value = str.charCodeAt(pos++);\n    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos);\n      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate\n    }\n  }\n  return length;\n};\n","'use strict';\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: require('fast-deep-equal'),\n  ucs2length: require('./ucs2length'),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  cleanUpCode: cleanUpCode,\n  finalCleanUpCode: finalCleanUpCode,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  schemaUnknownRules: schemaUnknownRules,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  unescapeJsonPointer: unescapeJsonPointer,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nvar EMPTY_ELSE = /else\\s*{\\s*}/g\n  , EMPTY_IF_NO_ELSE = /if\\s*\\([^)]+\\)\\s*\\{\\s*\\}(?!\\s*else)/g\n  , EMPTY_IF_WITH_ELSE = /if\\s*\\(([^)]+)\\)\\s*\\{\\s*\\}\\s*else(?!\\s*if)/g;\nfunction cleanUpCode(out) {\n  return out.replace(EMPTY_ELSE, '')\n            .replace(EMPTY_IF_NO_ELSE, '')\n            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');\n}\n\n\nvar ERRORS_REGEXP = /[^v.]errors/g\n  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g\n  , REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g\n  , RETURN_VALID = 'return errors === 0;'\n  , RETURN_TRUE = 'validate.errors = null; return true;'\n  , RETURN_ASYNC = /if \\(errors === 0\\) return data;\\s*else throw new ValidationError\\(vErrors\\);/\n  , RETURN_DATA_ASYNC = 'return data;'\n  , ROOTDATA_REGEXP = /[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g\n  , REMOVE_ROOTDATA = /if \\(rootData === undefined\\) rootData = data;/;\n\nfunction finalCleanUpCode(out, async) {\n  var matches = out.match(ERRORS_REGEXP);\n  if (matches && matches.length == 2) {\n    out = async\n          ? out.replace(REMOVE_ERRORS_ASYNC, '')\n               .replace(RETURN_ASYNC, RETURN_DATA_ASYNC)\n          : out.replace(REMOVE_ERRORS, '')\n               .replace(RETURN_VALID, RETURN_TRUE);\n  }\n\n  matches = out.match(ROOTDATA_REGEXP);\n  if (!matches || matches.length !== 3) return out;\n  return out.replace(REMOVE_ROOTDATA, '');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction schemaUnknownRules(schema, rules) {\n  if (typeof schema == 'boolean') return;\n  for (var key in schema) if (!rules[key]) return key;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/' \\+ '/g, '');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n","'use strict';\n\nvar KEYWORDS = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum',\n  'maxLength',\n  'minLength',\n  'pattern',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'maxProperties',\n  'minProperties',\n  'required',\n  'additionalProperties',\n  'enum',\n  'format',\n  'const'\n];\n\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j=1; j<segments.length; j++)\n      keywords = keywords[segments[j]];\n\n    for (j=0; j<KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [\n            schema,\n            { $ref: 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n    }\n  }\n\n  return metaSchema;\n};\n","'use strict';\n\nvar metaSchema = require('./refs/json-schema-draft-07.json');\n\nmodule.exports = {\n  $id: 'https://github.com/epoberezkin/ajv/blob/master/lib/definition_schema.js',\n  definitions: {\n    simpleTypes: metaSchema.definitions.simpleTypes\n  },\n  type: 'object',\n  dependencies: {\n    schema: ['validate'],\n    $data: ['validate'],\n    statements: ['inline'],\n    valid: {not: {required: ['macro']}}\n  },\n  properties: {\n    type: metaSchema.properties.type,\n    schema: {type: 'boolean'},\n    statements: {type: 'boolean'},\n    dependencies: {\n      type: 'array',\n      items: {type: 'string'}\n    },\n    metaSchema: {type: 'object'},\n    modifying: {type: 'boolean'},\n    valid: {type: 'boolean'},\n    $data: {type: 'boolean'},\n    async: {type: 'boolean'},\n    errors: {\n      anyOf: [\n        {type: 'boolean'},\n        {const: 'full'}\n      ]\n    }\n  }\n};\n","'use strict';\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<',\n    $errorKeyword = undefined;\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $exclType = 'exclType' + $lvl,\n      $exclIsNumber = 'exclIsNumber' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\'boolean\\' && ' + ($exclType) + ' != \\'undefined\\' && ' + ($exclType) + ' != \\'number\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($exclType) + ' == \\'number\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\'; ';\n    if ($schema === undefined) {\n      $errorKeyword = $exclusiveKeyword;\n      $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n      $schemaValue = $schemaValueExcl;\n      $isData = $isDataExcl;\n    }\n  } else {\n    var $exclIsNumber = typeof $schemaExcl == 'number',\n      $opStr = $op;\n    if ($exclIsNumber && $isData) {\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\n    } else {\n      if ($exclIsNumber && $schema === undefined) {\n        $exclusive = true;\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaExcl;\n        $notOp += '=';\n      } else {\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          $exclusive = true;\n          $errorKeyword = $exclusiveKeyword;\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\n    }\n  }\n  $errorKeyword = $errorKeyword || $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' items\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitLength(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxLength' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  if (it.opts.unicode === false) {\n    out += ' ' + ($data) + '.length ';\n  } else {\n    out += ' ucs2length(' + ($data) + ') ';\n  }\n  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitLength') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT be ';\n      if ($keyword == 'maxLength') {\n        out += 'longer';\n      } else {\n        out += 'shorter';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' characters\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate__limitProperties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxProperties' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxProperties') {\n        out += 'more';\n      } else {\n        out += 'fewer';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' properties\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return (it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all));\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n    out = it.util.cleanUpCode(out);\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_comment(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $comment = it.util.toQuotedString($schema);\n  if (it.opts.$comment === true) {\n    out += ' console.log(' + ($comment) + ');';\n  } else if (typeof it.opts.$comment == 'function') {\n    out += ' self._opts.$comment(' + ($comment) + ', ' + (it.util.toQuotedString($errSchemaPath)) + ', validate.root.schema);';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!$isData) {\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('const') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValue: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to constant\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId,\n    $nonEmptySchema = (it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all));\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($nonEmptySchema) {\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    out += ' if (' + ($nextValid) + ') break; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\n  } else {\n    out += ' if (' + ($data) + '.length == 0) {';\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('contains') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should contain a valid item\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } else { ';\n  if ($nonEmptySchema) {\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n  }\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_dependencies(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $schemaDeps = {},\n    $propertyDeps = {},\n    $ownProperties = it.opts.ownProperties;\n  for ($property in $schema) {\n    var $sch = $schema[$property];\n    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;\n    $deps[$property] = $sch;\n  }\n  out += 'var ' + ($errs) + ' = errors;';\n  var $currentErrorPath = it.errorPath;\n  out += 'var missing' + ($lvl) + ';';\n  for (var $property in $propertyDeps) {\n    $deps = $propertyDeps[$property];\n    if ($deps.length) {\n      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      if ($breakOnError) {\n        out += ' && ( ';\n        var arr1 = $deps;\n        if (arr1) {\n          var $propertyKey, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $propertyKey = arr1[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ')) {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should have ';\n            if ($deps.length == 1) {\n              out += 'property ' + (it.util.escapeQuotes($deps[0]));\n            } else {\n              out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n            }\n            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      } else {\n        out += ' ) { ';\n        var arr2 = $deps;\n        if (arr2) {\n          var $propertyKey, i2 = -1,\n            l2 = arr2.length - 1;\n          while (i2 < l2) {\n            $propertyKey = arr2[i2 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should have ';\n                if ($deps.length == 1) {\n                  out += 'property ' + (it.util.escapeQuotes($deps[0]));\n                } else {\n                  out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n                }\n                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n      out += ' }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  it.errorPath = $currentErrorPath;\n  var $currentBaseId = $it.baseId;\n  for (var $property in $schemaDeps) {\n    var $sch = $schemaDeps[$property];\n    if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      out += ') { ';\n      $it.schema = $sch;\n      $it.schemaPath = $schemaPath + it.util.getProperty($property);\n      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_enum(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $i = 'i' + $lvl,\n    $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ';';\n  if ($isData) {\n    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n  }\n  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';\n  if ($isData) {\n    out += '  }  ';\n  }\n  out += ' if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('enum') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to one of the allowed values\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl,\n      $isObject = 'isObject' + $lvl,\n      $formatType = 'formatType' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\'string\\'; if (' + ($isObject) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats != 'ignore') {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\'' + ($ruleType) + '\\' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? await ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats == 'ignore') {\n        it.logger.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    var $formatType = $isObject && $format.type || 'string';\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($formatType != $ruleType) {\n      if ($breakOnError) {\n        out += ' if (true) { ';\n      }\n      return out;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(await ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_if(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $thenSch = it.schema['then'],\n    $elseSch = it.schema['else'],\n    $thenPresent = $thenSch !== undefined && (it.opts.strictKeywords ? typeof $thenSch == 'object' && Object.keys($thenSch).length > 0 : it.util.schemaHasRules($thenSch, it.RULES.all)),\n    $elsePresent = $elseSch !== undefined && (it.opts.strictKeywords ? typeof $elseSch == 'object' && Object.keys($elseSch).length > 0 : it.util.schemaHasRules($elseSch, it.RULES.all)),\n    $currentBaseId = $it.baseId;\n  if ($thenPresent || $elsePresent) {\n    var $ifClause;\n    $it.createErrors = false;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = true;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    out += '  ' + (it.validate($it)) + ' ';\n    $it.baseId = $currentBaseId;\n    $it.createErrors = true;\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    if ($thenPresent) {\n      out += ' if (' + ($nextValid) + ') {  ';\n      $it.schema = it.schema['then'];\n      $it.schemaPath = it.schemaPath + '.then';\n      $it.errSchemaPath = it.errSchemaPath + '/then';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'then\\'; ';\n      } else {\n        $ifClause = '\\'then\\'';\n      }\n      out += ' } ';\n      if ($elsePresent) {\n        out += ' else { ';\n      }\n    } else {\n      out += ' if (!' + ($nextValid) + ') { ';\n    }\n    if ($elsePresent) {\n      $it.schema = it.schema['else'];\n      $it.schemaPath = it.schemaPath + '.else';\n      $it.errSchemaPath = it.errSchemaPath + '/else';\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';\n      if ($thenPresent && $elsePresent) {\n        $ifClause = 'ifClause' + $lvl;\n        out += ' var ' + ($ifClause) + ' = \\'else\\'; ';\n      } else {\n        $ifClause = '\\'else\\'';\n      }\n      out += ' } ';\n    }\n    out += ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('if') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { failingKeyword: ' + ($ifClause) + ' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match \"\\' + ' + ($ifClause) + ' + \\'\" schema\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' }   ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n    out = it.util.cleanUpCode(out);\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\n\n//all requires must be explicit because browserify won't work with dynamic requires\nmodule.exports = {\n  '$ref': require('./ref'),\n  allOf: require('./allOf'),\n  anyOf: require('./anyOf'),\n  '$comment': require('./comment'),\n  const: require('./const'),\n  contains: require('./contains'),\n  dependencies: require('./dependencies'),\n  'enum': require('./enum'),\n  format: require('./format'),\n  'if': require('./if'),\n  items: require('./items'),\n  maximum: require('./_limit'),\n  minimum: require('./_limit'),\n  maxItems: require('./_limitItems'),\n  minItems: require('./_limitItems'),\n  maxLength: require('./_limitLength'),\n  minLength: require('./_limitLength'),\n  maxProperties: require('./_limitProperties'),\n  minProperties: require('./_limitProperties'),\n  multipleOf: require('./multipleOf'),\n  not: require('./not'),\n  oneOf: require('./oneOf'),\n  pattern: require('./pattern'),\n  properties: require('./properties'),\n  propertyNames: require('./propertyNames'),\n  required: require('./required'),\n  uniqueItems: require('./uniqueItems'),\n  validate: require('./validate')\n};\n","'use strict';\nmodule.exports = function generate_items(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId;\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n    if ($additionalItems === false) {\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + ($valid) + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + ($schema.length) + ' items\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n    if (typeof $additionalItems == 'object' && (it.opts.strictKeywords ? typeof $additionalItems == 'object' && Object.keys($additionalItems).length > 0 : it.util.schemaHasRules($additionalItems, it.RULES.all))) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n      } else {\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n      }\n      if ($breakOnError) {\n        out += ' if (!' + ($nextValid) + ') break; ';\n      }\n      out += ' } }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if ((it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    if ($breakOnError) {\n      out += ' if (!' + ($nextValid) + ') break; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  out += 'var division' + ($lvl) + ';if (';\n  if ($isData) {\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\'number\\' || ';\n  }\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\n  if (it.opts.multipleOfPrecision) {\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\n  } else {\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\n  }\n  out += ' ) ';\n  if ($isData) {\n    out += '  )  ';\n  }\n  out += ' ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('multipleOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be multiple of ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if ((it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $prevValid = 'prevValid' + $lvl,\n    $passingSchemas = 'passingSchemas' + $lvl;\n  out += 'var ' + ($errs) + ' = errors , ' + ($prevValid) + ' = false , ' + ($valid) + ' = false , ' + ($passingSchemas) + ' = null; ';\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && ' + ($prevValid) + ') { ' + ($valid) + ' = false; ' + ($passingSchemas) + ' = [' + ($passingSchemas) + ', ' + ($i) + ']; } else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') { ' + ($valid) + ' = ' + ($prevValid) + ' = true; ' + ($passingSchemas) + ' = ' + ($i) + '; }';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { passingSchemas: ' + ($passingSchemas) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_pattern(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n  }\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('pattern') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match pattern \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) {\n    /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 8) {\n          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is an invalid additional property';\n              } else {\n                out += 'should NOT have additional properties';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) {\n            /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr3 = $schemaKeys;\n    if (arr3) {\n      var $propertyKey, i3 = -1,\n        l3 = arr3.length - 1;\n      while (i3 < l3) {\n        $propertyKey = arr3[i3 += 1];\n        var $sch = $schema[$propertyKey];\n        if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr4 = $pPropertyKeys;\n    if (arr4) {\n      var $pProperty, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $pProperty = arr4[i4 += 1];\n        var $sch = $pProperties[$pProperty];\n        if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + ($errs) + ' = errors;';\n  if ((it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all))) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $i = 'i' + $lvl,\n      $invalidName = '\\' + ' + $key + ' + \\'',\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $dataProperties = 'dataProperties' + $lvl,\n      $ownProperties = it.opts.ownProperties,\n      $currentBaseId = it.baseId;\n    if ($ownProperties) {\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\n    }\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\n    var $passData = $key;\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('propertyNames') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\'' + ($invalidName) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'property name \\\\\\'' + ($invalidName) + '\\\\\\' is invalid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    if ($breakOnError) {\n      out += ' break; ';\n    }\n    out += ' } }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        it.logger.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        it.logger.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { await ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_required(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {\n      var $required = [];\n      var arr1 = $schema;\n      if (arr1) {\n        var $property, i1 = -1,\n          l1 = arr1.length - 1;\n        while (i1 < l1) {\n          $property = arr1[i1 += 1];\n          var $propertySch = it.schema.properties[$property];\n          if (!($propertySch && (it.opts.strictKeywords ? typeof $propertySch == 'object' && Object.keys($propertySch).length > 0 : it.util.schemaHasRules($propertySch, it.RULES.all)))) {\n            $required[$required.length] = $property;\n          }\n        }\n      }\n    } else {\n      var $required = $schema;\n    }\n  }\n  if ($isData || $required.length) {\n    var $currentErrorPath = it.errorPath,\n      $loopRequired = $isData || $required.length >= it.opts.loopRequired,\n      $ownProperties = it.opts.ownProperties;\n    if ($breakOnError) {\n      out += ' var missing' + ($lvl) + '; ';\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        out += ' var ' + ($valid) + ' = true; ';\n        if ($isData) {\n          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';\n        if ($ownProperties) {\n          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += '; if (!' + ($valid) + ') break; } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n        out += '  if (!' + ($valid) + ') {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      } else {\n        out += ' if ( ';\n        var arr2 = $required;\n        if (arr2) {\n          var $propertyKey, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $propertyKey = arr2[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ') {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      }\n    } else {\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        if ($isData) {\n          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is a required property';\n              } else {\n                out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';\n        if ($ownProperties) {\n          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += ') {  var err =   '; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n      } else {\n        var arr3 = $required;\n        if (arr3) {\n          var $propertyKey, i3 = -1,\n            l3 = arr3.length - 1;\n          while (i3 < l3) {\n            $propertyKey = arr3[i3 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'';\n                if (it.opts._errorDataPathProperty) {\n                  out += 'is a required property';\n                } else {\n                  out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                }\n                out += '\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n    }\n    it.errorPath = $currentErrorPath;\n  } else if ($breakOnError) {\n    out += ' if (true) {';\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\n    if ($isData) {\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'boolean\\') ' + ($valid) + ' = false; else { ';\n    }\n    out += ' var i = ' + ($data) + '.length , ' + ($valid) + ' = true , j; if (i > 1) { ';\n    var $itemType = it.schema.items && it.schema.items.type,\n      $typeIsArray = Array.isArray($itemType);\n    if (!$itemType || $itemType == 'object' || $itemType == 'array' || ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0))) {\n      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } ';\n    } else {\n      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + ($data) + '[i]; ';\n      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');\n      out += ' if (' + (it.util[$method]($itemType, 'item', true)) + ') continue; ';\n      if ($typeIsArray) {\n        out += ' if (typeof item == \\'string\\') item = \\'\"\\' + item; ';\n      }\n      out += ' if (typeof itemIndices[item] == \\'number\\') { ' + ($valid) + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';\n    }\n    out += ' } ';\n    if ($isData) {\n      out += '  }  ';\n    }\n    out += ' if (!' + ($valid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('uniqueItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema:  ';\n        if ($isData) {\n          out += 'validate.schema' + ($schemaPath);\n        } else {\n          out += '' + ($schema);\n        }\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n","'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.opts.strictKeywords) {\n    var $unknownKwd = it.util.schemaUnknownRules(it.schema, it.RULES.keywords);\n    if ($unknownKwd) {\n      var $keywordsMsg = 'unknown keyword: ' + $unknownKwd;\n      if (it.opts.strictKeywords === 'log') it.logger.warn($keywordsMsg);\n      else throw new Error($keywordsMsg);\n    }\n  }\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    if (it.schema.default !== undefined && it.opts.useDefaults && it.opts.strictDefaults) {\n      var $defaultMsg = 'default is ignored in the schema root';\n      if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n      else throw new Error($defaultMsg);\n    }\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\'array\\'; ';\n        }\n        out += ' var ' + ($coerced) + ' = undefined; ';\n        var $bracesCoercion = '';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($i) {\n              out += ' if (' + ($coerced) + ' === undefined) { ';\n              $bracesCoercion += '}';\n            }\n            if (it.opts.coerceTypes == 'array' && $type != 'array') {\n              out += ' if (' + ($dataType) + ' == \\'array\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\n            }\n            if ($type == 'string') {\n              out += ' if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\n          }\n          if (it.opts.useDefaults) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top) {\n    out = it.util.finalCleanUpCode(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n","'use strict';\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;\nvar customRuleCode = require('./dotjs/custom');\nvar definitionSchema = require('./definition_schema');\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword,\n  validate: validateKeyword\n};\n\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n * @return {Ajv} this for method chaining\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    this.validateKeyword(definition, true);\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      for (var i=0; i<dataType.length; i++)\n        _addRule(keyword, dataType[i], definition);\n    } else {\n      _addRule(keyword, dataType, definition);\n    }\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if (definition.$data && this._opts.$data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n  return this;\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Ajv} this for method chaining\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n\n\n/**\n * Validate keyword definition\n * @this  Ajv\n * @param {Object} definition keyword definition object.\n * @param {Boolean} throwError true to throw exception if definition is invalid\n * @return {boolean} validation result\n */\nfunction validateKeyword(definition, throwError) {\n  validateKeyword.errors = null;\n  var v = this._validateKeyword = this._validateKeyword\n                                  || this.compile(definitionSchema, true);\n\n  if (v(definition)) return true;\n  validateKeyword.errors = v.errors;\n  if (throwError)\n    throw new Error('custom keyword definition is invalid: '  + this.errorsText(v.errors));\n  else\n    return false;\n}\n","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4KABBYEQCQM4GMAWBTAtgQygLmkgLvgA7YD0pAVnAPYB2AtIqpgHTUBOA5qQCbsYAzfPQAMAdlJN0GAMRQANOEiwAljxx5CROGVL8A7i04r8SAK4AjM3BTsEdfClr4W9tKRRFqF2ygBeANYqtKQYFABupJhwjuykADYqFnooAnC8GPgYLFR0coqQ0DwoiOwqRPgqdBpQALIoWYzI0mACHGAwPJkYYOypvrQIKGAAFABSAMoA8gByYBPNmGAoAB6OtHBVtGBE7NRecBjxAJQKShBQ+ACeRCg13hQoCPhnhVB9AI5mKn3quADa0E63SgYAAugVlLt9rZKiUNKBCm9gVkEeckW9rrcajEyrROK8MUioBhaFcpgINP90USkcBoG12JgXrh3ih4pkVOEUPRcgwvMFYqCAL7yMA02mQelQRnMmp8+gC5y2EUSjFgtVgYXo0Xokk8HgmLZHAAKe1u7DhcA0AiONhA2qAA\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4KABBYEQCQM4GMAWBTAtgQygLmkgLvgA7YD0pAVnAPYB2AtIqpgHTUBOA5qQCbsYAzfPQAMAdlJN0GAMRQANOEiwAljxx5CJclTqNk0tl178hoiVMxzFkaPhX4ANig1QAwhxRhLGMGhT4GPrMWDbKPCgCKrQOKnRwGqC2tlA+AILs-ACeiUrJyVD4WUQuuFAYmRg5YfkpaNEAkvjoCbgAjDW1EFAOLYnQMOyRrnJgAL55yWOdKbR0AHIonBj2AG4oDbTNnCjsuV0pRSWu0du7CpNdUPUxaACuaBoil5DTL91ztIvLaxtbS7sACKRDB3Rz4ET7A7dDCORwAeQEGgA2u8DsABkMkWUZLxItFYvFSJ9visVOtNmc9uMZtCwBioBEBKDwU9xmjbABdNFvK5wFRoIjOAAqxRQrXpHOUKFoDxRUvy5Uq1QVBQARtRqM4MLQLnSCqcAXtadCoLK4Xr9cpZWg1ecTQcoNQ1RQUAh8JardA4Ph2NFOFBVdyurzaqlff6MtkoaajqVoBVow6Ur00BKGXHXD6-bQAzTVVA7jEAI53DbNNMaX1l5PhEFgj24ZHB2oTWyh7qZptOl1uj3yaAarUoHVQTmdKBEdjUErsezimMFGBqRdXLveiO5z2OgQcTCN6B3P30LG7GUIFw8h2wHyrsPr8M5gO17q79j71xHlSBkPXwbDXAkjpQoxSzTdnwLN8PzKL8T0iM9aAvH9Wz-BBqDQfwtjvRUH2zf1kPyDsCnsJx4yA2NQLKPCtyvNFGXFBA-SIew6Gw4jKI3J8CKma8mRZA9qxQa8hgwHh4VoRwckAgsHyHbVdRfaA+IbDRmUcOAUFoq4UAADwwQVnHTGSOKVJMC1TCVBK0sN7nBFQhRQRE2MOEybTtY0C10hBHDufl1gAWQJe5HlwZ5fzozAdIFOVpP1EDjjKNzzmsxUvJ8vyUH8jAouC5zlAfJK9hSgobmikLJTigqHnc7j22vNLfPJTKgpiirgKq21kvCq5IoAGRlTh8CQfpYCxEY8SiGIWNoOBiQWJYyQpf4dmpIi6mifrcyGkb-2xaBcSZAlptmkkFt+SkjWBZkG0hfMriIFZmnYXVYvakzqIguKoJWVwhh2HTatea9RJ4QlaFhJo+kAzEAP2qA7rDCy8phWgsicptVVsBldpGeG1rpbGxpxCajriGbJAMTAoyqPGg0U+jrtZXArO6mzsshytodG2GoAO-EprJk75p+JqLpWvHrxuDn0xhvbeZJgWiVOkWlqpK7+Nu-HuiLFRS3LKG2oohLB01eTtyuZSmbANSNOKlI0K2DBohl7m5dGLXoEigAFadZ3nF2ceJw7FfJ5XFr+KkJYi6IfZnXZ-Z2on9oVsGha+M7ReWoF63BTXhJQUsVCGdQucD5Pg9TyRwOpnIEcVEGwdhWO-ZUBdS6T3mo4t-nU+RuwTOdV13XNsMG+mpvffj1uA47936ctg9gDbFC6KnOO52nvv4vjHsh-7Asx7Jif14T9uebngsF8SZfCOvB7CF2Whm6ntvDcdB9B77Ef654UHx8cZ+G9X6E3Pl3YCa8-ZZHmPpYB0BvoHigH9XSYDTRX0AjfHidEIglFoBERCm9XpGx3p-Ye9ND50GPi3YBmNlA6jRntVEXp8ggLdigphEAWHjQrsdKuT4a603YS2aEGC6qr0nnOKBMCZ6gLrgUB2PoqzsBrHRGUrVyLvxMomGm9MkbMyUUJAsUsKwSg6AWHWetpaKLLHbfKHF1FXDoejMAjCmGcKDj3Hh-IDIoFFCUBIsj9T2KYdvVwWiVTsJTMYxO58U6eIFA5XxC4AnBKMQbUxETlDmLLJYvR1j2EiNqEIzBVx4EjVwuBNh9s6DNC2P5FAoMMCJLKe9CpyTugOxqfgAAoohagoMtxc3KVxNp0AVB7WAK7XGHtCioBevSSZOIoDTJQOpMiCy4bTNhAicZssuEeMFhTEI-CRnlFRk4tx5d9lEnSMqSpyg6COR2es+W3CDk3OjCcuYi9dmLPZKIlIaCwBWQmEAA\"));\n    })()","/*!\nCopyright (C) 2013-2017 by Andrea Giammarchi - @WebReflection\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\nvar\n  // should be a not so common char\n  // possibly one JSON does not encode\n  // possibly one encodeURIComponent does not encode\n  // right now this char is '~' but this might change in the future\n  specialChar = '~',\n  safeSpecialChar = '\\\\x' + (\n    '0' + specialChar.charCodeAt(0).toString(16)\n  ).slice(-2),\n  escapedSafeSpecialChar = '\\\\' + safeSpecialChar,\n  specialCharRG = new RegExp(safeSpecialChar, 'g'),\n  safeSpecialCharRG = new RegExp(escapedSafeSpecialChar, 'g'),\n\n  safeStartWithSpecialCharRG = new RegExp('(?:^|([^\\\\\\\\]))' + escapedSafeSpecialChar),\n\n  indexOf = [].indexOf || function(v){\n    for(var i=this.length;i--&&this[i]!==v;);\n    return i;\n  },\n  $String = String  // there's no way to drop warnings in JSHint\n                    // about new String ... well, I need that here!\n                    // faked, and happy linter!\n;\n\nfunction generateReplacer(value, replacer, resolve) {\n  var\n    doNotIgnore = false,\n    inspect = !!replacer,\n    path = [],\n    all  = [value],\n    seen = [value],\n    mapp = [resolve ? specialChar : '[Circular]'],\n    last = value,\n    lvl  = 1,\n    i, fn\n  ;\n  if (inspect) {\n    fn = typeof replacer === 'object' ?\n      function (key, value) {\n        return key !== '' && replacer.indexOf(key) < 0 ? void 0 : value;\n      } :\n      replacer;\n  }\n  return function(key, value) {\n    // the replacer has rights to decide\n    // if a new object should be returned\n    // or if there's some key to drop\n    // let's call it here rather than \"too late\"\n    if (inspect) value = fn.call(this, key, value);\n\n    // first pass should be ignored, since it's just the initial object\n    if (doNotIgnore) {\n      if (last !== this) {\n        i = lvl - indexOf.call(all, this) - 1;\n        lvl -= i;\n        all.splice(lvl, all.length);\n        path.splice(lvl - 1, path.length);\n        last = this;\n      }\n      // console.log(lvl, key, path);\n      if (typeof value === 'object' && value) {\n    \t// if object isn't referring to parent object, add to the\n        // object path stack. Otherwise it is already there.\n        if (indexOf.call(all, value) < 0) {\n          all.push(last = value);\n        }\n        lvl = all.length;\n        i = indexOf.call(seen, value);\n        if (i < 0) {\n          i = seen.push(value) - 1;\n          if (resolve) {\n            // key cannot contain specialChar but could be not a string\n            path.push(('' + key).replace(specialCharRG, safeSpecialChar));\n            mapp[i] = specialChar + path.join(specialChar);\n          } else {\n            mapp[i] = mapp[0];\n          }\n        } else {\n          value = mapp[i];\n        }\n      } else {\n        if (typeof value === 'string' && resolve) {\n          // ensure no special char involved on deserialization\n          // in this case only first char is important\n          // no need to replace all value (better performance)\n          value = value .replace(safeSpecialChar, escapedSafeSpecialChar)\n                        .replace(specialChar, safeSpecialChar);\n        }\n      }\n    } else {\n      doNotIgnore = true;\n    }\n    return value;\n  };\n}\n\nfunction retrieveFromPath(current, keys) {\n  for(var i = 0, length = keys.length; i < length; current = current[\n    // keys should be normalized back here\n    keys[i++].replace(safeSpecialCharRG, specialChar)\n  ]);\n  return current;\n}\n\nfunction generateReviver(reviver) {\n  return function(key, value) {\n    var isString = typeof value === 'string';\n    if (isString && value.charAt(0) === specialChar) {\n      return new $String(value.slice(1));\n    }\n    if (key === '') value = regenerate(value, value, {});\n    // again, only one needed, do not use the RegExp for this replacement\n    // only keys need the RegExp\n    if (isString) value = value .replace(safeStartWithSpecialCharRG, '$1' + specialChar)\n                                .replace(escapedSafeSpecialChar, safeSpecialChar);\n    return reviver ? reviver.call(this, key, value) : value;\n  };\n}\n\nfunction regenerateArray(root, current, retrieve) {\n  for (var i = 0, length = current.length; i < length; i++) {\n    current[i] = regenerate(root, current[i], retrieve);\n  }\n  return current;\n}\n\nfunction regenerateObject(root, current, retrieve) {\n  for (var key in current) {\n    if (current.hasOwnProperty(key)) {\n      current[key] = regenerate(root, current[key], retrieve);\n    }\n  }\n  return current;\n}\n\nfunction regenerate(root, current, retrieve) {\n  return current instanceof Array ?\n    // fast Array reconstruction\n    regenerateArray(root, current, retrieve) :\n    (\n      current instanceof $String ?\n        (\n          // root is an empty string\n          current.length ?\n            (\n              retrieve.hasOwnProperty(current) ?\n                retrieve[current] :\n                retrieve[current] = retrieveFromPath(\n                  root, current.split(specialChar)\n                )\n            ) :\n            root\n        ) :\n        (\n          current instanceof Object ?\n            // dedicated Object parser\n            regenerateObject(root, current, retrieve) :\n            // value as it is\n            current\n        )\n    )\n  ;\n}\n\nvar CircularJSON = {\n  stringify: function stringify(value, replacer, space, doNotResolve) {\n    return CircularJSON.parser.stringify(\n      value,\n      generateReplacer(value, replacer, !doNotResolve),\n      space\n    );\n  },\n  parse: function parse(text, reviver) {\n    return CircularJSON.parser.parse(\n      text,\n      generateReviver(reviver)\n    );\n  },\n  // A parser should be an API 1:1 compatible with JSON\n  // it should expose stringify and parse methods.\n  // The default parser is the native JSON.\n  parser: JSON\n};\n\nmodule.exports = CircularJSON;\n","/* global DOMException */\n\nmodule.exports = clipboardCopy\n\nfunction clipboardCopy (text) {\n  // Use the Async Clipboard API when available. Requires a secure browing\n  // context (i.e. HTTPS)\n  if (navigator.clipboard) {\n    return navigator.clipboard.writeText(text).catch(function (err) {\n      throw (err !== undefined ? err : new DOMException('The request is not allowed', 'NotAllowedError'))\n    })\n  }\n\n  // ...Otherwise, use document.execCommand() fallback\n\n  // Put the text to copy into a <span>\n  var span = document.createElement('span')\n  span.textContent = text\n\n  // Preserve consecutive spaces and newlines\n  span.style.whiteSpace = 'pre'\n\n  // Add the <span> to the page\n  document.body.appendChild(span)\n\n  // Make a selection object representing the range of text selected by the user\n  var selection = window.getSelection()\n  var range = window.document.createRange()\n  selection.removeAllRanges()\n  range.selectNode(span)\n  selection.addRange(range)\n\n  // Copy text to the clipboard\n  var success = false\n  try {\n    success = window.document.execCommand('copy')\n  } catch (err) {\n    console.log('error', err)\n  }\n\n  // Cleanup\n  selection.removeAllRanges()\n  window.document.body.removeChild(span)\n\n  return success\n    ? Promise.resolve()\n    : Promise.reject(new DOMException('The request is not allowed', 'NotAllowedError'))\n}\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","/*!\n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        for (var i=0; i<self.html5PoolSize; i++) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended. \n        // If there is, play that sound. If not, continue as usual.  \n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\n\t\t\t\tconst newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: removeHash(input).split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n\nexports.stringifyUrl = (input, options) => {\n\tconst url = removeHash(input.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(input.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl);\n\tconst hash = getHash(input.url);\n\tconst query = Object.assign(parsedQueryFromUrl, input.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Rusha\"] = factory();\n\telse\n\t\troot[\"Rusha\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-env commonjs, browser */\n\nvar RushaCore = __webpack_require__(5);\n\nvar _require = __webpack_require__(1),\n    toHex = _require.toHex,\n    ceilHeapSize = _require.ceilHeapSize;\n\nvar conv = __webpack_require__(6);\n\n// Calculate the length of buffer that the sha1 routine uses\n// including the padding.\nvar padlen = function (len) {\n  for (len += 9; len % 64 > 0; len += 1) {}\n  return len;\n};\n\nvar padZeroes = function (bin, len) {\n  var h8 = new Uint8Array(bin.buffer);\n  var om = len % 4,\n      align = len - om;\n  switch (om) {\n    case 0:\n      h8[align + 3] = 0;\n    case 1:\n      h8[align + 2] = 0;\n    case 2:\n      h8[align + 1] = 0;\n    case 3:\n      h8[align + 0] = 0;\n  }\n  for (var i = (len >> 2) + 1; i < bin.length; i++) {\n    bin[i] = 0;\n  }\n};\n\nvar padData = function (bin, chunkLen, msgLen) {\n  bin[chunkLen >> 2] |= 0x80 << 24 - (chunkLen % 4 << 3);\n  // To support msgLen >= 2 GiB, use a float division when computing the\n  // high 32-bits of the big-endian message length in bits.\n  bin[((chunkLen >> 2) + 2 & ~0x0f) + 14] = msgLen / (1 << 29) | 0;\n  bin[((chunkLen >> 2) + 2 & ~0x0f) + 15] = msgLen << 3;\n};\n\nvar getRawDigest = function (heap, padMaxChunkLen) {\n  var io = new Int32Array(heap, padMaxChunkLen + 320, 5);\n  var out = new Int32Array(5);\n  var arr = new DataView(out.buffer);\n  arr.setInt32(0, io[0], false);\n  arr.setInt32(4, io[1], false);\n  arr.setInt32(8, io[2], false);\n  arr.setInt32(12, io[3], false);\n  arr.setInt32(16, io[4], false);\n  return out;\n};\n\nvar Rusha = function () {\n  function Rusha(chunkSize) {\n    _classCallCheck(this, Rusha);\n\n    chunkSize = chunkSize || 64 * 1024;\n    if (chunkSize % 64 > 0) {\n      throw new Error('Chunk size must be a multiple of 128 bit');\n    }\n    this._offset = 0;\n    this._maxChunkLen = chunkSize;\n    this._padMaxChunkLen = padlen(chunkSize);\n    // The size of the heap is the sum of:\n    // 1. The padded input message size\n    // 2. The extended space the algorithm needs (320 byte)\n    // 3. The 160 bit state the algoritm uses\n    this._heap = new ArrayBuffer(ceilHeapSize(this._padMaxChunkLen + 320 + 20));\n    this._h32 = new Int32Array(this._heap);\n    this._h8 = new Int8Array(this._heap);\n    this._core = new RushaCore({ Int32Array: Int32Array }, {}, this._heap);\n  }\n\n  Rusha.prototype._initState = function _initState(heap, padMsgLen) {\n    this._offset = 0;\n    var io = new Int32Array(heap, padMsgLen + 320, 5);\n    io[0] = 1732584193;\n    io[1] = -271733879;\n    io[2] = -1732584194;\n    io[3] = 271733878;\n    io[4] = -1009589776;\n  };\n\n  Rusha.prototype._padChunk = function _padChunk(chunkLen, msgLen) {\n    var padChunkLen = padlen(chunkLen);\n    var view = new Int32Array(this._heap, 0, padChunkLen >> 2);\n    padZeroes(view, chunkLen);\n    padData(view, chunkLen, msgLen);\n    return padChunkLen;\n  };\n\n  Rusha.prototype._write = function _write(data, chunkOffset, chunkLen, off) {\n    conv(data, this._h8, this._h32, chunkOffset, chunkLen, off || 0);\n  };\n\n  Rusha.prototype._coreCall = function _coreCall(data, chunkOffset, chunkLen, msgLen, finalize) {\n    var padChunkLen = chunkLen;\n    this._write(data, chunkOffset, chunkLen);\n    if (finalize) {\n      padChunkLen = this._padChunk(chunkLen, msgLen);\n    }\n    this._core.hash(padChunkLen, this._padMaxChunkLen);\n  };\n\n  Rusha.prototype.rawDigest = function rawDigest(str) {\n    var msgLen = str.byteLength || str.length || str.size || 0;\n    this._initState(this._heap, this._padMaxChunkLen);\n    var chunkOffset = 0,\n        chunkLen = this._maxChunkLen;\n    for (chunkOffset = 0; msgLen > chunkOffset + chunkLen; chunkOffset += chunkLen) {\n      this._coreCall(str, chunkOffset, chunkLen, msgLen, false);\n    }\n    this._coreCall(str, chunkOffset, msgLen - chunkOffset, msgLen, true);\n    return getRawDigest(this._heap, this._padMaxChunkLen);\n  };\n\n  Rusha.prototype.digest = function digest(str) {\n    return toHex(this.rawDigest(str).buffer);\n  };\n\n  Rusha.prototype.digestFromString = function digestFromString(str) {\n    return this.digest(str);\n  };\n\n  Rusha.prototype.digestFromBuffer = function digestFromBuffer(str) {\n    return this.digest(str);\n  };\n\n  Rusha.prototype.digestFromArrayBuffer = function digestFromArrayBuffer(str) {\n    return this.digest(str);\n  };\n\n  Rusha.prototype.resetState = function resetState() {\n    this._initState(this._heap, this._padMaxChunkLen);\n    return this;\n  };\n\n  Rusha.prototype.append = function append(chunk) {\n    var chunkOffset = 0;\n    var chunkLen = chunk.byteLength || chunk.length || chunk.size || 0;\n    var turnOffset = this._offset % this._maxChunkLen;\n    var inputLen = void 0;\n\n    this._offset += chunkLen;\n    while (chunkOffset < chunkLen) {\n      inputLen = Math.min(chunkLen - chunkOffset, this._maxChunkLen - turnOffset);\n      this._write(chunk, chunkOffset, inputLen, turnOffset);\n      turnOffset += inputLen;\n      chunkOffset += inputLen;\n      if (turnOffset === this._maxChunkLen) {\n        this._core.hash(this._maxChunkLen, this._padMaxChunkLen);\n        turnOffset = 0;\n      }\n    }\n    return this;\n  };\n\n  Rusha.prototype.getState = function getState() {\n    var turnOffset = this._offset % this._maxChunkLen;\n    var heap = void 0;\n    if (!turnOffset) {\n      var io = new Int32Array(this._heap, this._padMaxChunkLen + 320, 5);\n      heap = io.buffer.slice(io.byteOffset, io.byteOffset + io.byteLength);\n    } else {\n      heap = this._heap.slice(0);\n    }\n    return {\n      offset: this._offset,\n      heap: heap\n    };\n  };\n\n  Rusha.prototype.setState = function setState(state) {\n    this._offset = state.offset;\n    if (state.heap.byteLength === 20) {\n      var io = new Int32Array(this._heap, this._padMaxChunkLen + 320, 5);\n      io.set(new Int32Array(state.heap));\n    } else {\n      this._h32.set(new Int32Array(state.heap));\n    }\n    return this;\n  };\n\n  Rusha.prototype.rawEnd = function rawEnd() {\n    var msgLen = this._offset;\n    var chunkLen = msgLen % this._maxChunkLen;\n    var padChunkLen = this._padChunk(chunkLen, msgLen);\n    this._core.hash(padChunkLen, this._padMaxChunkLen);\n    var result = getRawDigest(this._heap, this._padMaxChunkLen);\n    this._initState(this._heap, this._padMaxChunkLen);\n    return result;\n  };\n\n  Rusha.prototype.end = function end() {\n    return toHex(this.rawEnd().buffer);\n  };\n\n  return Rusha;\n}();\n\nmodule.exports = Rusha;\nmodule.exports._core = RushaCore;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/* eslint-env commonjs, browser */\n\n//\n// toHex\n//\n\nvar precomputedHex = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  precomputedHex[i] = (i < 0x10 ? '0' : '') + i.toString(16);\n}\n\nmodule.exports.toHex = function (arrayBuffer) {\n  var binarray = new Uint8Array(arrayBuffer);\n  var res = new Array(arrayBuffer.byteLength);\n  for (var _i = 0; _i < res.length; _i++) {\n    res[_i] = precomputedHex[binarray[_i]];\n  }\n  return res.join('');\n};\n\n//\n// ceilHeapSize\n//\n\nmodule.exports.ceilHeapSize = function (v) {\n  // The asm.js spec says:\n  // The heap object's byteLength must be either\n  // 2^n for n in [12, 24) or 2^24 * n for n ≥ 1.\n  // Also, byteLengths smaller than 2^16 are deprecated.\n  var p = 0;\n  // If v is smaller than 2^16, the smallest possible solution\n  // is 2^16.\n  if (v <= 65536) return 65536;\n  // If v < 2^24, we round up to 2^n,\n  // otherwise we round up to 2^24 * n.\n  if (v < 16777216) {\n    for (p = 1; p < v; p = p << 1) {}\n  } else {\n    for (p = 16777216; p < v; p += 16777216) {}\n  }\n  return p;\n};\n\n//\n// isDedicatedWorkerScope\n//\n\nmodule.exports.isDedicatedWorkerScope = function (self) {\n  var isRunningInWorker = 'WorkerGlobalScope' in self && self instanceof self.WorkerGlobalScope;\n  var isRunningInSharedWorker = 'SharedWorkerGlobalScope' in self && self instanceof self.SharedWorkerGlobalScope;\n  var isRunningInServiceWorker = 'ServiceWorkerGlobalScope' in self && self instanceof self.ServiceWorkerGlobalScope;\n\n  // Detects whether we run inside a dedicated worker or not.\n  //\n  // We can't just check for `DedicatedWorkerGlobalScope`, since IE11\n  // has a bug where it only supports `WorkerGlobalScope`.\n  //\n  // Therefore, we consider us as running inside a dedicated worker\n  // when we are running inside a worker, but not in a shared or service worker.\n  //\n  // When new types of workers are introduced, we will need to adjust this code.\n  return isRunningInWorker && !isRunningInSharedWorker && !isRunningInServiceWorker;\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* eslint-env commonjs, worker */\n\nmodule.exports = function () {\n  var Rusha = __webpack_require__(0);\n\n  var hashData = function (hasher, data, cb) {\n    try {\n      return cb(null, hasher.digest(data));\n    } catch (e) {\n      return cb(e);\n    }\n  };\n\n  var hashFile = function (hasher, readTotal, blockSize, file, cb) {\n    var reader = new self.FileReader();\n    reader.onloadend = function onloadend() {\n      if (reader.error) {\n        return cb(reader.error);\n      }\n      var buffer = reader.result;\n      readTotal += reader.result.byteLength;\n      try {\n        hasher.append(buffer);\n      } catch (e) {\n        cb(e);\n        return;\n      }\n      if (readTotal < file.size) {\n        hashFile(hasher, readTotal, blockSize, file, cb);\n      } else {\n        cb(null, hasher.end());\n      }\n    };\n    reader.readAsArrayBuffer(file.slice(readTotal, readTotal + blockSize));\n  };\n\n  var workerBehaviourEnabled = true;\n\n  self.onmessage = function (event) {\n    if (!workerBehaviourEnabled) {\n      return;\n    }\n\n    var data = event.data.data,\n        file = event.data.file,\n        id = event.data.id;\n    if (typeof id === 'undefined') return;\n    if (!file && !data) return;\n    var blockSize = event.data.blockSize || 4 * 1024 * 1024;\n    var hasher = new Rusha(blockSize);\n    hasher.resetState();\n    var done = function (err, hash) {\n      if (!err) {\n        self.postMessage({ id: id, hash: hash });\n      } else {\n        self.postMessage({ id: id, error: err.name });\n      }\n    };\n    if (data) hashData(hasher, data, done);\n    if (file) hashFile(hasher, 0, blockSize, file, done);\n  };\n\n  return function () {\n    workerBehaviourEnabled = false;\n  };\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* eslint-env commonjs, browser */\n\nvar work = __webpack_require__(4);\nvar Rusha = __webpack_require__(0);\nvar createHash = __webpack_require__(7);\nvar runWorker = __webpack_require__(2);\n\nvar _require = __webpack_require__(1),\n    isDedicatedWorkerScope = _require.isDedicatedWorkerScope;\n\nvar isRunningInDedicatedWorker = typeof self !== 'undefined' && isDedicatedWorkerScope(self);\n\nRusha.disableWorkerBehaviour = isRunningInDedicatedWorker ? runWorker() : function () {};\n\nRusha.createWorker = function () {\n  var worker = work(/*require.resolve*/(2));\n  var terminate = worker.terminate;\n  worker.terminate = function () {\n    URL.revokeObjectURL(worker.objectURL);\n    terminate.call(worker);\n  };\n  return worker;\n};\n\nRusha.createHash = createHash;\n\nmodule.exports = Rusha;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction webpackBootstrapFunc (modules) {\n/******/  // The module cache\n/******/  var installedModules = {};\n\n/******/  // The require function\n/******/  function __webpack_require__(moduleId) {\n\n/******/    // Check if module is in cache\n/******/    if(installedModules[moduleId])\n/******/      return installedModules[moduleId].exports;\n\n/******/    // Create a new module (and put it into the cache)\n/******/    var module = installedModules[moduleId] = {\n/******/      i: moduleId,\n/******/      l: false,\n/******/      exports: {}\n/******/    };\n\n/******/    // Execute the module function\n/******/    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/    // Flag the module as loaded\n/******/    module.l = true;\n\n/******/    // Return the exports of the module\n/******/    return module.exports;\n/******/  }\n\n/******/  // expose the modules object (__webpack_modules__)\n/******/  __webpack_require__.m = modules;\n\n/******/  // expose the module cache\n/******/  __webpack_require__.c = installedModules;\n\n/******/  // identity function for calling harmony imports with the correct context\n/******/  __webpack_require__.i = function(value) { return value; };\n\n/******/  // define getter function for harmony exports\n/******/  __webpack_require__.d = function(exports, name, getter) {\n/******/    if(!__webpack_require__.o(exports, name)) {\n/******/      Object.defineProperty(exports, name, {\n/******/        configurable: false,\n/******/        enumerable: true,\n/******/        get: getter\n/******/      });\n/******/    }\n/******/  };\n\n/******/  // define __esModule on exports\n/******/  __webpack_require__.r = function(exports) {\n/******/    Object.defineProperty(exports, '__esModule', { value: true });\n/******/  };\n\n/******/  // getDefaultExport function for compatibility with non-harmony modules\n/******/  __webpack_require__.n = function(module) {\n/******/    var getter = module && module.__esModule ?\n/******/      function getDefault() { return module['default']; } :\n/******/      function getModuleExports() { return module; };\n/******/    __webpack_require__.d(getter, 'a', getter);\n/******/    return getter;\n/******/  };\n\n/******/  // Object.prototype.hasOwnProperty.call\n/******/  __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/  // __webpack_public_path__\n/******/  __webpack_require__.p = \"/\";\n\n/******/  // on error function for async loading\n/******/  __webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n  var f = __webpack_require__(__webpack_require__.s = ENTRY_MODULE)\n  return f.default || f // try to call default if defined to also support babel esmodule exports\n}\n\nvar moduleNameReqExp = '[\\\\.|\\\\-|\\\\+|\\\\w|\\/|@]+'\nvar dependencyRegExp = '\\\\((\\/\\\\*.*?\\\\*\\/)?\\s?.*?(' + moduleNameReqExp + ').*?\\\\)' // additional chars when output.pathinfo is true\n\n// http://stackoverflow.com/a/2593661/130442\nfunction quoteRegExp (str) {\n  return (str + '').replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&')\n}\n\nfunction getModuleDependencies (sources, module, queueName) {\n  var retval = {}\n  retval[queueName] = []\n\n  var fnString = module.toString()\n  var wrapperSignature = fnString.match(/^function\\s?\\(\\w+,\\s*\\w+,\\s*(\\w+)\\)/)\n  if (!wrapperSignature) return retval\n  var webpackRequireName = wrapperSignature[1]\n\n  // main bundle deps\n  var re = new RegExp('(\\\\\\\\n|\\\\W)' + quoteRegExp(webpackRequireName) + dependencyRegExp, 'g')\n  var match\n  while ((match = re.exec(fnString))) {\n    if (match[3] === 'dll-reference') continue\n    retval[queueName].push(match[3])\n  }\n\n  // dll deps\n  re = new RegExp('\\\\(' + quoteRegExp(webpackRequireName) + '\\\\(\"(dll-reference\\\\s(' + moduleNameReqExp + '))\"\\\\)\\\\)' + dependencyRegExp, 'g')\n  while ((match = re.exec(fnString))) {\n    if (!sources[match[2]]) {\n      retval[queueName].push(match[1])\n      sources[match[2]] = __webpack_require__(match[1]).m\n    }\n    retval[match[2]] = retval[match[2]] || []\n    retval[match[2]].push(match[4])\n  }\n\n  return retval\n}\n\nfunction hasValuesInQueues (queues) {\n  var keys = Object.keys(queues)\n  return keys.reduce(function (hasValues, key) {\n    return hasValues || queues[key].length > 0\n  }, false)\n}\n\nfunction getRequiredModules (sources, moduleId) {\n  var modulesQueue = {\n    main: [moduleId]\n  }\n  var requiredModules = {\n    main: []\n  }\n  var seenModules = {\n    main: {}\n  }\n\n  while (hasValuesInQueues(modulesQueue)) {\n    var queues = Object.keys(modulesQueue)\n    for (var i = 0; i < queues.length; i++) {\n      var queueName = queues[i]\n      var queue = modulesQueue[queueName]\n      var moduleToCheck = queue.pop()\n      seenModules[queueName] = seenModules[queueName] || {}\n      if (seenModules[queueName][moduleToCheck] || !sources[queueName][moduleToCheck]) continue\n      seenModules[queueName][moduleToCheck] = true\n      requiredModules[queueName] = requiredModules[queueName] || []\n      requiredModules[queueName].push(moduleToCheck)\n      var newModules = getModuleDependencies(sources, sources[queueName][moduleToCheck], queueName)\n      var newModulesKeys = Object.keys(newModules)\n      for (var j = 0; j < newModulesKeys.length; j++) {\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]] || []\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]].concat(newModules[newModulesKeys[j]])\n      }\n    }\n  }\n\n  return requiredModules\n}\n\nmodule.exports = function (moduleId, options) {\n  options = options || {}\n  var sources = {\n    main: __webpack_require__.m\n  }\n\n  var requiredModules = options.all ? { main: Object.keys(sources) } : getRequiredModules(sources, moduleId)\n\n  var src = ''\n\n  Object.keys(requiredModules).filter(function (m) { return m !== 'main' }).forEach(function (module) {\n    var entryModule = 0\n    while (requiredModules[module][entryModule]) {\n      entryModule++\n    }\n    requiredModules[module].push(entryModule)\n    sources[module][entryModule] = '(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })'\n    src = src + 'var ' + module + ' = (' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(entryModule)) + ')({' + requiredModules[module].map(function (id) { return '' + JSON.stringify(id) + ': ' + sources[module][id].toString() }).join(',') + '});\\n'\n  })\n\n  src = src + '(' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(moduleId)) + ')({' + requiredModules.main.map(function (id) { return '' + JSON.stringify(id) + ': ' + sources.main[id].toString() }).join(',') + '})(self);'\n\n  var blob = new window.Blob([src], { type: 'text/javascript' })\n  if (options.bare) { return blob }\n\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL\n\n  var workerUrl = URL.createObjectURL(blob)\n  var worker = new window.Worker(workerUrl)\n  worker.objectURL = workerUrl\n\n  return worker\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// The low-level RushCore module provides the heart of Rusha,\n// a high-speed sha1 implementation working on an Int32Array heap.\n// At first glance, the implementation seems complicated, however\n// with the SHA1 spec at hand, it is obvious this almost a textbook\n// implementation that has a few functions hand-inlined and a few loops\n// hand-unrolled.\nmodule.exports = function RushaCore(stdlib$846, foreign$847, heap$848) {\n    'use asm';\n    var H$849 = new stdlib$846.Int32Array(heap$848);\n    function hash$850(k$851, x$852) {\n        // k in bytes\n        k$851 = k$851 | 0;\n        x$852 = x$852 | 0;\n        var i$853 = 0, j$854 = 0, y0$855 = 0, z0$856 = 0, y1$857 = 0, z1$858 = 0, y2$859 = 0, z2$860 = 0, y3$861 = 0, z3$862 = 0, y4$863 = 0, z4$864 = 0, t0$865 = 0, t1$866 = 0;\n        y0$855 = H$849[x$852 + 320 >> 2] | 0;\n        y1$857 = H$849[x$852 + 324 >> 2] | 0;\n        y2$859 = H$849[x$852 + 328 >> 2] | 0;\n        y3$861 = H$849[x$852 + 332 >> 2] | 0;\n        y4$863 = H$849[x$852 + 336 >> 2] | 0;\n        for (i$853 = 0; (i$853 | 0) < (k$851 | 0); i$853 = i$853 + 64 | 0) {\n            z0$856 = y0$855;\n            z1$858 = y1$857;\n            z2$860 = y2$859;\n            z3$862 = y3$861;\n            z4$864 = y4$863;\n            for (j$854 = 0; (j$854 | 0) < 64; j$854 = j$854 + 4 | 0) {\n                t1$866 = H$849[i$853 + j$854 >> 2] | 0;\n                t0$865 = ((y0$855 << 5 | y0$855 >>> 27) + (y1$857 & y2$859 | ~y1$857 & y3$861) | 0) + ((t1$866 + y4$863 | 0) + 1518500249 | 0) | 0;\n                y4$863 = y3$861;\n                y3$861 = y2$859;\n                y2$859 = y1$857 << 30 | y1$857 >>> 2;\n                y1$857 = y0$855;\n                y0$855 = t0$865;\n                H$849[k$851 + j$854 >> 2] = t1$866;\n            }\n            for (j$854 = k$851 + 64 | 0; (j$854 | 0) < (k$851 + 80 | 0); j$854 = j$854 + 4 | 0) {\n                t1$866 = (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) << 1 | (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) >>> 31;\n                t0$865 = ((y0$855 << 5 | y0$855 >>> 27) + (y1$857 & y2$859 | ~y1$857 & y3$861) | 0) + ((t1$866 + y4$863 | 0) + 1518500249 | 0) | 0;\n                y4$863 = y3$861;\n                y3$861 = y2$859;\n                y2$859 = y1$857 << 30 | y1$857 >>> 2;\n                y1$857 = y0$855;\n                y0$855 = t0$865;\n                H$849[j$854 >> 2] = t1$866;\n            }\n            for (j$854 = k$851 + 80 | 0; (j$854 | 0) < (k$851 + 160 | 0); j$854 = j$854 + 4 | 0) {\n                t1$866 = (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) << 1 | (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) >>> 31;\n                t0$865 = ((y0$855 << 5 | y0$855 >>> 27) + (y1$857 ^ y2$859 ^ y3$861) | 0) + ((t1$866 + y4$863 | 0) + 1859775393 | 0) | 0;\n                y4$863 = y3$861;\n                y3$861 = y2$859;\n                y2$859 = y1$857 << 30 | y1$857 >>> 2;\n                y1$857 = y0$855;\n                y0$855 = t0$865;\n                H$849[j$854 >> 2] = t1$866;\n            }\n            for (j$854 = k$851 + 160 | 0; (j$854 | 0) < (k$851 + 240 | 0); j$854 = j$854 + 4 | 0) {\n                t1$866 = (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) << 1 | (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) >>> 31;\n                t0$865 = ((y0$855 << 5 | y0$855 >>> 27) + (y1$857 & y2$859 | y1$857 & y3$861 | y2$859 & y3$861) | 0) + ((t1$866 + y4$863 | 0) - 1894007588 | 0) | 0;\n                y4$863 = y3$861;\n                y3$861 = y2$859;\n                y2$859 = y1$857 << 30 | y1$857 >>> 2;\n                y1$857 = y0$855;\n                y0$855 = t0$865;\n                H$849[j$854 >> 2] = t1$866;\n            }\n            for (j$854 = k$851 + 240 | 0; (j$854 | 0) < (k$851 + 320 | 0); j$854 = j$854 + 4 | 0) {\n                t1$866 = (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) << 1 | (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) >>> 31;\n                t0$865 = ((y0$855 << 5 | y0$855 >>> 27) + (y1$857 ^ y2$859 ^ y3$861) | 0) + ((t1$866 + y4$863 | 0) - 899497514 | 0) | 0;\n                y4$863 = y3$861;\n                y3$861 = y2$859;\n                y2$859 = y1$857 << 30 | y1$857 >>> 2;\n                y1$857 = y0$855;\n                y0$855 = t0$865;\n                H$849[j$854 >> 2] = t1$866;\n            }\n            y0$855 = y0$855 + z0$856 | 0;\n            y1$857 = y1$857 + z1$858 | 0;\n            y2$859 = y2$859 + z2$860 | 0;\n            y3$861 = y3$861 + z3$862 | 0;\n            y4$863 = y4$863 + z4$864 | 0;\n        }\n        H$849[x$852 + 320 >> 2] = y0$855;\n        H$849[x$852 + 324 >> 2] = y1$857;\n        H$849[x$852 + 328 >> 2] = y2$859;\n        H$849[x$852 + 332 >> 2] = y3$861;\n        H$849[x$852 + 336 >> 2] = y4$863;\n    }\n    return { hash: hash$850 };\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nvar _this = this;\n\n/* eslint-env commonjs, browser */\n\nvar reader = void 0;\nif (typeof self !== 'undefined' && typeof self.FileReaderSync !== 'undefined') {\n  reader = new self.FileReaderSync();\n}\n\n// Convert a binary string and write it to the heap.\n// A binary string is expected to only contain char codes < 256.\nvar convStr = function (str, H8, H32, start, len, off) {\n  var i = void 0,\n      om = off % 4,\n      lm = (len + om) % 4,\n      j = len - lm;\n  switch (om) {\n    case 0:\n      H8[off] = str.charCodeAt(start + 3);\n    case 1:\n      H8[off + 1 - (om << 1) | 0] = str.charCodeAt(start + 2);\n    case 2:\n      H8[off + 2 - (om << 1) | 0] = str.charCodeAt(start + 1);\n    case 3:\n      H8[off + 3 - (om << 1) | 0] = str.charCodeAt(start);\n  }\n  if (len < lm + (4 - om)) {\n    return;\n  }\n  for (i = 4 - om; i < j; i = i + 4 | 0) {\n    H32[off + i >> 2] = str.charCodeAt(start + i) << 24 | str.charCodeAt(start + i + 1) << 16 | str.charCodeAt(start + i + 2) << 8 | str.charCodeAt(start + i + 3);\n  }\n  switch (lm) {\n    case 3:\n      H8[off + j + 1 | 0] = str.charCodeAt(start + j + 2);\n    case 2:\n      H8[off + j + 2 | 0] = str.charCodeAt(start + j + 1);\n    case 1:\n      H8[off + j + 3 | 0] = str.charCodeAt(start + j);\n  }\n};\n\n// Convert a buffer or array and write it to the heap.\n// The buffer or array is expected to only contain elements < 256.\nvar convBuf = function (buf, H8, H32, start, len, off) {\n  var i = void 0,\n      om = off % 4,\n      lm = (len + om) % 4,\n      j = len - lm;\n  switch (om) {\n    case 0:\n      H8[off] = buf[start + 3];\n    case 1:\n      H8[off + 1 - (om << 1) | 0] = buf[start + 2];\n    case 2:\n      H8[off + 2 - (om << 1) | 0] = buf[start + 1];\n    case 3:\n      H8[off + 3 - (om << 1) | 0] = buf[start];\n  }\n  if (len < lm + (4 - om)) {\n    return;\n  }\n  for (i = 4 - om; i < j; i = i + 4 | 0) {\n    H32[off + i >> 2 | 0] = buf[start + i] << 24 | buf[start + i + 1] << 16 | buf[start + i + 2] << 8 | buf[start + i + 3];\n  }\n  switch (lm) {\n    case 3:\n      H8[off + j + 1 | 0] = buf[start + j + 2];\n    case 2:\n      H8[off + j + 2 | 0] = buf[start + j + 1];\n    case 1:\n      H8[off + j + 3 | 0] = buf[start + j];\n  }\n};\n\nvar convBlob = function (blob, H8, H32, start, len, off) {\n  var i = void 0,\n      om = off % 4,\n      lm = (len + om) % 4,\n      j = len - lm;\n  var buf = new Uint8Array(reader.readAsArrayBuffer(blob.slice(start, start + len)));\n  switch (om) {\n    case 0:\n      H8[off] = buf[3];\n    case 1:\n      H8[off + 1 - (om << 1) | 0] = buf[2];\n    case 2:\n      H8[off + 2 - (om << 1) | 0] = buf[1];\n    case 3:\n      H8[off + 3 - (om << 1) | 0] = buf[0];\n  }\n  if (len < lm + (4 - om)) {\n    return;\n  }\n  for (i = 4 - om; i < j; i = i + 4 | 0) {\n    H32[off + i >> 2 | 0] = buf[i] << 24 | buf[i + 1] << 16 | buf[i + 2] << 8 | buf[i + 3];\n  }\n  switch (lm) {\n    case 3:\n      H8[off + j + 1 | 0] = buf[j + 2];\n    case 2:\n      H8[off + j + 2 | 0] = buf[j + 1];\n    case 1:\n      H8[off + j + 3 | 0] = buf[j];\n  }\n};\n\nmodule.exports = function (data, H8, H32, start, len, off) {\n  if (typeof data === 'string') {\n    return convStr(data, H8, H32, start, len, off);\n  }\n  if (data instanceof Array) {\n    return convBuf(data, H8, H32, start, len, off);\n  }\n  // Safely doing a Buffer check using \"this\" to avoid Buffer polyfill to be included in the dist\n  if (_this && _this.Buffer && _this.Buffer.isBuffer(data)) {\n    return convBuf(data, H8, H32, start, len, off);\n  }\n  if (data instanceof ArrayBuffer) {\n    return convBuf(new Uint8Array(data), H8, H32, start, len, off);\n  }\n  if (data.buffer instanceof ArrayBuffer) {\n    return convBuf(new Uint8Array(data.buffer, data.byteOffset, data.byteLength), H8, H32, start, len, off);\n  }\n  if (data instanceof Blob) {\n    return convBlob(data, H8, H32, start, len, off);\n  }\n  throw new Error('Unsupported data type.');\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-env commonjs, browser */\n\nvar Rusha = __webpack_require__(0);\n\nvar _require = __webpack_require__(1),\n    toHex = _require.toHex;\n\nvar Hash = function () {\n  function Hash() {\n    _classCallCheck(this, Hash);\n\n    this._rusha = new Rusha();\n    this._rusha.resetState();\n  }\n\n  Hash.prototype.update = function update(data) {\n    this._rusha.append(data);\n    return this;\n  };\n\n  Hash.prototype.digest = function digest(encoding) {\n    var digest = this._rusha.rawEnd().buffer;\n    if (!encoding) {\n      return digest;\n    }\n    if (encoding === 'hex') {\n      return toHex(digest);\n    }\n    throw new Error('unsupported digest encoding');\n  };\n\n  return Hash;\n}();\n\nmodule.exports = function () {\n  return new Hash();\n};\n\n/***/ })\n/******/ ]);\n});","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","/** @license URI.js v4.2.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.URI = global.URI || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction merge() {\n    for (var _len = arguments.length, sets = Array(_len), _key = 0; _key < _len; _key++) {\n        sets[_key] = arguments[_key];\n    }\n\n    if (sets.length > 1) {\n        sets[0] = sets[0].slice(0, -1);\n        var xl = sets.length - 1;\n        for (var x = 1; x < xl; ++x) {\n            sets[x] = sets[x].slice(1, -1);\n        }\n        sets[xl] = sets[xl].slice(1);\n        return sets.join('');\n    } else {\n        return sets[0];\n    }\n}\nfunction subexp(str) {\n    return \"(?:\" + str + \")\";\n}\nfunction typeOf(o) {\n    return o === undefined ? \"undefined\" : o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase();\n}\nfunction toUpperCase(str) {\n    return str.toUpperCase();\n}\nfunction toArray(obj) {\n    return obj !== undefined && obj !== null ? obj instanceof Array ? obj : typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj) : [];\n}\nfunction assign(target, source) {\n    var obj = target;\n    if (source) {\n        for (var key in source) {\n            obj[key] = source[key];\n        }\n    }\n    return obj;\n}\n\nfunction buildExps(isIRI) {\n    var ALPHA$$ = \"[A-Za-z]\",\n        CR$ = \"[\\\\x0D]\",\n        DIGIT$$ = \"[0-9]\",\n        DQUOTE$$ = \"[\\\\x22]\",\n        HEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),\n        //case-insensitive\n    LF$$ = \"[\\\\x0A]\",\n        SP$$ = \"[\\\\x20]\",\n        PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),\n        //expanded\n    GEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n        SUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n        RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n        UCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",\n        //subset, excludes bidi control characters\n    IPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",\n        //subset\n    UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n        SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n        USERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n        DEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n        DEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),\n        //relaxed parsing rules\n    IPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n        H16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n        LS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n        IPV6ADDRESS1$ = subexp(subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$),\n        //                           6( h16 \":\" ) ls32\n    IPV6ADDRESS2$ = subexp(\"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$),\n        //                      \"::\" 5( h16 \":\" ) ls32\n    IPV6ADDRESS3$ = subexp(subexp(H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$),\n        //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n    IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$),\n        //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n    IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$),\n        //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n    IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" + H16$ + \"\\\\:\" + LS32$),\n        //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n    IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\" + LS32$),\n        //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n    IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\" + H16$),\n        //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n    IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"),\n        //[ *6( h16 \":\" ) h16 ] \"::\"\n    IPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n        ZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),\n        //RFC 6874\n    IPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),\n        //RFC 6874\n    IPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),\n        //RFC 6874, with relaxed parsing rules\n    IPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n        IP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),\n        //RFC 6874\n    REG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n        HOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n        PORT$ = subexp(DIGIT$$ + \"*\"),\n        AUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n        PCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n        SEGMENT$ = subexp(PCHAR$ + \"*\"),\n        SEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n        SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n        PATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n        PATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),\n        //simplified\n    PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),\n        //simplified\n    PATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n        PATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        QUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n        FRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n        HIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n        URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        RELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n        RELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n        URI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n        ABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n        GENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        RELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        ABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n        SAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n        AUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\";\n    return {\n        NOT_SCHEME: new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n        NOT_USERINFO: new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_HOST: new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_PATH: new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_PATH_NOSCHEME: new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        NOT_QUERY: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n        NOT_FRAGMENT: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n        ESCAPE: new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n        UNRESERVED: new RegExp(UNRESERVED$$, \"g\"),\n        OTHER_CHARS: new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n        PCT_ENCODED: new RegExp(PCT_ENCODED$, \"g\"),\n        IPV4ADDRESS: new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n        IPV6ADDRESS: new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\") //RFC 6874, with relaxed parsing rules\n    };\n}\nvar URI_PROTOCOL = buildExps(false);\n\nvar IRI_PROTOCOL = buildExps(true);\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/** Highest positive signed 32-bit float value */\n\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error$1(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tvar result = [];\n\tvar length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tvar parts = string.split('@');\n\tvar result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tvar labels = string.split('.');\n\tvar encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t// Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nvar ucs2encode = function ucs2encode(array) {\n\treturn String.fromCodePoint.apply(String, toConsumableArray(array));\n};\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nvar basicToDigit = function basicToDigit(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nvar digitToBasic = function digitToBasic(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nvar adapt = function adapt(delta, numPoints, firstTime) {\n\tvar k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (; /* no initialization */delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nvar decode = function decode(input) {\n\t// Don't use UCS-2.\n\tvar output = [];\n\tvar inputLength = input.length;\n\tvar i = 0;\n\tvar n = initialN;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tvar basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (var j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror$1('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (var index = basic > 0 ? basic + 1 : 0; index < inputLength;) /* no final expression */{\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tvar oldi = i;\n\t\tfor (var w = 1, k = base;; /* no condition */k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror$1('invalid-input');\n\t\t\t}\n\n\t\t\tvar digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror$1('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror$1('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\t\t}\n\n\t\tvar out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror$1('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\t}\n\n\treturn String.fromCodePoint.apply(String, output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nvar encode = function encode(input) {\n\tvar output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tvar inputLength = input.length;\n\n\t// Initialize the state.\n\tvar n = initialN;\n\tvar delta = 0;\n\tvar bias = initialBias;\n\n\t// Handle the basic code points.\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\n\ttry {\n\t\tfor (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\tvar _currentValue2 = _step.value;\n\n\t\t\tif (_currentValue2 < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(_currentValue2));\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\t_didIteratorError = true;\n\t\t_iteratorError = err;\n\t} finally {\n\t\ttry {\n\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t_iterator.return();\n\t\t\t}\n\t\t} finally {\n\t\t\tif (_didIteratorError) {\n\t\t\t\tthrow _iteratorError;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar basicLength = output.length;\n\tvar handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tvar m = maxInt;\n\t\tvar _iteratorNormalCompletion2 = true;\n\t\tvar _didIteratorError2 = false;\n\t\tvar _iteratorError2 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator2 = input[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t\t\t\tvar currentValue = _step2.value;\n\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow.\n\t\t} catch (err) {\n\t\t\t_didIteratorError2 = true;\n\t\t\t_iteratorError2 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t\t\t\t\t_iterator2.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError2) {\n\t\t\t\t\tthrow _iteratorError2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror$1('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tvar _iteratorNormalCompletion3 = true;\n\t\tvar _didIteratorError3 = false;\n\t\tvar _iteratorError3 = undefined;\n\n\t\ttry {\n\t\t\tfor (var _iterator3 = input[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t\t\t\tvar _currentValue = _step3.value;\n\n\t\t\t\tif (_currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror$1('overflow');\n\t\t\t\t}\n\t\t\t\tif (_currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\t\tvar q = delta;\n\t\t\t\t\tfor (var k = base;; /* no condition */k += base) {\n\t\t\t\t\t\tvar t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar qMinusT = q - t;\n\t\t\t\t\t\tvar baseMinusT = base - t;\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t_didIteratorError3 = true;\n\t\t\t_iteratorError3 = err;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tif (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t\t\t\t\t_iterator3.return();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (_didIteratorError3) {\n\t\t\t\t\tthrow _iteratorError3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nvar toUnicode = function toUnicode(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nvar toASCII = function toASCII(input) {\n\treturn mapDomain(input, function (string) {\n\t\treturn regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nvar punycode = {\n\t/**\n  * A string representing the current Punycode.js version number.\n  * @memberOf punycode\n  * @type String\n  */\n\t'version': '2.1.0',\n\t/**\n  * An object of methods to convert from JavaScript's internal character\n  * representation (UCS-2) to Unicode code points, and back.\n  * @see <https://mathiasbynens.be/notes/javascript-encoding>\n  * @memberOf punycode\n  * @type Object\n  */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\n/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\nvar SCHEMES = {};\nfunction pctEncChar(chr) {\n    var c = chr.charCodeAt(0);\n    var e = void 0;\n    if (c < 16) e = \"%0\" + c.toString(16).toUpperCase();else if (c < 128) e = \"%\" + c.toString(16).toUpperCase();else if (c < 2048) e = \"%\" + (c >> 6 | 192).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();else e = \"%\" + (c >> 12 | 224).toString(16).toUpperCase() + \"%\" + (c >> 6 & 63 | 128).toString(16).toUpperCase() + \"%\" + (c & 63 | 128).toString(16).toUpperCase();\n    return e;\n}\nfunction pctDecChars(str) {\n    var newStr = \"\";\n    var i = 0;\n    var il = str.length;\n    while (i < il) {\n        var c = parseInt(str.substr(i + 1, 2), 16);\n        if (c < 128) {\n            newStr += String.fromCharCode(c);\n            i += 3;\n        } else if (c >= 194 && c < 224) {\n            if (il - i >= 6) {\n                var c2 = parseInt(str.substr(i + 4, 2), 16);\n                newStr += String.fromCharCode((c & 31) << 6 | c2 & 63);\n            } else {\n                newStr += str.substr(i, 6);\n            }\n            i += 6;\n        } else if (c >= 224) {\n            if (il - i >= 9) {\n                var _c = parseInt(str.substr(i + 4, 2), 16);\n                var c3 = parseInt(str.substr(i + 7, 2), 16);\n                newStr += String.fromCharCode((c & 15) << 12 | (_c & 63) << 6 | c3 & 63);\n            } else {\n                newStr += str.substr(i, 9);\n            }\n            i += 9;\n        } else {\n            newStr += str.substr(i, 3);\n            i += 3;\n        }\n    }\n    return newStr;\n}\nfunction _normalizeComponentEncoding(components, protocol) {\n    function decodeUnreserved(str) {\n        var decStr = pctDecChars(str);\n        return !decStr.match(protocol.UNRESERVED) ? str : decStr;\n    }\n    if (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n    if (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    if (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n    return components;\n}\n\nfunction _stripLeadingZeros(str) {\n    return str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\nfunction _normalizeIPv4(host, protocol) {\n    var matches = host.match(protocol.IPV4ADDRESS) || [];\n\n    var _matches = slicedToArray(matches, 2),\n        address = _matches[1];\n\n    if (address) {\n        return address.split(\".\").map(_stripLeadingZeros).join(\".\");\n    } else {\n        return host;\n    }\n}\nfunction _normalizeIPv6(host, protocol) {\n    var matches = host.match(protocol.IPV6ADDRESS) || [];\n\n    var _matches2 = slicedToArray(matches, 3),\n        address = _matches2[1],\n        zone = _matches2[2];\n\n    if (address) {\n        var _address$toLowerCase$ = address.toLowerCase().split('::').reverse(),\n            _address$toLowerCase$2 = slicedToArray(_address$toLowerCase$, 2),\n            last = _address$toLowerCase$2[0],\n            first = _address$toLowerCase$2[1];\n\n        var firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n        var lastFields = last.split(\":\").map(_stripLeadingZeros);\n        var isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n        var fieldCount = isLastFieldIPv4Address ? 7 : 8;\n        var lastFieldsStart = lastFields.length - fieldCount;\n        var fields = Array(fieldCount);\n        for (var x = 0; x < fieldCount; ++x) {\n            fields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n        }\n        if (isLastFieldIPv4Address) {\n            fields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n        }\n        var allZeroFields = fields.reduce(function (acc, field, index) {\n            if (!field || field === \"0\") {\n                var lastLongest = acc[acc.length - 1];\n                if (lastLongest && lastLongest.index + lastLongest.length === index) {\n                    lastLongest.length++;\n                } else {\n                    acc.push({ index: index, length: 1 });\n                }\n            }\n            return acc;\n        }, []);\n        var longestZeroFields = allZeroFields.sort(function (a, b) {\n            return b.length - a.length;\n        })[0];\n        var newHost = void 0;\n        if (longestZeroFields && longestZeroFields.length > 1) {\n            var newFirst = fields.slice(0, longestZeroFields.index);\n            var newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n            newHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n        } else {\n            newHost = fields.join(\":\");\n        }\n        if (zone) {\n            newHost += \"%\" + zone;\n        }\n        return newHost;\n    } else {\n        return host;\n    }\n}\nvar URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nvar NO_MATCH_IS_UNDEFINED = \"\".match(/(){0}/)[1] === undefined;\nfunction parse(uriString) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var components = {};\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    if (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n    var matches = uriString.match(URI_PARSE);\n    if (matches) {\n        if (NO_MATCH_IS_UNDEFINED) {\n            //store each component\n            components.scheme = matches[1];\n            components.userinfo = matches[3];\n            components.host = matches[4];\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || \"\";\n            components.query = matches[7];\n            components.fragment = matches[8];\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = matches[5];\n            }\n        } else {\n            //IE FIX for improper RegExp matching\n            //store each component\n            components.scheme = matches[1] || undefined;\n            components.userinfo = uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined;\n            components.host = uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined;\n            components.port = parseInt(matches[5], 10);\n            components.path = matches[6] || \"\";\n            components.query = uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined;\n            components.fragment = uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined;\n            //fix port number\n            if (isNaN(components.port)) {\n                components.port = uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined;\n            }\n        }\n        if (components.host) {\n            //normalize IP hosts\n            components.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n        }\n        //determine reference type\n        if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n            components.reference = \"same-document\";\n        } else if (components.scheme === undefined) {\n            components.reference = \"relative\";\n        } else if (components.fragment === undefined) {\n            components.reference = \"absolute\";\n        } else {\n            components.reference = \"uri\";\n        }\n        //check for reference errors\n        if (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n            components.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n        }\n        //find scheme handler\n        var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n        //check if scheme can't handle IRIs\n        if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n            //if host component is a domain name\n            if (components.host && (options.domainHost || schemeHandler && schemeHandler.domainHost)) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n                } catch (e) {\n                    components.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n                }\n            }\n            //convert IRI -> URI\n            _normalizeComponentEncoding(components, URI_PROTOCOL);\n        } else {\n            //normalize encodings\n            _normalizeComponentEncoding(components, protocol);\n        }\n        //perform scheme specific parsing\n        if (schemeHandler && schemeHandler.parse) {\n            schemeHandler.parse(components, options);\n        }\n    } else {\n        components.error = components.error || \"URI can not be parsed.\";\n    }\n    return components;\n}\n\nfunction _recomposeAuthority(components, options) {\n    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    if (components.userinfo !== undefined) {\n        uriTokens.push(components.userinfo);\n        uriTokens.push(\"@\");\n    }\n    if (components.host !== undefined) {\n        //normalize IP hosts, add brackets and escape zone separator for IPv6\n        uriTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, function (_, $1, $2) {\n            return \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\";\n        }));\n    }\n    if (typeof components.port === \"number\") {\n        uriTokens.push(\":\");\n        uriTokens.push(components.port.toString(10));\n    }\n    return uriTokens.length ? uriTokens.join(\"\") : undefined;\n}\n\nvar RDS1 = /^\\.\\.?\\//;\nvar RDS2 = /^\\/\\.(\\/|$)/;\nvar RDS3 = /^\\/\\.\\.(\\/|$)/;\nvar RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\nfunction removeDotSegments(input) {\n    var output = [];\n    while (input.length) {\n        if (input.match(RDS1)) {\n            input = input.replace(RDS1, \"\");\n        } else if (input.match(RDS2)) {\n            input = input.replace(RDS2, \"/\");\n        } else if (input.match(RDS3)) {\n            input = input.replace(RDS3, \"/\");\n            output.pop();\n        } else if (input === \".\" || input === \"..\") {\n            input = \"\";\n        } else {\n            var im = input.match(RDS5);\n            if (im) {\n                var s = im[0];\n                input = input.slice(s.length);\n                output.push(s);\n            } else {\n                throw new Error(\"Unexpected dot segment condition\");\n            }\n        }\n    }\n    return output.join(\"\");\n}\n\nfunction serialize(components) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var protocol = options.iri ? IRI_PROTOCOL : URI_PROTOCOL;\n    var uriTokens = [];\n    //find scheme handler\n    var schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n    //perform scheme specific serialization\n    if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n    if (components.host) {\n        //if host component is an IPv6 address\n        if (protocol.IPV6ADDRESS.test(components.host)) {}\n        //TODO: normalize IPv6 address as per RFC 5952\n\n        //if host component is a domain name\n        else if (options.domainHost || schemeHandler && schemeHandler.domainHost) {\n                //convert IDN via punycode\n                try {\n                    components.host = !options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host);\n                } catch (e) {\n                    components.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                }\n            }\n    }\n    //normalize encoding\n    _normalizeComponentEncoding(components, protocol);\n    if (options.reference !== \"suffix\" && components.scheme) {\n        uriTokens.push(components.scheme);\n        uriTokens.push(\":\");\n    }\n    var authority = _recomposeAuthority(components, options);\n    if (authority !== undefined) {\n        if (options.reference !== \"suffix\") {\n            uriTokens.push(\"//\");\n        }\n        uriTokens.push(authority);\n        if (components.path && components.path.charAt(0) !== \"/\") {\n            uriTokens.push(\"/\");\n        }\n    }\n    if (components.path !== undefined) {\n        var s = components.path;\n        if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n            s = removeDotSegments(s);\n        }\n        if (authority === undefined) {\n            s = s.replace(/^\\/\\//, \"/%2F\"); //don't allow the path to start with \"//\"\n        }\n        uriTokens.push(s);\n    }\n    if (components.query !== undefined) {\n        uriTokens.push(\"?\");\n        uriTokens.push(components.query);\n    }\n    if (components.fragment !== undefined) {\n        uriTokens.push(\"#\");\n        uriTokens.push(components.fragment);\n    }\n    return uriTokens.join(\"\"); //merge tokens into a string\n}\n\nfunction resolveComponents(base, relative) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var skipNormalization = arguments[3];\n\n    var target = {};\n    if (!skipNormalization) {\n        base = parse(serialize(base, options), options); //normalize base components\n        relative = parse(serialize(relative, options), options); //normalize relative components\n    }\n    options = options || {};\n    if (!options.tolerant && relative.scheme) {\n        target.scheme = relative.scheme;\n        //target.authority = relative.authority;\n        target.userinfo = relative.userinfo;\n        target.host = relative.host;\n        target.port = relative.port;\n        target.path = removeDotSegments(relative.path || \"\");\n        target.query = relative.query;\n    } else {\n        if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n            //target.authority = relative.authority;\n            target.userinfo = relative.userinfo;\n            target.host = relative.host;\n            target.port = relative.port;\n            target.path = removeDotSegments(relative.path || \"\");\n            target.query = relative.query;\n        } else {\n            if (!relative.path) {\n                target.path = base.path;\n                if (relative.query !== undefined) {\n                    target.query = relative.query;\n                } else {\n                    target.query = base.query;\n                }\n            } else {\n                if (relative.path.charAt(0) === \"/\") {\n                    target.path = removeDotSegments(relative.path);\n                } else {\n                    if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n                        target.path = \"/\" + relative.path;\n                    } else if (!base.path) {\n                        target.path = relative.path;\n                    } else {\n                        target.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n                    }\n                    target.path = removeDotSegments(target.path);\n                }\n                target.query = relative.query;\n            }\n            //target.authority = base.authority;\n            target.userinfo = base.userinfo;\n            target.host = base.host;\n            target.port = base.port;\n        }\n        target.scheme = base.scheme;\n    }\n    target.fragment = relative.fragment;\n    return target;\n}\n\nfunction resolve(baseURI, relativeURI, options) {\n    var schemelessOptions = assign({ scheme: 'null' }, options);\n    return serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n}\n\nfunction normalize(uri, options) {\n    if (typeof uri === \"string\") {\n        uri = serialize(parse(uri, options), options);\n    } else if (typeOf(uri) === \"object\") {\n        uri = parse(serialize(uri, options), options);\n    }\n    return uri;\n}\n\nfunction equal(uriA, uriB, options) {\n    if (typeof uriA === \"string\") {\n        uriA = serialize(parse(uriA, options), options);\n    } else if (typeOf(uriA) === \"object\") {\n        uriA = serialize(uriA, options);\n    }\n    if (typeof uriB === \"string\") {\n        uriB = serialize(parse(uriB, options), options);\n    } else if (typeOf(uriB) === \"object\") {\n        uriB = serialize(uriB, options);\n    }\n    return uriA === uriB;\n}\n\nfunction escapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE, pctEncChar);\n}\n\nfunction unescapeComponent(str, options) {\n    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED, pctDecChars);\n}\n\nvar handler = {\n    scheme: \"http\",\n    domainHost: true,\n    parse: function parse(components, options) {\n        //report missing host\n        if (!components.host) {\n            components.error = components.error || \"HTTP URIs must have a host.\";\n        }\n        return components;\n    },\n    serialize: function serialize(components, options) {\n        //normalize the default port\n        if (components.port === (String(components.scheme).toLowerCase() !== \"https\" ? 80 : 443) || components.port === \"\") {\n            components.port = undefined;\n        }\n        //normalize the empty path\n        if (!components.path) {\n            components.path = \"/\";\n        }\n        //NOTE: We do not parse query strings for HTTP URIs\n        //as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n        //and not the HTTP spec.\n        return components;\n    }\n};\n\nvar handler$1 = {\n    scheme: \"https\",\n    domainHost: handler.domainHost,\n    parse: handler.parse,\n    serialize: handler.serialize\n};\n\nvar O = {};\nvar isIRI = true;\n//RFC 3986\nvar UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nvar HEXDIG$$ = \"[0-9A-Fa-f]\"; //case-insensitive\nvar PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)); //expanded\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nvar ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nvar QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nvar VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nvar SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nvar UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nvar PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nvar NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nvar NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nvar NOT_HFVALUE = NOT_HFNAME;\nfunction decodeUnreserved(str) {\n    var decStr = pctDecChars(str);\n    return !decStr.match(UNRESERVED) ? str : decStr;\n}\nvar handler$2 = {\n    scheme: \"mailto\",\n    parse: function parse$$1(components, options) {\n        var mailtoComponents = components;\n        var to = mailtoComponents.to = mailtoComponents.path ? mailtoComponents.path.split(\",\") : [];\n        mailtoComponents.path = undefined;\n        if (mailtoComponents.query) {\n            var unknownHeaders = false;\n            var headers = {};\n            var hfields = mailtoComponents.query.split(\"&\");\n            for (var x = 0, xl = hfields.length; x < xl; ++x) {\n                var hfield = hfields[x].split(\"=\");\n                switch (hfield[0]) {\n                    case \"to\":\n                        var toAddrs = hfield[1].split(\",\");\n                        for (var _x = 0, _xl = toAddrs.length; _x < _xl; ++_x) {\n                            to.push(toAddrs[_x]);\n                        }\n                        break;\n                    case \"subject\":\n                        mailtoComponents.subject = unescapeComponent(hfield[1], options);\n                        break;\n                    case \"body\":\n                        mailtoComponents.body = unescapeComponent(hfield[1], options);\n                        break;\n                    default:\n                        unknownHeaders = true;\n                        headers[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n                        break;\n                }\n            }\n            if (unknownHeaders) mailtoComponents.headers = headers;\n        }\n        mailtoComponents.query = undefined;\n        for (var _x2 = 0, _xl2 = to.length; _x2 < _xl2; ++_x2) {\n            var addr = to[_x2].split(\"@\");\n            addr[0] = unescapeComponent(addr[0]);\n            if (!options.unicodeSupport) {\n                //convert Unicode IDN -> ASCII IDN\n                try {\n                    addr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n                } catch (e) {\n                    mailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n                }\n            } else {\n                addr[1] = unescapeComponent(addr[1], options).toLowerCase();\n            }\n            to[_x2] = addr.join(\"@\");\n        }\n        return mailtoComponents;\n    },\n    serialize: function serialize$$1(mailtoComponents, options) {\n        var components = mailtoComponents;\n        var to = toArray(mailtoComponents.to);\n        if (to) {\n            for (var x = 0, xl = to.length; x < xl; ++x) {\n                var toAddr = String(to[x]);\n                var atIdx = toAddr.lastIndexOf(\"@\");\n                var localPart = toAddr.slice(0, atIdx).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n                var domain = toAddr.slice(atIdx + 1);\n                //convert IDN via punycode\n                try {\n                    domain = !options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain);\n                } catch (e) {\n                    components.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n                }\n                to[x] = localPart + \"@\" + domain;\n            }\n            components.path = to.join(\",\");\n        }\n        var headers = mailtoComponents.headers = mailtoComponents.headers || {};\n        if (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n        if (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n        var fields = [];\n        for (var name in headers) {\n            if (headers[name] !== O[name]) {\n                fields.push(name.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) + \"=\" + headers[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar));\n            }\n        }\n        if (fields.length) {\n            components.query = fields.join(\"&\");\n        }\n        return components;\n    }\n};\n\nvar URN_PARSE = /^([^\\:]+)\\:(.*)/;\n//RFC 2141\nvar handler$3 = {\n    scheme: \"urn\",\n    parse: function parse$$1(components, options) {\n        var matches = components.path && components.path.match(URN_PARSE);\n        var urnComponents = components;\n        if (matches) {\n            var scheme = options.scheme || urnComponents.scheme || \"urn\";\n            var nid = matches[1].toLowerCase();\n            var nss = matches[2];\n            var urnScheme = scheme + \":\" + (options.nid || nid);\n            var schemeHandler = SCHEMES[urnScheme];\n            urnComponents.nid = nid;\n            urnComponents.nss = nss;\n            urnComponents.path = undefined;\n            if (schemeHandler) {\n                urnComponents = schemeHandler.parse(urnComponents, options);\n            }\n        } else {\n            urnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n        }\n        return urnComponents;\n    },\n    serialize: function serialize$$1(urnComponents, options) {\n        var scheme = options.scheme || urnComponents.scheme || \"urn\";\n        var nid = urnComponents.nid;\n        var urnScheme = scheme + \":\" + (options.nid || nid);\n        var schemeHandler = SCHEMES[urnScheme];\n        if (schemeHandler) {\n            urnComponents = schemeHandler.serialize(urnComponents, options);\n        }\n        var uriComponents = urnComponents;\n        var nss = urnComponents.nss;\n        uriComponents.path = (nid || options.nid) + \":\" + nss;\n        return uriComponents;\n    }\n};\n\nvar UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\n//RFC 4122\nvar handler$4 = {\n    scheme: \"urn:uuid\",\n    parse: function parse(urnComponents, options) {\n        var uuidComponents = urnComponents;\n        uuidComponents.uuid = uuidComponents.nss;\n        uuidComponents.nss = undefined;\n        if (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n            uuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n        }\n        return uuidComponents;\n    },\n    serialize: function serialize(uuidComponents, options) {\n        var urnComponents = uuidComponents;\n        //normalize UUID\n        urnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n        return urnComponents;\n    }\n};\n\nSCHEMES[handler.scheme] = handler;\nSCHEMES[handler$1.scheme] = handler$1;\nSCHEMES[handler$2.scheme] = handler$2;\nSCHEMES[handler$3.scheme] = handler$3;\nSCHEMES[handler$4.scheme] = handler$4;\n\nexports.SCHEMES = SCHEMES;\nexports.pctEncChar = pctEncChar;\nexports.pctDecChars = pctDecChars;\nexports.parse = parse;\nexports.removeDotSegments = removeDotSegments;\nexports.serialize = serialize;\nexports.resolveComponents = resolveComponents;\nexports.resolve = resolve;\nexports.normalize = normalize;\nexports.equal = equal;\nexports.escapeComponent = escapeComponent;\nexports.unescapeComponent = unescapeComponent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=uri.all.js.map\n","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n","module.exports = function() {\n  return require(\"!!C:\\\\Users\\\\Dimava\\\\Desktop\\\\projects\\\\shapez.io\\\\node_modules\\\\worker-loader\\\\dist\\\\workers\\\\InlineWorker.js\")(\"/******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__webpack_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__webpack_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// define __esModule on exports\\n/******/ \\t__webpack_require__.r = function(exports) {\\n/******/ \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t}\\n/******/ \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t};\\n/******/\\n/******/ \\t// create a fake namespace object\\n/******/ \\t// mode & 1: value is a module id, require it\\n/******/ \\t// mode & 2: merge all properties of value into the ns\\n/******/ \\t// mode & 4: return value when already ns object\\n/******/ \\t// mode & 8|1: behave like require\\n/******/ \\t__webpack_require__.t = function(value, mode) {\\n/******/ \\t\\tif(mode & 1) value = __webpack_require__(value);\\n/******/ \\t\\tif(mode & 8) return value;\\n/******/ \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n/******/ \\t\\tvar ns = Object.create(null);\\n/******/ \\t\\t__webpack_require__.r(ns);\\n/******/ \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n/******/ \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n/******/ \\t\\treturn ns;\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__webpack_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__webpack_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"\\\";\\n/******/\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(__webpack_require__.s = \\\"./node_modules/webpack-strip-block/index.js?!./src/js/webworkers/background_animation_frame_emittter.worker.js\\\");\\n/******/ })\\n/************************************************************************/\\n/******/ ({\\n\\n/***/ \\\"./node_modules/webpack-strip-block/index.js?!./src/js/webworkers/background_animation_frame_emittter.worker.js\\\":\\n/*!**********************************************************************************************************************!*\\\\\\n  !*** ./node_modules/webpack-strip-block??ref--7-0!./src/js/webworkers/background_animation_frame_emittter.worker.js ***!\\n  \\\\**********************************************************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\n// We clamp high deltas so 30 fps is fairly ok\\r\\nconst bgFps = 30;\\r\\nconst desiredMsDelay = 1000 / bgFps;\\r\\n\\r\\nlet lastTick = performance.now();\\r\\n\\r\\nfunction tick() {\\r\\n    const now = performance.now();\\r\\n    const delta = now - lastTick;\\r\\n    lastTick = now;\\r\\n\\r\\n    postMessage({ delta });\\r\\n}\\r\\n\\r\\nsetInterval(tick, desiredMsDelay);\\r\\n\\n\\n/***/ })\\n\\n/******/ });\\n//# sourceMappingURL=1988063d72720cef16ad.worker.js.map\", null);\n};","module.exports = function() {\n  return require(\"!!C:\\\\Users\\\\Dimava\\\\Desktop\\\\projects\\\\shapez.io\\\\node_modules\\\\worker-loader\\\\dist\\\\workers\\\\InlineWorker.js\")(\"/******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__webpack_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__webpack_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// define __esModule on exports\\n/******/ \\t__webpack_require__.r = function(exports) {\\n/******/ \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t}\\n/******/ \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t};\\n/******/\\n/******/ \\t// create a fake namespace object\\n/******/ \\t// mode & 1: value is a module id, require it\\n/******/ \\t// mode & 2: merge all properties of value into the ns\\n/******/ \\t// mode & 4: return value when already ns object\\n/******/ \\t// mode & 8|1: behave like require\\n/******/ \\t__webpack_require__.t = function(value, mode) {\\n/******/ \\t\\tif(mode & 1) value = __webpack_require__(value);\\n/******/ \\t\\tif(mode & 8) return value;\\n/******/ \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n/******/ \\t\\tvar ns = Object.create(null);\\n/******/ \\t\\t__webpack_require__.r(ns);\\n/******/ \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n/******/ \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n/******/ \\t\\treturn ns;\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__webpack_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__webpack_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"\\\";\\n/******/\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(__webpack_require__.s = \\\"./node_modules/webpack-strip-block/index.js?!./src/js/webworkers/compression.worker.js\\\");\\n/******/ })\\n/************************************************************************/\\n/******/ ({\\n\\n/***/ \\\"./node_modules/decode-uri-component/index.js\\\":\\n/*!****************************************************!*\\\\\\n  !*** ./node_modules/decode-uri-component/index.js ***!\\n  \\\\****************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\nvar token = '%[a-f0-9]{2}';\\nvar singleMatcher = new RegExp(token, 'gi');\\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\\n\\nfunction decodeComponents(components, split) {\\n\\ttry {\\n\\t\\t// Try to decode the entire string first\\n\\t\\treturn decodeURIComponent(components.join(''));\\n\\t} catch (err) {\\n\\t\\t// Do nothing\\n\\t}\\n\\n\\tif (components.length === 1) {\\n\\t\\treturn components;\\n\\t}\\n\\n\\tsplit = split || 1;\\n\\n\\t// Split the array in 2 parts\\n\\tvar left = components.slice(0, split);\\n\\tvar right = components.slice(split);\\n\\n\\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\\n}\\n\\nfunction decode(input) {\\n\\ttry {\\n\\t\\treturn decodeURIComponent(input);\\n\\t} catch (err) {\\n\\t\\tvar tokens = input.match(singleMatcher);\\n\\n\\t\\tfor (var i = 1; i < tokens.length; i++) {\\n\\t\\t\\tinput = decodeComponents(tokens, i).join('');\\n\\n\\t\\t\\ttokens = input.match(singleMatcher);\\n\\t\\t}\\n\\n\\t\\treturn input;\\n\\t}\\n}\\n\\nfunction customDecodeURIComponent(input) {\\n\\t// Keep track of all the replacements and prefill the map with the `BOM`\\n\\tvar replaceMap = {\\n\\t\\t'%FE%FF': '\\\\uFFFD\\\\uFFFD',\\n\\t\\t'%FF%FE': '\\\\uFFFD\\\\uFFFD'\\n\\t};\\n\\n\\tvar match = multiMatcher.exec(input);\\n\\twhile (match) {\\n\\t\\ttry {\\n\\t\\t\\t// Decode as big chunks as possible\\n\\t\\t\\treplaceMap[match[0]] = decodeURIComponent(match[0]);\\n\\t\\t} catch (err) {\\n\\t\\t\\tvar result = decode(match[0]);\\n\\n\\t\\t\\tif (result !== match[0]) {\\n\\t\\t\\t\\treplaceMap[match[0]] = result;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tmatch = multiMatcher.exec(input);\\n\\t}\\n\\n\\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\\n\\treplaceMap['%C2'] = '\\\\uFFFD';\\n\\n\\tvar entries = Object.keys(replaceMap);\\n\\n\\tfor (var i = 0; i < entries.length; i++) {\\n\\t\\t// Replace all decoded components\\n\\t\\tvar key = entries[i];\\n\\t\\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\\n\\t}\\n\\n\\treturn input;\\n}\\n\\nmodule.exports = function (encodedURI) {\\n\\tif (typeof encodedURI !== 'string') {\\n\\t\\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\\n\\t}\\n\\n\\ttry {\\n\\t\\tencodedURI = encodedURI.replace(/\\\\+/g, ' ');\\n\\n\\t\\t// Try the built in decoder first\\n\\t\\treturn decodeURIComponent(encodedURI);\\n\\t} catch (err) {\\n\\t\\t// Fallback to a more advanced decoder\\n\\t\\treturn customDecodeURIComponent(encodedURI);\\n\\t}\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/query-string/index.js\\\":\\n/*!********************************************!*\\\\\\n  !*** ./node_modules/query-string/index.js ***!\\n  \\\\********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\nconst strictUriEncode = __webpack_require__(/*! strict-uri-encode */ \\\"./node_modules/strict-uri-encode/index.js\\\");\\nconst decodeComponent = __webpack_require__(/*! decode-uri-component */ \\\"./node_modules/decode-uri-component/index.js\\\");\\nconst splitOnFirst = __webpack_require__(/*! split-on-first */ \\\"./node_modules/split-on-first/index.js\\\");\\n\\nconst isNullOrUndefined = value => value === null || value === undefined;\\n\\nfunction encoderForArrayFormat(options) {\\n\\tswitch (options.arrayFormat) {\\n\\t\\tcase 'index':\\n\\t\\t\\treturn key => (result, value) => {\\n\\t\\t\\t\\tconst index = result.length;\\n\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\tvalue === undefined ||\\n\\t\\t\\t\\t\\t(options.skipNull && value === null) ||\\n\\t\\t\\t\\t\\t(options.skipEmptyString && value === '')\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (value === null) {\\n\\t\\t\\t\\t\\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn [\\n\\t\\t\\t\\t\\t...result,\\n\\t\\t\\t\\t\\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\\n\\t\\t\\t\\t];\\n\\t\\t\\t};\\n\\n\\t\\tcase 'bracket':\\n\\t\\t\\treturn key => (result, value) => {\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\tvalue === undefined ||\\n\\t\\t\\t\\t\\t(options.skipNull && value === null) ||\\n\\t\\t\\t\\t\\t(options.skipEmptyString && value === '')\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (value === null) {\\n\\t\\t\\t\\t\\treturn [...result, [encode(key, options), '[]'].join('')];\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\\n\\t\\t\\t};\\n\\n\\t\\tcase 'comma':\\n\\t\\tcase 'separator':\\n\\t\\t\\treturn key => (result, value) => {\\n\\t\\t\\t\\tif (value === null || value === undefined || value.length === 0) {\\n\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (result.length === 0) {\\n\\t\\t\\t\\t\\treturn [[encode(key, options), '=', encode(value, options)].join('')];\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\\n\\t\\t\\t};\\n\\n\\t\\tdefault:\\n\\t\\t\\treturn key => (result, value) => {\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\tvalue === undefined ||\\n\\t\\t\\t\\t\\t(options.skipNull && value === null) ||\\n\\t\\t\\t\\t\\t(options.skipEmptyString && value === '')\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn result;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (value === null) {\\n\\t\\t\\t\\t\\treturn [...result, encode(key, options)];\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\\n\\t\\t\\t};\\n\\t}\\n}\\n\\nfunction parserForArrayFormat(options) {\\n\\tlet result;\\n\\n\\tswitch (options.arrayFormat) {\\n\\t\\tcase 'index':\\n\\t\\t\\treturn (key, value, accumulator) => {\\n\\t\\t\\t\\tresult = /\\\\[(\\\\d*)\\\\]$/.exec(key);\\n\\n\\t\\t\\t\\tkey = key.replace(/\\\\[\\\\d*\\\\]$/, '');\\n\\n\\t\\t\\t\\tif (!result) {\\n\\t\\t\\t\\t\\taccumulator[key] = value;\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (accumulator[key] === undefined) {\\n\\t\\t\\t\\t\\taccumulator[key] = {};\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taccumulator[key][result[1]] = value;\\n\\t\\t\\t};\\n\\n\\t\\tcase 'bracket':\\n\\t\\t\\treturn (key, value, accumulator) => {\\n\\t\\t\\t\\tresult = /(\\\\[\\\\])$/.exec(key);\\n\\t\\t\\t\\tkey = key.replace(/\\\\[\\\\]$/, '');\\n\\n\\t\\t\\t\\tif (!result) {\\n\\t\\t\\t\\t\\taccumulator[key] = value;\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (accumulator[key] === undefined) {\\n\\t\\t\\t\\t\\taccumulator[key] = [value];\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taccumulator[key] = [].concat(accumulator[key], value);\\n\\t\\t\\t};\\n\\n\\t\\tcase 'comma':\\n\\t\\tcase 'separator':\\n\\t\\t\\treturn (key, value, accumulator) => {\\n\\t\\t\\t\\tconst isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\\n\\t\\t\\t\\tconst newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\\n\\t\\t\\t\\taccumulator[key] = newValue;\\n\\t\\t\\t};\\n\\n\\t\\tdefault:\\n\\t\\t\\treturn (key, value, accumulator) => {\\n\\t\\t\\t\\tif (accumulator[key] === undefined) {\\n\\t\\t\\t\\t\\taccumulator[key] = value;\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taccumulator[key] = [].concat(accumulator[key], value);\\n\\t\\t\\t};\\n\\t}\\n}\\n\\nfunction validateArrayFormatSeparator(value) {\\n\\tif (typeof value !== 'string' || value.length !== 1) {\\n\\t\\tthrow new TypeError('arrayFormatSeparator must be single character string');\\n\\t}\\n}\\n\\nfunction encode(value, options) {\\n\\tif (options.encode) {\\n\\t\\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\\n\\t}\\n\\n\\treturn value;\\n}\\n\\nfunction decode(value, options) {\\n\\tif (options.decode) {\\n\\t\\treturn decodeComponent(value);\\n\\t}\\n\\n\\treturn value;\\n}\\n\\nfunction keysSorter(input) {\\n\\tif (Array.isArray(input)) {\\n\\t\\treturn input.sort();\\n\\t}\\n\\n\\tif (typeof input === 'object') {\\n\\t\\treturn keysSorter(Object.keys(input))\\n\\t\\t\\t.sort((a, b) => Number(a) - Number(b))\\n\\t\\t\\t.map(key => input[key]);\\n\\t}\\n\\n\\treturn input;\\n}\\n\\nfunction removeHash(input) {\\n\\tconst hashStart = input.indexOf('#');\\n\\tif (hashStart !== -1) {\\n\\t\\tinput = input.slice(0, hashStart);\\n\\t}\\n\\n\\treturn input;\\n}\\n\\nfunction getHash(url) {\\n\\tlet hash = '';\\n\\tconst hashStart = url.indexOf('#');\\n\\tif (hashStart !== -1) {\\n\\t\\thash = url.slice(hashStart);\\n\\t}\\n\\n\\treturn hash;\\n}\\n\\nfunction extract(input) {\\n\\tinput = removeHash(input);\\n\\tconst queryStart = input.indexOf('?');\\n\\tif (queryStart === -1) {\\n\\t\\treturn '';\\n\\t}\\n\\n\\treturn input.slice(queryStart + 1);\\n}\\n\\nfunction parseValue(value, options) {\\n\\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\\n\\t\\tvalue = Number(value);\\n\\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\\n\\t\\tvalue = value.toLowerCase() === 'true';\\n\\t}\\n\\n\\treturn value;\\n}\\n\\nfunction parse(input, options) {\\n\\toptions = Object.assign({\\n\\t\\tdecode: true,\\n\\t\\tsort: true,\\n\\t\\tarrayFormat: 'none',\\n\\t\\tarrayFormatSeparator: ',',\\n\\t\\tparseNumbers: false,\\n\\t\\tparseBooleans: false\\n\\t}, options);\\n\\n\\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\\n\\n\\tconst formatter = parserForArrayFormat(options);\\n\\n\\t// Create an object with no prototype\\n\\tconst ret = Object.create(null);\\n\\n\\tif (typeof input !== 'string') {\\n\\t\\treturn ret;\\n\\t}\\n\\n\\tinput = input.trim().replace(/^[?#&]/, '');\\n\\n\\tif (!input) {\\n\\t\\treturn ret;\\n\\t}\\n\\n\\tfor (const param of input.split('&')) {\\n\\t\\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\\\+/g, ' ') : param, '=');\\n\\n\\t\\t// Missing `=` should be `null`:\\n\\t\\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\\n\\t\\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\\n\\t\\tformatter(decode(key, options), value, ret);\\n\\t}\\n\\n\\tfor (const key of Object.keys(ret)) {\\n\\t\\tconst value = ret[key];\\n\\t\\tif (typeof value === 'object' && value !== null) {\\n\\t\\t\\tfor (const k of Object.keys(value)) {\\n\\t\\t\\t\\tvalue[k] = parseValue(value[k], options);\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tret[key] = parseValue(value, options);\\n\\t\\t}\\n\\t}\\n\\n\\tif (options.sort === false) {\\n\\t\\treturn ret;\\n\\t}\\n\\n\\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\\n\\t\\tconst value = ret[key];\\n\\t\\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\\n\\t\\t\\t// Sort object keys, not values\\n\\t\\t\\tresult[key] = keysSorter(value);\\n\\t\\t} else {\\n\\t\\t\\tresult[key] = value;\\n\\t\\t}\\n\\n\\t\\treturn result;\\n\\t}, Object.create(null));\\n}\\n\\nexports.extract = extract;\\nexports.parse = parse;\\n\\nexports.stringify = (object, options) => {\\n\\tif (!object) {\\n\\t\\treturn '';\\n\\t}\\n\\n\\toptions = Object.assign({\\n\\t\\tencode: true,\\n\\t\\tstrict: true,\\n\\t\\tarrayFormat: 'none',\\n\\t\\tarrayFormatSeparator: ','\\n\\t}, options);\\n\\n\\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\\n\\n\\tconst shouldFilter = key => (\\n\\t\\t(options.skipNull && isNullOrUndefined(object[key])) ||\\n\\t\\t(options.skipEmptyString && object[key] === '')\\n\\t);\\n\\n\\tconst formatter = encoderForArrayFormat(options);\\n\\n\\tconst objectCopy = {};\\n\\n\\tfor (const key of Object.keys(object)) {\\n\\t\\tif (!shouldFilter(key)) {\\n\\t\\t\\tobjectCopy[key] = object[key];\\n\\t\\t}\\n\\t}\\n\\n\\tconst keys = Object.keys(objectCopy);\\n\\n\\tif (options.sort !== false) {\\n\\t\\tkeys.sort(options.sort);\\n\\t}\\n\\n\\treturn keys.map(key => {\\n\\t\\tconst value = object[key];\\n\\n\\t\\tif (value === undefined) {\\n\\t\\t\\treturn '';\\n\\t\\t}\\n\\n\\t\\tif (value === null) {\\n\\t\\t\\treturn encode(key, options);\\n\\t\\t}\\n\\n\\t\\tif (Array.isArray(value)) {\\n\\t\\t\\treturn value\\n\\t\\t\\t\\t.reduce(formatter(key), [])\\n\\t\\t\\t\\t.join('&');\\n\\t\\t}\\n\\n\\t\\treturn encode(key, options) + '=' + encode(value, options);\\n\\t}).filter(x => x.length > 0).join('&');\\n};\\n\\nexports.parseUrl = (input, options) => {\\n\\treturn {\\n\\t\\turl: removeHash(input).split('?')[0] || '',\\n\\t\\tquery: parse(extract(input), options)\\n\\t};\\n};\\n\\nexports.stringifyUrl = (input, options) => {\\n\\tconst url = removeHash(input.url).split('?')[0] || '';\\n\\tconst queryFromUrl = exports.extract(input.url);\\n\\tconst parsedQueryFromUrl = exports.parse(queryFromUrl);\\n\\tconst hash = getHash(input.url);\\n\\tconst query = Object.assign(parsedQueryFromUrl, input.query);\\n\\tlet queryString = exports.stringify(query, options);\\n\\tif (queryString) {\\n\\t\\tqueryString = `?${queryString}`;\\n\\t}\\n\\n\\treturn `${url}${queryString}${hash}`;\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/rusha/dist/rusha.js\\\":\\n/*!******************************************!*\\\\\\n  !*** ./node_modules/rusha/dist/rusha.js ***!\\n  \\\\******************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(true)\\n\\t\\tmodule.exports = factory();\\n\\telse {}\\n})(typeof self !== 'undefined' ? self : this, function() {\\nreturn /******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__webpack_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__webpack_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, {\\n/******/ \\t\\t\\t\\tconfigurable: false,\\n/******/ \\t\\t\\t\\tenumerable: true,\\n/******/ \\t\\t\\t\\tget: getter\\n/******/ \\t\\t\\t});\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__webpack_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__webpack_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"\\\";\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(__webpack_require__.s = 3);\\n/******/ })\\n/************************************************************************/\\n/******/ ([\\n/* 0 */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\n/* eslint-env commonjs, browser */\\n\\nvar RushaCore = __webpack_require__(5);\\n\\nvar _require = __webpack_require__(1),\\n    toHex = _require.toHex,\\n    ceilHeapSize = _require.ceilHeapSize;\\n\\nvar conv = __webpack_require__(6);\\n\\n// Calculate the length of buffer that the sha1 routine uses\\n// including the padding.\\nvar padlen = function (len) {\\n  for (len += 9; len % 64 > 0; len += 1) {}\\n  return len;\\n};\\n\\nvar padZeroes = function (bin, len) {\\n  var h8 = new Uint8Array(bin.buffer);\\n  var om = len % 4,\\n      align = len - om;\\n  switch (om) {\\n    case 0:\\n      h8[align + 3] = 0;\\n    case 1:\\n      h8[align + 2] = 0;\\n    case 2:\\n      h8[align + 1] = 0;\\n    case 3:\\n      h8[align + 0] = 0;\\n  }\\n  for (var i = (len >> 2) + 1; i < bin.length; i++) {\\n    bin[i] = 0;\\n  }\\n};\\n\\nvar padData = function (bin, chunkLen, msgLen) {\\n  bin[chunkLen >> 2] |= 0x80 << 24 - (chunkLen % 4 << 3);\\n  // To support msgLen >= 2 GiB, use a float division when computing the\\n  // high 32-bits of the big-endian message length in bits.\\n  bin[((chunkLen >> 2) + 2 & ~0x0f) + 14] = msgLen / (1 << 29) | 0;\\n  bin[((chunkLen >> 2) + 2 & ~0x0f) + 15] = msgLen << 3;\\n};\\n\\nvar getRawDigest = function (heap, padMaxChunkLen) {\\n  var io = new Int32Array(heap, padMaxChunkLen + 320, 5);\\n  var out = new Int32Array(5);\\n  var arr = new DataView(out.buffer);\\n  arr.setInt32(0, io[0], false);\\n  arr.setInt32(4, io[1], false);\\n  arr.setInt32(8, io[2], false);\\n  arr.setInt32(12, io[3], false);\\n  arr.setInt32(16, io[4], false);\\n  return out;\\n};\\n\\nvar Rusha = function () {\\n  function Rusha(chunkSize) {\\n    _classCallCheck(this, Rusha);\\n\\n    chunkSize = chunkSize || 64 * 1024;\\n    if (chunkSize % 64 > 0) {\\n      throw new Error('Chunk size must be a multiple of 128 bit');\\n    }\\n    this._offset = 0;\\n    this._maxChunkLen = chunkSize;\\n    this._padMaxChunkLen = padlen(chunkSize);\\n    // The size of the heap is the sum of:\\n    // 1. The padded input message size\\n    // 2. The extended space the algorithm needs (320 byte)\\n    // 3. The 160 bit state the algoritm uses\\n    this._heap = new ArrayBuffer(ceilHeapSize(this._padMaxChunkLen + 320 + 20));\\n    this._h32 = new Int32Array(this._heap);\\n    this._h8 = new Int8Array(this._heap);\\n    this._core = new RushaCore({ Int32Array: Int32Array }, {}, this._heap);\\n  }\\n\\n  Rusha.prototype._initState = function _initState(heap, padMsgLen) {\\n    this._offset = 0;\\n    var io = new Int32Array(heap, padMsgLen + 320, 5);\\n    io[0] = 1732584193;\\n    io[1] = -271733879;\\n    io[2] = -1732584194;\\n    io[3] = 271733878;\\n    io[4] = -1009589776;\\n  };\\n\\n  Rusha.prototype._padChunk = function _padChunk(chunkLen, msgLen) {\\n    var padChunkLen = padlen(chunkLen);\\n    var view = new Int32Array(this._heap, 0, padChunkLen >> 2);\\n    padZeroes(view, chunkLen);\\n    padData(view, chunkLen, msgLen);\\n    return padChunkLen;\\n  };\\n\\n  Rusha.prototype._write = function _write(data, chunkOffset, chunkLen, off) {\\n    conv(data, this._h8, this._h32, chunkOffset, chunkLen, off || 0);\\n  };\\n\\n  Rusha.prototype._coreCall = function _coreCall(data, chunkOffset, chunkLen, msgLen, finalize) {\\n    var padChunkLen = chunkLen;\\n    this._write(data, chunkOffset, chunkLen);\\n    if (finalize) {\\n      padChunkLen = this._padChunk(chunkLen, msgLen);\\n    }\\n    this._core.hash(padChunkLen, this._padMaxChunkLen);\\n  };\\n\\n  Rusha.prototype.rawDigest = function rawDigest(str) {\\n    var msgLen = str.byteLength || str.length || str.size || 0;\\n    this._initState(this._heap, this._padMaxChunkLen);\\n    var chunkOffset = 0,\\n        chunkLen = this._maxChunkLen;\\n    for (chunkOffset = 0; msgLen > chunkOffset + chunkLen; chunkOffset += chunkLen) {\\n      this._coreCall(str, chunkOffset, chunkLen, msgLen, false);\\n    }\\n    this._coreCall(str, chunkOffset, msgLen - chunkOffset, msgLen, true);\\n    return getRawDigest(this._heap, this._padMaxChunkLen);\\n  };\\n\\n  Rusha.prototype.digest = function digest(str) {\\n    return toHex(this.rawDigest(str).buffer);\\n  };\\n\\n  Rusha.prototype.digestFromString = function digestFromString(str) {\\n    return this.digest(str);\\n  };\\n\\n  Rusha.prototype.digestFromBuffer = function digestFromBuffer(str) {\\n    return this.digest(str);\\n  };\\n\\n  Rusha.prototype.digestFromArrayBuffer = function digestFromArrayBuffer(str) {\\n    return this.digest(str);\\n  };\\n\\n  Rusha.prototype.resetState = function resetState() {\\n    this._initState(this._heap, this._padMaxChunkLen);\\n    return this;\\n  };\\n\\n  Rusha.prototype.append = function append(chunk) {\\n    var chunkOffset = 0;\\n    var chunkLen = chunk.byteLength || chunk.length || chunk.size || 0;\\n    var turnOffset = this._offset % this._maxChunkLen;\\n    var inputLen = void 0;\\n\\n    this._offset += chunkLen;\\n    while (chunkOffset < chunkLen) {\\n      inputLen = Math.min(chunkLen - chunkOffset, this._maxChunkLen - turnOffset);\\n      this._write(chunk, chunkOffset, inputLen, turnOffset);\\n      turnOffset += inputLen;\\n      chunkOffset += inputLen;\\n      if (turnOffset === this._maxChunkLen) {\\n        this._core.hash(this._maxChunkLen, this._padMaxChunkLen);\\n        turnOffset = 0;\\n      }\\n    }\\n    return this;\\n  };\\n\\n  Rusha.prototype.getState = function getState() {\\n    var turnOffset = this._offset % this._maxChunkLen;\\n    var heap = void 0;\\n    if (!turnOffset) {\\n      var io = new Int32Array(this._heap, this._padMaxChunkLen + 320, 5);\\n      heap = io.buffer.slice(io.byteOffset, io.byteOffset + io.byteLength);\\n    } else {\\n      heap = this._heap.slice(0);\\n    }\\n    return {\\n      offset: this._offset,\\n      heap: heap\\n    };\\n  };\\n\\n  Rusha.prototype.setState = function setState(state) {\\n    this._offset = state.offset;\\n    if (state.heap.byteLength === 20) {\\n      var io = new Int32Array(this._heap, this._padMaxChunkLen + 320, 5);\\n      io.set(new Int32Array(state.heap));\\n    } else {\\n      this._h32.set(new Int32Array(state.heap));\\n    }\\n    return this;\\n  };\\n\\n  Rusha.prototype.rawEnd = function rawEnd() {\\n    var msgLen = this._offset;\\n    var chunkLen = msgLen % this._maxChunkLen;\\n    var padChunkLen = this._padChunk(chunkLen, msgLen);\\n    this._core.hash(padChunkLen, this._padMaxChunkLen);\\n    var result = getRawDigest(this._heap, this._padMaxChunkLen);\\n    this._initState(this._heap, this._padMaxChunkLen);\\n    return result;\\n  };\\n\\n  Rusha.prototype.end = function end() {\\n    return toHex(this.rawEnd().buffer);\\n  };\\n\\n  return Rusha;\\n}();\\n\\nmodule.exports = Rusha;\\nmodule.exports._core = RushaCore;\\n\\n/***/ }),\\n/* 1 */\\n/***/ (function(module, exports) {\\n\\n/* eslint-env commonjs, browser */\\n\\n//\\n// toHex\\n//\\n\\nvar precomputedHex = new Array(256);\\nfor (var i = 0; i < 256; i++) {\\n  precomputedHex[i] = (i < 0x10 ? '0' : '') + i.toString(16);\\n}\\n\\nmodule.exports.toHex = function (arrayBuffer) {\\n  var binarray = new Uint8Array(arrayBuffer);\\n  var res = new Array(arrayBuffer.byteLength);\\n  for (var _i = 0; _i < res.length; _i++) {\\n    res[_i] = precomputedHex[binarray[_i]];\\n  }\\n  return res.join('');\\n};\\n\\n//\\n// ceilHeapSize\\n//\\n\\nmodule.exports.ceilHeapSize = function (v) {\\n  // The asm.js spec says:\\n  // The heap object's byteLength must be either\\n  // 2^n for n in [12, 24) or 2^24 * n for n ≥ 1.\\n  // Also, byteLengths smaller than 2^16 are deprecated.\\n  var p = 0;\\n  // If v is smaller than 2^16, the smallest possible solution\\n  // is 2^16.\\n  if (v <= 65536) return 65536;\\n  // If v < 2^24, we round up to 2^n,\\n  // otherwise we round up to 2^24 * n.\\n  if (v < 16777216) {\\n    for (p = 1; p < v; p = p << 1) {}\\n  } else {\\n    for (p = 16777216; p < v; p += 16777216) {}\\n  }\\n  return p;\\n};\\n\\n//\\n// isDedicatedWorkerScope\\n//\\n\\nmodule.exports.isDedicatedWorkerScope = function (self) {\\n  var isRunningInWorker = 'WorkerGlobalScope' in self && self instanceof self.WorkerGlobalScope;\\n  var isRunningInSharedWorker = 'SharedWorkerGlobalScope' in self && self instanceof self.SharedWorkerGlobalScope;\\n  var isRunningInServiceWorker = 'ServiceWorkerGlobalScope' in self && self instanceof self.ServiceWorkerGlobalScope;\\n\\n  // Detects whether we run inside a dedicated worker or not.\\n  //\\n  // We can't just check for `DedicatedWorkerGlobalScope`, since IE11\\n  // has a bug where it only supports `WorkerGlobalScope`.\\n  //\\n  // Therefore, we consider us as running inside a dedicated worker\\n  // when we are running inside a worker, but not in a shared or service worker.\\n  //\\n  // When new types of workers are introduced, we will need to adjust this code.\\n  return isRunningInWorker && !isRunningInSharedWorker && !isRunningInServiceWorker;\\n};\\n\\n/***/ }),\\n/* 2 */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n/* eslint-env commonjs, worker */\\n\\nmodule.exports = function () {\\n  var Rusha = __webpack_require__(0);\\n\\n  var hashData = function (hasher, data, cb) {\\n    try {\\n      return cb(null, hasher.digest(data));\\n    } catch (e) {\\n      return cb(e);\\n    }\\n  };\\n\\n  var hashFile = function (hasher, readTotal, blockSize, file, cb) {\\n    var reader = new self.FileReader();\\n    reader.onloadend = function onloadend() {\\n      if (reader.error) {\\n        return cb(reader.error);\\n      }\\n      var buffer = reader.result;\\n      readTotal += reader.result.byteLength;\\n      try {\\n        hasher.append(buffer);\\n      } catch (e) {\\n        cb(e);\\n        return;\\n      }\\n      if (readTotal < file.size) {\\n        hashFile(hasher, readTotal, blockSize, file, cb);\\n      } else {\\n        cb(null, hasher.end());\\n      }\\n    };\\n    reader.readAsArrayBuffer(file.slice(readTotal, readTotal + blockSize));\\n  };\\n\\n  var workerBehaviourEnabled = true;\\n\\n  self.onmessage = function (event) {\\n    if (!workerBehaviourEnabled) {\\n      return;\\n    }\\n\\n    var data = event.data.data,\\n        file = event.data.file,\\n        id = event.data.id;\\n    if (typeof id === 'undefined') return;\\n    if (!file && !data) return;\\n    var blockSize = event.data.blockSize || 4 * 1024 * 1024;\\n    var hasher = new Rusha(blockSize);\\n    hasher.resetState();\\n    var done = function (err, hash) {\\n      if (!err) {\\n        self.postMessage({ id: id, hash: hash });\\n      } else {\\n        self.postMessage({ id: id, error: err.name });\\n      }\\n    };\\n    if (data) hashData(hasher, data, done);\\n    if (file) hashFile(hasher, 0, blockSize, file, done);\\n  };\\n\\n  return function () {\\n    workerBehaviourEnabled = false;\\n  };\\n};\\n\\n/***/ }),\\n/* 3 */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n/* eslint-env commonjs, browser */\\n\\nvar work = __webpack_require__(4);\\nvar Rusha = __webpack_require__(0);\\nvar createHash = __webpack_require__(7);\\nvar runWorker = __webpack_require__(2);\\n\\nvar _require = __webpack_require__(1),\\n    isDedicatedWorkerScope = _require.isDedicatedWorkerScope;\\n\\nvar isRunningInDedicatedWorker = typeof self !== 'undefined' && isDedicatedWorkerScope(self);\\n\\nRusha.disableWorkerBehaviour = isRunningInDedicatedWorker ? runWorker() : function () {};\\n\\nRusha.createWorker = function () {\\n  var worker = work(/*require.resolve*/(2));\\n  var terminate = worker.terminate;\\n  worker.terminate = function () {\\n    URL.revokeObjectURL(worker.objectURL);\\n    terminate.call(worker);\\n  };\\n  return worker;\\n};\\n\\nRusha.createHash = createHash;\\n\\nmodule.exports = Rusha;\\n\\n/***/ }),\\n/* 4 */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nfunction webpackBootstrapFunc (modules) {\\n/******/  // The module cache\\n/******/  var installedModules = {};\\n\\n/******/  // The require function\\n/******/  function __webpack_require__(moduleId) {\\n\\n/******/    // Check if module is in cache\\n/******/    if(installedModules[moduleId])\\n/******/      return installedModules[moduleId].exports;\\n\\n/******/    // Create a new module (and put it into the cache)\\n/******/    var module = installedModules[moduleId] = {\\n/******/      i: moduleId,\\n/******/      l: false,\\n/******/      exports: {}\\n/******/    };\\n\\n/******/    // Execute the module function\\n/******/    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n/******/    // Flag the module as loaded\\n/******/    module.l = true;\\n\\n/******/    // Return the exports of the module\\n/******/    return module.exports;\\n/******/  }\\n\\n/******/  // expose the modules object (__webpack_modules__)\\n/******/  __webpack_require__.m = modules;\\n\\n/******/  // expose the module cache\\n/******/  __webpack_require__.c = installedModules;\\n\\n/******/  // identity function for calling harmony imports with the correct context\\n/******/  __webpack_require__.i = function(value) { return value; };\\n\\n/******/  // define getter function for harmony exports\\n/******/  __webpack_require__.d = function(exports, name, getter) {\\n/******/    if(!__webpack_require__.o(exports, name)) {\\n/******/      Object.defineProperty(exports, name, {\\n/******/        configurable: false,\\n/******/        enumerable: true,\\n/******/        get: getter\\n/******/      });\\n/******/    }\\n/******/  };\\n\\n/******/  // define __esModule on exports\\n/******/  __webpack_require__.r = function(exports) {\\n/******/    Object.defineProperty(exports, '__esModule', { value: true });\\n/******/  };\\n\\n/******/  // getDefaultExport function for compatibility with non-harmony modules\\n/******/  __webpack_require__.n = function(module) {\\n/******/    var getter = module && module.__esModule ?\\n/******/      function getDefault() { return module['default']; } :\\n/******/      function getModuleExports() { return module; };\\n/******/    __webpack_require__.d(getter, 'a', getter);\\n/******/    return getter;\\n/******/  };\\n\\n/******/  // Object.prototype.hasOwnProperty.call\\n/******/  __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n/******/  // __webpack_public_path__\\n/******/  __webpack_require__.p = \\\"/\\\";\\n\\n/******/  // on error function for async loading\\n/******/  __webpack_require__.oe = function(err) { console.error(err); throw err; };\\n\\n  var f = __webpack_require__(__webpack_require__.s = ENTRY_MODULE)\\n  return f.default || f // try to call default if defined to also support babel esmodule exports\\n}\\n\\nvar moduleNameReqExp = '[\\\\\\\\.|\\\\\\\\-|\\\\\\\\+|\\\\\\\\w|\\\\/|@]+'\\nvar dependencyRegExp = '\\\\\\\\((\\\\/\\\\\\\\*.*?\\\\\\\\*\\\\/)?\\\\s?.*?(' + moduleNameReqExp + ').*?\\\\\\\\)' // additional chars when output.pathinfo is true\\n\\n// http://stackoverflow.com/a/2593661/130442\\nfunction quoteRegExp (str) {\\n  return (str + '').replace(/[.?*+^$[\\\\]\\\\\\\\(){}|-]/g, '\\\\\\\\$&')\\n}\\n\\nfunction getModuleDependencies (sources, module, queueName) {\\n  var retval = {}\\n  retval[queueName] = []\\n\\n  var fnString = module.toString()\\n  var wrapperSignature = fnString.match(/^function\\\\s?\\\\(\\\\w+,\\\\s*\\\\w+,\\\\s*(\\\\w+)\\\\)/)\\n  if (!wrapperSignature) return retval\\n  var webpackRequireName = wrapperSignature[1]\\n\\n  // main bundle deps\\n  var re = new RegExp('(\\\\\\\\\\\\\\\\n|\\\\\\\\W)' + quoteRegExp(webpackRequireName) + dependencyRegExp, 'g')\\n  var match\\n  while ((match = re.exec(fnString))) {\\n    if (match[3] === 'dll-reference') continue\\n    retval[queueName].push(match[3])\\n  }\\n\\n  // dll deps\\n  re = new RegExp('\\\\\\\\(' + quoteRegExp(webpackRequireName) + '\\\\\\\\(\\\"(dll-reference\\\\\\\\s(' + moduleNameReqExp + '))\\\"\\\\\\\\)\\\\\\\\)' + dependencyRegExp, 'g')\\n  while ((match = re.exec(fnString))) {\\n    if (!sources[match[2]]) {\\n      retval[queueName].push(match[1])\\n      sources[match[2]] = __webpack_require__(match[1]).m\\n    }\\n    retval[match[2]] = retval[match[2]] || []\\n    retval[match[2]].push(match[4])\\n  }\\n\\n  return retval\\n}\\n\\nfunction hasValuesInQueues (queues) {\\n  var keys = Object.keys(queues)\\n  return keys.reduce(function (hasValues, key) {\\n    return hasValues || queues[key].length > 0\\n  }, false)\\n}\\n\\nfunction getRequiredModules (sources, moduleId) {\\n  var modulesQueue = {\\n    main: [moduleId]\\n  }\\n  var requiredModules = {\\n    main: []\\n  }\\n  var seenModules = {\\n    main: {}\\n  }\\n\\n  while (hasValuesInQueues(modulesQueue)) {\\n    var queues = Object.keys(modulesQueue)\\n    for (var i = 0; i < queues.length; i++) {\\n      var queueName = queues[i]\\n      var queue = modulesQueue[queueName]\\n      var moduleToCheck = queue.pop()\\n      seenModules[queueName] = seenModules[queueName] || {}\\n      if (seenModules[queueName][moduleToCheck] || !sources[queueName][moduleToCheck]) continue\\n      seenModules[queueName][moduleToCheck] = true\\n      requiredModules[queueName] = requiredModules[queueName] || []\\n      requiredModules[queueName].push(moduleToCheck)\\n      var newModules = getModuleDependencies(sources, sources[queueName][moduleToCheck], queueName)\\n      var newModulesKeys = Object.keys(newModules)\\n      for (var j = 0; j < newModulesKeys.length; j++) {\\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]] || []\\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]].concat(newModules[newModulesKeys[j]])\\n      }\\n    }\\n  }\\n\\n  return requiredModules\\n}\\n\\nmodule.exports = function (moduleId, options) {\\n  options = options || {}\\n  var sources = {\\n    main: __webpack_require__.m\\n  }\\n\\n  var requiredModules = options.all ? { main: Object.keys(sources) } : getRequiredModules(sources, moduleId)\\n\\n  var src = ''\\n\\n  Object.keys(requiredModules).filter(function (m) { return m !== 'main' }).forEach(function (module) {\\n    var entryModule = 0\\n    while (requiredModules[module][entryModule]) {\\n      entryModule++\\n    }\\n    requiredModules[module].push(entryModule)\\n    sources[module][entryModule] = '(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })'\\n    src = src + 'var ' + module + ' = (' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(entryModule)) + ')({' + requiredModules[module].map(function (id) { return '' + JSON.stringify(id) + ': ' + sources[module][id].toString() }).join(',') + '});\\\\n'\\n  })\\n\\n  src = src + '(' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(moduleId)) + ')({' + requiredModules.main.map(function (id) { return '' + JSON.stringify(id) + ': ' + sources.main[id].toString() }).join(',') + '})(self);'\\n\\n  var blob = new window.Blob([src], { type: 'text/javascript' })\\n  if (options.bare) { return blob }\\n\\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL\\n\\n  var workerUrl = URL.createObjectURL(blob)\\n  var worker = new window.Worker(workerUrl)\\n  worker.objectURL = workerUrl\\n\\n  return worker\\n}\\n\\n\\n/***/ }),\\n/* 5 */\\n/***/ (function(module, exports) {\\n\\n// The low-level RushCore module provides the heart of Rusha,\\n// a high-speed sha1 implementation working on an Int32Array heap.\\n// At first glance, the implementation seems complicated, however\\n// with the SHA1 spec at hand, it is obvious this almost a textbook\\n// implementation that has a few functions hand-inlined and a few loops\\n// hand-unrolled.\\nmodule.exports = function RushaCore(stdlib$846, foreign$847, heap$848) {\\n    'use asm';\\n    var H$849 = new stdlib$846.Int32Array(heap$848);\\n    function hash$850(k$851, x$852) {\\n        // k in bytes\\n        k$851 = k$851 | 0;\\n        x$852 = x$852 | 0;\\n        var i$853 = 0, j$854 = 0, y0$855 = 0, z0$856 = 0, y1$857 = 0, z1$858 = 0, y2$859 = 0, z2$860 = 0, y3$861 = 0, z3$862 = 0, y4$863 = 0, z4$864 = 0, t0$865 = 0, t1$866 = 0;\\n        y0$855 = H$849[x$852 + 320 >> 2] | 0;\\n        y1$857 = H$849[x$852 + 324 >> 2] | 0;\\n        y2$859 = H$849[x$852 + 328 >> 2] | 0;\\n        y3$861 = H$849[x$852 + 332 >> 2] | 0;\\n        y4$863 = H$849[x$852 + 336 >> 2] | 0;\\n        for (i$853 = 0; (i$853 | 0) < (k$851 | 0); i$853 = i$853 + 64 | 0) {\\n            z0$856 = y0$855;\\n            z1$858 = y1$857;\\n            z2$860 = y2$859;\\n            z3$862 = y3$861;\\n            z4$864 = y4$863;\\n            for (j$854 = 0; (j$854 | 0) < 64; j$854 = j$854 + 4 | 0) {\\n                t1$866 = H$849[i$853 + j$854 >> 2] | 0;\\n                t0$865 = ((y0$855 << 5 | y0$855 >>> 27) + (y1$857 & y2$859 | ~y1$857 & y3$861) | 0) + ((t1$866 + y4$863 | 0) + 1518500249 | 0) | 0;\\n                y4$863 = y3$861;\\n                y3$861 = y2$859;\\n                y2$859 = y1$857 << 30 | y1$857 >>> 2;\\n                y1$857 = y0$855;\\n                y0$855 = t0$865;\\n                H$849[k$851 + j$854 >> 2] = t1$866;\\n            }\\n            for (j$854 = k$851 + 64 | 0; (j$854 | 0) < (k$851 + 80 | 0); j$854 = j$854 + 4 | 0) {\\n                t1$866 = (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) << 1 | (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) >>> 31;\\n                t0$865 = ((y0$855 << 5 | y0$855 >>> 27) + (y1$857 & y2$859 | ~y1$857 & y3$861) | 0) + ((t1$866 + y4$863 | 0) + 1518500249 | 0) | 0;\\n                y4$863 = y3$861;\\n                y3$861 = y2$859;\\n                y2$859 = y1$857 << 30 | y1$857 >>> 2;\\n                y1$857 = y0$855;\\n                y0$855 = t0$865;\\n                H$849[j$854 >> 2] = t1$866;\\n            }\\n            for (j$854 = k$851 + 80 | 0; (j$854 | 0) < (k$851 + 160 | 0); j$854 = j$854 + 4 | 0) {\\n                t1$866 = (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) << 1 | (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) >>> 31;\\n                t0$865 = ((y0$855 << 5 | y0$855 >>> 27) + (y1$857 ^ y2$859 ^ y3$861) | 0) + ((t1$866 + y4$863 | 0) + 1859775393 | 0) | 0;\\n                y4$863 = y3$861;\\n                y3$861 = y2$859;\\n                y2$859 = y1$857 << 30 | y1$857 >>> 2;\\n                y1$857 = y0$855;\\n                y0$855 = t0$865;\\n                H$849[j$854 >> 2] = t1$866;\\n            }\\n            for (j$854 = k$851 + 160 | 0; (j$854 | 0) < (k$851 + 240 | 0); j$854 = j$854 + 4 | 0) {\\n                t1$866 = (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) << 1 | (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) >>> 31;\\n                t0$865 = ((y0$855 << 5 | y0$855 >>> 27) + (y1$857 & y2$859 | y1$857 & y3$861 | y2$859 & y3$861) | 0) + ((t1$866 + y4$863 | 0) - 1894007588 | 0) | 0;\\n                y4$863 = y3$861;\\n                y3$861 = y2$859;\\n                y2$859 = y1$857 << 30 | y1$857 >>> 2;\\n                y1$857 = y0$855;\\n                y0$855 = t0$865;\\n                H$849[j$854 >> 2] = t1$866;\\n            }\\n            for (j$854 = k$851 + 240 | 0; (j$854 | 0) < (k$851 + 320 | 0); j$854 = j$854 + 4 | 0) {\\n                t1$866 = (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) << 1 | (H$849[j$854 - 12 >> 2] ^ H$849[j$854 - 32 >> 2] ^ H$849[j$854 - 56 >> 2] ^ H$849[j$854 - 64 >> 2]) >>> 31;\\n                t0$865 = ((y0$855 << 5 | y0$855 >>> 27) + (y1$857 ^ y2$859 ^ y3$861) | 0) + ((t1$866 + y4$863 | 0) - 899497514 | 0) | 0;\\n                y4$863 = y3$861;\\n                y3$861 = y2$859;\\n                y2$859 = y1$857 << 30 | y1$857 >>> 2;\\n                y1$857 = y0$855;\\n                y0$855 = t0$865;\\n                H$849[j$854 >> 2] = t1$866;\\n            }\\n            y0$855 = y0$855 + z0$856 | 0;\\n            y1$857 = y1$857 + z1$858 | 0;\\n            y2$859 = y2$859 + z2$860 | 0;\\n            y3$861 = y3$861 + z3$862 | 0;\\n            y4$863 = y4$863 + z4$864 | 0;\\n        }\\n        H$849[x$852 + 320 >> 2] = y0$855;\\n        H$849[x$852 + 324 >> 2] = y1$857;\\n        H$849[x$852 + 328 >> 2] = y2$859;\\n        H$849[x$852 + 332 >> 2] = y3$861;\\n        H$849[x$852 + 336 >> 2] = y4$863;\\n    }\\n    return { hash: hash$850 };\\n};\\n\\n/***/ }),\\n/* 6 */\\n/***/ (function(module, exports) {\\n\\nvar _this = this;\\n\\n/* eslint-env commonjs, browser */\\n\\nvar reader = void 0;\\nif (typeof self !== 'undefined' && typeof self.FileReaderSync !== 'undefined') {\\n  reader = new self.FileReaderSync();\\n}\\n\\n// Convert a binary string and write it to the heap.\\n// A binary string is expected to only contain char codes < 256.\\nvar convStr = function (str, H8, H32, start, len, off) {\\n  var i = void 0,\\n      om = off % 4,\\n      lm = (len + om) % 4,\\n      j = len - lm;\\n  switch (om) {\\n    case 0:\\n      H8[off] = str.charCodeAt(start + 3);\\n    case 1:\\n      H8[off + 1 - (om << 1) | 0] = str.charCodeAt(start + 2);\\n    case 2:\\n      H8[off + 2 - (om << 1) | 0] = str.charCodeAt(start + 1);\\n    case 3:\\n      H8[off + 3 - (om << 1) | 0] = str.charCodeAt(start);\\n  }\\n  if (len < lm + (4 - om)) {\\n    return;\\n  }\\n  for (i = 4 - om; i < j; i = i + 4 | 0) {\\n    H32[off + i >> 2] = str.charCodeAt(start + i) << 24 | str.charCodeAt(start + i + 1) << 16 | str.charCodeAt(start + i + 2) << 8 | str.charCodeAt(start + i + 3);\\n  }\\n  switch (lm) {\\n    case 3:\\n      H8[off + j + 1 | 0] = str.charCodeAt(start + j + 2);\\n    case 2:\\n      H8[off + j + 2 | 0] = str.charCodeAt(start + j + 1);\\n    case 1:\\n      H8[off + j + 3 | 0] = str.charCodeAt(start + j);\\n  }\\n};\\n\\n// Convert a buffer or array and write it to the heap.\\n// The buffer or array is expected to only contain elements < 256.\\nvar convBuf = function (buf, H8, H32, start, len, off) {\\n  var i = void 0,\\n      om = off % 4,\\n      lm = (len + om) % 4,\\n      j = len - lm;\\n  switch (om) {\\n    case 0:\\n      H8[off] = buf[start + 3];\\n    case 1:\\n      H8[off + 1 - (om << 1) | 0] = buf[start + 2];\\n    case 2:\\n      H8[off + 2 - (om << 1) | 0] = buf[start + 1];\\n    case 3:\\n      H8[off + 3 - (om << 1) | 0] = buf[start];\\n  }\\n  if (len < lm + (4 - om)) {\\n    return;\\n  }\\n  for (i = 4 - om; i < j; i = i + 4 | 0) {\\n    H32[off + i >> 2 | 0] = buf[start + i] << 24 | buf[start + i + 1] << 16 | buf[start + i + 2] << 8 | buf[start + i + 3];\\n  }\\n  switch (lm) {\\n    case 3:\\n      H8[off + j + 1 | 0] = buf[start + j + 2];\\n    case 2:\\n      H8[off + j + 2 | 0] = buf[start + j + 1];\\n    case 1:\\n      H8[off + j + 3 | 0] = buf[start + j];\\n  }\\n};\\n\\nvar convBlob = function (blob, H8, H32, start, len, off) {\\n  var i = void 0,\\n      om = off % 4,\\n      lm = (len + om) % 4,\\n      j = len - lm;\\n  var buf = new Uint8Array(reader.readAsArrayBuffer(blob.slice(start, start + len)));\\n  switch (om) {\\n    case 0:\\n      H8[off] = buf[3];\\n    case 1:\\n      H8[off + 1 - (om << 1) | 0] = buf[2];\\n    case 2:\\n      H8[off + 2 - (om << 1) | 0] = buf[1];\\n    case 3:\\n      H8[off + 3 - (om << 1) | 0] = buf[0];\\n  }\\n  if (len < lm + (4 - om)) {\\n    return;\\n  }\\n  for (i = 4 - om; i < j; i = i + 4 | 0) {\\n    H32[off + i >> 2 | 0] = buf[i] << 24 | buf[i + 1] << 16 | buf[i + 2] << 8 | buf[i + 3];\\n  }\\n  switch (lm) {\\n    case 3:\\n      H8[off + j + 1 | 0] = buf[j + 2];\\n    case 2:\\n      H8[off + j + 2 | 0] = buf[j + 1];\\n    case 1:\\n      H8[off + j + 3 | 0] = buf[j];\\n  }\\n};\\n\\nmodule.exports = function (data, H8, H32, start, len, off) {\\n  if (typeof data === 'string') {\\n    return convStr(data, H8, H32, start, len, off);\\n  }\\n  if (data instanceof Array) {\\n    return convBuf(data, H8, H32, start, len, off);\\n  }\\n  // Safely doing a Buffer check using \\\"this\\\" to avoid Buffer polyfill to be included in the dist\\n  if (_this && _this.Buffer && _this.Buffer.isBuffer(data)) {\\n    return convBuf(data, H8, H32, start, len, off);\\n  }\\n  if (data instanceof ArrayBuffer) {\\n    return convBuf(new Uint8Array(data), H8, H32, start, len, off);\\n  }\\n  if (data.buffer instanceof ArrayBuffer) {\\n    return convBuf(new Uint8Array(data.buffer, data.byteOffset, data.byteLength), H8, H32, start, len, off);\\n  }\\n  if (data instanceof Blob) {\\n    return convBlob(data, H8, H32, start, len, off);\\n  }\\n  throw new Error('Unsupported data type.');\\n};\\n\\n/***/ }),\\n/* 7 */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\n/* eslint-env commonjs, browser */\\n\\nvar Rusha = __webpack_require__(0);\\n\\nvar _require = __webpack_require__(1),\\n    toHex = _require.toHex;\\n\\nvar Hash = function () {\\n  function Hash() {\\n    _classCallCheck(this, Hash);\\n\\n    this._rusha = new Rusha();\\n    this._rusha.resetState();\\n  }\\n\\n  Hash.prototype.update = function update(data) {\\n    this._rusha.append(data);\\n    return this;\\n  };\\n\\n  Hash.prototype.digest = function digest(encoding) {\\n    var digest = this._rusha.rawEnd().buffer;\\n    if (!encoding) {\\n      return digest;\\n    }\\n    if (encoding === 'hex') {\\n      return toHex(digest);\\n    }\\n    throw new Error('unsupported digest encoding');\\n  };\\n\\n  return Hash;\\n}();\\n\\nmodule.exports = function () {\\n  return new Hash();\\n};\\n\\n/***/ })\\n/******/ ]);\\n});\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/split-on-first/index.js\\\":\\n/*!**********************************************!*\\\\\\n  !*** ./node_modules/split-on-first/index.js ***!\\n  \\\\**********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\n\\nmodule.exports = (string, separator) => {\\n\\tif (!(typeof string === 'string' && typeof separator === 'string')) {\\n\\t\\tthrow new TypeError('Expected the arguments to be of type `string`');\\n\\t}\\n\\n\\tif (separator === '') {\\n\\t\\treturn [string];\\n\\t}\\n\\n\\tconst separatorIndex = string.indexOf(separator);\\n\\n\\tif (separatorIndex === -1) {\\n\\t\\treturn [string];\\n\\t}\\n\\n\\treturn [\\n\\t\\tstring.slice(0, separatorIndex),\\n\\t\\tstring.slice(separatorIndex + separator.length)\\n\\t];\\n};\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/strict-uri-encode/index.js\\\":\\n/*!*************************************************!*\\\\\\n  !*** ./node_modules/strict-uri-encode/index.js ***!\\n  \\\\*************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n\\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/webpack-strip-block/index.js?!./src/js/webworkers/compression.worker.js\\\":\\n/*!**********************************************************************************************!*\\\\\\n  !*** ./node_modules/webpack-strip-block??ref--7-0!./src/js/webworkers/compression.worker.js ***!\\n  \\\\**********************************************************************************************/\\n/*! no exports provided */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _core_lzstring__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/lzstring */ \\\"./src/js/core/lzstring.js\\\");\\n/* harmony import */ var _core_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/config */ \\\"./src/js/core/config.js\\\");\\n/* harmony import */ var _core_sensitive_utils_encrypt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/sensitive_utils.encrypt */ \\\"./src/js/core/sensitive_utils.encrypt.js\\\");\\n\\r\\n\\r\\n\\r\\n\\r\\nfunction accessNestedPropertyReverse(obj, keys) {\\r\\n    let result = obj;\\r\\n    for (let i = keys.length - 1; i >= 0; --i) {\\r\\n        result = result[keys[i]];\\r\\n    }\\r\\n    return result;\\r\\n}\\r\\n\\r\\nconst salt = accessNestedPropertyReverse(_core_config__WEBPACK_IMPORTED_MODULE_1__[\\\"globalConfig\\\"], [\\\"file\\\", \\\"info\\\"]);\\r\\n\\r\\nonmessage = function ({ data: { jobId, job, data } }) {\\r\\n    const result = performJob(job, data);\\r\\n    postMessage({ jobId, result });\\r\\n};\\r\\n\\r\\nfunction performJob(job, data) {\\r\\n    switch (job) {\\r\\n        case \\\"compressX64\\\": {\\r\\n            return Object(_core_lzstring__WEBPACK_IMPORTED_MODULE_0__[\\\"compressX64\\\"])(data);\\r\\n        }\\r\\n        case \\\"compressFile\\\": {\\r\\n            const checksum = Object(_core_sensitive_utils_encrypt__WEBPACK_IMPORTED_MODULE_2__[\\\"sha1\\\"])(data.text + salt);\\r\\n            return data.compressionPrefix + Object(_core_lzstring__WEBPACK_IMPORTED_MODULE_0__[\\\"compressX64\\\"])(checksum + data.text);\\r\\n        }\\r\\n        default:\\r\\n            throw new Error(\\\"Webworker: Unknown job: \\\" + job);\\r\\n    }\\r\\n}\\r\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/js/core/config.js\\\":\\n/*!*******************************!*\\\\\\n  !*** ./src/js/core/config.js ***!\\n  \\\\*******************************/\\n/*! exports provided: IS_DEBUG, IS_DEMO, SUPPORT_TOUCH, THIRDPARTY_URLS, globalConfig, IS_MOBILE */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"IS_DEBUG\\\", function() { return IS_DEBUG; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"IS_DEMO\\\", function() { return IS_DEMO; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"SUPPORT_TOUCH\\\", function() { return SUPPORT_TOUCH; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"THIRDPARTY_URLS\\\", function() { return THIRDPARTY_URLS; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"globalConfig\\\", function() { return globalConfig; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"IS_MOBILE\\\", function() { return IS_MOBILE; });\\n/* harmony import */ var _query_parameters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query_parameters */ \\\"./src/js/core/query_parameters.js\\\");\\n\\r\\n\\r\\nconst IS_DEBUG =\\r\\n     true &&\\r\\n    typeof window !== \\\"undefined\\\" &&\\r\\n    window.location.port === \\\"3005\\\" &&\\r\\n    (window.location.host.indexOf(\\\"localhost:\\\") >= 0 || window.location.host.indexOf(\\\"192.168.0.\\\") >= 0) &&\\r\\n    window.location.search.indexOf(\\\"nodebug\\\") < 0;\\r\\n\\r\\nconst IS_DEMO = _query_parameters__WEBPACK_IMPORTED_MODULE_0__[\\\"queryParamOptions\\\"].fullVersion\\r\\n    ? false\\r\\n    : ( false) ||\\r\\n      (typeof window !== \\\"undefined\\\" && window.location.search.indexOf(\\\"demo\\\") >= 0);\\r\\n\\r\\nconst SUPPORT_TOUCH = false;\\r\\n\\r\\nconst smoothCanvas = true;\\r\\n\\r\\nconst THIRDPARTY_URLS = {\\r\\n    discord: \\\"https://discord.gg/HN7EVzV\\\",\\r\\n    github: \\\"https://github.com/tobspr/shapez.io\\\",\\r\\n    reddit: \\\"https://www.reddit.com/r/shapezio\\\",\\r\\n\\r\\n    standaloneStorePage: \\\"https://store.steampowered.com/app/1318690/shapezio/\\\",\\r\\n};\\r\\n\\r\\nconst globalConfig = {\\r\\n    // Size of a single tile in Pixels.\\r\\n    // NOTICE: Update webpack.production.config too!\\r\\n    tileSize: 32,\\r\\n    halfTileSize: 16,\\r\\n\\r\\n    // Which dpi the assets have\\r\\n    assetsDpi: 192 / 32,\\r\\n    assetsSharpness: 1.2,\\r\\n    shapesSharpness: 1.4,\\r\\n\\r\\n    // Production analytics\\r\\n    statisticsGraphDpi: 2.5,\\r\\n    statisticsGraphSlices: 100,\\r\\n    analyticsSliceDurationSeconds:  true ? 1 : undefined,\\r\\n\\r\\n    minimumTickRate: 25,\\r\\n    maximumTickRate: 500,\\r\\n\\r\\n    // Map\\r\\n    mapChunkSize: 16,\\r\\n    mapChunkPrerenderMinZoom: -1,\\r\\n    mapChunkOverviewMinZoom: 0.7,\\r\\n\\r\\n    // Belt speeds\\r\\n    // NOTICE: Update webpack.production.config too!\\r\\n    beltSpeedItemsPerSecond: 2,\\r\\n    minerSpeedItemsPerSecond: 0, // COMPUTED\\r\\n\\r\\n    beltItemSpacingByLayer: {\\r\\n        regular: 0.63,\\r\\n        wires: 0.4,\\r\\n    },\\r\\n\\r\\n    wiresSpeedItemsPerSecond: 6,\\r\\n\\r\\n    undergroundBeltMaxTilesByTier: [5, 8],\\r\\n\\r\\n    buildingSpeeds: {\\r\\n        cutter: 1 / 4,\\r\\n        cutterQuad: 1 / 4,\\r\\n        rotater: 1 / 1,\\r\\n        rotaterCCW: 1 / 1,\\r\\n        rotaterFL: 1 / 1,\\r\\n        painter: 1 / 6,\\r\\n        painterDouble: 1 / 8,\\r\\n        painterQuad: 1 / 8,\\r\\n        mixer: 1 / 5,\\r\\n        stacker: 1 / 6,\\r\\n        advancedProcessor: 1 / 3,\\r\\n    },\\r\\n\\r\\n    // Zooming\\r\\n    initialZoom: 1.9,\\r\\n    minZoomLevel: 0.1,\\r\\n    maxZoomLevel: 3,\\r\\n\\r\\n    // Global game speed\\r\\n    gameSpeed: 1,\\r\\n\\r\\n    warmupTimeSecondsFast: 0.1,\\r\\n    warmupTimeSecondsRegular: 1,\\r\\n\\r\\n    smoothing: {\\r\\n        smoothMainCanvas: smoothCanvas && true,\\r\\n        quality: \\\"low\\\", // Low is CRUCIAL for mobile performance!\\r\\n    },\\r\\n\\r\\n    rendering: {},\\r\\n    debug:  true ? __webpack_require__(/*! ./config.local */ \\\"./src/js/core/config.local.js\\\").default : undefined,\\r\\n\\r\\n    // Secret vars\\r\\n    info: {\\r\\n        // Binary file salt\\r\\n        file: \\\"Ec'])@^+*9zMevK3uMV4432x9%iK'=\\\",\\r\\n\\r\\n        // Savegame salt\\r\\n        sgSalt: \\\"}95Q3%8/.837Lqym_BJx%q7)pAHJbF\\\",\\r\\n\\r\\n        // Analytics key\\r\\n        analyticsApiKey: \\\"baf6a50f0cc7dfdec5a0e21c88a1c69a4b34bc4a\\\",\\r\\n    },\\r\\n};\\r\\n\\r\\nconst IS_MOBILE = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\\r\\n\\r\\n// Automatic calculations\\r\\nglobalConfig.minerSpeedItemsPerSecond = globalConfig.beltSpeedItemsPerSecond / 5;\\r\\n\\r\\n// Dynamic calculations\\r\\nif (globalConfig.debug.disableMapOverview) {\\r\\n    globalConfig.mapChunkOverviewMinZoom = 0;\\r\\n    globalConfig.mapChunkPrerenderMinZoom = 0;\\r\\n}\\r\\n\\r\\n// Stuff for making the trailer\\r\\nif ( true && globalConfig.debug.renderForTrailer) {\\r\\n    globalConfig.debug.framePausesBetweenTicks = 32;\\r\\n    // globalConfig.mapChunkOverviewMinZoom = 0.0;\\r\\n    // globalConfig.mapChunkPrerenderMinZoom = globalConfig.mapChunkOverviewMinZoom;\\r\\n    // globalConfig.debug.instantBelts = true;\\r\\n    // globalConfig.debug.instantProcessors = true;\\r\\n    // globalConfig.debug.instantMiners = true;\\r\\n    globalConfig.debug.disableSavegameWrite = true;\\r\\n    // globalConfig.beltSpeedItemsPerSecond *= 2;\\r\\n}\\r\\n\\r\\nif (globalConfig.debug.fastGameEnter) {\\r\\n    globalConfig.debug.noArtificalDelays = true;\\r\\n}\\r\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/js/core/config.local.js\\\":\\n/*!*************************************!*\\\\\\n  !*** ./src/js/core/config.local.js ***!\\n  \\\\*************************************/\\n/*! exports provided: default */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = ({\\r\\n    // You can set any debug options here!\\r\\n    /* dev:start */\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _fastGameEnter: \\\"Quickly enters the game and skips the main menu - good for fast iterating\\\",\\r\\n    fastGameEnter: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _noArtificialDelays: \\\"Skips any delays like transitions between states and such\\\",\\r\\n    noArtificialDelays: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _disableSavegameWrite: \\\"Disables writing of savegames, useful for testing the same savegame over and over\\\",\\r\\n    disableSavegameWrite: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _showEntityBounds: \\\"Shows bounds of all entities\\\",\\r\\n    showEntityBounds: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _showAcceptorEjectors: \\\"Shows arrows for every ejector / acceptor\\\",\\r\\n    showAcceptorEjectors: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _disableMusic: \\\"Disables the music (Overrides any setting, can cause weird behaviour)\\\",\\r\\n    disableMusic: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _doNotRenderStatics: \\\"Do not render static map entities (=most buildings)\\\",\\r\\n    doNotRenderStatics: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _disableZoomLimits: \\\"Allow to zoom freely without limits\\\",\\r\\n    disableZoomLimits: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _showChunkBorders: \\\"Shows a border arround every chunk\\\",\\r\\n    showChunkBorders: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _rewardsInstant: \\\"All rewards can be unlocked by passing just 1 of any shape\\\",\\r\\n    rewardsInstant: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _allBuildingsUnlocked: \\\"Unlocks all buildings\\\",\\r\\n    allBuildingsUnlocked: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _blueprintsNoCost: \\\"Disables cost of blueprints\\\",\\r\\n    blueprintsNoCost: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _upgradesNoCost: \\\"Disables cost of upgrades\\\",\\r\\n    upgradesNoCost: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _disableUnlockDialog: \\\"Disables the dialog when completing a level\\\",\\r\\n    disableUnlockDialog: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _disableLogicTicks: \\\"Disables the simulation - This effectively pauses the game.\\\",\\r\\n    disableLogicTicks: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _testClipping: \\\"Test the rendering if everything is clipped out properly\\\",\\r\\n    testClipping: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    // Allows to render slower, useful for recording at half speed to avoid stuttering\\r\\n    // framePausesBetweenTicks: 1,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _testTranslations: \\\"Replace all translations with emojis to see which texts are translateable\\\",\\r\\n    testTranslations: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _enableEntityInspector: \\\"Enables an inspector which shows information about the entity below the curosr\\\",\\r\\n    enableEntityInspector: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _testAds: \\\"Enables ads in the local build (normally they are deactivated there)\\\",\\r\\n    testAds: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _disableMapOverview: \\\"Disables the automatic switch to an overview when zooming out\\\",\\r\\n    disableMapOverview: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _disableUpgradeNotification: \\\"Disables the notification when there are new entries in the changelog since last played\\\",\\r\\n    disableUpgradeNotification: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _instantBelts: \\\"Makes belts almost infinitely fast\\\",\\r\\n    instantBelts: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _instantProcessors: \\\"Makes item processors almost infinitely fast\\\",\\r\\n    instantProcessors: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _instantMiners: \\\"Makes miners almost infinitely fast\\\",\\r\\n    instantMiners: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _resumeGameOnFastEnter: \\\"When using fastGameEnter, controls whether a new game is started or the last one is resumed\\\",\\r\\n    resumeGameOnFastEnter: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _renderForTrailer: \\\"Special option used to render the trailer\\\",\\r\\n    renderForTrailer: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _renderChanges: \\\"Whether to render changes\\\",\\r\\n    renderChanges: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _renderBeltPaths: \\\"Whether to render belt paths\\\",\\r\\n    renderBeltPaths: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _checkBeltPaths: \\\"Whether to check belt paths\\\",\\r\\n    checkBeltPaths: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    _detailedStatistics: \\\"Whether to items / s instead of items / m in stats\\\",\\r\\n    detailedStatistics: false,\\r\\n    // -----------------------------------------------------------------------------------\\r\\n    /* dev:end */\\r\\n});\\r\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/js/core/lzstring.js\\\":\\n/*!*********************************!*\\\\\\n  !*** ./src/js/core/lzstring.js ***!\\n  \\\\*********************************/\\n/*! exports provided: compressU8, compressU8WHeader, decompressU8WHeader, compressX64, decompressX64 */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"compressU8\\\", function() { return compressU8; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"compressU8WHeader\\\", function() { return compressU8WHeader; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"decompressU8WHeader\\\", function() { return decompressU8WHeader; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"compressX64\\\", function() { return compressX64; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"decompressX64\\\", function() { return decompressX64; });\\n// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\\r\\n// This work is free. You can redistribute it and/or modify it\\r\\n// under the terms of the WTFPL, Version 2\\r\\n// For more information see LICENSE.txt or http://www.wtfpl.net/\\r\\n//\\r\\n// For more information, the home page:\\r\\n// http://pieroxy.net/blog/pages/lz-string/testing.html\\r\\n//\\r\\n// LZ-based compression algorithm, version 1.4.4\\r\\n\\r\\nconst fromCharCode = String.fromCharCode;\\r\\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\\r\\n\\r\\nconst keyStrUriSafe = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\\\";\\r\\nconst baseReverseDic = {};\\r\\n\\r\\nfunction getBaseValue(alphabet, character) {\\r\\n    if (!baseReverseDic[alphabet]) {\\r\\n        baseReverseDic[alphabet] = {};\\r\\n        for (let i = 0; i < alphabet.length; i++) {\\r\\n            baseReverseDic[alphabet][alphabet.charAt(i)] = i;\\r\\n        }\\r\\n    }\\r\\n    return baseReverseDic[alphabet][character];\\r\\n}\\r\\n\\r\\n//compress into uint8array (UCS-2 big endian format)\\r\\nfunction compressU8(uncompressed) {\\r\\n    let compressed = compress(uncompressed);\\r\\n    let buf = new Uint8Array(compressed.length * 2); // 2 bytes per character\\r\\n\\r\\n    for (let i = 0, TotalLen = compressed.length; i < TotalLen; i++) {\\r\\n        let current_value = compressed.charCodeAt(i);\\r\\n        buf[i * 2] = current_value >>> 8;\\r\\n        buf[i * 2 + 1] = current_value % 256;\\r\\n    }\\r\\n    return buf;\\r\\n}\\r\\n\\r\\n// Compreses with header\\r\\n/**\\r\\n * @param {string} uncompressed\\r\\n * @param {number} header\\r\\n */\\r\\nfunction compressU8WHeader(uncompressed, header) {\\r\\n    let compressed = compress(uncompressed);\\r\\n    let buf = new Uint8Array(2 + compressed.length * 2); // 2 bytes per character\\r\\n\\r\\n    buf[0] = header >>> 8;\\r\\n    buf[1] = header % 256;\\r\\n    for (let i = 0, TotalLen = compressed.length; i < TotalLen; i++) {\\r\\n        let current_value = compressed.charCodeAt(i);\\r\\n        buf[2 + i * 2] = current_value >>> 8;\\r\\n        buf[2 + i * 2 + 1] = current_value % 256;\\r\\n    }\\r\\n    return buf;\\r\\n}\\r\\n\\r\\n//decompress from uint8array (UCS-2 big endian format)\\r\\n/**\\r\\n *\\r\\n * @param {Uint8Array} compressed\\r\\n */\\r\\nfunction decompressU8WHeader(compressed) {\\r\\n    // let buf = new Array(compressed.length / 2); // 2 bytes per character\\r\\n    // for (let i = 0, TotalLen = buf.length; i < TotalLen; i++) {\\r\\n    //     buf[i] = compressed[i * 2] * 256 + compressed[i * 2 + 1];\\r\\n    // }\\r\\n\\r\\n    // let result = [];\\r\\n    // buf.forEach(function (c) {\\r\\n    //     result.push(fromCharCode(c));\\r\\n    // });\\r\\n    let result = [];\\r\\n    for (let i = 2, n = compressed.length; i < n; i += 2) {\\r\\n        const code = compressed[i] * 256 + compressed[i + 1];\\r\\n        result.push(fromCharCode(code));\\r\\n    }\\r\\n    return decompress(result.join(\\\"\\\"));\\r\\n}\\r\\n\\r\\n//compress into a string that is already URI encoded\\r\\nfunction compressX64(input) {\\r\\n    if (input == null) return \\\"\\\";\\r\\n    return _compress(input, 6, function (a) {\\r\\n        return keyStrUriSafe.charAt(a);\\r\\n    });\\r\\n}\\r\\n\\r\\n//decompress from an output of compressToEncodedURIComponent\\r\\nfunction decompressX64(input) {\\r\\n    if (input == null) return \\\"\\\";\\r\\n    if (input == \\\"\\\") return null;\\r\\n    input = input.replace(/ /g, \\\"+\\\");\\r\\n    return _decompress(input.length, 32, function (index) {\\r\\n        return getBaseValue(keyStrUriSafe, input.charAt(index));\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction compress(uncompressed) {\\r\\n    return _compress(uncompressed, 16, function (a) {\\r\\n        return fromCharCode(a);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction _compress(uncompressed, bitsPerChar, getCharFromInt) {\\r\\n    if (uncompressed == null) return \\\"\\\";\\r\\n    let i,\\r\\n        value,\\r\\n        context_dictionary = {},\\r\\n        context_dictionaryToCreate = {},\\r\\n        context_c = \\\"\\\",\\r\\n        context_wc = \\\"\\\",\\r\\n        context_w = \\\"\\\",\\r\\n        context_enlargeIn = 2, // Compensate for the first entry which should not count\\r\\n        context_dictSize = 3,\\r\\n        context_numBits = 2,\\r\\n        context_data = [],\\r\\n        context_data_val = 0,\\r\\n        context_data_position = 0,\\r\\n        ii;\\r\\n\\r\\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\\r\\n        context_c = uncompressed.charAt(ii);\\r\\n        if (!hasOwnProperty.call(context_dictionary, context_c)) {\\r\\n            context_dictionary[context_c] = context_dictSize++;\\r\\n            context_dictionaryToCreate[context_c] = true;\\r\\n        }\\r\\n\\r\\n        context_wc = context_w + context_c;\\r\\n        if (hasOwnProperty.call(context_dictionary, context_wc)) {\\r\\n            context_w = context_wc;\\r\\n        } else {\\r\\n            if (hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\\r\\n                if (context_w.charCodeAt(0) < 256) {\\r\\n                    for (i = 0; i < context_numBits; i++) {\\r\\n                        context_data_val = context_data_val << 1;\\r\\n                        if (context_data_position == bitsPerChar - 1) {\\r\\n                            context_data_position = 0;\\r\\n                            context_data.push(getCharFromInt(context_data_val));\\r\\n                            context_data_val = 0;\\r\\n                        } else {\\r\\n                            context_data_position++;\\r\\n                        }\\r\\n                    }\\r\\n                    value = context_w.charCodeAt(0);\\r\\n                    for (i = 0; i < 8; i++) {\\r\\n                        context_data_val = (context_data_val << 1) | (value & 1);\\r\\n                        if (context_data_position == bitsPerChar - 1) {\\r\\n                            context_data_position = 0;\\r\\n                            context_data.push(getCharFromInt(context_data_val));\\r\\n                            context_data_val = 0;\\r\\n                        } else {\\r\\n                            context_data_position++;\\r\\n                        }\\r\\n                        value = value >> 1;\\r\\n                    }\\r\\n                } else {\\r\\n                    value = 1;\\r\\n                    for (i = 0; i < context_numBits; i++) {\\r\\n                        context_data_val = (context_data_val << 1) | value;\\r\\n                        if (context_data_position == bitsPerChar - 1) {\\r\\n                            context_data_position = 0;\\r\\n                            context_data.push(getCharFromInt(context_data_val));\\r\\n                            context_data_val = 0;\\r\\n                        } else {\\r\\n                            context_data_position++;\\r\\n                        }\\r\\n                        value = 0;\\r\\n                    }\\r\\n                    value = context_w.charCodeAt(0);\\r\\n                    for (i = 0; i < 16; i++) {\\r\\n                        context_data_val = (context_data_val << 1) | (value & 1);\\r\\n                        if (context_data_position == bitsPerChar - 1) {\\r\\n                            context_data_position = 0;\\r\\n                            context_data.push(getCharFromInt(context_data_val));\\r\\n                            context_data_val = 0;\\r\\n                        } else {\\r\\n                            context_data_position++;\\r\\n                        }\\r\\n                        value = value >> 1;\\r\\n                    }\\r\\n                }\\r\\n                context_enlargeIn--;\\r\\n                if (context_enlargeIn == 0) {\\r\\n                    context_enlargeIn = Math.pow(2, context_numBits);\\r\\n                    context_numBits++;\\r\\n                }\\r\\n                delete context_dictionaryToCreate[context_w];\\r\\n            } else {\\r\\n                value = context_dictionary[context_w];\\r\\n                for (i = 0; i < context_numBits; i++) {\\r\\n                    context_data_val = (context_data_val << 1) | (value & 1);\\r\\n                    if (context_data_position == bitsPerChar - 1) {\\r\\n                        context_data_position = 0;\\r\\n                        context_data.push(getCharFromInt(context_data_val));\\r\\n                        context_data_val = 0;\\r\\n                    } else {\\r\\n                        context_data_position++;\\r\\n                    }\\r\\n                    value = value >> 1;\\r\\n                }\\r\\n            }\\r\\n            context_enlargeIn--;\\r\\n            if (context_enlargeIn == 0) {\\r\\n                context_enlargeIn = Math.pow(2, context_numBits);\\r\\n                context_numBits++;\\r\\n            }\\r\\n            // Add wc to the dictionary.\\r\\n            context_dictionary[context_wc] = context_dictSize++;\\r\\n            context_w = String(context_c);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Output the code for w.\\r\\n    if (context_w !== \\\"\\\") {\\r\\n        if (hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\\r\\n            if (context_w.charCodeAt(0) < 256) {\\r\\n                for (i = 0; i < context_numBits; i++) {\\r\\n                    context_data_val = context_data_val << 1;\\r\\n                    if (context_data_position == bitsPerChar - 1) {\\r\\n                        context_data_position = 0;\\r\\n                        context_data.push(getCharFromInt(context_data_val));\\r\\n                        context_data_val = 0;\\r\\n                    } else {\\r\\n                        context_data_position++;\\r\\n                    }\\r\\n                }\\r\\n                value = context_w.charCodeAt(0);\\r\\n                for (i = 0; i < 8; i++) {\\r\\n                    context_data_val = (context_data_val << 1) | (value & 1);\\r\\n                    if (context_data_position == bitsPerChar - 1) {\\r\\n                        context_data_position = 0;\\r\\n                        context_data.push(getCharFromInt(context_data_val));\\r\\n                        context_data_val = 0;\\r\\n                    } else {\\r\\n                        context_data_position++;\\r\\n                    }\\r\\n                    value = value >> 1;\\r\\n                }\\r\\n            } else {\\r\\n                value = 1;\\r\\n                for (i = 0; i < context_numBits; i++) {\\r\\n                    context_data_val = (context_data_val << 1) | value;\\r\\n                    if (context_data_position == bitsPerChar - 1) {\\r\\n                        context_data_position = 0;\\r\\n                        context_data.push(getCharFromInt(context_data_val));\\r\\n                        context_data_val = 0;\\r\\n                    } else {\\r\\n                        context_data_position++;\\r\\n                    }\\r\\n                    value = 0;\\r\\n                }\\r\\n                value = context_w.charCodeAt(0);\\r\\n                for (i = 0; i < 16; i++) {\\r\\n                    context_data_val = (context_data_val << 1) | (value & 1);\\r\\n                    if (context_data_position == bitsPerChar - 1) {\\r\\n                        context_data_position = 0;\\r\\n                        context_data.push(getCharFromInt(context_data_val));\\r\\n                        context_data_val = 0;\\r\\n                    } else {\\r\\n                        context_data_position++;\\r\\n                    }\\r\\n                    value = value >> 1;\\r\\n                }\\r\\n            }\\r\\n            context_enlargeIn--;\\r\\n            if (context_enlargeIn == 0) {\\r\\n                context_enlargeIn = Math.pow(2, context_numBits);\\r\\n                context_numBits++;\\r\\n            }\\r\\n            delete context_dictionaryToCreate[context_w];\\r\\n        } else {\\r\\n            value = context_dictionary[context_w];\\r\\n            for (i = 0; i < context_numBits; i++) {\\r\\n                context_data_val = (context_data_val << 1) | (value & 1);\\r\\n                if (context_data_position == bitsPerChar - 1) {\\r\\n                    context_data_position = 0;\\r\\n                    context_data.push(getCharFromInt(context_data_val));\\r\\n                    context_data_val = 0;\\r\\n                } else {\\r\\n                    context_data_position++;\\r\\n                }\\r\\n                value = value >> 1;\\r\\n            }\\r\\n        }\\r\\n        context_enlargeIn--;\\r\\n        if (context_enlargeIn == 0) {\\r\\n            context_enlargeIn = Math.pow(2, context_numBits);\\r\\n            context_numBits++;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Mark the end of the stream\\r\\n    value = 2;\\r\\n    for (i = 0; i < context_numBits; i++) {\\r\\n        context_data_val = (context_data_val << 1) | (value & 1);\\r\\n        if (context_data_position == bitsPerChar - 1) {\\r\\n            context_data_position = 0;\\r\\n            context_data.push(getCharFromInt(context_data_val));\\r\\n            context_data_val = 0;\\r\\n        } else {\\r\\n            context_data_position++;\\r\\n        }\\r\\n        value = value >> 1;\\r\\n    }\\r\\n\\r\\n    // Flush the last char\\r\\n    // eslint-disable-next-line no-constant-condition\\r\\n    while (true) {\\r\\n        context_data_val = context_data_val << 1;\\r\\n        if (context_data_position == bitsPerChar - 1) {\\r\\n            context_data.push(getCharFromInt(context_data_val));\\r\\n            break;\\r\\n        } else context_data_position++;\\r\\n    }\\r\\n    return context_data.join(\\\"\\\");\\r\\n}\\r\\n\\r\\nfunction decompress(compressed) {\\r\\n    if (compressed == null) return \\\"\\\";\\r\\n    if (compressed == \\\"\\\") return null;\\r\\n    return _decompress(compressed.length, 32768, function (index) {\\r\\n        return compressed.charCodeAt(index);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction _decompress(length, resetValue, getNextValue) {\\r\\n    let dictionary = [],\\r\\n        next,\\r\\n        enlargeIn = 4,\\r\\n        dictSize = 4,\\r\\n        numBits = 3,\\r\\n        entry = \\\"\\\",\\r\\n        result = [],\\r\\n        i,\\r\\n        w,\\r\\n        bits,\\r\\n        resb,\\r\\n        maxpower,\\r\\n        power,\\r\\n        c,\\r\\n        data = { val: getNextValue(0), position: resetValue, index: 1 };\\r\\n\\r\\n    for (i = 0; i < 3; i += 1) {\\r\\n        dictionary[i] = i;\\r\\n    }\\r\\n\\r\\n    bits = 0;\\r\\n    maxpower = Math.pow(2, 2);\\r\\n    power = 1;\\r\\n    while (power != maxpower) {\\r\\n        resb = data.val & data.position;\\r\\n        data.position >>= 1;\\r\\n        if (data.position == 0) {\\r\\n            data.position = resetValue;\\r\\n            data.val = getNextValue(data.index++);\\r\\n        }\\r\\n        bits |= (resb > 0 ? 1 : 0) * power;\\r\\n        power <<= 1;\\r\\n    }\\r\\n\\r\\n    switch ((next = bits)) {\\r\\n        case 0:\\r\\n            bits = 0;\\r\\n            maxpower = Math.pow(2, 8);\\r\\n            power = 1;\\r\\n            while (power != maxpower) {\\r\\n                resb = data.val & data.position;\\r\\n                data.position >>= 1;\\r\\n                if (data.position == 0) {\\r\\n                    data.position = resetValue;\\r\\n                    data.val = getNextValue(data.index++);\\r\\n                }\\r\\n                bits |= (resb > 0 ? 1 : 0) * power;\\r\\n                power <<= 1;\\r\\n            }\\r\\n            c = fromCharCode(bits);\\r\\n            break;\\r\\n        case 1:\\r\\n            bits = 0;\\r\\n            maxpower = Math.pow(2, 16);\\r\\n            power = 1;\\r\\n            while (power != maxpower) {\\r\\n                resb = data.val & data.position;\\r\\n                data.position >>= 1;\\r\\n                if (data.position == 0) {\\r\\n                    data.position = resetValue;\\r\\n                    data.val = getNextValue(data.index++);\\r\\n                }\\r\\n                bits |= (resb > 0 ? 1 : 0) * power;\\r\\n                power <<= 1;\\r\\n            }\\r\\n            c = fromCharCode(bits);\\r\\n            break;\\r\\n        case 2:\\r\\n            return \\\"\\\";\\r\\n    }\\r\\n    dictionary[3] = c;\\r\\n    w = c;\\r\\n    result.push(c);\\r\\n\\r\\n    // eslint-disable-next-line no-constant-condition\\r\\n    while (true) {\\r\\n        if (data.index > length) {\\r\\n            return \\\"\\\";\\r\\n        }\\r\\n\\r\\n        bits = 0;\\r\\n        maxpower = Math.pow(2, numBits);\\r\\n        power = 1;\\r\\n        while (power != maxpower) {\\r\\n            resb = data.val & data.position;\\r\\n            data.position >>= 1;\\r\\n            if (data.position == 0) {\\r\\n                data.position = resetValue;\\r\\n                data.val = getNextValue(data.index++);\\r\\n            }\\r\\n            bits |= (resb > 0 ? 1 : 0) * power;\\r\\n            power <<= 1;\\r\\n        }\\r\\n\\r\\n        switch ((c = bits)) {\\r\\n            case 0:\\r\\n                bits = 0;\\r\\n                maxpower = Math.pow(2, 8);\\r\\n                power = 1;\\r\\n                while (power != maxpower) {\\r\\n                    resb = data.val & data.position;\\r\\n                    data.position >>= 1;\\r\\n                    if (data.position == 0) {\\r\\n                        data.position = resetValue;\\r\\n                        data.val = getNextValue(data.index++);\\r\\n                    }\\r\\n                    bits |= (resb > 0 ? 1 : 0) * power;\\r\\n                    power <<= 1;\\r\\n                }\\r\\n\\r\\n                dictionary[dictSize++] = fromCharCode(bits);\\r\\n                c = dictSize - 1;\\r\\n                enlargeIn--;\\r\\n                break;\\r\\n            case 1:\\r\\n                bits = 0;\\r\\n                maxpower = Math.pow(2, 16);\\r\\n                power = 1;\\r\\n                while (power != maxpower) {\\r\\n                    resb = data.val & data.position;\\r\\n                    data.position >>= 1;\\r\\n                    if (data.position == 0) {\\r\\n                        data.position = resetValue;\\r\\n                        data.val = getNextValue(data.index++);\\r\\n                    }\\r\\n                    bits |= (resb > 0 ? 1 : 0) * power;\\r\\n                    power <<= 1;\\r\\n                }\\r\\n                dictionary[dictSize++] = fromCharCode(bits);\\r\\n                c = dictSize - 1;\\r\\n                enlargeIn--;\\r\\n                break;\\r\\n            case 2:\\r\\n                return result.join(\\\"\\\");\\r\\n        }\\r\\n\\r\\n        if (enlargeIn == 0) {\\r\\n            enlargeIn = Math.pow(2, numBits);\\r\\n            numBits++;\\r\\n        }\\r\\n\\r\\n        if (dictionary[c]) {\\r\\n            // @ts-ignore\\r\\n            entry = dictionary[c];\\r\\n        } else {\\r\\n            if (c === dictSize) {\\r\\n                entry = w + w.charAt(0);\\r\\n            } else {\\r\\n                return null;\\r\\n            }\\r\\n        }\\r\\n        result.push(entry);\\r\\n\\r\\n        // Add w+entry[0] to the dictionary.\\r\\n        dictionary[dictSize++] = w + entry.charAt(0);\\r\\n        enlargeIn--;\\r\\n\\r\\n        w = entry;\\r\\n\\r\\n        if (enlargeIn == 0) {\\r\\n            enlargeIn = Math.pow(2, numBits);\\r\\n            numBits++;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/js/core/query_parameters.js\\\":\\n/*!*****************************************!*\\\\\\n  !*** ./src/js/core/query_parameters.js ***!\\n  \\\\*****************************************/\\n/*! exports provided: queryParamOptions */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"queryParamOptions\\\", function() { return queryParamOptions; });\\nconst queryString = __webpack_require__(/*! query-string */ \\\"./node_modules/query-string/index.js\\\");\\r\\nconst options = queryString.parse(location.search);\\r\\n\\r\\nlet queryParamOptions = {\\r\\n    embedProvider: null,\\r\\n    fullVersion: false,\\r\\n    sandboxMode: false,\\r\\n};\\r\\n\\r\\nif (options.embed) {\\r\\n    queryParamOptions.embedProvider = options.embed;\\r\\n}\\r\\n\\r\\n// Allow testing full version outside of standalone\\r\\nif (options.fullVersion && !false) {\\r\\n    queryParamOptions.fullVersion = true;\\r\\n}\\r\\n\\r\\n// Allow testing full version outside of standalone\\r\\nif (options.sandboxMode && !false) {\\r\\n    queryParamOptions.sandboxMode = true;\\r\\n}\\r\\n\\n\\n/***/ }),\\n\\n/***/ \\\"./src/js/core/sensitive_utils.encrypt.js\\\":\\n/*!************************************************!*\\\\\\n  !*** ./src/js/core/sensitive_utils.encrypt.js ***!\\n  \\\\************************************************/\\n/*! exports provided: sha1, getNameOfProvider */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\n__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"sha1\\\", function() { return sha1; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"getNameOfProvider\\\", function() { return getNameOfProvider; });\\n/* harmony import */ var rusha__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rusha */ \\\"./node_modules/rusha/dist/rusha.js\\\");\\n/* harmony import */ var rusha__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rusha__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var _lzstring__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lzstring */ \\\"./src/js/core/lzstring.js\\\");\\n\\r\\n\\r\\n\\r\\n\\r\\nfunction sha1(str) {\\r\\n    return Object(rusha__WEBPACK_IMPORTED_MODULE_0__[\\\"createHash\\\"])().update(str).digest(\\\"hex\\\");\\r\\n}\\r\\n\\r\\n// Window.location.host\\r\\nfunction getNameOfProvider() {\\r\\n    return window[Object(_lzstring__WEBPACK_IMPORTED_MODULE_1__[\\\"decompressX64\\\"])(\\\"DYewxghgLgliB2Q\\\")][Object(_lzstring__WEBPACK_IMPORTED_MODULE_1__[\\\"decompressX64\\\"])(\\\"BYewzgLgdghgtgUyA\\\")];\\r\\n}\\r\\n\\n\\n/***/ })\\n\\n/******/ });\\n//# sourceMappingURL=622dae60f46e7d396a53.worker.js.map\", null);\n};","'use strict';\n\n// http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\nvar URL = window.URL || window.webkitURL;\n\nmodule.exports = function (content, url) {\n  try {\n    try {\n      var blob;\n\n      try {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        blob = new BlobBuilder();\n\n        blob.append(content);\n\n        blob = blob.getBlob();\n      } catch (e) {\n        // The proposed API\n        blob = new Blob([content]);\n      }\n\n      return new Worker(URL.createObjectURL(blob));\n    } catch (e) {\n      return new Worker('data:application/javascript,' + encodeURIComponent(content));\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error('Inline worker is not supported');\n    }\n\n    return new Worker(url);\n  }\n};","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","import { AnimationFrame } from \"./core/animation_frame\";\r\nimport { BackgroundResourcesLoader } from \"./core/background_resources_loader\";\r\nimport { IS_MOBILE } from \"./core/config\";\r\nimport { GameState } from \"./core/game_state\";\r\nimport { GLOBAL_APP, setGlobalApp } from \"./core/globals\";\r\nimport { InputDistributor } from \"./core/input_distributor\";\r\nimport { Loader } from \"./core/loader\";\r\nimport { createLogger, logSection } from \"./core/logging\";\r\nimport { StateManager } from \"./core/state_manager\";\r\nimport { TrackedState } from \"./core/tracked_state\";\r\nimport { getPlatformName, waitNextFrame } from \"./core/utils\";\r\nimport { Vector } from \"./core/vector\";\r\nimport { AdProviderInterface } from \"./platform/ad_provider\";\r\nimport { NoAdProvider } from \"./platform/ad_providers/no_ad_provider\";\r\nimport { AnalyticsInterface } from \"./platform/analytics\";\r\nimport { GoogleAnalyticsImpl } from \"./platform/browser/google_analytics\";\r\nimport { NoGameAnalytics } from \"./platform/browser/no_game_analytics\";\r\nimport { SoundImplBrowser } from \"./platform/browser/sound\";\r\nimport { PlatformWrapperImplBrowser } from \"./platform/browser/wrapper\";\r\nimport { PlatformWrapperImplElectron } from \"./platform/electron/wrapper\";\r\nimport { GameAnalyticsInterface } from \"./platform/game_analytics\";\r\nimport { SoundInterface } from \"./platform/sound\";\r\nimport { StorageInterface } from \"./platform/storage\";\r\nimport { PlatformWrapperInterface } from \"./platform/wrapper\";\r\nimport { ApplicationSettings } from \"./profile/application_settings\";\r\nimport { SavegameManager } from \"./savegame/savegame_manager\";\r\nimport { AboutState } from \"./states/about\";\r\nimport { ChangelogState } from \"./states/changelog\";\r\nimport { InGameState } from \"./states/ingame\";\r\nimport { KeybindingsState } from \"./states/keybindings\";\r\nimport { MainMenuState } from \"./states/main_menu\";\r\nimport { MobileWarningState } from \"./states/mobile_warning\";\r\nimport { PreloadState } from \"./states/preload\";\r\nimport { SettingsState } from \"./states/settings\";\r\nimport { ShapezGameAnalytics } from \"./platform/browser/game_analytics\";\r\n\r\nconst logger = createLogger(\"application\");\r\n\r\n// Set the name of the hidden property and the change event for visibility\r\nlet pageHiddenPropName, pageVisibilityEventName;\r\nif (typeof document.hidden !== \"undefined\") {\r\n    // Opera 12.10 and Firefox 18 and later support\r\n    pageHiddenPropName = \"hidden\";\r\n    pageVisibilityEventName = \"visibilitychange\";\r\n    // @ts-ignore\r\n} else if (typeof document.msHidden !== \"undefined\") {\r\n    pageHiddenPropName = \"msHidden\";\r\n    pageVisibilityEventName = \"msvisibilitychange\";\r\n    // @ts-ignore\r\n} else if (typeof document.webkitHidden !== \"undefined\") {\r\n    pageHiddenPropName = \"webkitHidden\";\r\n    pageVisibilityEventName = \"webkitvisibilitychange\";\r\n}\r\n\r\nexport class Application {\r\n    constructor() {\r\n        assert(!GLOBAL_APP, \"Tried to construct application twice\");\r\n        logger.log(\"Creating application, platform =\", getPlatformName());\r\n        setGlobalApp(this);\r\n\r\n        this.unloaded = false;\r\n\r\n        // Global stuff\r\n        this.settings = new ApplicationSettings(this);\r\n        this.ticker = new AnimationFrame();\r\n        this.stateMgr = new StateManager(this);\r\n        this.savegameMgr = new SavegameManager(this);\r\n        this.inputMgr = new InputDistributor(this);\r\n        this.backgroundResourceLoader = new BackgroundResourcesLoader(this);\r\n\r\n        // Platform dependent stuff\r\n\r\n        /** @type {StorageInterface} */\r\n        this.storage = null;\r\n\r\n        /** @type {SoundInterface} */\r\n        this.sound = null;\r\n\r\n        /** @type {PlatformWrapperInterface} */\r\n        this.platformWrapper = null;\r\n\r\n        /** @type {AdProviderInterface} */\r\n        this.adProvider = null;\r\n\r\n        /** @type {AnalyticsInterface} */\r\n        this.analytics = null;\r\n\r\n        /** @type {GameAnalyticsInterface} */\r\n        this.gameAnalytics = null;\r\n\r\n        this.initPlatformDependentInstances();\r\n\r\n        // Track if the window is focused (only relevant for browser)\r\n        this.focused = true;\r\n\r\n        // Track if the window is visible\r\n        this.pageVisible = true;\r\n\r\n        // Track if the app is paused (cordova)\r\n        this.applicationPaused = false;\r\n\r\n        /** @type {TypedTrackedState<boolean>} */\r\n        this.trackedIsRenderable = new TrackedState(this.onAppRenderableStateChanged, this);\r\n\r\n        // Dimensions\r\n        this.screenWidth = 0;\r\n        this.screenHeight = 0;\r\n\r\n        // Store the timestamp where we last checked for a screen resize, since orientationchange is unreliable with cordova\r\n        this.lastResizeCheck = null;\r\n\r\n        // Store the mouse position, or null if not available\r\n        /** @type {Vector|null} */\r\n        this.mousePosition = null;\r\n    }\r\n\r\n    /**\r\n     * Initializes all platform instances\r\n     */\r\n    initPlatformDependentInstances() {\r\n        logger.log(\"Creating platform dependent instances (standalone=\", G_IS_STANDALONE, \")\");\r\n\r\n        if (G_IS_STANDALONE) {\r\n            this.platformWrapper = new PlatformWrapperImplElectron(this);\r\n        } else {\r\n            this.platformWrapper = new PlatformWrapperImplBrowser(this);\r\n        }\r\n\r\n        // Start with empty ad provider\r\n        this.adProvider = new NoAdProvider(this);\r\n        this.sound = new SoundImplBrowser(this);\r\n        this.analytics = new GoogleAnalyticsImpl(this);\r\n        this.gameAnalytics = new ShapezGameAnalytics(this);\r\n    }\r\n\r\n    /**\r\n     * Registers all game states\r\n     */\r\n    registerStates() {\r\n        /** @type {Array<typeof GameState>} */\r\n        const states = [\r\n            PreloadState,\r\n            MobileWarningState,\r\n            MainMenuState,\r\n            InGameState,\r\n            SettingsState,\r\n            KeybindingsState,\r\n            AboutState,\r\n            ChangelogState,\r\n        ];\r\n\r\n        for (let i = 0; i < states.length; ++i) {\r\n            this.stateMgr.register(states[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Registers all event listeners\r\n     */\r\n    registerEventListeners() {\r\n        window.addEventListener(\"focus\", this.onFocus.bind(this));\r\n        window.addEventListener(\"blur\", this.onBlur.bind(this));\r\n\r\n        window.addEventListener(\"resize\", () => this.checkResize(), true);\r\n        window.addEventListener(\"orientationchange\", () => this.checkResize(), true);\r\n\r\n        if (!G_IS_MOBILE_APP && !IS_MOBILE) {\r\n            window.addEventListener(\"mousemove\", this.handleMousemove.bind(this));\r\n        }\r\n\r\n        // Unload events\r\n        window.addEventListener(\"beforeunload\", this.onBeforeUnload.bind(this), true);\r\n        window.addEventListener(\"unload\", this.onUnload.bind(this), true);\r\n\r\n        document.addEventListener(pageVisibilityEventName, this.handleVisibilityChange.bind(this), false);\r\n\r\n        // Track touches so we can update the focus appropriately\r\n        document.addEventListener(\"touchstart\", this.updateFocusAfterUserInteraction.bind(this), true);\r\n        document.addEventListener(\"touchend\", this.updateFocusAfterUserInteraction.bind(this), true);\r\n    }\r\n\r\n    /**\r\n     * Checks the focus after a touch\r\n     * @param {TouchEvent} event\r\n     */\r\n    updateFocusAfterUserInteraction(event) {\r\n        const target = /** @type {HTMLElement} */ (event.target);\r\n        if (!target || !target.tagName) {\r\n            // Safety check\r\n            logger.warn(\"Invalid touchstart/touchend event:\", event);\r\n            return;\r\n        }\r\n\r\n        // When clicking an element which is not the currently focused one, defocus it\r\n        if (target !== document.activeElement) {\r\n            // @ts-ignore\r\n            if (document.activeElement.blur) {\r\n                // @ts-ignore\r\n                document.activeElement.blur();\r\n            }\r\n        }\r\n\r\n        // If we click an input field, focus it now\r\n        if (target.tagName.toLowerCase() === \"input\") {\r\n            // We *really* need the focus\r\n            waitNextFrame().then(() => target.focus());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles a page visibility change event\r\n     * @param {Event} event\r\n     */\r\n    handleVisibilityChange(event) {\r\n        window.focus();\r\n        const pageVisible = !document[pageHiddenPropName];\r\n        if (pageVisible !== this.pageVisible) {\r\n            this.pageVisible = pageVisible;\r\n            logger.log(\"Visibility changed:\", this.pageVisible);\r\n            this.trackedIsRenderable.set(this.isRenderable());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles a mouse move event\r\n     * @param {MouseEvent} event\r\n     */\r\n    handleMousemove(event) {\r\n        this.mousePosition = new Vector(event.clientX, event.clientY);\r\n    }\r\n\r\n    /**\r\n     * Internal on focus handler\r\n     */\r\n    onFocus() {\r\n        this.focused = true;\r\n    }\r\n\r\n    /**\r\n     * Internal blur handler\r\n     */\r\n    onBlur() {\r\n        this.focused = false;\r\n    }\r\n\r\n    /**\r\n     * Returns if the app is currently visible\r\n     */\r\n    isRenderable() {\r\n        return !this.applicationPaused && this.pageVisible;\r\n    }\r\n\r\n    onAppRenderableStateChanged(renderable) {\r\n        logger.log(\"Application renderable:\", renderable);\r\n        window.focus();\r\n        const currentState = this.stateMgr.getCurrentState();\r\n        if (!renderable) {\r\n            if (currentState) {\r\n                currentState.onAppPause();\r\n            }\r\n        } else {\r\n            if (currentState) {\r\n                currentState.onAppResume();\r\n            }\r\n            this.checkResize();\r\n        }\r\n\r\n        this.sound.onPageRenderableStateChanged(renderable);\r\n    }\r\n\r\n    /**\r\n     * Internal unload handler\r\n     */\r\n    onUnload(event) {\r\n        if (!this.unloaded) {\r\n            logSection(\"UNLOAD HANDLER\", \"#f77\");\r\n            this.unloaded = true;\r\n            const currentState = this.stateMgr.getCurrentState();\r\n            if (currentState) {\r\n                currentState.onBeforeExit();\r\n            }\r\n            this.deinitialize();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal before-unload handler\r\n     */\r\n    onBeforeUnload(event) {\r\n        logSection(\"BEFORE UNLOAD HANDLER\", \"#f77\");\r\n        const currentState = this.stateMgr.getCurrentState();\r\n\r\n        if (!G_IS_DEV && currentState && currentState.getHasUnloadConfirmation()) {\r\n            if (!G_IS_STANDALONE) {\r\n                // Need to show a \"Are you sure you want to exit\"\r\n                event.preventDefault();\r\n                event.returnValue = \"Are you sure you want to exit?\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Boots the application\r\n     */\r\n    boot() {\r\n        console.log(\"Booting ...\");\r\n        this.registerStates();\r\n        this.registerEventListeners();\r\n\r\n        Loader.linkAppAfterBoot(this);\r\n\r\n        // Check for mobile\r\n        if (IS_MOBILE) {\r\n            this.stateMgr.moveToState(\"MobileWarningState\");\r\n        } else {\r\n            this.stateMgr.moveToState(\"PreloadState\");\r\n        }\r\n\r\n        // Starting rendering\r\n        this.ticker.frameEmitted.add(this.onFrameEmitted, this);\r\n        this.ticker.bgFrameEmitted.add(this.onBackgroundFrame, this);\r\n        this.ticker.start();\r\n\r\n        window.focus();\r\n    }\r\n\r\n    /**\r\n     * Deinitializes the application\r\n     */\r\n    deinitialize() {\r\n        return this.sound.deinitialize();\r\n    }\r\n\r\n    /**\r\n     * Background frame update callback\r\n     * @param {number} dt\r\n     */\r\n    onBackgroundFrame(dt) {\r\n        if (this.isRenderable()) {\r\n            return;\r\n        }\r\n\r\n        const currentState = this.stateMgr.getCurrentState();\r\n        if (currentState) {\r\n            currentState.onBackgroundTick(dt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Frame update callback\r\n     * @param {number} dt\r\n     */\r\n    onFrameEmitted(dt) {\r\n        if (!this.isRenderable()) {\r\n            return;\r\n        }\r\n\r\n        const time = performance.now();\r\n\r\n        // Periodically check for resizes, this is expensive (takes 2-3ms so only do it once in a while!)\r\n        if (!this.lastResizeCheck || time - this.lastResizeCheck > 1000) {\r\n            this.checkResize();\r\n            this.lastResizeCheck = time;\r\n        }\r\n\r\n        const currentState = this.stateMgr.getCurrentState();\r\n        if (currentState) {\r\n            currentState.onRender(dt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the app resized. Only does this once in a while\r\n     * @param {boolean} forceUpdate Forced update of the dimensions\r\n     */\r\n    checkResize(forceUpdate = false) {\r\n        const w = window.innerWidth;\r\n        const h = window.innerHeight;\r\n        if (this.screenWidth !== w || this.screenHeight !== h || forceUpdate) {\r\n            this.screenWidth = w;\r\n            this.screenHeight = h;\r\n            const currentState = this.stateMgr.getCurrentState();\r\n            if (currentState) {\r\n                currentState.onResized(this.screenWidth, this.screenHeight);\r\n            }\r\n\r\n            const scale = this.getEffectiveUiScale();\r\n            waitNextFrame().then(() => document.documentElement.style.setProperty(\"--ui-scale\", `${scale}`));\r\n            window.focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the effective ui sclae\r\n     */\r\n    getEffectiveUiScale() {\r\n        return this.platformWrapper.getUiScale() * this.settings.getInterfaceScaleValue();\r\n    }\r\n\r\n    /**\r\n     * Callback after ui scale has changed\r\n     */\r\n    updateAfterUiScaleChanged() {\r\n        this.checkResize(true);\r\n    }\r\n}\r\n","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4KABGBEDOAuCmBDAtgBUQc3pAXGUEEMAFgPYBOsAKvAB6y5TTGIAO8AXgHQCWpY8aGACuAOzAArYfAz9opAEbl4YAMalRccsJ7kwAMwCHSnqsRDWicojCJhsUskSweHK2AA2N1csSqeAM-iAJ5qjgo8on6B4gAmKvo8GMLWQmaxNgBunGDIhmmOrB7wEuYC4mK5bDaRiaI8DlyQADTghJCxPNDq5LEAMpEA1oyQACJdPbFgpIn+iB5gALRgAIUAwiwI3hrISaQAhC1tRB4aGDT0IwDaPMgYALrAAMpUAKIAggCyAPrvqKjfACSn3eAHFXgBfAD0dFgqShcAo8G+liw3wwPH0XAx+iuUNuDwAOpoWOxuHwBEJKlIZPwFOZELF+PBxF4wpo4cJVP4gmB4gZjORTGVLNZbPZHM5XO42T4kDyQmFkBEogq+QkkikyiyROInJYwABHaRgaAqOiWUT82qRBooFkILhgV6iOEyGxeISJZKpMDKY3wIUZCxWGyscikDDKaDuULxaAKU4B9zIEoUEWh8Wp10yrLwU7+DJTfmwYQCkxmLjE94LOzZ2C59VOK2IZpgUTwVSCO3kfKUsxePSl8tCsxgUU2RBSOBWBC2TxlDtd6A8IuCJarABy-DnpA8mVX6-5pyEylUKXk0DbS+7Dd7QgtiCtujnOvzYCuCnu+pqojqDVIPEv32YlRkEVhhAAS6EG8VzvPtUw4VRBzCU5o3HTNWEiO8Fy9TVfWWNZwkiGwzwvUghH5dQ0PXCMJFINtsl6FRQkQDhhAWCdxwjWIuV0PlMUDB112opEhFCLCcz0b0tRDMUYxcaB9D8QMFybJ8MirURXjgFQaVkNRpBzdkwAARgADnbHhsmKIQAAoVgARRNOdmwQK1e3EUhz0sJk+S1V0VDIVJ9gASnHQNmURUJ1A5J8EHrFREAAR8ZHgWT80RpEyfhYvc1d+GWFYAAlEFCZAuTIccvA7RkDmJIjkHDDTmQWfSdwy+9bG5QR+A9PNyBXXl1Ca4oGxMvKWQK2xOn8DR5jbRl4DySj30m+o-J1eMrAjDxTi0z97gANQdKcyniNrpAMkaingBwgPuYkrg8LpYEe8RCCuAAqe4wE+Ug-Io88I2JQgPx+sBUDEBxVr9eB9CE0Q5jAHgXt2BsmWgUHPoh9BKFXMpkisIsylR247WDbGIG+373mnBAhDSuaolsqnwd+1ByACWhbntQK8HWRBE3XUIXUDDAAFvEH2MB3nDUgeacDJEowsU6nmI89I4il+QAJgABgNrSwZpyGucVvmEDwT4+3qGzBDZ033mCAAv5WktNGQdD0bbyF2mq-OYNhOF4fhABNyQB4P6eqEXrgd7DoAMXsWTutLeZpWZwQHuJFYdIcVjVDTl63CtVrJCu-gKtY3IWWETaUcCnNS9NYQIj0Pwi4zvgO0ZhZswo3U8w4ec2TNZtpae2O3sdiHxgR5RAqEH9xPVGN9Alge7NYCgBAkZailIPBl5MxQ4EMc8T1CmeOeEDhbLAOyXTdDB+oMCgnDhgMg22CoojADh5rTHZFIV0-B+TwE6LMPgp5BBwkiBiTGV8PrUwhv9PyxBXoUB4DYN8CwAyeAHhAzEphoFgHci-X+YRdLXzAKCFkgY6o+xUMfWKMlrDCwfkRP8+F3BkUGhRNs+h36tjISgFKDF1SaAJrENsY9UZsnKvkJBJtUF9hcNvWGbDzA0M+GmX0-IF6dF2A6fgDl3hiHwe+dqYBgg2H0GIZmNgq5gAiCyMKNCVgAE1ciVUrvkECog8RT3jl+XOuly60kpOqNQAROgGSFulSgBxs6iDWMIeYxpElhmkFRDQcCFDezbLA0gBcXCZEtioSIOUPBcmsJtVk2wKobUZAIBu7kHCeHgKpBwwZcItywAvOYK9YorniNYIcAMyiem4qQCCsCRQ1S2MGJ06xCjaHgPSXIPBRHCwjNEqgyg9r8C4kxMhAN+CnGqk+Yh6R6qBK-C6Lwy4UnPVeu9FRv0rgpA8AAXmILAWArBoA4ChFCTo3QKCxC4CNfEogDwIChMVTcAB2V4R0OBHXuOMCFvRphQPmHib57ycafO+X8gFQKQVQjdEc6FjgoQKChICJ4jkkasAAFKoARKSTgfB7jFVIKUaJ2gGyEvIB4YlKDSXivJYC4FoKADuSquDKFiJ0WAdLkBQnINy4OHA+VPFbqq9VYqJU0K+TK-5cqqUYlgMQVumrqWn3DLqskod7hrFiXsAwRk5x2VBA0YqrdQqmslezD8ZKrWUtBba+1ChHUOAUNAF1Qc3V8AZacRlThdI6rhE+aAXgXAaGgFCAASh8UYnxXhcGQLEe4zs66TjIXUvi5BQ3R2CZANoEJWhEAwJm+YjACDtFOGlUQGARhrCsBQpkRwwaQEDBGcgIxXh+woHO9odrSDCBjFaaA4wDxjJGE0Xt7R4j+CcB4J48AJwOGXXgFoG6iDQGEPoRItAh3HE3WQHdGloAjGGKe+duw9rd3-Q+z4T72gRFA8WkYAAhKDRA4Gwc0CMKgXawY9q-ZAG09QEAjFqFByALhUyfrBkQDQ8Br2xViO8WQIwWBdl1J7ZIpckNQFoDRjQsRoD0dIIxlSYAAA8tAAB8rGxCYw45AKjnxIj2HgPxwTzHKi7Cyg4GTtB5MacEMph9TGVCiYk+piU-6gPtCowKlI+moCGcHmAYKiAtPWcGrZyA9njOOfTOZr9lGOyjDKu5+zlRYhSy04F4IfGGMGaE15sL5gZNmlo9AJ4wUGAPuE8lnj0AxO+Yo1AUzDN3hWm43utLFAMtQGE0VwQYn1Miey3uvLMmf1uatDpxTqX0sjGE213LxARO1dy+prTnWGa9fE1sjTFFMOEGw-OwY8AovkYoyRoW6H3iIYs0QPKu1J1UFLX0GT8wquQHeH0DDO2oCCDMOwFdTw1hJYwfoM7TxiqAgTldvzTBLBdge6gd4axAQAHk5sQAhN209HRlqkHg0+Dsg1VvIYaMUEYJ1BoxGieGaQ9JiPYQjCMFYIOFCwEguIKxFclS3Q6VxeMiZSDJgmb06ZZhrCF0DBLOAwpoCHCh20SAThIi6KysjqARQyojHZcIF+y6LOQDygp7AD6uEuCylYYjHYFWgntCMTc2V+DtWI6oFg478yRhGMVTBQp5jRLMMqaBxGX1KAgeqkYpbXcNHx01SrTxEDZBfmRh9gIfeUA1-L2ZLInjbvIF2K3roid5y1pEzWMS4l9VcUkw48vwWTAGKIYYD7r3kEPTvfk2LJh4pIYO+XxB8ysAOfmwtyuoArAbRkecebeL+HFQcYjSt4DweCCMMCMY117TquOHewm7BbvIIsF6BexPEaUKQBVZpyAAHUrD1HHUTvoch0qgLbOwPZlPIn2KRt3KwhhV5-YpDqYcUQA+MJliTsnFPLqRJumNfgYDbvTo2AbARipiqyvwWiBhH7Iw-53SIAno4Yxgv6ph9DwA2R67WTvjGZO7+7ujIGoH5gACqBeoga+og6BNkq8sU3kBUc2C2UAnQ8wkY4G+AOGBSAKcGeAw686pAheUAIOAA0jJhdHdC3pAPBhQOMjJmYEjPmJOk+F2IODJs3velADbEIHePEDJtGHeGdkdHuKcjgk1JwOHj9pANGHdO7vALaHMHLqYVgLAE8A2C2KcB2CMO-vQnoNYjAZptdjDmNPADrkHlAE8JBAQkaCaCwAxr4QePAAqgQawBkARg+hjqnOksXNEEEM9mvvEVGEtMwZACkamPRKkFkQqvwctiqJ0OOvkSkc4FOAPCWJ2F4LOl+nQUQLcNvJQH7kgfAKukumLijrAGjg+n0WXpUqHg2AqDJggJcA+gnPMJcrbh0ZVu4MOKKC4B3kTL0IyIgDgODmAG0VAMsV0TgYHtRlyMuMwVwZuqjqIXjBsTYFsSTCjBMTsdMbCOhmWOsQTGAE8TsY5jYKMvwMcRjD-GAJBDzI0PsYcZAGcQfoyPMajCkC3tcYMcMVAKMUwmoIAe8bMVANuJ7ACVPp0H5GzrLmpN8ZsektsRkHsa0fLqwroMgN0bgfAGBP4QMVAC4EMaIVwokOQE4HoAoBIXVLiWdgAP3Xo+j8D4KZJCRCDCl+yNiUmIAAD80J8uiBrJ7Jd03cmJnJJGtxIw8xRytgCwipkhvhMxZ2Jpix5pIpegbIKpvx1JJMdJWG8u2hs4HumSqqBp3J6JkAHu1hFI-o0gQYAmVpHxD6VAR+64+CygkQNhFJs4PxXEbAL0bOBCaQKAEQFETQ9JOGRCsA5RwQlR8C-pRpKuuZ2C7cDY9EsMCAyEopvh8YqgIwUMHgMYakTZbIdIpAsAvIF0fozgvIspOgDCjMK4GAUQ5AbYUUd2KgXE0hChVgBZHpOG5hJZFRkQVRGA0AfJTJUoGglZPJlhIZ7gdRDZ0SvZLZphbZK6iI6o1STEt+PSA8J4tg9ZDRKgt5fkHoA85SNEFgYxCMhcpAToqAO8ykOUc57I-JTg65828uS2ZZu58C0AHuZosAIOvBqJXJVZUA7w35jZTRk+iZ9Qcw0mrZt2++A8V5P5ZCZF6CT4poAEcMF5mMI8gFjB6EnR6oYFDgfOG586CMzgyJWFcChc3cp5gZGOQ0cQS56yeONF3QlupMjcGMfUPUYy84Yg3goYHO5AXOLgY4dkwmYlpYygYm4U+CJBlIsAt+4K289QHCOobITECl2OylcBqwXCoyDC0wpOHhAgX+10hQv+YBakEBQoLI0BEVsBwlyFOGVGLJcJ5MVW+FhpZ5D69xBMQgfxLOGVOx+Wa2D5Ree4xyOS647kqk+lqsDxLpxM-xr82Qw87lA0Xl-IOOGyvlKwUF0k-uFARSaMJEaktiAgPMukgUIgQVH+oVES4Vo0d0fehZ86wgCRzg5xyAgpw+nBphAZohKw+uqBk4hcaRXcQQ2e95tFIxiIQg8grIA89ueZq00Ax4NgLsHgpGQ84RWsL8uk7pyV61rAuR8YgIroPEXIRaZB+1BW2VgZo+DOTONcxRiWql7ZMZkyQg0yWiD1S51VFQY+UV9OSY0gKYeiZQywWWcIZwYmx1-+Wgwgti6hO6I4POtggUQoYk+wwmCItN46EmfQYY8yqU0SRRPmDlt+HVlImSf8L6p+fATCZ4LA0STp8UCxcBGpOG2a+6+YIhh5ApslvJGgCF7gFpd58N5VreecfYFtzcFUJuhCkCJCm8wm6g0MEmXEG+k1HcFEoUMs4ptt+N0p0SX8qkhmegxS6pa17QutaSsAhtyAxtk6ptR5egPQBGGNieZ8BQYeDtviD4Ltc09k7t26roXtmYPtdAft0AAdYAQdM4IdKQ-+BWbd45iS64kdDlpAMdIlcd5gB59gENL6b6JCDoSdKdKuadAphkDA2dD6DN441VFggY6ML4S57oUd4Shgvggdwdkmey-IHd8pYQYevefdwN0GNSN6Qoro0A24sARBBYS2sQU9+JjNyN5NfkPS-u4WC9rejUNOOCCwds74pkusJNggX9SAjpA8qANUFESVEOKFO5z41RENtN3eMN7952JFN5zF-ALsLgtkQht1GJYVO4cZPiTtjM+DjRzZfk+Cyk-gL0ThPZVgSAduxanI-EuRVo64RgFY5gKy7wxoEsAJrEHgbGAiEUey5gMgLs1gc4-INNEYgtN0EY9IcDdD9RpFjDpAfNWgdNvNSgYmwmZjIm6gVEno0APyAA5KheWeOvY2JmsIdn0HzdY-ABJgANSyxKlaBWB4DXrFDcjX4sa71IBcAWPkASZl02OD0ONOPoUuNibvafZUBeMAw+PWyGCNzL1dmT7LmVVZnlI25CDZDLgsZEJQIQWxPxPeNqC2PJNoN7muMXZZNQjeNiZ4AQ0xGUAqB9mxU5hqgfVpDYRlB5qaCdFaW+iiTpAiMNPa3zpyhbWfBWBLYqFZWHV64G5VCx6MLTG3GvBu4jHqophWC3K2FW3kNjAawsYkHKjKBsUzk3JSg5RtgNgO7k7L0QLriYDKCy7FAOZqN03NnZBGMC0YASb8j1VCICk2B2TC2GS25zLxi-EeHuAz6ObKD6A-KEgeYUrypQgxEKqBhcCpohx8CEuiLkD2EEuQDfCJhPiDCEtiaIDiN82IA2UrMD3kBbNgTICkADDowGnW2QDR6XLosiS+A+wDyCnXPrgy2eVY7dU+UrLv6-Pn5LU07HKZiKuMLrhkzox1S858tEAWi+5ygsjMADnb7kC74Tpw1ra7MjG0CzPuB3ZWU2DdUa0T5kNqUPqlQPV7gkJaUObetajY7+tsglhlj0hmiQXQVDVwXuTlCGSnR-V-MljNVCnmBOGvgNIKkKMFXWACPQArKvANzIQ7q5SpB16rFljtTIMHH87tHjq64utEApPoP7kg5MReB7UsHw3CvZAbOsAjD-RMRJb62FzwY6AeB7n5GhOdiOJ6BRPOa+GIisAIMqT1gj4lDuC5IFgmHw0RgNgIALuox7nu4DnuC1Ou0yYS5difAcTqKBlESnt6DlOO6+HKCeXwAg4jOXsyXB5wqBguCOk2BYKnRTGtldBCzFDmIODAdH6gcnkPqj4dzWSNiz6kCwejMxDTGRj9rwBBpv3BsJJsMPsLDFQEGjDPtPKD6Lu3vT3fsCDF18BSG+AIAbMCuBiTpysHPXNkMclYewLaC6DPsFvwDC1wDwY33hjYQdlb1gBfWkbHKINKHeSDDwb5iwDjBng4MPrvDSXlNXL1CzCMJ26TPqHlvJorFMglG+ES6iCI5PAKoNAm5PCHgjD9OQd8O6D-6cQ1TvPOdSH2CrvSWYdQBETn1SGzLBDRcmdxezK1lSHFBWApdgdQCitYTuBmhhPwemFYTsAAp3E8DldZ2mHQBeewAm7C3BCBj5FToO5evVD-qx27aVVI7dvtB+kPqlqCqRl2HKAsjo6BiaG+GJjSAjDvDsQeAybNdHIKrzeCnyKjfw0QTkC3QdlKM7dbumGqC2Kw1xfYJkG+EKoYJJFQCKfyFbdrYsuqC8GQCbgyCE6+EOK9cQIjCghChdf91EAFI3vwJ7tdgHv9e7bBDIQseg-jpHRWAXewD5GdndnCaoWV1igXvuD8XTLgpq4NiVNI-xSCDwHw1kCwCoXC0KCyExlkV4AY-LbL6+G1CkAXAo+cnPrsC-fJHm6FiMgcZEDltYDu5PhRE-bPp3qYCiE1hOBdhRDGKgJC9QBUaAgJSoCBhlaUdQCmShXLQmJgBQiSbsbXbtEJTQCa-kDa+TYSb631gDzG+lXw0NDLSW9a+dg8ajDbrCwjB2S0C6yhQq+GmkOZZTZmArgT6A8UaQ5A9QDFA2RAP+GP3vOpdZUJ-5ixk5X4kYELDCYZ8eAs-HcJUIA6+QBJ+wGzpfeiAv0c9E4hurwwOT7CbKAKrExibXXw1sEOCiDvf0AoFoFF6ajocqBgNLfddQAkEuDWcw1XGmFa45F1JHVEE2BZSnWo3phS0CSOeuXFCd9rZnEsll-XpEmFUXJhipmaQWtMBkCTtQ8EXZ+QC6Jo3O-Qb2A9-P26dTuU03OuuJLkGYFxMxzQMDT3zDMErgkvKAICGD6AhoBZvKAbAJgFHRg+yA+AQUTgGQD0BGAtulACOiwDsBbdSAICAAAawfUgT9nuC+EnAisYQMgAH5098SgII6K8D6B-QAAg8QOBAg4H4J0AsNIjAC0B3aKQBeLADfbfVeWE-GAKB25yqA5+8NN1hiRnBhYZB6Ne8nUWjwpBlwXPJgHel54jscBD-QMnLxUhRAq+kAogG2SFCsBUuT-aQEEzUjSEHixYDUD6EJiukSqGbYcI+zmhqAHQ1gDwEhQKyHF508sbvHoPwrzoFBkATmADD4hmCDB9BW7FYJsFvtJONgX+jjTKB41s2w4IRqOEnALBvCxyKGl2DbBJkakzXZuKEOhoDxsIa9IhPmX2Jx950F0DAoN30E4CEaohJ+ECzNYq8LBSQqrikLsF5o+k2Q-BI9XKDPwPB6QssN4IpAK880AQpofNh+zBDJ+pANLMHEt4lC9BkAKgJMkyBSx2wcgIKKxWqGFh+AeNcnmtipbu9yA42UQllh5S5Yje02a-jADuhq59yIuYQAaQlzBBSMohWMvvFbpG4ZurHDCuDz2GnMbkf7UwrT2+qW9mOZfNYHZ2bT5pPWznVQV33f4cEOha2RXGv1TqugFMZ7QgdhW+H5EQcrATOK-2Ay1x0c+hVSLbmzAuxuISZKroOjWGSDSwd6bBB4Hjyc97+XQkYOKXe7Lg7QjMYII2nVLbsyACqIUVOwoh5o9AWEGcK1kPBKiVci6DXJINm631sI0I7ZsXzgCp1dIHwtvsEG3jYQ5Ba2K0TaPvpTsrmRrekXZlbgrouO-ANYH4Jrw3VugyQ3LuX0zKDAUYHAOUr0DkCKAXmamF0c5yir8REAxACWG2GQimBQxYyTsFVC4gW1e8ToBpg00hgcR0evbPclj28DCdYxhzeMR9TAAHgZwqRW3PwDBYaMQx6oFWoY35rqMYWUVNZnoCrHXMM2TpCiCQl5BFc121+K-r4TWYw1DUPUaAA-QHKp8gxrwPuHGJ3iq0gSagXwEyECEHFNSPKI6OlHJYmj5BhFcvp1xkz7xYAw7Aon4A3iJdWAwQUsqnQK7LpJBdQ9nGUngBUAJQNuJbiKKiG-j+RfoinraO0GQBTI3wKCbCC-HrpF6X7byDYEqAtiYWsEv2uQChbdi7eV+D+HC3ECoSxMqgCWLHg4idjjGgtKKuhMDCnB9+8NKCbrG+CxRsgwQeCYAyoyFwQGk1PNOBQzoaBQWFEmFv4GMjTNHOYebEVhLpqd45hXo3wZDXmCmM4mhY1AK9F2KrBCJaPGwKxECZ5pJJlE2UJMwxEzMnOm-WKAtWUZXVg+UEgAMzfBHwVoHOh0kImbgQceknseuEqCEtrE4CZNAwnICEsZY-lTkM11yB9h0JvEkWGoHRGiSsRktEpstRwjvhFAe8MpH4lPCGAsIu4gsZYxUkzhrY8UX5hBCKZ+RCJGTL7G5PLGoQkJP7JHoQnoBwT0IoQX9I1mhZiZS0FUqKjj17yVsVhsfVYSgwFx2tWAi-PImLkgCIjMq8-LtudxzD2dMRJk1IG2GxT5IdAznSKVQBdgdhSGGNQMbFwKL89+Bgg4GCILEGwAJMgAJMIBBwmLXKdOXySD1MgnEUYr26H1S-AJXW5gGKGFBjeB1BIsFdOOkOhbpYAS6YIJunvs7pcfSAPLEuIUA7R86Z6anXPpthhuOEUIHLFRjkiWhgw6wd9IOl-SjpwgwGeDOBlXSwZ4gj4ZYGwgVknp00p-pwAMY2JIYkzeIWVWxk2CfpAvKYATL9hEzxBJM0GbEVunQl22UAEHkuwwpjS404rfMG0JXSQ0t6JHT-i9xGB05oGZNWBkoXwJXp0s54M7H0COjHZ9RBnaWcpHfYQSEZKuQyY3mMniT0wwfSwV9L2nWyxJ40e3iYivBVBXQhU4sZPm0mpBRhJTDjr+0aE8jIZXnZQCbLsDfVzZtMqdL7zQEOycZTszegKVd5GSXZD7RHJLGcyhyr6RAB6aeNZmmzo59-IgBbIxKvTeJ9stmUGK-YBABwUYl3A5i0RAJKgokNUZmGol5jep04lgCRF96lzJ+tM14JXLvQPwXQ6QFkHVCD4Jya5e0uuQ3NNDRiVA8LHhK3PEDtyqJr0miRBSLH-NPYUdJGEtFMEQVepkgqTOLAjBSZmWxskUfEGLmTTOh5c-YZtNkKzzPpScs7tELXppy9s3sFjLAFfmcRMwMUlYjo314O8QKTCekPRGiTzCB4oQAcvM2ikOdYpqQPcQNLPGBhdYMcoIi-K2lWQKCiA9+T4Edlfyre6MFQH-P4iVBAFBCriKAvPrZkIF7sqfNAvqJwKvRK8JBWUGElE905aCkRmfMhnJo2GCAQuVjIfm4LRC8OGqF2COYkLdpX806ZiAcTX4FgywZaUKAKQhT4AmSUDuUhVgZC+kvo3pOkOxp9IYwL0ZZD3OL5NQO40i40juknE7w7IN0P2jPMwGJybB0uYyFxT4VTNUFC07UL-C1prDpxhQDuIsCqQtcUSmA5+UnBXDzR4xbiyJeBU8WdDvFQY3xeNH8UoL5pts30DqH0oYK22kM3WeIsjlmzB5kAZ+fFzmbVyP5Ng+pf1DwiuDYYO0HgJsiFgcLQgMYMcLmTKCmt4w+YwSRJhWC+cl5lyX9FSD-jrF4Ai0M0BgCUZbVok8YXhtB2mABzZwKgU4WAV7C80uxdNWxfDWNCC8aldShaZwmECGBYg2gW6BksIFZL55KxAwDwgfAbz0ktNBqmTxanYTVgky+QNMpjCzKL+gzRZYo2UYqB+Q6yqTtByEA8K5IDMIBGaH2WGBDlYy4RXnKgCMhykMhWICiAjAwyJFZ6eGFHMfmEDn5AXfhFiXbmNLSFn8-znCkSRzg25vXdeXYh4RYrMFA3e9pUrvlkrqlBI+GbTJRkKKvFc8r+WKrGHvKM2ZoUkegnTDc0wAAATn1i-E6kIcoIdONUBrcLloq+9ikupXyBHlH0hlTYOlW41ZVOoeVRsT6ikinMyqtVRqrNalL1hkAfQABOFXtBn5Yqv1BZH1imrWZTSoMX6vXB3CXEoQANeqCjBdIepucnlVLz8BbMqlJc71WXNpnozmi66RRWQvm5YQ2QuZQhMUEgVOhJl9lVFTK1-i6ARqLC0BGrV9ZCQTcgJKhaUxwS4TG1CwN2fWtrGuAIxV-BNfuJ1o8BaAj071TDikX6q8FuiJCNmtpU-c3RAwkNXtJnXNk+Qz1BdSIF3R+REIa6tKGUjCVBDJBlMrmqmopXw1n5Kk0BL-zNVKLU6NEV+C3O8KNroq8kjvH2onLbETIa0dlbWNMUvrOl9IN1VQN0BLpwh8S2mVervT0q717HJEI+rXnPqG1UwupDUHDGfqO8Zkn9WhGQ3-rokgGw9TH1bI+90SEQoeXgqg2uLvewsINVjOXVfzEJvgGVe0obUfKu850IZmhv7VglsNYxV9exvw1+wulhG5oVADOU68yNtSyDdhFcVpJbl9y4oLRtJX0bVOqcucO3NgbYlMN6SO5aT2iSrzXBJkNlThoJ4ya3VvIhtmescUPp4cL6ZQJ9wlUqbTOXYawe2vY1vUSw5yHGh+TNaMzPysK5mvAEgpV10oTUZQMBtq7S9ReU62Xh4Hl5TyleUJXNYyofSgh3BC1OgMuFbrdqYYbYFgA2P8CQcDKCqxkJBWqoHyt1xTTMHtj3C0dG+kKaFeaBLXuzzNkMjwhgGCDogsW0GgVS9BnYjF5ZsuEjnQkRxbUxY9LW8XjCO63NJ16a8jaIRG0MIax5oLOf-Uc3mqgxi2sUO1uOEjJaBR+PyNcO5VDr504c5ED4AogrhqiVmmLSPmshdA+NZgYWIusSFOaoAB6Q8Cxie0gstos2cJaYVTD0sx1kmhJc4uSWPakOggGDXmrmJg6-4-iyHR8t1ACZB1fUuglIIoDBAPcbfXoHDKgCt9iYTE9-oGG+AaRvgeaZgLgxaXLa3l7SwNpjVbxmcelsMUmoznJpR08+YyzOowg6nLBudzGlOHjycQUw-ldNfkARtsAwLyJrUtiuIBBKFcywhHSYjEEUnmMzG7wJZSspUaNag4XYQZmrRlImh7K5SFmnpWJrNixlla0ML2F52rAptlIDqI5mhWT5KgibZEhGDbD4IAtIU98mEXwQgsXKANVtjCQJ29BvgOPfleOqiFiqIuADSALnE52tSceznDqaitVqs7kwTIGWNKuyE2qHQ00R1RSGdVg0tV2KswrEUJ0nrI9Ozc8ZRpvXKaGdkAVcaLsFqSQ70qes4Y33VmT4ioI8vNCoGyD8KT2rizULbn938BDMBQYtrTtkjhQYo4QCWCzF4X8SDN0bXBOOBk0dyxQGmqwJ6BljZS4mqAUYCE22QuB6EvcNjHYmERrLTsGgLoMKzbArAWATUgiWMuFZ+Q6cp2IIKYAogdT3K9FemIIGD2ekK9Ye3YKOpJVolRCq6uddwzQj06V0ie7CburnUd6iSGe7+oVD8rER4dG64CpVubiESUDk4dVLhw6lYbwk8C4A5uVAMEqZwL3YHQdXPFZrxVZqonO8Ccw5sRIOB9wNkKw1IG6abADGSnqOWC0ZY7wZUCEvc1LyN5PB4MG2D6XbIq1FWhZh4PqogIOkr8HhQfPyYt6YW9iJJaYPMAVSVk5aiRGyDw2Zjm1OhvQxywLX-E4qvMDqX+rfVcaMN0sD4aHroNFAGg1epg4-2vQThnOUIRJS4vr1LrG9zewifSDkVIARDYynxN9R4B1t8a6BtWWzriNYGJlBNfeb+i30-wma-EPIRzRWguqK2ths0BOGbgv6DtrUA3qAmgB-7xAv7XhfkptlzNzAqu5ZpIK8Pk6xAW03BhtIGNx6ojYyuhfmDQPp70jmerIxwc34ys5p7R2jvUZhhsL1QUuzhXCIHiK6KdUU2adQfnS9GI9JO7kHqqj3niY9O8GJfwgQNUc3qTfPyPVRaMzVhyhE5PRQFt0rAaAcjShX6HvaHzPYCq+1S4EL0HBIY1WnhnCsuTjjwmgCd8O8b0ChBCJRU7svYyoD2NexpgFCPxRfTE8bci8CqZ4doPfAC5TEvuVEAHnnHH+fehqRm0nlRBbjreBvhgcyMLVCJ4UseTqHpOIAKpMsKGPvPZPMqZQA8PhJeA6kwdaaD4UeWJCKSvTKhfkUUwqzClQJhIiUPcSHuJMXz6WV8q0DfO+rk7Ek3wHBYBPPFDH3wY-MAMQv9GN7mT0xzAw5jX7lI6xJPF45gTGNALPjIIjsCxiINlQd4IvaXdhIUO2BODCxmuLOuFOURXoMm9QlV0YrjHbIBxgbsSdEW+GTjaS89TcUf6yL5CmRvifYvAqMnIAtphMN3seN-xnj6mjM52tsMxHczPO0Qz2KKhmcb0uSwhK4ZXjTIND7ahzFYoJhJnhexJipSTvE1U6rl54eTRtTRxx6SzDx-gE8ZdPa6BDGjBaZ8YoW-ywFM+opa-tannhnAeyeZY0cbM4S6xOQfkECrARIMiTOOglVXpJ1MhW4pG-w4GTr3rr451p9SvcbLPzmKzi5xrcuZhZt6Pjx5jcCsCThX5AEI0H8xvuvUnDEWnESKDMmXA2BCJXFbIa1U4AVTUxxafbRlCjHTLZDOGnUG1TWVXmejxJu8+QG+CjmTTj-V8xObuVTnsAM5jjaWYyMu7fz+Jpc7YaAuYSQLRUdc3ODb0dcO88y-TX-BbnoVD0aRRKAOfx0pmotcSs8Y-2MEK8UA6HYElzVTCdBHudGm06xbnMOZKz-52s+YHd2BmpJAln+XOHmDxbZyda1Y-lvGj1VCtYebEvfiLByXy9N574PoHG4AjcG0uSJC9BdxFmVgB+AElPqWWrSwTJUAy9+bZNjKgrBkAYC7l5OrA84h+N5tZ2zZJjN+VqljaiqwCjbxAGsZwFggqQywHIBJIS8oG8gbVBAeWsqKFKn35QP9NUVk1xB1a5QS+BwIPuRZ8sGjlOTo2iy+cQZuiYcQbRnaGZXq2H1Ab4xmewFlwdTDzN5MsMUbMAyxoujiSJkxrshuRvZxU70R4zbDxgII0EWwDpO338T4To5UQKFGDMombA9jNYBiZKZvj9oB+sTJr2BYW7Wp9ldcLkUUhYX2wnYW8CKBKH8RCJ2Q7quNZWuYQcmao6yyRIQCXJH4IK3K09o40oat6oUdU-LhILh7aDuDXzskBH6EK35H5u6nOAtP2UO8Z4QoLaxEQrBT8ZcachORmrQAJY++sxspOP3Ogl4eibNnTck7M0pkdiQUMKByFxkhARUCUeDa6iESMhf+jG9kNKNLRFkS5TMKhbtOaaJaqQXkx8MJu9G-LXSAK6NdEKk2ObNN3PmFYTgyzOZQBu3TvFcsOAmriiVq1NHatPhOrncyhtTl-zB6RZnwgFBLP66iiH0NIukcbi2qyBYqeOvtFiy9WQAttoEtbDukDCYNAwLDUQgQR9pZ3yAOdk7LEDxVdgy+7wEu7mbfqSDVWGgeHLECwAJ3EhmQQ9mPn9i6X2gM4DEHvjuoK93m70tbKEI7IlCpi+o1joFlu4p2sWJU5wIsESI+NiMXgREU3cgA6AngA4JS4QKiE6QBwL6tkJ+OUgcBodKWuLjWS4nfNxEyGg+2xH00vpapToFFtfeHiororugaWt0HmAtR1Q7AZ8HheQ3Rg9wfEIcr+TLDOURxqUk-IhfmTTBaRWOGrWyFlDxR+BPk3e7uOD4f3Q+c259A1aovQBL0ydt9hJD0XSBkoHd+Gng4WKqcAwpD-ofJeSCKEIMRCJ8GQ7WyDhotUAf7hpGYvmD3R7DpvSQQFLYBIBfU0TZAHw5akC7QFCCVEMkeMF8NEoM-sfeaV5JdoYJY0KEVNvnhHDLapql+u6vigHAeQUyhUidBUAayvzSteVu2jmdceLt3qzcJd5c0gKTd7gh2BJMKZJ7evIrCw8iEKpSA7j3TPkUgbeOXtRARINkACddYRgAAVmmxmZaHJGFkJE4mwPpTI6qkJwk9gDktXQnW4bCMANhxOYYCT8FJDrL7YcbHLRHASI+xXPoLte0TfHXnzDXopEZSBoMO0k1RDmnK4GDMg-fAAJHASj2uWfZiTCtok8q7pz9ofALB+nyAB+GY-rVsh1kHeYchZNkOjP3wlod8I5WkoeAlNz6W1g0Hu03jtB2D0-N8ALRr4p2zNTpMr3gHPpTgZxyACgVuc8Py99DjXA+m3DwWEnykM0UNwyk0E7nTAHB75YLZXPQgvYTKSjqqf-bR2pAbIPWCeA88JNmAqIRzN6e5B4X5MExIM-nnDPVAAQUZwYgBeBxmE2UTjXWNUkEHNoCwP8qfLQG+SIELjzuyC4uePPDUp+G5z4VedsuRgzz7lwkLeccQPnH9b50C49Vgv-nULhJwrRJ2-O3sLsTl5C8BevPYJBvDwJ1vlcrp6py0HYirGVeVO261TxNSOnF7pJ2HHT88YCB0tOBcXDG4Z++FXB8BEKqwA4SzkCWMgLi3ccNfxL2xdK+IVGWGJ+R3TUlSEEkQmg5XcBJkS+nRk5WtinnCxGNinXcsVHryMHOhUQtBPqzFAZBvq3+9QC9smsba9pZnA9c6YqZO6lSiWsoMw2iA0dxAUgckiuDIQy2zSl+t+Iixv3fU79eD0+bC7Wz2I9oAYrpGd0td0XY2QBGN3a5GAn8GbSvDvI28zkYQcwE+AO7AV7HFovY-ENkPrcmqK1tHZayqtvxcpdKftn+Raj1YSl9vtVtXcurxjfal9pH543zsUCvyFc791FdbbBuCLbJYEt+FgD060qyJUY2js5FxU-LwxOwqx88x++vdEaAdzi1QA+-A0Zvn3IHt93oGQAuwVwZgad0Py34AeyYQHtiq++Ri-01IWHnDyJpqdck68QRMd4GRoB4TureHihkkCa1MVmP-ttxYOFIBQggYLdPG8HztQG9mXFgzZm4W6At0EnL0DAP8knS8eVhEOft4cfhjRhiApaLak+8f4k4Up1kVuiuAqhPJiOyWmwZMrP09wWMwrfDHxtMgAAWOz8QA4CpjhnbIIni+rxbRh1AToDXRI30eoqSgnYewDfjPrGcKkelP+E4FYlDgGQwqNT7dl3mZWuD2-UzNu4HgJxUATwNimQkV3MQT5egAG95pbgqnAo+rkl3B9EfzArR0AFRS+03vKXP2batUFh6SN7dTPQYyZX+9Ti4cmQXzLzcwvgWpGAwGQTyJ7GK4uK3q512GKoe6mRXxo4+7EjIVshOhXgmSICh7Cet6AypVAH4z7dK-CQIt8NGYPPCFHMuI7UAXKfwtCB8iKr20r9zDqIqFwJYQFbN6RE7BdL+I6oq7zl5An3xEtvofSCIzABmOfmXkC+ONHmAyMpnKxxivva5qH25v3gFlfwAtNcRu6pRowKwzUgE5Yh4TXkLbnaiHf43FJ4oL+Pc5NPBSgKZjtp8Y9ALjWgUWT8JELfPKv5nXs+N1-KS9ezSVUrMgmfDVNbyYs5W-PhyMfCgVYrONoxnOxFCBIgsEEnpW2B-mPxAQl6y0lCutesbrCwVZ35oHh8+YEM4ReDoc-yC-XVcb+dAeBnJfD6vf-R-keOSiwFWP52GxxlsEr8ADw9v+byaAE9nhOND4aAHLWxvq0V3CiAEsxi2ewg0pAoLH8eC6TkAifhxvld3CHzXtxZPdubed6DL3s1Q-FdRNlq9GO+p0HeXP5sbqZwwtHX6tkBp15h-HldY5E0CCwJ6VJnw0l2ywd4Fu05ytPtUowS-f2H5sS7XRmDXCyj1I3QPP49oJBEE1U4zsMeBfH-aDuL52kI8dBDSEQ0-RCK-4RGqAX+5LzQXCx32Z1eWIOhU1oP8Jv6xzCsgmzcC8y3FPDHkFfZh2RMwhVHjJb89VROWqBf01AnAxVufxYMQ6Jv7AHUgQAHWJ1jO8ohUfEI8aOeFRmgmIdyCGRuGc+hhBRqWckd8IA6jjtBmFToEMBTgWQA6US7SDlA8JhMlzSFPlL+1RVudUQCQCTfPUD7B+QNJ3VUctUvSwxWiYO1LEw7AkQz9iKPRgIYDGYjAwQE8XKlUkBYDXUhVVlOFmJp3GI7DbBtvRmU6YZYUqEA9WKUzVmkYHOkTgMkJBUAcd5LbClLJnGfcksJ5kYWD10vybgIYZs1GOwQA47YIFAEuyA0mKsGEZOzlhMyDIku5TCeBFplkrFhyk0LfY8i-lNwU4hcCmOfdgdB71DQJM8AdQehS4Z3Odma9zAXDhkwxZZdnm56GXfy2MJrOr3rA0EYhBa5lRYuldF1AswFHtIZfUEkh9AkUUZIjaaem4REWcI1Flk1ZIPvAZMfUGnZ4AeImVEDCITRUoIg1gBaDS0JIHk8IMeFxZE1IKwxYAmgtgBaDveBVGUUhg9uCl1xgnoKGCUCV7HaDhg-e3Q1EkDIAWCWg+YhzRVgzDz7ADXLwMWFAwCdknRfRTD2qAFggAC0COZAAhp5uPXTZwzQG4LuCQcewHm5igUoEGhuHeGhnF4AfjhTUVcYTkNZY9AHVrgaRKPFv5v+F-iaCIQn+0cJnAfIjzhGQEyh5w4QrKDWATwXkl1FMPFkBdgSODADI4KOR4IPU9AejkY4rSUjmKAMvJ4A39SQ3Dj0BaQ1pDZ5EWMZka1DuFmXnQ6ubzmIAmuHIOrJ2uDOkvFfCK1i6IbWEkAHJtXT1k2VE2VtQSlGkYEm-8JuGblvkZpcaGdlBFJLB8MKuFQjEJP7GQlYN07ARm1M73PUzOwzTJbhA1EcbVx4loNacWJ09Q6nRzVTCXFSrtCVbyEEB5APUONVHtXri0I+VMdUz8GlbdkmIgQoinsMwQ0dhHUgwmAxs5h9aMCvEs5TrXsDlGNiSntRtGnR21ptQe0QBPxDsk31piSzRs0zLezS8CztOQnfNtuKrit8Cw6rl+C1sY4wacQPcHmpkoAMVVqCzCQMONUAQgGGyC9QrIOs5nOPAA7CG4TygqQpCGHmKAU-PckR4uLVrixN3AYywmsKg5AA2YFxIAJkUHSMAE3YZOXSHk5YARTmkBhrM7B+t3AKv1Gc3OY4KnC4eVPzKDzuZsijo9-Xwhfp9Ob6iM4oPIMVLdGQyznC5HtSX0EUJrHkIa5iAD8Ji5RAA-Be5fOTQlyoaoRHDwA2uCIEK589LkIHoFxFLkRDKAZ0S9lxAJ6z8g-ZAtjFAurIwjcBOw3Wgwi52UQXfYquQMm2tr8TDyr9boIQE3YJrciMoiiIJ8VfFayHcN8Bxg9CPYiPg6eiYVdw1zmY56wbFEh0UOUgDQ5ToGwXKcyQ6YBA4XAgx0cBDAYxyCDX2aiL25cqNeh9tjAnUF79uGDkG0A8fVwO25mOHsKZUBmGywlBRfe3GEg1IJXWUjxmPY34VGFDo2j5lPHlTEdhSQSI4DOnZeQWpwRVggBhbxJPAvcokKiC9R4kTPA6RQgTcWmhfYf2GKZp8GwGIA8WRlijQSWWNAdQYURNGTR-JSADpYGWQlmZYaoNlkgAxMA4SQihAJFzvoBkblgkx0bFQHkBQgViTxsvrYkEmUIxbg0hp-XGtThh6xFCzSiMowlmEwcoxMCGAxMWljvASoplhZYC8dlipZyQZkHEAJoxqJiZebMxmJBwo6xHsoAPYykBJpoDRFPcWo7ZHsp7EQKiF0yjJUDEAMXCvEhQM2XYCEB2oWW1WAwIWnkOjZlDem58cWdKPhhGWYTFzxIURfEGBpooqNmi7oRljKjWWJaMDBS8LEgejegRqK6NtoiCJsB6QFsBkNN+BKNJIdxMMFSjcWAGMJYsoqlHkApMZCG3QoUGFHrDBoWgRlkd0GaOnQoY0qIWiKo76xvQgUFkEaiNwHSExZ6geYE2ilJNGIGp1OJIwf0aGZMUM9CYdnGwRB-XYFsBdgAyD+jRoolmtQY0BoDjRHUeoEGBPQOeyTEPAJmKB1YAaGLZj2WTcB4BdY4wyhAeWDcF85xANfiCZ8aQw1Tx5iXiT4AikcJD2iHEHBCmooOKWCQp0dZtTNwcAsaSiErcREH-E7cGsj+1vI+IGFYxpSymRIV7bQiwRx0QIih0huIL1Pwv7FUgKp3BYMBkwQSeBAzj8iEPE9YqhS-jcFmqQuN8IqMDONFYvcB9EbiI2ZCTmUq43RxJhIuREF2AOAeAF0DUme8O-l+EFmGlBm4Bin0ZzA0UI9ZKseBFs0XpCuL8g2QOULXdxoKCxeIZeMgkkFKReBEfp3gcpAxlKTN7jAQugE9zcoGkU80xxgHbiFxxCNSHAhAgAA\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4KABGBEDOAuCmBDAtgBUQc3pAXGUEEMAFgPYBOsAKvAB6y5TTGIAO8AXgHQCWpYAE-Jh4sWGGjsANhNLIwGAKfCAruNaKwiMVrVztPaPHKIJAazaIAdgBNRWgG5gAZhWTGw7m2ABvF2-BgZnKsUnQ8COI8VnJgdlZgpAK2UjwY4nAUpg5CUvFckAA04ISQUqRWGDT0jJAA2jzIGAC6wADKVACiAIIAsgD63aio-QCSvd0A4p0AvgD0dLAm0HOZ5PD9rJgbGDzOXLvOdXONLQA6VsxsnLz8hloKKIGIAEakamAvKjx50RguiAAxrAKDx4NAwCDdCDkNpArBiIFAesDBUtLYwKxyKRAeDoH9Es4wNFkUh8ZUpABPMCAkJhWgSFjsCFA7HQFkJaLOaIReBUkS0La2Amw1hcMAAVVYaLsqQcxgJCMC6wAjipwQhvFdmWBKe8wAB3H4yLGkDDrdmGiLEaKQxGPdzo7wqKzlQFmMAqVjmxB2CFQyTweDO1i697CZxAkHkSlcC7df32uywjGuYTa8HEqykxBGaCFMMqK1SGQseWQ-jQQGIMKe0N6lQRqMUalQ9z2JVxeAp7wAWjAABEKgBycRprDiV7vcQW8O4xPvDDEAsN4ulxDlqF0IXeVmkS2duovZpcnkITxsY7HgCEFzapDRq6NJbAZfh-GQPAZtPK5A53i2aJxAbdMmUzI0ETtbswH7ABhOQXmiZVgwLc0gwSaxvBeKR1RpUhfzAWdG3nCtMWxGwVFxOI9mcYx4CscQfwof9MUQIDGWuCEIOIYlxADAxoGcVsk27TC4ysKgbQhDAnhcJBYEbTMAEYAA4yLNC18XLMJ5SkCEAAoAHUbUBHjmHePIgiDet9S+aBqTTV9wxZKQURsSlrwASk+D5RmHeRaUuWBrFgflfRsAkrHgA08IY+jxH7SS6OJFkwHKdQpGsKKbFvKxUGIlhyX+TsZMdXZ5QhVcgXnf1+E7OBMJrCpAnlP8+ASA0TJ4wqtBsCLYHams5O0RSWIbYcXxraB+HWXEeHLaq8VIqKDX5OxdNIdhvFokaLXEo9mjaYLbCaqKwG6GwHBC7ZoCvZoLjqVI4HuhJCDqAAqZpB0QcgPV6Ug7AuQgwA+r6JVdRpeW8QzEEpaUgOgIG3s+yUIc-TUwDaDd4FK8EkYgUHzr6iJBpkIwxD+RHXoJlH4M-SpZAqPBDJ4C0wAAMjAToovIDAPPOyGGcc-TsRUJcqW8+jvFIIkACkVH5AAmAAGFXxOBwm6YJaambAf71jAAAZeBdKpjWUe6EtSANCFHShZxGyVYR1r5TaOPYbg+DAQATckAeD+HrmJ7YBeg6ADE1EUyVWBsOFbrmY8LlGLR5C9GOBoZkrZNa6kZYQDCMSWSlFX4VgVGYdE6zT55xDCXNxBN4xqQNIMzFyx7DGD-GQZRgcaLohiL1YFjTJrMJKkzfT4AOcVRS461EheBrATCaBPK7wn8o4DgV7AfSBz5eaPE7VV1TgYN3cCbiHgtJYeGBc+fqQMA5gkewZZ8n4IsqVf14tiRo2pMgAGl9EQGy+J-Smr5sYPFpHAX+X14JWG5BgRsrxayigUPRYw2gKC70QcgyORFyC4lWGBCQPAODwDmPEfEsBKQFiMA-DEQD1hr2pt3L6F1+qk0hHDTM78Mxm2Rl9VAxg0wpioo0U08p3AMQMklB0zxXJIHcoRF0EIsSiDoYaPkUgvLwPOswyiPEWHwDboHDuIdjySXuLjFKiR2AJGmsRMxd14xWEpG8VR1YEiBVvl8BABY-LyCjIffk0QHD4XlN4W0nZaTIGQC6CI1JMJaDEN2VgfEZomzBDFUeEgxZYDgO1FiwUzCBFosGF4QIPRAX4IFfEdgTADTRJ1ZK0p2Q8GwlPMAAAhQI0BI5QlMvAd0iQPjIFbOsK2nxSA-W2rgzsDsXzYl9KKNux5DbRDMHHBOVh27PQMXURsUgAC8xAxBDxwHMahhhaTkBsFweJJwrAOF5HMAAEgAOQAOydAAGocH+c0AA8s4bkgIeBDV7lWCgNhjgnJeubL6xzyBnIubAK5Nyli6NIE8uQ8c5ijDaAARWzKwWWqBSHXA4HwZoAAlOZNhRQIrRUi4RIMTnnMudAa5cwDQCq4OsYmsB8XIDmOQalHs6VtBUC8YV-VWVSHZTTFFXKMVYrmLsBEcqxVzBBIvLEUqbgyrnEiYBu9JgRA+XKzySqVUcM5Wi7lmLeU3O1cQXVzyDWSElRmT2pB47lBeHMWEZ9JVLGsNATKLTLhzHpT0AcvROhcGQDYZoHy+ShkjZcGN8B7UByDs0IoJQiARVhQ8rZVgzC1DBRCqFMgYX3L7GAWCLBxBX3cNeSAJQZjFCIBgYNNZGAEFKOUX0fxaiG3Cj9EtwNIDGGxOQWonRyBLrnaUBE7xoCYWgL3N5TTagFH7aUOwkLYRSDaPALYzSKC1EKBuoggzwVfhHaWzdZAy67tqDWk987PwlhKbUXoj7SiIUAxUaAtRemgaILfCDlxahUB7cDPt77ICnisLyWoXJQOQAGu4N9wMiDNSvYFGw3QMCkFqM4Hwwh6KvzMC6LUwZrCwagLQMjFQbDQEo9RvAkBaPCAADy0AAHyMeYx4IwMcrDscgM1Xo0Q1DwD4zRujIgEj0w+DJtjf7Si0CU1YFTvGqPqZE+JzwymEDplY3J-TJGoofPDGpgTQnNOQkaI6XT9n31EFoM5xspn+NQHc6JiTBHYS2dk-J5qA5YaudCxphjMd-g+fk7QeLlJgvmbAOFuImAfqvxiw5pgozuPQDaGQSgtRhNGHI9AMTUHSuQG0wgXjtguO2Eq9VhgAnhNtfBGJ+QdXyvdaa-Jz9f5ui2CMyZqrFA+tQGE1Nxr4gBvWaG8gDLc32u1cs4N5d760PzvKdlojxH8OvCQ90GDLW-HYikLUWCVB6WG3kzWJbkBuiG2Qy18E1Z2ArraLBeTzA9hfbaAAaVGKHP7fmmBbFxMBzohtDbdC+W0dHkwUOEBmL2k9kBkykF6VlYwUG8CjrgxEMItR95ALAP88n7U8NAWxLUNoFhwWmHiC4cgHdFBSxasz5qCR3PaBrooHddZQyj1MA7atsbjDdoJyUVrbErC9HoioC7RBQiww59IRAeGR7j3KBgWoAAR2w-Pv7m4t-pjDyBpSUCxvKXGtRRjO8W9gvDm16L3hcR8oCdOtGmEDGEcQLBhA+FYI4oIANu2O-Lc2qtNaBN1rvmCF8Ta4WY2MK1PDiIpCsCoCYXNcJagfIAFYCBL55yaOgfCtWgAIMQiAk-ofldbIw5AYbkCw5UWooc6NSEULAAssiuziCEEEZIk4dAR-sBHorY-v4oHUJoL+nxsQ22V5jLnkYuxi-53AQXAQwAt-agx3RHhMp9VMDzVtxBsSOncwxl4becUy50nyIwx70Md13cnhjZdJagvl5pNBws8MgCcYQCG4pBwYzAYgDQ5MM8zBkhvAICHBFATcKh051Rh9FtW8xA8MVpJgnhwDKRF9pA8NYQ7BelKQOcLAthdwnBhNEA1BqtexUhq0xMYC5UFUIhah6Vgx+pccTsoAIomoMAKd8Au81AQRENKcEcFN08oAQUod5NZRRBsABN6VfRfd7trBcQnsBNugHB5VqD5M81l0BMr0rBH55Mb4fpIdgpKBTA5BnDwRRBagABRmzOAOvJ7FrCcI6RqcoKKZgxAbnPnAXIXbQvkXQigwjATWWTAS-ewK6bwavDI5AKXc8DAOjY3FrN5aKKUKuDnQIL0aOOEW3GSZdFrcyA0KUH0P0Wof5QwUwGotohUSoWdJosgA0KHeATxaIL+WQjoroyEawLABiRCYUfoo7VDR3KRRbN3OA9wVdddFQ4jKAAaUKPQqAL3F3WAWiEI1QhAGoATKHKTLMc8NYygbBCQG9bkKQHAXHCASQogR42ADY3GWVQEGqXXTdGnI4yANoV4n4Ykb3J4kwGweTK4r7XuJxKE9cYQbCeaCIGE047BR5T4sAb4qAXGQ2JlUONiHCdYEE6nQ4w3PkQQDE8gFTBgFrJE2oW4i-ICQIe-GOF4n6N4j447R3QKbkcgZAf4p4feSPI4qnUE2kgTfpMwcgAQZwYKQiQw+oxExYK3Z2IsVvcpYQDQNJcQCiS-Y0dUppcPaQUQAAfgJKJJgGxlxilNEHam2LvV2MuwONpxuLuK5ItKMMuO1N9M5LigDJMD5PIAFPtMdxcMoFELVFZmDGpP2LBNrWQAakoCCGVIcGayDOuKgAHCLBeHgGIGb2k3cLVNiCXzHA0wly0Dj1SFxAjOiCCJLEHwaIKCFPQ2DAiBGLGMWIt09PnW9PBOtxsAjOgEcJeBeGOjmJs0SKrCQxjDGWyhmPHjigSFv2EESWgGQLYHj1NLeUmleUwMQALG3JECrGuBcDrJ0A3CsOCi7JWPQwtFEH7IWImOgHwVZlhFjRTPwzTIEwCPJ1gGCIkGnNnNmPimMEXMBFD3bwTwSQ8HrPH1AuCNMDl3XPnM-I7KKwGhfEtIhAahOgeTnJgvIHFH+SKynPApxB4hLKVJVKfJjPQzO0-MplEPJhBXUNlJpJ9KgBAr-DAvbIJA3AgteCgo3IXJaz9HgvsMgvIrigH1MGjzADQuEuCNgGgBVxfPnR2gUnWC4tvmBBZ2HLlIEsgHp1ICvwqDgrpyLCE2gD8HPCsE0AYwVzMFjV3mEwMsUjE28mmnkH9NnwIqkAwGSEHTSGJC7CAVsqiisHFAADXWoch-h6y9yYij9ednBT9YBz87BMi2pRdbznYPKFZMof8ECjArBdK8dHdSMnSQDIYls+LUz5SoB+lzRkgd1vBkBIqtQ0TYLZKAcHKghrBPgfpVLTAGNJB+ToTx8FBFANyYrid4r6IqKaKrA6LTIZjZkszedjMrpy9CrLzMrYicq8qCrhdiqEq6qvjHdU44RZUEkfomDzL+LwSvlqQaiq56jO89iidRqBMPlZ8wabc-gfpHDX4EhTSaq64Xi+RDDBS9LSgvRejoBRgGJyJKJ-yPr2rLLDYpcZco5vR4S+iGj7LzCSx5c3APBTTTQKJmyit-B0QcgToIRxcdAx9pcaiZdej6iit+w6slgKgMAxMR9hKNN-Sv5TBSpKrIx5UeADTrxhNVhRbKgJMpQyaNTKZZFKQxdohLhVr7Bm8DYyyfRXw6MopN9zAhBZFnz6r0Mw090kiEAfyxSALRzoN4AmLVTTA3hKBgoMAOyqbCyix3D9rxAZJLgLBPBlqZJPhKQMAQ6NSfLaQXRYAJMubxBjqZraBEAvLPJrwwBLddSJABADTMRNB6yjzzSiiIy7B287Tuz51sJ1QsQEYvlSBYBwY3RykET8bAKOrIAsbzwaieaZ9fNAa5LwDNBf8ZAlJFZSrjS0opdui48wB6UIg8LKLWLTtRiOLv4x6cbTK7Kh7vbzDTzbBqkIylLYBcLIbGjVDZ6BN95EKI82bMCPBZroxPABrsL4pH6ljZB5AG7p80ov9H5V6Xhk7E61h5dXh+cDTxRQbhBZ83KfRJ9Zr4RzT6yRbsRNbggaasxAH5jxjd7HC1a4BCHxbVb5UxNhMGG8taRCrl5cxoBTlhx2Lxi-hhwxMXs3s1bWH4AJMABqQcEwPAf5OvavDzagzCnQYIVgMECMl+cmkwLgJh8gCTYTERmkTKdkLhnhwc-htoD5WHKgYR4BMTPAD5RQF8NcnOzETKZmlwMICMxwCQFAWEJOlOxwx5bR3R-R9hox7hw+3hyofhn7KxuYER2xsALG1qGzTw-neKVEBKrx-XZmwqpkksapWwLRhh-e0oHMBAXoH6A0r2oCqAb6vWSpujMOyASYQIXnLRTweiSmZZKQcQRw5AKwAsU01mnEHZTQbZHCS0jzAhsWsTYILM4IGwahjW8WrxjytwXeToqQcpE0osVmuYuiCM4gWfDg18dYZwU5M4SADVN1OYMo5uSi-1W4S5mY3mUQC5yAfobCawMwS5xhuYRAAKxEsEzocQgTcciMip36Rp1u0oKLA06yrZdGAC1+8O8arcjmqPUwWAHAi8KF9YYQHgWKmykXBK8UTnLKnnDyq6oXIq-EEq9-HQUgEs7qy4bQdEYKPREpogF22CNQD27bC+mpyARU5U-2sAKHVIOPJposoISV9gejJxP+-qyoLCOBgJjwfSPR94BibOu83OqagUQu2AYu0u8u-UjwI02uosY8mQBuyl5urlqAbcdY0keicyWAfvUOwVkezoQUH3ScjAsUiiZ3aVoseAVUsRcgRQGSQq+s51uEnnW0RW5B0BjzPc+24NsURnZIVIOYsAGIFJ1eputU1mtU9p4Ole3+3BapCEeimKt5dkRBl8MKxIXarwbM3MEeaiGgvke6wkx3HltQLG59eteKfl6pkekV5i0wCVngKVkapct+osNS-0qN3cHQbJ544tzw5ANdsxU1uIPUyulCnQOul8MwOV+1lu1DVXH4-o1I+Qg+gcr8kFVqTKd6x9y7OK+ACp1gYfKkdvMHJI4EXpb4X4b+Do2R3UYKMHEEVgVAVx7seKWoCw6NNQUwTdzUlrbEYKBAUDiBIffQnu542B-xjU+TTd3oBWAaUIcEhDoEZ45wDxko1Q9YFveAEFNJhiDJyDjEUEdJ-82Sro7pboPQTjsEbjvGqAI6SKrxzgmEASD0fjyTlnVks0QdeAG1QeqAGR2gSqj5CUAcCjxD-D8DocqAejtxxgsjhE+7FEcpyp2C+wlg0wSFswRpka6UpDAOxbCjuueAadOAXpHCa9W3L7Wdmh0wW0fnWAUOlrfu-pHp3uWaKT77Lyw+CMvJqQApnjfXHmJwlrPLnmNoCCUyNoHgOwXjgCTKfLtqErVQwENQK9MIM+tAqAWd+dhrzaSkZr0ZVLqHTaVRljwG5eJAcgXr1rkQt17IGsWz1QlR9gdJWoVAOdrRMHUr4gadSkcnaDagtKbYZYp2tusDiYyzpDhiACwESkUb0ziY6i-nEKOQyAMva7j0Nc4TM7CTSWmBqQAQPqFsuY2IY6qFZSgAwGsgWAM7adEsswqAZzSH0YvAD70Y-glrLkUgaobSlMp9dgZMkGuuNIREFkhHIgcvLAEQgQd0A9ObvYp9aMbYYfOjYHofUrRzeAUYBANAYwLrbTyAJSBeavX28QF+IwJjWwdjH4zn6AURcbsbXn-LJlwXry5+CQCXqAXkDMmXnnocOVSy-SWgRWTyNXwClefbCTfXMQO9BHfHVGogBeumWjhAbugaCFHjoeheqgIV7AqAhe1Hrr53aU3niwi9qamny7F0fuzH2obWyevLdYA0eZMTAGy7AJJQr5RYUAvkcAgQBqMAb3x1yAAtvYO+DJuQtqwv8onWyrgTbmfNn6uPAWgkUK40CKikNIZP+dAE7GXn3uHt9EyM7QaAR2h6wAsgP971yy1ojRp++TVPioPukZ6PqvwMwGgaJzqAT3jwaA1k1R6Hv-RgOoEn44430YUYE-0-k--5Y3q-1nnTs-2-yAf5C-h-p-5-o-0egADWN6-4R2aBa1hFoCNAVAyATPrD0gATAP+XyUYP8j8K7wPkBPJcPYFoB6NGw6wBiFRx6aAsYWdPASANEBBl9LiQrcIgNGKS-oX62gRAIHmITghseTAaMHj0-a08Ca4JSWnnUq638y0AOfnJkjMo6cuiO5ABkJjYEVI6aBLaiL4nigmBKqpHVOviSP5El50jNSiAwLaojkhWqAU+niWwAcCpCXAudql06I7phAWFcRPTSTZINla6kJmtgnICDMw8WYC9ioEtI7ldE1gFgN1iUFeVjAw-YjAoNPQHxWoKgo-p9SnQNx8WhhNXpwKrDcCDB-AlwKINTa-5wh-oc0tvlxDY0awAdNVr6B8E3s9ifgwvqQCqycQNBAMZQbzyxqJ1TBwgNSkoOZraVBAiVMHGBGl7GBds4JOrC0Ikwvxts2AsrBTG-ha5jMAFfXNQUaDglISfIAaGH2O4EdZCZ3XntZ1kHDVVCMPbSgsJEIVUcus-RQpBloGQA-EymFgcQS-zG9yY6cSYgJmHYiUpAu9Y3rIh1zAUbM7NbwC231oEkvifQ-DHoAe5SBg8ciCdpZX6RllWor4WvCXjtKDFrY-wr7IYKxZzs8y4PCrppxDz2EwKQ+L4e3VC5AQzudhRgaU33DhdCRATAvgnzhikAEYAFMkfDABECY3OdGFYeDzlRV4JQd2F+noJ4Hn0dOPVGzBezvhx0GMcLDTM4zH5bAG8MgeIAWAtrGA+R7oeXHqz2qB0TSG1IJkExe5jJkez7P4Lq2MGL4XOHmIURGCjYJAjqU1C-B0hJgVALyJYLfjQxmbSjfoTZCwEs1oY6jV6mVMUYKIabCAD0l+Wbi40H5g9LsZTdqICRqjO9i+1YVLvSJqE0UXO2lHwQ6S5ImBTK8oKgD8IbSAjwS6Y6MJmJaw2haR+I+dEpH6AljFgKY6MMt0Q4RkGM0zTWuWKNYUAXRMzXwKCNrF2jNakKX6HyGbGa0V6cbegCYFASUtaqxvEsYrH6CBR5QeoPEZAAG6Nl86kaLyhQC0znwtEdY8Wllxy69iVmLbbfJ6heD0MdGaohEUjw7Hi1Z2co1tjxAnKIAdxEmLcZhHsDttdy9EDvpdhLEABmfoNuEwgIU1Sxzc8WJlGBfIug94kQDoAq5hBewEeEuksPcY-1BxRrBkRGAVEh8Iy+RSPBJRnKPwimx4hhp7yuRgB7GL4DcWJmhyWNwJzjTDvLmY4CglxsAFCQWDrbWAXheWICfSiokKicOW7bsLkMJJfCmIf4ACsKhEI+AZhpQNCPRFqCTByAPgaeinxC7QYx88mbblbANAySFYFHRsLRynQ-BhuwYykGxgEzpjfo+4eTJ1GwwCZOixPQGi6CEkMDIAYKIQDG1n6uN1CwrdyQXwzCdFoo6-cvpfSgDTosAz9QGhkjoRIYvC92brv2WezddxWoxe0reyYBj8p+hhAgW3SmEAU+m4JelFsMwgFgYU-iNQChI5hgB0xVgV0AMXZHRD9BvAq5ggKJ5gBkBjXNdPFAwFZ0wAgAJMJmpwmFaB1P4JfD6Y-k1QjlJXRIT0udlBdsiDqlcjIA8A4pIgPEAtTUB7U6jhJh6nID+p60gvqaBqjMRsplBG4nKw7IFhGUNmAkJzHCKhBJ000mIfVIWkDQlpvU1qWgNgADTupvU7aZgN2ka4Lhh0h9p5MwgdkypocFyXFxqkzTORbXBqYtKakrS2p6A9aZ9K2nRQBpSUkfkQHARmcMpYGLKUPTsCRhqO+wsafoXyni8H+cle6XNLLxRpcSJgYQIryF5SiHGMgW0HW1vH9iN21Y2idgn4k28jusLJCHiPL6EzOCPTEmUdKgC+sGJd6SmRyNS64jTA5ZBVvELFIiAbREYFyVzPrhIThxx+fmfdhYDRA0EMpd-qTOlkTS-6+kAerkSN7yzap0MqsQxwjIqyPM4iDWR4xcDaznGDY-WfkHFYTVbZuYfmV8Kky8xRYtgT5vjKLG6CiZEs-GkQAtnPcXQUUC4kwKBqOzUuRNGzNRGKipzKq4cvxssMZm7VHxhTD4f20IHGBFYkswGRVLTnlTVGiTe-u-ypmzSYZOcswfnMqmVULQQWDwEXJkHqtS5PEcuXIPyFfDJAqQdJCLPZHxzWq5sqWZAGqQ1dmyxvduU7LpHUc9gLoSaWnJkD9gip-OL4DYK0AkNogpcBoXW2nBXyIQteZAKKkrkFD4kSOReRnOTlYxXqFeBooEBtkhAjW9stuQrPqltAx8BLMfpCBxbjzxREEp+db2inO4owvYCJOTjNkfzl5X8lMNGkKwGx-5SCouhvJAVzSwFygYkJAuxaaAYFLbLRKHNt5QBGus85FuG3FnvzaehfZeR1xvTaDgFWc+qVwo8DVC+cy1CsJvRbZvB0kCQG+WoCvmR0XgigXkiwCkCRJKKZEkFPIFNJSwEarE7+qrKUVXQGEuDRvLWSlqN0GMmEEwAWCyg-QIQwQZCmVQSDYQRmzxMNGYCQi1V7xz8lrGqF9B1zwSXC6BvpBJQqBfQQCjOZvP65ytBFCQwlkJDMWZRKK7E5ZmJnUWHtNMMcOAF-QCCqzZQhi2BfWScqMSzFToSxeiEcJ-gkK7gMqp8H7ouLcwbiu6p4ut5fCcOdRZhQvL8UiFiODMnheEuIUwzzpZ8oRQAE5lYCgDRobIa6AgNJicqAMnMGU9K8EsEQyGEvYURL6pCyorCMrGVAJtK+EIfl4tUJMdOlRHXDn-NUjKxVlM9fpV0rOXEUWhSdMABcq7BSSDlzS+hTAGCjugRp1yjpbMo4WAzrpCS3pWspuVoi2ACSz4Aos8IvAleoqMAKksKr+lWa0aYmjwDH4FgaJEIJulbUtpMyvB4gN2TivZqRc6Fgs7ll+B+WXYxZxM-5cnLBm8wvmpFEFdcr4VzTgujUYQJQu9mvNhAgPEJCKnmg1LgZfwMlZjNKCARlK7S1hScqgAMrB0AgFOgV14VQzUu8qorMXlppikGMRpXnCSsjRZglAK1dts4BclUsRFvOC2po0OUz13g3SWVZAHlW-clVeCosjOT5BXLqVYKuVS5K2WiDoauqlqDyJbKVAE6UNUwCarNUn4LVDGK1YgEmWA0fF2nVQXMuXlOrFVv83eMEtCVEK2VncjSnnJ5UKqlVfo8gILytoD4vGpg1cdLFSBx1TVvKhNV+1ZhLoghGCwGempdUsqvVea4fL6pqFI01ZU+QNQkH1UhqjVebSNa82jWw1Y1PgH0GKqrkjllgxAaVbStjlJzMFTFVgO4Iuks8VV1MmGVQCKxJsEhuVERVhUaS4I62hSjTMmHFDfdR40wptfOgQbk86Vaapnj9FukHqO5jPcgHnRjwt5ggYgXNjCrhUFgW2LnSFJEHFBQ4JqOijmqmxVlMdxJkgRbIuodIHjmFcodfpAEz7hDESpABfu6BQ7c116MuGwggQWyUBGFU6f5O9i+FGgqSBMlheupTUArwS3MYwHzDAAswqSDs1VfVMtjlAbYhYUiDmnQ1ZksEvMWMM-K+G+gro2YYMJsGxD7S55vymVR+sBnwQCISTYwDJV-VbyoA3QIEtegaGmAhJiQUCDeVSSoLKAEICIJhsdwya+Y-QfZreg01ercNs4qUhlyI0tN8uCAbjbJqIKhSvVfyjdamsBkhbeNgW7BJWME2HqZJMm2OJph43UhYGsUQZPTDSwtDnN6GZjRsGRD7giouM+dDSoTlRbONtQfjYEEhIzzDNfS3tfYRukWb0tsmq0AbDqSQgDQeKG1V+x41UrAaycurXrCG3hbWVQmuaVrleb+g+tHW3jUVsc0MR+AzUTDclM+UthRCCfB5OVqgDx95kk4xQsYH6CYR+gkaZgFmLI3iA+RceLVVUtDZr0z4YAavGXHEB80yJd27hVYHAn9hec326JdqsNKaAjmUgCNjOqSWui4O2ac0hIrzjgS5kuZdpn6FrZcdcO7UI8Yw2YZXp8lOgNUkqPPk9NWx5OEDRPjKU2LKl9NewPgyAkeiN67AYgKzL+3nQnA8QaGtYDCA2AQZMkJwLkX+ARQ0s263dRTQLDHltmpVOAHWRLA7Mswsin6H2wdKHaHk-QVpQuQn65Se6PHaabVg4ndLH4v29Wq6KgQYk5Q2JCegURLr7wEgPEhmUOo8CjLxladLwNND0iJjYy0UI7ZKvV2xzh6llXoA4wVBNMyJAe4FYbqAkm7ntDQvmv2BllDjGOZq4QPpE0SQpiKsQU0uAxNX+rEA3kOtnYoWIuK1xYudZoS0wkG6dZ8dBWnTQ8UMMgmqANoHgERVFhZ8DajAJiVTBG1sV9gdpmRIbXt6a4iq+AOBKZUxIgowRShh3gL7K6bA-QT8LQGG0WUWBLkkfRDKm267kl8qkfQbvAlqVMSbyD7Y2QKIwRxWCEYWVixxat6PA-KqHTM3CgkwnArelfX8HAntt2dWQmzoro927aZ9S8KphrvZKn78uT21msZiQoF6IyQirwGRIaj640B94uCdCrl1qAIQmJYQPnrP2FUb5GiwICiqgYoG2OFXUtRYtMB2KqlXYVetAbwPkLNo948UKkuRVyAyDlq+dRGWgPBR9cEIFWeBL1XBrJ9LSz3SrunkRAfdAUoVlKQ7JzAsFUaTKCHR-Vr636goneZ5SVwkMyJq8qNDYPog76ise+83YfsyVHyGMrNRDRkor0yDw8RSg2Mm2VpX76IsQWncktlAzVNZEgMfNQdDD4rYA4Eltkx2eLjysdQTKfQIZn0KRKpWff-SZNTlZ8dd-WICQ3L5Dh7klNSrEgftCAFEj5uzCaqAck30zw8hdQedkrUT5NUkdbYec7vPjxBP9r5YI6rq102ZJx0y67XSJ7qu6IQau1TpDLGpqVY+fNBjMDxCheMyJtu7fUbpbGGGEgY+XOYLsIj67vGVdXZa0ZLqPqdA5h4-GLqg7DG0B14m-ZrULirlz4w4KgMODMO-d-uctOw9gctD9HlK8BoI9-tn3CzJxxs6cgJVEMj0RiNgQXg2OXGTb-Bi7VFt0aP2fagJHxr41bJXHwHBwRhiar3uKLkJoa-cv8IIpMD5EvDoxvsS22IP0STAPx6TDXVPaZHVx9GcFEL3mi6zI0+sxE73iqPzpp9-QcOeaG1Yz61hF21Rv0FrkRGN+URmQJv2EBv95DAJ1fECc3oMYPEpakHpOHYJATQjacxI8bvGOR72xySqXW1MIiU8zA1Pe8cxN2pDMJqIzaAJoDn29g-yXbGUwkuhrGYaTpQOk0IdnmTiAFwIJo+1wAXK9ScNXXvMqoFNWVl2QpzJb0ZNHUhrjkpnY+LXUOXBNDcpsY1CYwhmbMkZ87lZfI+B1twGyYWBW+LuNHbGF9RpNU6cgDZrvAXC1fT2vkqCnhAPRkUwGfFMDHxKX2y9nAfRMrMFTkx7ubKznZiihFhLXvZSHiU-RwJHcYIvYHcy31z9igK06TxqPe7TtNgO1a8cIEj03VMPVvc6tkP7qvTMrQE36YrN18qzA8Gs0BM7W-zIzfYhUwrhCk0VYgfRzndFSXMZroGkYTJTlRcnLnbRyS7lUIsWoTqtDDZiTCxOvpNJJqNYsXNrP7M2iTFUC0cxmZV2TnyA-QHM5ybzMhLvAB5osxVuBqlmo9JNUU4Ge-XVmpTG+p87efrMR6mzBa6YzeZLXHVy1soVZsXvVm8MD06oGXWOYO01G316Cr0kK1YHfrv4XwEkzVhiPoXyzoYLCzueDPQHhdIUCmizut1r0pj15r9RGU8Mk0aFo6wwLYssAwbRAzFyAHSdyrWR32uZ0OPzmdXdqohJZ70woGrxwpWmWlwcEWEnrVFN6ve4y4PshPv1PgogSkP+YKUJCMGepHCM7n6qdJ0gmCHmFoJLr6QKAcyQtVyWwYEswjTOl8LPjy4JaV6l1eIhfnWq1Uje-B+41iM7qFi3jllberFxn4CWLLIBosF9sG7PE89QcENdwaRrGC2d5gpWq3GzZSA5G7TOQHu13iJW2ZCQQRobEGaTk7MHTPqmXHoieRtTPEPYx6GHCwRjjzjZRkN2nzihVRDDboEo3qtRcEgQgMif6R9AkCtTaSksiCItaaDWDQEmLh2UEiiCuJuozFoRAUXjXp8EV-eGkre2ZKkhWgzyO7vQwxBVdwR3M18hz5qksMOBaVvRAtOQFI9fwD-HyHkl-BsGJosG9NXIABHmG9evALjsxOQSwyt6xutFzGvhBw0T4gEG1eP0yszrbssiXLkatxAW92e4kHm2cZkSeaDO-mtPyWK3GvhgN3S+sGvQGX4LoN3PhDdwLlXZJEuQwEsbow3x6IcVxGrwSij9WGSAYoLWlapYZXCqWVxXZtvOGUwQSfu8EtcPH1lX0MUYnGPx320DpUtYA+LVIPkyTXyAY9MRAx2j695EmylSMMjhayKaTCjki6EptxAIkvh8VUnDYCKTMKHA0fbFqMj5GrnLsDUXYIR2OJVg3WX+FCxKvIjLcca+8gvtjJsDxYEA0RVgnlm0C9gq4fvedJlBh422oA3wNoNWFnMZzApzTZUpcCnLCH2QFgTKLmum0wzwWNFaMGEHKQJAjSLLdkFhnSTwrJ7Xdme1TojCLZIwJ1QIDW2wQaJNA6bMUhPR8Bd3KgKN4-NDVbI3CQZwQbGvhGY4CCVWmVTKEGMBrXlTesyp9F6FO3QAL0YA2VPKxnnSSdBMAD+3pLziRCWLKCBJeATcDDo-7CS99dJ0S3BCoAnqGB5AG5huBK5nw-IU0RK0lhjIQYS9G63v3JJ9hbdgAFoPhkAGBXNIT18JJa-1YLG3BqsbBz5KH-wDgGQ4Yyz59IVHZgG9pkBnU6E5AC3sFD+tnD8HA0ffR+xTUv35W-QaNNbA5yv20UCdHdNtj-uyOZlQUpRygGAc6WcYCsWdAJm7pilIH8DwTHXA5yQVtHgyaR-echwKOpyklNBwJIweqEauKCBnv8rbuQko2ZA5rQPatz0OXi3j8UCJqtLeO1bJhn6IhFvGp1tjrNPOg4LpBh4+24q-ShVWiHoQiHnFtJ4GxUdGbUu7l2fOsFINC5mk7oo3DFW6bb35AQ5tG1VVNg9JuYGSviC30iq5sogx+OImfhpZZWX1pQZxN1io6ahMn85gQEgqNhvaJJqFlrRoXkAaAGE6IkKXJxIadWnBvT7lmXDviDO217CtuwOFGdiiuHytfu8lozyzPFA8zyKihScD5JdyytNZ-sURAPsONnj6QMgfQjsC8n9UmRp1aVtvOaW+kFZ5kp6F0Yi699r0o85oHP2pClTYDCC9slMCoAubC5FOi+sMB5BCC1juGwtDEADCJdjx0QKAExoSkmE457Q5mdpK1KDGJSAABZqXxADgHbTFIFhMCEZX6nUUpiFQnpRPWNbPgNOL2lby+Ql88V9Fzq0IMuP6hy8amiBxQ79EthNWnNjJW81aUwKHHr2JANFtoNOLglnxr5ZCKAe55ABrBkjoAHUudoh2GeWVQ4HjTDnIdBXTOnJZzqxSQzKP-ninS9hzVAyIN+i8gM1CNoaWrGirzoOgFgNPjVJGleX9hpRpBmOhR5WZj+c+BRLhwGuZYtEcgDCPrshCTJCIsqTmNBBTRSXxmh155iHjbGFIuYqaOYHDwG1cwnoQozWWkgJ1xQkwHwPYtbajMzSjbLsJCvEoSgk4YVYivRGgaEsayFeu1hA1+7t4DY9ZUg7tZio1kDX37WRH8Vx7Jr3+bd+lAyL0ilkpX8LqbSc6gBD2ahjD+xzOVu1PBy8pVJjtQUjr4h-g21cuiYaPjQV5i1lsCwUoA5yuql1gMF6+pXcZu+nCjmR6Jvkff3NHj8yx8B4ExE1184Hv++sFAf6PamED9OQi9MdwBzHklXd+wqsenabHIH8nIpW0flikOVIfoHh5r6DjuwGQQj+i+cdhSXj8AeI5eiiyYpzX+Lkem0BY+mAG5YDmh4W9Bsg6rF3Ml2d0T4gFyWajBlCnoD-KGBleBOxbIkCsDiS0gpgceTK-sHNnnY0VfU1vggMKiSCapD4GaaKw3ylPgurFuJ7QOSfHrMxFAxhoG3zo3kIdLROxdX5CtOiVgQXqQT4+pc2gX+C1poDeSeeXPqlrZvYHAZVPBRILodxWsybJmNMSJSBpO+rgD6d0Dn0oPJ33DYxXbAG4dOx8so5eroL4cXNJ8U6Rks7UzvxzcXwKPYr7r4Rh7nCtJu0B+LIBTiQK8oyvCTbbvl0EQZjiUcVxeJ+Q-2TFFf-3bPB48ZjxdQB+eu2bR7AD60TeTMtQZeu0N+OA1uQ8oRb3tgEwABWPWJtjW9el6IW3yF9N7GWre5vzcBiJSBO9PcVY+3yb4yNQ-lpTZQfXMgs9DtMCBZ9CogK-KjC3c-gWNVwBa-8UunxALr8kMD58-8LFsRWNcujyRKCKNMLr2wzEBCQ6AtFmShtpS0tBrBR7wTyqZTux8QgEbe5fnA4BBmlHP4Brl790l5awAXSCAT1obfy8TCFnXjb7RKl1rfxjqdw6HyQoWdXPS1t16QublmqxA3XJNGwJoF8PoMEgSkZWGMp3RV1MqtnqOul6ICDu6f+ECgMF3GKZoS8C+tQSPU328EB95PfnzDO6DpdWoJnutdkBlF0I0ssQTT4WpXwCvxA6e5vVrPIDt6MABr9oxUEYIA-U7zzoVgsoJDyti5ATOAHDALcGCfo5aiH3QlDCS-0V0bGYxjpKpw1B3WPorEaXosVdGLPTdT4hTicGsyDjFHII-PVdpLGvSdORdkP-NBU0lNEveu8rxybaTGX5I2548UrPumtpQAsV9kIm8p88eOycH+dMBDWCwibqgDNfOi-Yrd3JUi9FQieJB7fAY5spTBMtNCPd5MD8pE0uGCVAiNwzGP3+kpPffvcIKjDGD356QAKHmvLyZsbLK1tdqhSGoCukAn2zbSxeTI4Sc83eWpg3AVPQTnm5EOJd2dlt-RO3-QOGCbi+wKmdkCK8dhOYSe42gC-3nIr-CVQgD2pAGGL4duATFxE9aPAO5BNDAvlFAVGCDiHoRSX8hkkAYChwUk26GpCQxjQapAsB5MUUH+h5QKUBklNAbWg4C2ALgPgBt6JcC+xJgTQA+R51LAO5ZBA4liHBUCXgLz5gwcfAEDWAIQONhVSRQJkYgoaQIYUKKX9hYCXwdGDzgvGHIDRR4gVQNIc5ALGlqArA3xmiBLAshxBQ1AWwLIdRPeTDKYf2RzlnFyWA529EOA7XBBRHEBbHH4oAbWkb4--f-kCDgg3DjQCMdUgSI0U6MIC05IpJIMCADOIzjU40g1VzaAgfELGe51OWsByDtjfeC+B-gdHln4Y5SADylijCmVUJbTH3RXlMhZTUO9IABk0jlmTKoKY8OA4WXGlZZVoKzM8NAJQE1WOOozw1NlEYIfsvlP-VgcIVT02bV59WcVN9OVUyygBoLPtV5hlzeYOXVcwVdWc5lSHdUkssOUYLOVjIH4HgBLOSdFOUV+S7DV12eV5DQV-oCKFIDZxJ4PwD6iPAE2VPAFo32UUoG4WocGua7jCAQ-DAHu4JTJ7lghKQEPlEtdAg4QqBRSZAEQDXaLzgExJgegOSAtMDhiVFg6CrwYUgQ+ABBCIQqEOkEm-WEJdp4A8IhqwQaVmVIYOZPTxs9MyGDn-44A4Dj+JWQ0110lrJKDll9TAagjllVCckNZD4IVgA-Y5xGqwjIFGYzgY4l3GFFNlROEEHE4BOUBXZ9xKTLxk89yazQk491B3HACGODkMspwiQnyCBjqGKhtc7cQfSlDcQfTSRNPcB4ITZoQfQHa8ijbLl3RlObUL84z4QLlgBguDujC52SHa1IYbrW11gD2QeAPp9-Qts2g4DJedHjY-iV1kuAIecaVyNXwQdWsMx7VNnAxJnKAE4DiWcknDR-2a90TY0sSCm2Cx0EZkS4GfJMkm57CL-GrpnQnLmnlrAMgKaINuZLj652oUkndByuavgs4auTQzwBGCDIAq5owiVVW4luQgLHCsPblm1xYIcoCMBnsOcMCAhhHXBbCIgUyC24CA6Tg259ubbmEk-bS6ADsZ9PaTxAPSKAF01cEa0MH8YwnmDc0n-SsRr4bw6kAdscEVoKK0V0R8L40kyDGSXUoAKcBcDzKY23TJQ3JrxQ8sZAGFFDZXECLVt-cJxDNRtjNQHlB3QQxkGNVKM5neZrmPlA9QvUAlB9QsQZ5ncIJwd5k+YauH5kgAxMKgCZYoUCEC8d4bcgDVoAWXeAKdhAfnT+sNrHRguAm9M0hfBiAcES2ACwYhkqpbQE5hfxw2d5mEwsI9vTMAxMfCJ+hCIy5mIjvmX5keYvYCe2tA5UeiLEw8JbHXYirASYSwkWAJFTDJgecQGQAfAavDadPQY6A6dIwbjmKRVfFPDhQsAWRA9EGMJkgHh6YKCIyN9qQqiUBXrQll5xhItCMuZhMByIeReCKSJkjXmWACIimVUiLExc8B5FfgANYwA0jMbHSMOd0w+nT9AUI05lEjLmDCJuR+nGwGXh3gR5GeRFuQImAED4MuEii5Ij5lijfmURDjwaqDSOP14BPaz5UYwZADSjpIqwBBRdqfEEyUp8f0npg4ASDRqRYFemE+BandmnLtco85nyieUTCLUiXgPVCwwQ+aAErtEAYgCkBaot5nkiGosiIgINo1qP7AJQKyJwIIDZsH5x9wPEGvxYxQqm3Ylbc+QnJrzVOQiA3lcVQOF3BLAHNxe-IVjbRoKP6M21icI2z8oLQESQ1BQQSoBSJTvSACEo2yL2Tmooyc4NaDfiP4FhinuE4n9YaKIalaDmoWGMRZhCKDxao8SNMwxY02NEg8D3tOQAoR4AQ-0HInuUOGiBUXZ4hPcpKTANaDYwv4FJx5wij2TDNVCm2QZxfeQA-xP4byS0Q-gZ3gsIKSU2VtDzwMKlb4oqcoKJYenCQhAAZgIAA\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4KABGBEDOAuCmBDAtgBUQc3pAXGUEEMAFgPYBOsAKvAB6y5TTGIAO8AXgHQCWpYPaGERgMKeMIBGpAK6wwkmTwA2AEx4A7DGABmiAMawKPeEKPC5pZIgRhYxCfvJJYfDcI2qw+q5M023MFIdAQ0nJGhNDGUAT28rVmU6MGY2UzAAdx57TQ9QnU1siWtWLkgAGnBCSGVSLRp6RkgAbR5kDABdYABlKgBRAEEAWQB9AdRUEYBJIYGAcT6AXwB6OlhyRGhluAp4EdZMPYweHS5jnWblts6AHQ1U9m4+ASERMWQJRGk5BSU1KN0BiM5BMZn4iEs1ls9kczgCdQ8XlY5FI+lMkS0QRCmnCmyisXiyESyQe6QMKOgr3cmgKGiKBLoB08AJKXDAAFVWAjVPBlDwAG7wEGYmFgZwARxkpgQXlJQhiskyKmUYGRpAwzkpSpy7lF70+njAMg0tX0AGsjawNYgeWCwAAJQCMgBxLWAFTJyIDDBQYlw7gMzA4wDzrIadBQUix2EIcXDoKZym7FVllCqWIK7PxoPpEElXe7PXpveQ4uYPvB5KKQ4hDQBaMAAETqAHJ5OHyFh5F9ZPJNbJyGjA7IMMRE+6lamwOmJOZGTWvOTSFrRc1JB0aYVbCVLmuAIR3bqkBHjlNpxAZss8WjxWrkKlIxCaeQFyNpIRZex2BzIMD1gDCviaBIziqImGrwPA7jzgoyhSjeEZ9h6g6ZqqKKqDIaLBicOhCpB8g+Le96qo+GjyHK2rEAIlZZgE0A6KWQbVp4foaFQxCCKI4i6C4HrpAAjAAHKh6qapEGZJIKyhCAAFAA6ux+iUcwshqGAZoQawSYyL80BxO2U79q8yhwqoMS7gAlL88hTM2P4+PcsA1rABI2uomIaPAGTxKReG-mAbG4S8whgLU8iJDWHmqPuGioEhLAYtoepcccgryoqBiDnaopwPOuZ1BIgp3oEGQKZR8XCKo6iuHUubcTYvFEe6zaTrm0D8M4aICp8+iZShHkZASPKSaQ7BeDh9Waixq4dN0jmeHlHlgAMqj8k5hzQDuHR3M0fJwFt7iEM0ABUHSNog5AWkMpA8nchBgMdp3siabRFF4smIDEXJPtAt2HSdHLPcgr1gN057wPqP0HRAD1LZV2RuLV8awK4WiQ3dMMAUDmJtXUeCyTwmpgAAZGAfQeR2ZlLS9mL6dJKIyCOsSWZBXjBGAABSMgEgATAADHzLHo-9mMAjjGh4FdzhgAAMvAklo39p0DKmpAZEIHwoToHowp6Q28iNr6PLw-CACbkgDwf9tyy7bA+3TQAYnIvEcqwqg2KYm13FMwg-jILsBCKQb6mAhVxMECBQYa6wxAC5isDIzB5L7ru2DYIURPIctCnEGQQWa0U7YINu-dD-0NthuGkWAJREYpuZJFo6TSfAZxstXFFBJIOX6Ek0DmcX93-bFHAcD3YDSQ2vJdZ6ooSlKcDwLKUYSB+lEiJq6w8IYC-CHCYDLCkFZYr8KhuRgvf9zDAwpMCcTINdy8OFLign1EQjTsFPhwBfwt1AUGAel8PMJRRCQSFDYCM0kAIaD-k7RCA54DbCXikHgHAEE8nuNkGIiZ4zb2gnfZwfcoYDyVnDaqGhaqwE+ukNmcpv6nVQEKdsoZMJtDVIKD4pEZIBU4hrXMJk4jkGNEIZEFZKGZF5MoCydClqGmQBhSi+D4D5ytoXW2a42IcSDhxEakEUj9jRLuD2GgBgaBiNIUy3gazeQ3ooBAiYbI-iBF1Akmh+SkGUIKLwuRRQ+GQHIukYjoI2AQESaiYo5YmC8nXFIDMsBwDcERRy6luIL0kAYC0T5+D2UiDyDYZDMiPwkFySkPBJBJDZAAIQkNAJ25hFLwHNEEH4yBSzOBVgoUg50xoRlFFrScKIbQlHzmuaWmgzQbWWGuba1t9pC1Os0D0ygAC8xBkasGgDgZYyx1DZgoKoLgvirgaH5EUZY9oAByAB2PoAA1DgNyOgAHkdAFH0DwWqZddnkFUJcRZszFb3UWSstZGytnrAkaQA5VhJnLCmN0AAimEVg7NUCILSBwPgHQABKnTVDbmWH86RCzyDLNWbAdZmzlgZGpVwECVUoXIGWOQNFjxMXdBkJIOl2Rfkkv+SXeZQKyUUq2ccewHKGXLCMJ3ZELLODGxmvoxw98x5zGyPaDl5keXKD5cQwFJLgXktBcsUVxBxWHKldAGVpInikEmbUSQyxrDz2ZesGs0BlDwnuMsLFgwGxDD6FwZAqgOj2l5JpV19wPUIC1bbFRe0KhVCIDsnw3zRkaDNE0Z5rz3kqk+Smrw-4WDyBXlXJRkAqiLEqEQaIpA0nKEYAQaotQbRRCaAATQAD9mnroABkAFTkATXdSAQoUQDrwJAe0NhECDuqPYWQ0B5zQDLic3JTRygzqTQ0touZujwAOHkigTQyhVuqDUl5V4G2JtnWQeOi6miSA3dUIGqYElNCGI+ogfgX11GgE0CpH6oAb2-fcJoVBy13UrVeyAG4AnYHHW1e4MgOCPsgK4D4l67pEHyru+yqgBgYFIPegmKQaw8BiBIAAb2EbAJ6h20Bw3UVQ0B8OEfHQAHloAAPhI3ScjYAqNogA5AfKQxNByHgCxojutEBmh4GaEQAmaNXqILQUTGhxPMYI00Dj3HXayfk-x6jQn8r2n7JJ8dfhPQLtTopoTtBTMek06xqAOmSM2aM7R6o+UGwfXM1ASzogO3uFs55lTPmYhOe01xwLwWPPKaYA0xj0BuhkEoNp+MuHoCcegBoITWMNMmNUAxzwyXUsMHY-lhAWXVAWjYxlpL2XcuhagDeu8hW1MaZSxQcrLnWtZYXWANjlXTCcZq3ZjrVWou6Zk3J6dV7INDvUhFjDmHUNfFAwMf9zXID2XWO4pof4qBYulkJ3MPXIADGlmB7bpgczsCaH0bof4hPMBOOd7o9oph22u-FmABxBPju6KgAYf4+jgcIIsCtJ7IAhlIBUiKQpf14EbUQVwzk4NQAnh5DW3QO3kA7cgDtKGnwoj-R22AQX+OoJfd2oUPBhAAHPrAZIZ94lAKQ8cE47SR2AjooLKD57ucHC2oDWE0EMSCMgVtEHCjETNMRyEodrg3WoGAmgT0APiAPbAD6gD27teuwBzCC8oDtGuieeeg0SbroNBT6iaAAaQ+o6eQnbacoZ0RoQ8SF4D2ifH+7SpAYjGkZ46C08mFcybUtdWCQuLfJr2WmjN46sWmGQD2xsgh80g2NBheOUuLcOGUKwKgGxI1uyaAAcblj28gfaJAxC6Y6H8FZY9Qc5areM5B3rkDpFoJoAAdjgGAgsdo4ImRQQQg-qd1OdJ3+g+fOldm6c8iBtdgAZ7mR02veca8dAoFQhR+27n8uz6AnPCc8758IAX7hBQN4ENHVUjCKChhjKz9wf5iAog1o5DYMRHTz7QAL5qRcweoaB87HpQYLq27iCyySRNC7onJ8Y6YobQHgywGZzKBPRmgaCqy5bjoVIH4aAfDkbuDxhIFKZDq7ZiYY6QATyrTN4MAW79RzDiDtp9DnLp6PJtrsjnIobWA8gVJy7sYQhzrkC1h8jprca-6IA6B86uzuAN6sCOhqCOioEcpcrnYp6kLC7Q7qB5RnzS7+ZyBGAgbI6-akBJ5QCPL25CY8hJAIAIE9onbbY5jUb1rjo9qsCOT1rbZRpCgIF1AbBCbrznTnZtqQQ8DoIKCr4eohGmAVgIGOhyEkrTrbadizS5S1AeSgan7n4SB07a52G8gVjwCsHobjrnL15sA75N705fpkYUAyDIBCYnKeScjJy0FG7uFJAfBJAgiG4Ub46kQdpJAvZkAZCcjWi2hNBzCTzb4Ex9F06DHOrjGqz27wBmKaCnxI5QBUAyBr726OgLoKipjnTAFzAUarHzYW6sLW5gz6h9DkCjpGGo7ZBjHjqO7-7Phdq9ESBFqbBqHbYICNDjqPJT5qQfSqB74xC-HwAaxpLa7nFAEcA4Dg4QAi5EB3GUA27oEfDso9ToivGAbvG0HgnB5fHQlgCu71zqBCYgnnbknuDh5UmInnExAepuhwnMhlA3FQb6jSy4p2yPiwTODEmoakny7B7SAcAyAZrAlrBSmKFwkImr7InOhol8lUG-yLG4n6gTwOEY4o6zqSmA4qAaw8Da69GFBBDkIclpG-YMlKnaSRDKAfAZLzzqAa6FAcDRHwm5BAwYgoIAD86JYAmJTADx4gBpFYbgTxLx5hmGJJ6OCB5pEgbJ5Axxzo9JipYJEJLJwBrpqpSJmZKJmpEGFuoRlAKekoBMC84paOHxUAERdI0RiJUa1gICzgsm-aOZoJmO8A3p2ucmfItOAxMgMQ-8HqzOAg7+k+OebokRbZsRNgKh1gAuvJFZUGC82QGxWxzIfeiZq2jZtB+xa+AwjkTqwBmulprgA622to+gTQF5KAkehcg5PpdgBxIgd+IgegT8lg0+MRQBGgiYv5Ag3htUFY7ps5uQfQ2YX52uxoIgaSIFm5EOlZCRsAe5fgB5Z8UCBQ5AUIbgDZppexBxS0l5gJ4BIMyRjoqRxR2Y-uAgVp8JCg5OlOsAFFU6655xNFq0d4TuYBwYHozRyFKQdFqRDeOYZobI0s5OOE7gNU9p-+Gg6FGJFuS2uFOxKeSMjyVhxpbxKZ46Z5lFr5HqmZElKRYB0JjFT5Jl3FVFFle+AlJxKhVi6EginZQB1l84joQuWp1Q40XFzgulG8hgJFR5Q6J56uoCOO5+5uv2j5sVd8S+7i1gDe7gAWFG1OfIGuEg0kbGwVvEnGzMII2uJBEgG+Au2+C+3AJ+P46CmxbQsFM+P4hUkQCo6ml+-OEBYZEZwmHkepsBL0PWhlyZTZkA3QC+JKe+TJYAlJQJSVt2sV2O1SCVng1SNoDSM48AFoAWgeweBZ4BLo7iXwB+5AclCluiAlZ1NFrpuQ4Fl5HO+OF+C6vOvVGgAVW5Q6Scbs7Kfi50wh+AjpZFkALZ9Ow+PR8JZaD5K1gOCIge5C0Ju+J1Chvwy+5CIC9cwYH5w5Y55ZGFUGvs0xpgUwpEaEGEZCpFxlUAcxfICxRFJRAxAwDOdlA+zgyMPA3pdILoj8YA2ue1Kg2Nt5ixzNrVIBZx4BHqDRno9YdWe2WgnG8FsmgInKs2zlJ1e+RZzVX1bG2witGA3G3RaIqYMN-RB8ZoHwQZYAe1pedVV+C6GuYAHacAakFGgtGIPIvwMtF1QZ3A-VFuTqS6JRCABFixNNk13QaZj+ylcRcNTF46FelhgII8IgSh2tB+-aNS6mLo0kz1Z1GwtWPgxosA3G21sA5kx+FSC5ShM575XpPpBRWMVcggPpoZgVn6sEe6wosA0A5ypAsAT0po6kqgkdtBoaGgo+IebpNoS1SZMO8NexmwHq3a5xjO9dc5fE3MbI5BZGzVdgr5yA05m+IFzo31RNi2mx2lr85Ne26EEVdQ49DuoBNYW+AuiFwgTl5x7NBBAeU+S+kgHasJFoeg6t8mFloQSJttsAJB9OZoZ19ptVpe6+Kdegadn9PFgJwc50lSxoFl6NaSHA7lllSFJo50iYr5ttLd6Vb5c5CtKIStXFa+WDmte+CDFN7ittbk+tcAjDRtu4bGnKnGQj5A3GbGPg3t3cmw0ASyzYWl2xUQzYnGh2x2+tkj8A3GAA1CDJzrTngNHW6XtRLbmFYvGAzlwKI+Ixo94B6pSHIwo3hcox9l9lQOo-fJxngMnd2tpBnVAyINBcYzwHOahSoXvlxVxRoFY4NjY9I-Y-I9fYo1oMo5dm48sBo549SUKEkIzSoLoo5Nrk3ihU5Gw4oVRiPnYIjuvhEiCJdVY4HVBriAgEMOdOpGOiDQvTFeOhDQtXUM0WADrudLGb-VAIM5zQaNOR-QFm3e1XTqBcIArnvhwK+fNGPGxiIF-vADoEsjcJAEKkam0TnJddasbLs4fR2BWDs5ACMGUjWGaLs5xooBsAofrYgNxu4gcSFedUkGiDzSgpZAFoLd2rkAw3UEbfGMgNICblPbw4bdxntUkORrLf7ZAZ06SX0FVA7n0z+GM7GXSI2KPpBGMZ3aLq00KBPHfKMkDGNctYnQOWtS9VzptSRjyCwqrRXYuZ6C9EELBNvgAsiz6WyNNeAXeM6JywIEDBLc9Wfq9dzpvl9Q00OsHX+HIOHURc-Z8angfXHQ6QvclUnWg4gBg34+pJ1RQDnUhmPAXRZZHhI7IKROXTyJXdXbXWwPXZ6dzU3dQwGW3bzR3T9dUIyNbuEJBMpLAN3r3mrlFSabTZAH0GaCgxgEMUFhTmflPcGFviIDJr-iM5AMKeA2-cQ+4HbVYkm8MamxU9CSWXvtm+dO664NnTnvVfJbAIpVhGaPJhnG5OPsA12vvoWF8CCAZsE7kBPpab0Ty+hGaBvsvqtGvmdbLcHP8cEiIIddPpa-JkyN8wTOpeGUHTIyq7AOTWetmnhGqy0dG0ZZNRsdAHA7aR9PHbS-ZVALuqznyMvsoc5R+1vrzkRXQ7kORggCSvAx9OQqjWKwqHnAtVqx6TKJ67zc3T6-7f6xDlDlUNBloGwdG5AI4zsY8oVB6sDeNZAHfIKC06wE0JOt2YfH0Ewb9vGD87ADXS-KjM+cJeYy9kYKwKgB6miBwuEdk-ANvjXiQenp5Z5SEYPW7Mx-8Iec2WwI6P-sGFRqoHjkJuFGiEMFzK4MSJXpYbBJyzk7ADXvER1fAI8iCHhJ6u2uU+m0B0IAztXveUlYIIAhJpYBZyYKRNZ2CUYMRRaDEOU7jfyFLFW3vpIPRTJvSeqNED7jIGPZ8a-eAfPjvB9KPhU4gAzssJu7q6thp-ADJ6fO2gp4Z0J8Z85wvU0-AC0xdAEd00KAM5Kx83yxV6tvYaUU4S4b9gcPPNLJsEx93ciH7gjTPu6ogLvt+8g0JiPVUsoLAGXB1NTSZavkUzEZ4HvuFOQ--oAcAWaEl+p2AeTN0B+IpNHTyE0HbHyJpJt+TMgud64XILuox5FVADe0Jj4KwDEE9w0kt69yNA3o+5V0kOdN94-fgS+-AAzj2mnpU2niPJQXlzwOwMjLQagF4YkdttACd8QH1+RneA7jYKGLjVrsJwOiS5AM-LJxgDxwYDDaROKfoDEN3AV38KfDcudO8pwsV8oeAe4P+d2uE3jv0UBCAkzkE-Q0ttIQceJahai6tmQLAEtn15ILyA7scR9O4ngGxpL0JjSKQA0H3cSUQE6MhuOibwBkQKXlgG+pBBir4fFkQDsBsNb+OhPFyBb1APlFMCEgwuQMVgl1AHxLbdrvfvvAurxgjwvUUMgNAL7-71NsH6HykE1g71ANH7H0KP702BypNdJLQNzOZB7xKT3An-JqTvFpDgG0QBJLyJjMSAgAPa4K8j5x06tjX8oFQGDd0Lcj2m2n0INu35xu9wkIaQH5AFQEfTZfPatvg6iGaAb8+QzioVSWxs4BkF0pxq3gvbYqYVUfQHAaryN0XenogXXoq9ULgU35vJ6rscR-1FMc87QT01gAzXeRrB8PyPoHIFv6tvqLiWP-NRZI7l-gu7AaspAo6XsJqXReYm-2ZpCYd+dQYenP1mIwCCY9JEwO0wuxIlOyKBYEhgOV68hdizQVPpACmBF8pgZA5rEQAoGUCSBUwG5EXwYFUCoANyWgUmSICsC2B7AyAJwK4EL0pgAADSL5CD4sHQbbNYFoBtBmiB-Dwi+0eTnIQYPfPvmPBN5gBaAEjD0M4FIhac5upVc-o70ciuB4k+gW-qDVjY9ocoRg1wGOTsJTovc8CUwewKYDAh6ykA6KmDQlyf85AHvTdNmBBDeEXukACXLVxdAZ00aKFLmMhXcBAtlQczVumaF-zAEk2zqHdmGSr55dKaaIAPuNXcGxt+8nNPJinycG+CnASPX7nm0HazYta7gPHKIk9bsUKc0QoWmbQGLJCgOBMShhsBdrDELarsdiMoF3bpCh09hKeK4Nb5OCJSsbGgO6haoYtChPgqAI+X8HlDgh6kF0LhULZvAoiuiIBo0IFrNDheogK4u0MuppDUOSZCMkQFwIpY3wqATIWMInSQRp67EBnIC2aHdDYyRjdQHLyHRyhfeE2WgnViXhZY94wYDNOTyRgowz4EudTOKVlxoYySEeTsss1DA8B4BrPV+DTyyHc8SG8A3kH3SxEPCJ+hTTsmklIjOV0RyMH9EbygDUF1MtBegigCL6QjX4z5BvKkVa4L0OEUucdCYhEAwjgGEgBsFRjOGV9L6s6SwCCFzC+4uekAyYZNTbSN5kAoZTHhMRlHnYvCueFYkByEzsQeQ6ogngcAYDk8ykUoIbqREJHtNiOn8c7FUnsL6CoA6-T6KQG+jiknRX0WUc2Qa7Q80R22U1A+nHT+osU9uPoAAC07KywwIYeGUC1hecGSPMBEU9DQ9hei0UVNgnG6xjQ8AgPMHjwlY2lXSljYRlY08Ff95AHDZoujVzHctmuIVTeiC1w5RBOMzYYptAETCgslaTtTMWaFhb8NuMeTUtF4LLHYsl8VYprryxCo-DqgTTNwASUyiN8Tg1-coYmMa704axolNQDIFAG3EfIGwCKoKH2LAgc0GrKAH0C1zGcWifo10W4MD4jA+IIwNYLuOBDq5HwUsWobA3F4gs+GYLUbC+IkBAs+QPY78S7VQTCh0yxGdsUbTfGbweAgEpWqV0Zo-8F6d47mCMHsh35D046fIbGTeSP4IJnGApqtzJHQlYJRtbMcUCFBrCReaSDXB6kEZFjhGmor-ngGJGES-KYAe6pDyXaH0SRxTdbjRX-KREyCXDZhtpH7F4S4xnJDMDKzhIkTN+RfO8QAGZ7xtAJkGPxrr9sOk2+EQBA07JrttI0kKInmH1CWQ8JPIb0soFknH5Q0PIHCEaA9QVV-27gPoX+SNackoJbyLiQRNJFsS8eRnHdlYysaMSZAeAQgt8l0ToM3JBQjyb5LK5i0Wcn4uFi42+yyTEKMvQEh-QiZgUJAeErFClJEn2luJrEviVfkC5T102qgFTnjkGHhlyeBEc1uKRAhq8iKzoafkOnAiQR20QnFQPAO7pvpzwvo37ORhVgZAECP9bbHHHIC6dAxh6VwplVAweg9uRrITCVCKB-pNiS07bMaDqmNTk8kEcZCgh6npJUyDeYgA6JIBpAbkkSOruMJjbXtCeNYCykJnhLeFgakACpKQCKKuF-ue5JoIAD1Ad4fbmugLlAZn3Uxv1TQ6O8yArAB-ttUcHVAVec3cUuQgqLL0eJYAeHOt0TA+Zd8vOefJAxJhUAgsEiAIgnVKEBCn6ZvMVuoK-7PE8IOgsumAEABJhGoLYz9R6ZQ-cnljGul38sOUALCe+IjFlDAhqg6mZoLpnaduMzM9QWzIllnS1QmUeqXKORm0Eb2HwLGZVKZrEwFqoHVfL+wAKtTqgSwoWRTKgAiyNBtM7QRLKZksyZZuguWSRChFIzeZkAR3JmWQadkSY70hvNYEFnkzweE6KmebK0GwB2Z1s6WZ5HZngyNK6HSnjsSMJ7MOU4pEYYVFAymBlA0PGBtFyQHmhF+7lGStN0wJdZKApYhAjcjbRnSEZNLPVlswhCIzrxkAZWbkTRkYzbKzAxen4ONn+y+gIfUxpZQInkBx86U8LgTGiIRT06gnRmjBRHa6hHYmkaSbTmqlijo5SrICFaOWp6BtONIhuc7P5k9p9APaIvkbL9l-piM-4+nOBS0HHAPh74+KTUJAkpj6cMUxmovNcIsB-AZSI0iQMbmYTOae89PNJFDE9owgNeP4oXzblHzyhhIoIIVGCikgggnobaShAfFAgqIbIP8FYhV7eA35kUReeT2NC5INQ9rVQDc3xFJya5m8+ud-L2JEz7eEwiBYEMVGfs+Knklbt5PJF8Ur8Z2eQlYnDzkILQtbTMsgG1rjcLKL80GkKG5hbyqF4-GhUtGwEiAKBh827JGJNng0FOmtRMF5N4nOQOFt+CQLgT-YqhGhxM4UNfg+ro1eFkeARU3mEU0TcGooiEYkGyA6i5RNk2uVXO4HSKscL-Zqm8iUUdzj5BrDJKxX5Dvt6wuwynMcG+R5MBiXU+QIXUjwRL3AS-M0O-VnzBhxuzueimIsq4JAgQUi52RUhAVlca8f8q1ntR7TKAwFJA+haor1z04tFa3aEjRQCwpLecS7DqMYxiFqAwJJKWKbUxyWrZfE-2WALWFcSI5P5Ew6RaFKM6lL955Ss0JUuqV0LlFncpoPUsKlsLmlw8z0G0pcq4Q0QFobpd7Usx+SBlDi9ITthMLcz157igpSjJdmmA-5-ismeUP+myYWhj8uUucXRpqld89+SQBRgtoZg5Mj884j+H3Qb4lOeynlrPgtCFQd2g2L8UrVPENcF0rLXpevlDy84lOe3KWop3NaFssI+VXZaHisSQqncSYC0IE0fw55YGTueZpBwGymsWqnlD0IIwNq9jRR22SUDaHuUqynl8y8eEMWcgdpll3A2pf7PeWxCBiFUygMRHIBQqUKQKoUGyDwmoqrM21TCK0uxWKd2GSXAlYJROrEqGuKS8ledGqrr1IOMDO9nSoyp84xwlhZlaYFZWiVyAHK5FUbQuXijLeUnFxTdM3Qby65Aai-s7OFGeBOc+gRKisoCVvKDhyxazM+Fs7e0AAnLzFxqdLlOEa-HKcIr6uF9AI0yhWGo1kdoo1Y8UGKnDbS2dKcNAO8D2nFXVzY1gQ6VZ8rcxJqypnFRHNsQkBpqM1O1LNapxzWDKh0OgWQTkKgBeKS1Za6SIJF5gNq2uqywJVABbWHDZ1fazCBVOzVVTvVy809I5HNA3Lq5QajxQvWkVfFyEyDfWS8pUX+yNlQnBvLip1mXrLqpMElYn17mQkI8l6k+hwAGxO09M9Oe9SIDahqAZs763nsBLmYSBLF367JTur3ZQYgYtAQ9QuuPX8qmgKedNNrLdl6ydu16tZYGKvDpBYAGQLJO4nNZGgEoFUKqF1BggswogbIDZZfMA204+i9OLQRaA+BGB0IBU05f0tSEV9yeBwJ8ChuGHkLg1467eQ8q9lz4DZYmptaoujGiAR52w1Wkkv2HAsSMztKJeoB5Cq0ONZEjpOyOHWGzZAH89DQQUDyyax4FeHtDoErr4al1U1LhjptU305ulhwoPGXz3yua9N7GvaYZukDGbuVv2XldkK-mFKrN23PfMKsoAm5518m15c2oRa5B+ajnGIM4D+Z89WmUzYjBxrzBBaawV5e6iIvsV5rfsQMZ4rsHC1TLItD6q9eAsXXlClNvmoWg0MpxnytNym6JX5vCRYb+xhW3NRcPJ6upmAZCtDUWoeUV4KMFHRrQpv9mhpPQpU6IlEt0SubPNKdBeKqoariA1KIWhek70OAWaBy7vObUltUWzcCY77ALGfS6HyZXYA7DBkBq-Y8guQoik-IUz-aQllCQBWFUXUlpgF3K++PkENswxLyENQ6LIGKVcXiaT1q2aRWTCFAAArenI7jKRLh88NSprYEMR3kAUdwgBIXW0pVO1RF8GgajaFWjUZiF8s9EBhJDWL0JtIaq4c7Mw0Wha1QgcNR2m3yRro1Eq7HRdry2QQr54FM+e4GY34t7OWarnRTiHVk6LcoCCmCMCwDkxwEa86uXyBTkmU05GcjHo6VIBzEVdCAXHRgFek9ooeRQ1DXcsm20FcdSO9PLvP3mOa41Hyw4RTnUhAdjGCu-HVBNB0QZyeUOvYE4CXAJQ4ZYmxnZJrPWAJ+A3jQjg1qx3zaT5noeTOjqxWpLCmNFUFXxgZykANcXC33T6qfRCgsAauzxc7LR21B0ZxS0ns8rO03r1lqtL3SB3R0Wt+2ZytAYJr927qYAN8FPOv2+Sh6oAa-LpKhOuXkARg84EYKNtOlyiumy6ipS0PTyqy9qubAYC6EUxIq4WLKt5ClMy7L8989YLfe5vjUDE8JXmn5VYj+WKdEAKUzPemRVVJ7sW2kRaB80Eo8sc6dEsRlY3twGrZ6mVVPbzgIY8LtYXMe1UaHUz0q2xnqzjEyu0kurGqbq2SXgwPjsAP5yCVBImEfiC1H81qrbVlWIwM4ZtHS9QMgAvq7rLenkYfSiEMGibbpDIjWehlJnpY4W4awdaWo7Q76l+qhY-CwZ50aaZV9ORNW6Fs49r01uSftZutYP56BqQ+75PsAdk0Gr2tBGTT7MYPsYoDMm6LRwb31+RQpRrPrRaCgnuB86joVgKkr4MtDlNfgSyBmG6VGbXyt8vrVfMK3RbAGp8+Na3v41616JYjc5I8ioB4BWdhw5yVHkI4LN6KGcG+SY3ZGAH3AeEgzWaGTZVwgZ6mFKXirALbsiovNUgxDuqAyHiFSGhQ1AIw0BbXZP7eiioafZMHexpRy9fPi0OqEdDvjBTgVNBWOH6ceEhFubX81YauNQMm-XmG82XqFW5PPIyMC7htNjxLsp9bhrk2LCl6F2SgFmLwkwaZj-Rv8cfvqJXb+l8AAVlkYGaq1bDg5BrplUyraTDqvtEHfGHMMW08JfG3JiDtkmOrxkwGlzQTFvJtbRdG+3sYS1AmfqL1esgXOQEslnTRjlqPkCjxL25DJqAwf-JmXnzLAilfS6vY7tUNQBvGugOoPtK6oGdTJQukotHG32cqgJu+ho-LSgPdyAe69SzKPNckiBGlREvfD8e7VhGNg-2jMHcbvK4RuxRJuCcEaAYgM1aQ7D9Xtw2Bfop5c5NI2-QuMEwP9IjYRiCYoOyHImHkMdWYMmqEyVTubPCRqd5D1GqS9YAYIsepU9yv29JkpuvQzAZ1IGXC+aO4CwCs5nAuxlBNkekOKniFVBt2GPp6iFr6ds+qaogFTilSR8uoRHEAu9o8GmaWpqAxGbYNlSUp-PXLdPE5zptMuH1PyCuoa5hEsxghoM2VMqaZHvaEhznEkFlrH4gF0DQJg4aLP44o1sJA+Azi4niShemZjYL9vtOWkP2dY9wM2CoDNhUpWNVCsCZGNumRgXMr09grc6THQxOILYxrF3kXjKjahuFtObCCzmJA7kmCTydIkknoSx+Fc28j6UawNzXx78epGZB-GZMbDE1Z6A3P9FPghO0UxdUQPoyKMHJcQ4gBYAwMPl9OKCT+BJ0fQMjGIF05hT73EL8FRe+mJ4BIVzdJ9GAkYJIpn1g0dTKoAYPIrACKLUT4NRUO-Fn4HqFw7EzyDgylGVw2YoocScaBVMpT6w3vKcJsGCi3GeAGAYvWKBrBYBHjiILSJYn5xtRW6tAWsBoFrBQhFIX4JcDOAouED2JqsY-NqZoWaAUpiJAzAFhl0ZcGcaZ+sOpOMWSFS0GgO3u0agPBGQG8Ybk1Ac8myKZdD8neHGNgqOcAdNYQC5oGAtQZQTTiiE6hLyWGBJjNARZbmjxOIsa9i5lzNGd8ubEt0veFKcEbNAdoGcfbJS8mblaqWr89YDZWab4no0fFxbE0+vQQAWgi0jkDw7k3dUKnQLI+1y2FsmNV4Mtg5IBYvq1ZRm4WN7aCWFa3PcZSCmxpM8MXitqX0Z2kGXdceWKtGKVnLEXqZJFUKqlVO+2ExkcctDpRjwmncSMFUBmamyxHP07Zvs0SBlDuXRLVUe-EaH9ZvPPCTEW1yKXiMyllMwlfcD1hpqzzDBcRmcP6zLD9OaqlvnoqJg9AnbE80rVaOdbqTkEeS1FrhUCA1NVmoa4tHRX9qAshW2iwOHOjTXcjI5ua0BxGBlXELsbYUXFu5ybW6rvYva-PgOsmWFLKFU63FcZxdX3lWl-mhSrPpZVMlMfMVgkv2pWbiC1FWxRZThvkHirh2l3r6bBpu9+AoMOxdFuxvfjptrAILPGZy07K7AJN1M4le6vS3PQCMq7W1YkoittJNoc6O+pe17ozqoYVm7DaKvD6dAzgPdIR0mMAA1ofHjjABXQx6mF+HCWWaXSWoDlt4fJ6FSp6n-KNtiiZwAkDvk6QONDzS2asutnYAPinlp83XEGAZMx+aSMEMjyBMxwkRWcnTjHKqgwCgOo-IX2HPFXTRPdK8TzamEr1Lz50XNvmyFMQbAVJuY+nM3pxZnasUBhBqDNj2aQM6yDey1E2avV1iMpjMgpxMgRHZpY-ZlsVxIEmP4QNXY4e8BUBvzykg5kLKVHmbv2GJazYP8H2ZEkDnNghYz-cIxBmUmUaV+RyGNwm63GttKoMvoUwFy74Upbd39t83FMJTexR91en1ZBApS3xbGoC2PFX2GZMIVWPkIwVcA81X75kLcVBlwIjA8jkxw8BoGP4gxq85GXNupL3rkZvaFGVTiqEg6UNvKQRGbMywErSXvD3GXw-4dJjUho4kQW2tAFVpgMhTV5nA++L8j8ygHj93sUkpSlB2pYeEl-qLSZqHDMuXZkiQIFWRkYDAV+M6jJXZsTrSAkDkc8bY0hm3UbUdXB4svgf8gz+mFmgOA36IutUursJO-i2Cap2Lam3TOxQBdMQyEsXNVjthz9Mwnzoj0i3DmAQAEZLOA+6tArtzAoDNTm0zvHfUYS08X6+KlLoabS4cBedQ6CnTWGxHjp6aOuNPEUXJ4dU3A8OVQHEjIX8gUBr-MWpx0wCtpumXaBjgLPGloQOasZFoiaNZ4+ZHCIhUZZ0V0yCdmQKGGWoQPFJKBugOYZayQLsd-5p65t5QI5y1xO7Ah3+4JzW16fhO8zQWx2N1TMm8PEVoT2Ei6DeQsAi2LU5JTlRHwkpTcRMo4VLCBWOdaczIEECDuwcKYBnH5dwEDAfPhcAES+AC6kXISy1Jxvwzp6YBpGO9fYQoMY+uVkGQB0T9uKK12gWEwBfnDuIF-KVT7kGpypdyoi-i8fMDq+50bm29N7aQvihLWBmLQXRMVI0XZwjEuVoO1B7Uw8kCCMoF3QYJXAJyShFvL9OKjUl5Dd2SIEnSUhNgdeVwMM9UX0u+c9k39nrfcCLR7tmt+KAuiEDuJ0IGuBcg88gbSRhSUsbK4J29JLt78i1vbszesGAhau74jgKA+ZGht4Y1LojlC6YBfOx97qVWHpwtCKi52IL81z6bUU2vEXg+8GFzFhdQAB6hikF3oDgCUdnQAuW16a5GDevzs6Jk3v69T7g6yDTaVizICO31y-TDYSpZy-9llx32czgq5Ug4rJKamSxJPQapS6dtUlzlAqWuMERulI7noC8OzloYN5Sz+21bH0ikghtwekmv0xPx-DxtS8ybh7OQ9XEQkEATgDtCr0ofTz5yQFZ6iW1WZI0it2DRyPyE6oFF1AIOoVlqpnB5FXq3tD-qWJM2O8iF0ALTjKFpdd90gfQHCAkP6LVXs8cAD0N295EJCTg3DF+DzROVZuD4QgLZntXRwDEak17stx6B3ei544m8A92MNbceDR8PaLXFe5Cq3uoAAwe9yEGAGN1mW6mwnBijTs-uQqkQ-PVG9RzfhJl3Av06zv8jwlASsHyAMR5CQs36zuQaSFCR5dZj94ZfB6aHl1dtyYQ1tD54sNaYE9S8AudF8UJqCMXVkbI5pfx-xc1SLh22ZwPI+YBYpy88brvtD1GKbAuqDoFqeR41VVwqM2QZNlPUmeLkA7MNKcC1JUE6uuS4yPalcb0lQRUlKXN4R8u9rPWHJv20d61b+Ime1nvwG605Lxp3lNAbILT1+mOAnEOFoQlfNrgGwT4HnY74PG0KFCN1ISUsYgOs5i12xUA3QSyKp21y1Dnn9byJ8oCdH7vtOSPXjgR7RaxsY92kRMWcoYPx7zt-s+D030ff-Bn3mKvxuYwPyt2J5-n1r92rHDNGYSPXsWnxkiAugyhUFJqpCQe3Bd2cW2p0-VXUk5UJEcmEGJ9m+xT2ZWKW4CmEy-JcVW7JXJ+bALfMLNwC0JHDzkaHTBAcI5AdUe49oPrK44DOL9hmFPE9pzx-Rcj5qOe8WmCi3pNDPw43wvqYTcJ4psQ1S5LPbavRB6Rwti9OSPzZx0IxRg1xaC8mYpl1RLWODw8Lvlw0XKQHYR4Rzein2NlRz2qHwUvxDcj5-lYvpAJigIN2qKEOZJHUoBSXREB4DjQbr6nSb5C8+qAm97vvwwN3a4QKmuUgtQEaU65gDi+EC0vyX84BheYCU8Cvr1-1wu6q-JfNSdgGPuDci+tfYAYUj68l8PjzaMQIN6r-HR9B6AzgPonEAN-GinBkby74GyedJB9iGgFU90GsCUB8uR72Np77CL+RxLUkcj6S+LYu+F4iYDTjHCD-vhlQFgPzgEE6cEhrf+PiQOJcyhA0FA+I6AGyA0RGQeLkENznaFUDO8vy7viS9BDoC9RlTEl08CAl7DwlU-+yfL9UBOQYAPIKPX35NUuLKB0rqgETpHwXUJ7YnQKvvyN7rtA+2QPfsf5rMndX4EjgtCy8x8WOVvqixDF7Qj5CMfQgge3Wt2mR9ICHStOP7bKISXBgx-H5AVaKqYmF+nHkCfjV18Wdy0UBeu+cj0yWDwsAtAAh0PPx7ytACl3O1H8xZ+IOv0RsgIPgASrs9-qt7h4T-lRQcI32quTSmpwm3Iial-q1Bceg1HsDDYTQEHw+Y+mFtaEepGqOZiYk2OOjcwZ0PgFeuXUMQHgG7zuOgAArBQGzYILuHA0BGmDgHpqeAcwGS+JGnhCm+w2LsSQAfMEwHyYILjshucY-PQQgQL1hJ6O+uPjtjuWTHBiJaA5NOGBd+DItkzp4VACNAGcjCnviEEvfjEoDSMag144imtMDpXye3FxRXm4NphAUAMPpmQ0U8XocrmG3tKkoLoc3NkpLQ+0ofT3uYUt+wQau+mvRXkXEpqCSs8Xic4CaUni5wLoH8oewxkCABGysixPteymAywN0CVKHIOyIkM15HLDSBhTOjKRcAno2qmB46HxC8w6apZhtANJhgwUquKlqzbAaZCxS9EKYicqTwWgkaDZBT+NRhtItdsFz5B4XEUFwahLqtiF+cQeRrkAFSJISqAoaEXiFGihsUZYa9uIka22mOiYF16Fvm+r5aCapDz+k2dESp6SCzA47L2o7o5zDkzkHXYbADZsXqQ8-Dgh7cMqqi36+qhgik4xAhXPk5M6RRsnh+qgQJIBxAscjHBUI5HotrfsCttzi6ICGLZbS0B9kIbpsRaPRTvaNXv0rIeKCN+xfsQBALxr0xPPM77BxqtF7sik+OQimIL1lrQsWRaFGgZGuCp3o5GOHIkx4UA+vKKnkFFC+S8UmZChjsQ9PJ4RxwTEmACqM0sImBJSVAFxKpMiFJrSVis+I86C4+vpLbwSsAvWagIY5DaSSmzNqSH-mHIpOKQAmoBWA4USTIYQOU55N-SOBe+NNS+USuG7CuOMQAQLB+cosrpgIfzuyCTkrrhUZR8mHA8pMkQmOQht+LfBOhDM7ugdy08-HJ1JIm5XHV5ciMjKDwhu+nNpCvsbQOiIsceofJzKEC1OrynEFIuNJle-HLbYLiiOEGGzKmspbYSIeuBe5nSJQKwDJB9OvZCEUF7K9xfAXMPAJHSsTnTh5YbAFdCCgnIO2jfKllKqh0cYYawCth8AFijCe72ONwiA3Yc2F9hqfk2AZAjXkiQYAe+GOHiCLYan6yw9moESckC4b9hogO4uRyUcHPI5BKcFnD4QEBRACUChiR4MgDk0xXAy72S44WeFWAjyN4Ljo7IMsxr0n0puFwgzTGSyYCy4j6JgAjyOOI3u4gpLiPI7AJ7hQyWTrw65ueWMBGgRmRIbyeElgoXAjkJMnrpMWSQOqhj8izulxLQWXI7hGi0XGhHwA6Xt0CqBzmHmwZeXEhPCKA2gAYEheNpKzTLAeETYB4iwauPysKIgC3KzGf2OCb+qdBMFYEmxgTPybUHYJBbEKlcqBg0KeWKvJlOxnCiabho+g7iCqB8tJ5+q10nQRTqETnurpIakeeq6y9FHHpciRGor4lG5xLUZZk6nPIaYCuNlxFT6leDNqSc1BvJB5MWIh8HqR2ag5Fuw5NGZxZhBQGpHw4QBB-QHiBjAGbtqwZvmZe0EgNWbvcTPEkDvBWgOzzEW8EYmGC8HVtiGM0w-NAiLELTJSAJB2LlGEgwaZNFHM8cUQmFqKyhEpzpud5M2GUgEYZkRpYBBEPJ7evsPWahhq2MHS1RJRIYD0ypXkoYjy4UrSbX4b9C1GD+J4eGGdRsAABCfcbHENFN2lJv6F8ceEJ8hucAwB5yWc3nOUJ3+VgAEBWuQXENADBCgEUHzR1XCV5TSXosGFi0SRuhCrMEDEdFeREyk3JFSVJLmbc4kuo5wnInItUA9cCAH1xwAUwWaK90gRKNweoE3Lfb0U1UcljjRh7NNE0UoMR9FEAQbDiTNuYbGTh7CHwCEL+akQD+AM2GbNWwE6ObIuEThgoHb5qRYbnvik+foX4Rz8s3PNx1kYPA9FbKG3BnayaZ9AToFA6OOlGY82PAtw-cbgIKTmgZ3KjxMx0WsxKz4IQJVFoC40kjyiIqPFLE9hbUZLh-gtQPGA28U9HWZMRcsb8LY8uPDmGfE90r55DkVUSf4rQ0TgvD7AKIArLGRWGuzpgAVeO9HQST0uTAm6Sup45PiFvuTD46-MvbHbYAej27I6qOlHo1IUcjSHdgj4TdKMhSpA6AyYDLq7AoY5iK9J5+PCH7ZiuoEXoje4HFnrC1Ao0AoBxA6zFOAyeVzPsyUoJqGajQoFqMiBnMv+J2BXMNzGAT3MkAJxjaBfgHRbdA5osXqvM3GPnTsQMYOrDwAoDgFLCMnsCEAngTkChC7YIILYjwAiYPUiNIPYINgbM+cbsxsYxcWUhjInGBXHIulzLsw1xdzA8wnMzwAiDLx7cdvZymYjHcAJxQcKRpcwqgBoCtgtFuyYQQ7gMUiRAqBivCzxeoB+EZ4XyF4C+I-iJgg7wRClXBxAEMH5BtoioMpBXx4SHXBxASOi6K6gQYLnGbM2zIvHx43yJIRmga8ZADnMVcVvG3M6aA8x5oeyAfCX+QoO3GymVjGfFBgbUPgquojSOvzqw21NnFzxecVswFxIKJShUJngN3CyA+yIcjI89nM0STw8cOvEXMsANXG4JdcZxgMIrAOsh-WywG8x+QoaM2CvAOcG1AfAx8eQkaAdsP4CpgWCFOBYuX4Hcx2gLSFn5u0xtl5xeACCQvF7MbCSKjZA-ohKh0ga9NAC1gfQsoDCJ2CdcziJDzOcgjkmwO3F+Q+MHOg-A-YF6CHiWYOiAJIX4JohcQl8apAeQMCu-B0ADdOhQi4O2J-4v86oPHIJuVVrrj64FoN0Qm4ZuLoTocsOPHLFUmoA1LSgxgFoDlEdAdYT5kTuDopGhFnn8S68VuJQBRAtSYIGACjSVeaKMkZttj5QtSVSzZAiemO6fq0JAVK3a-rg9w7AQMKgg6h9IfNIGh5lLD43kk8iNFQACMVCL+RShq+5oxlEuEiYxf2pHhVsWbA+Y+yEInUJaAjfAMCrQKgJOau8jfoyyE4zLFu4-AczvWgVoIAIsBAAA\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4KABGBECuBOA2BnSAuMBtcEqIGYA8A6AWwAcBmSLAXQBotJFTYBLAFwFNUxRsoAjAIYATAOYcA+gDsA9mxa4WAY0HyZU7pj4QADPW1gAnADYA7IQCsAJgAc5ACz2zARis7nNrBDpeowjohssDIAnhL80CzwwixSopq+EM7OOnqJYE7mVik2NvbkFuSm9s72Fr4+fJAxgvAyohIcsMGwCQZWbmkGzoYWhDqmhuTGFgNDIx4V+tjVLLX1EjIA1m3a5OSp-anbO6kW03y5OoRlBaWm5IYdNqZTvpDwHABuHPASSjJkj5yrfI6pB2wG1SdyqpHggiUkn4rzYv2wplGXW0xnIhBsOl6VnIGKxRWMoJm4Mh0Mi0Vi8TQWm0NmMAPSG0M6JKVmMhjyrjZnj4lRmkXe8GUKyp6UMpnp3VchDFOmszgsJUM9nZBJ5gJgLEazRkrRF3TGTMMRuNJvZgIgGz6FzZxlKFlc9nF5TV935iAA7ixEAALCTelj+eFJDxG6Wm002c1gGx9RWjZLrUy0mxWQkQDUSD1e30+mTuoNgVzGsPh42R9LJKyEJOGZIWYxOKwWGzyipYAC+00YsCU8MYBBIFCo3hA7aAA\"));\n    })()","export const CHANGELOG = [\r\n    {\r\n        version: \"1.2.0\",\r\n        date: \"unreleased\",\r\n        entries: [\r\n            \"WIRES\",\r\n            \"Reworked menu UI design (by dengr1605)\",\r\n            \"Allow holding ALT in belt planner to reverse direction (by jakobhellermann)\",\r\n            \"Clear cursor when trying to pipette the same building twice (by hexy)\",\r\n            \"Fixed level 18 stacker bug: If you experienced it already, you know it, if not, I don't want to spoiler (by hexy)\",\r\n            \"Added keybinding to close menus (by isaisstillalive / Sandwichs-del)\",\r\n            \"Fix rare crash regarding the buildings toolbar (by isaisstillalive)\",\r\n            \"Fixed some phrases (by EnderDoom77)\",\r\n            \"Zoom towards mouse cursor (by Dimava)\",\r\n            \"Updated the soundtrack again, it is now 20 minutes in total!\",\r\n            \"Updated and added new translations (Thanks to all contributors!)\",\r\n            \"Allow editing waypoints (by isaisstillalive)\",\r\n            \"Show confirmation when cutting area which is too expensive to get pasted again (by isaisstillalive)\",\r\n            \"Show mouse and camera tile on debug overlay (F4) (by dengr)\",\r\n            \"Fix tunnels entrances connecting to exits sometimes when they shouldn't\",\r\n            \"The initial belt planner direction is now based on the cursor movement (by MizardX)\",\r\n            \"Fix preferred variant not getting saved when clicking on the hud (by Danacus)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.19\",\r\n        date: \"02.07.2020\",\r\n        entries: [\r\n            \"There are now notifications every 15 minutes in the demo version to buy the full version (For further details and the reason, check the #surveys channel in the Discord)\",\r\n            \"I'm still working on the wires update, I hope to release it mid july!\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.18\",\r\n        date: \"27.06.2020\",\r\n        entries: [\r\n            \"Huge performance improvements - up to double fps and tick-rate! This will wipe out all current items on belts.\",\r\n            \"Reduce story shapes required until unlocking blueprints\",\r\n            \"Allow clicking on variants to select them\",\r\n            \"Add 'copy key' button to shape viewer\",\r\n            \"Add more FPS to the belt animation and fix belt animation seeming to go 'backwards' on high belt speeds\",\r\n            \"Fix deconstruct sound being played when right clicking hub\",\r\n            \"Allow clicking 'Q' over a shape or color patch to automatically select the miner building (by Gerdon262)\",\r\n            \"Update belt placement performance on huge factories (by Phlosioneer)\",\r\n            \"Fix duplicate waypoints with a shape not rendering (by hexy)\",\r\n            \"Fix smart tunnel placement deleting wrong tunnels (by mordof)\",\r\n            \"Add setting (on by default) to store the last used rotation per building instead of globally storing it (by Magos)\",\r\n            \"Added chinese (traditional) translation\",\r\n            \"Updated translations\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.17\",\r\n        date: \"22.06.2020\",\r\n        entries: [\r\n            \"Color blind mode! You can now activate it in the settings and it will show you which color is below your cursor (Either resource or on the belt)\",\r\n            \"Add info buttons to all shapes so you can figure out how they are built! (And also, which colors they have)\",\r\n            \"Allow configuring autosave interval and disabling it in the settings\",\r\n            \"The smart-tunnel placement has been reworked to properly replace belts. Thus the setting has been turned on again by default\",\r\n            \"The soundtrack now has a higher quality on the standalone version than the web version\",\r\n            \"Add setting to disable cut/delete warnings (by hexy)\",\r\n            \"Fix bug where belts in blueprints don't orient correctly (by hexy)\",\r\n            \"Fix camera moving weird after dragging and holding (by hexy)\",\r\n            \"Fix keybinding for pipette showing while pasting blueprints\",\r\n            \"Improve visibility of shape background in dark mode\",\r\n            \"Added sound when destroying a building\",\r\n            \"Added swedish translation\",\r\n            \"Update tutorial image for tier 2 tunnels to explain mix/match (by jimmyshadow1)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.16\",\r\n        date: \"21.06.2020\",\r\n        entries: [\r\n            \"You can now pickup buildings below your cursor with 'Q'!\",\r\n            \"The game soundtrack has been extended! There are now 4 songs with over 13 minutes of playtime from <a href='https://soundcloud.com/pettersumelius' target='blank'>Peppsen</a>!\",\r\n            \"Refactor keybindings overlay to show more appropriate keybindings\",\r\n            \"Show keybindings for area-select in the upper left instead\",\r\n            \"Automatically deselect area when selecting a new building\",\r\n            \"Raise markers limit from 14 characters to 71 (by Joker-vD)\",\r\n            \"Optimize performance by caching extractor items (by Phlosioneer)\",\r\n            \"Added setting to enable compact building infos, which only show ratios and hide the image / description\",\r\n            \"Apply dark theme to menu as well (by dengr1065)\",\r\n            \"Fix belt planner not placing the last belt\",\r\n            \"Fix buildings getting deleted when right clicking while placing a blueprint\",\r\n            \"Fix for exporting screenshots for huge bases (It was showing an empty file) (by xSparfuchs)\",\r\n            \"Fix buttons not responding when using right click directly after left click (by davidburhans)\",\r\n            \"Fix hub marker being hidden by building info panel\",\r\n            \"Disable dialog background blur since it can cause performance issues\",\r\n            \"Added simplified chinese translations\",\r\n            \"Update translations (Thanks to all translators!)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.15\",\r\n        date: \"17.06.2020\",\r\n        entries: [\r\n            \"You can now place straight belts (and tunnels) by holding SHIFT! (For you, @giantwaffle ❤️)\",\r\n            \"Added continue button to main menu and add seperate 'New game' button (by jaysc)\",\r\n            \"Added setting to disable smart tunnel placement introduced with the last update\",\r\n            \"Added setting to disable vignette\",\r\n            \"Update translations\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.14\",\r\n        date: \"16.06.2020\",\r\n        entries: [\r\n            \"There is now an indicator (compass) to the HUB for the HUB Marker!\",\r\n            \"You can now include shape short keys in markers to render shape icons instead of text!\",\r\n            \"Added mirrored variant of the painter\",\r\n            \"When placing tunnels, unnecessary belts inbetween are now removed!\",\r\n            \"You can now drag tunnels and they will automatically expand! (Just try it out, its intuitive)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.13\",\r\n        date: \"15.06.2020\",\r\n        entries: [\r\n            \"Added shift modifier for faster pan (by jaysc)\",\r\n            \"Added Japanese translations\",\r\n            \"Added Portuguese (Portugal) translations\",\r\n            \"Updated icon for Spanish (Latin America) - It was showing a Spanish flag before\",\r\n            \"Updated existing translations\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.12\",\r\n        date: \"14.06.2020\",\r\n        entries: [\r\n            \"Huge performance improvements! The game should now run up to 60% faster!\",\r\n            \"Added norwegian translation\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.11\",\r\n        date: \"13.06.2020\",\r\n        entries: [\r\n            \"Pinned shapes are now smart, they dynamically update their goal and also unpin when no longer required. Completed objectives are now rendered transparent.\",\r\n            \"You can now cut areas, and also paste the last blueprint again! (by hexy)\",\r\n            \"You can now export your whole base as an image by pressing F3!\",\r\n            \"Improve upgrade number rounding, so there are no goals like '37.4k', instead it will now be '35k'\",\r\n            \"You can now configure the camera movement speed when using WASD (by mini-bomba)\",\r\n            \"Selecting an area now is relative to the world and thus does not move when moving the screen (by Dimava)\",\r\n            \"Allow higher tick-rates up to 500hz (This will burn your PC!)\",\r\n            \"Fix bug regarding number rounding\",\r\n            \"Fix dialog text being hardly readable in dark theme\",\r\n            \"Fix app not starting when the savegames were corrupted - there is now a better error message as well.\",\r\n            \"Further translation updates - Big thanks to all contributors!\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.10\",\r\n        date: \"12.06.2020\",\r\n        entries: [\r\n            \"There are now linux builds on steam! Please report any issues in the Discord!\",\r\n            \"Steam cloud saves are now available!\",\r\n            \"Added and update more translations (Big thank you to all translators!)\",\r\n            \"Prevent invalid connection if existing underground tunnel entrance exists (by jaysc)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.9\",\r\n        date: \"11.06.2020\",\r\n        entries: [\r\n            \"Support for translations! Interested in helping out? Check out the <a target='_blank'  href='https://github.com/tobspr/shapez.io/tree/master/translations'>translation guide</a>!\",\r\n            \"Update stacker artwork to clarify how it works\",\r\n            \"Update keybinding hints on the top left to be more accurate\",\r\n            \"Make it more clear when blueprints are unlocked when trying to use them\",\r\n            \"Fix pinned shape icons not being visible in dark mode\",\r\n            \"Fix being able to select buildings via hotkeys in map overview mode\",\r\n            \"Make shapes unpinnable in the upgrades tab (By hexy)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.8\",\r\n        date: \"07.06.2020\",\r\n        entries: [\r\n            \"You can now purchase the standalone on steam! <a href='https://steam.shapez.io' target='blank'>View steam page</a>\",\r\n            \"Added ability to create markers in the demo, but only two.\",\r\n            \"Contest #01 has ended! I'll now work through the entries, select the 5 I like most and present them to the community to vote for!\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.7\",\r\n        date: \"04.06.2020\",\r\n        entries: [\"HOTFIX: Fix savegames not showing up on the standalone version\"],\r\n    },\r\n    {\r\n        version: \"1.1.6\",\r\n        date: \"04.06.2020\",\r\n        entries: [\r\n            \"The steam release will happen on the <strong>7th of June</strong> - Be sure to add it to your wishlist! <a href='https://steam.shapez.io' target='blank'>View on steam</a>\",\r\n            \"Fixed level complete dialog being blurred when the shop was opened before\",\r\n            \"Standalone: Increased icon visibility for windows builds\",\r\n            \"Web version: Fixed firefox not loading the game when browsing in private mode\",\r\n        ],\r\n    },\r\n\r\n    {\r\n        version: \"1.1.5\",\r\n        date: \"03.06.2020\",\r\n        entries: [\"Added weekly contests!\"],\r\n    },\r\n    {\r\n        version: \"1.1.4\",\r\n        date: \"01.06.2020\",\r\n        entries: [\"Add 'interactive' tutorial for the first level to improve onboarding experience\"],\r\n    },\r\n    {\r\n        version: \"1.1.3\",\r\n        date: \"01.06.2020\",\r\n        entries: [\r\n            \"Added setting to configure zoom / mouse wheel / touchpad sensitivity\",\r\n            \"Fix belts being too slow when copied via blueprint (by Dimava)\",\r\n            \"Allow binding mouse buttons to actions (by Dimava)\",\r\n            \"Increase readability of certain HUD elements\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.2\",\r\n        date: \"30.05.2020\",\r\n        entries: [\r\n            \"The official trailer is now ready! Check it out <a href='https://www.youtube.com/watch?v=KyorY1uIqiQ' target='_blank'>here</a>!\",\r\n            \"The <a href='https://steam.shapez.io' target='_blank'>steam page</a> is now live!\",\r\n            \"Experimental linux builds are now available! Please give me feedback on them in the Discord\",\r\n            \"Allow hovering pinned shapes to enlarge them\",\r\n            \"Allow deselecting blueprints with right click and 'Q'\",\r\n            \"Move default key for deleting from 'X' to 'DEL'\",\r\n            \"Show confirmation when deleting more than 100 buildings\",\r\n            \"Reintroduce 'SPACE' keybinding to center on map\",\r\n            \"Improved keybinding hints\",\r\n            \"Fixed some keybindings showing as 'undefined'\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.1.1\",\r\n        date: \"28.05.2020\",\r\n        entries: [\"Fix crash when 'Show Hints' setting was turned off\"],\r\n    },\r\n    {\r\n        version: \"1.1.0\",\r\n        date: \"28.05.2020\",\r\n        entries: [\r\n            \"BLUEPRINTS! They are unlocked at level 12 and cost a special shape to build.\",\r\n            \"MAP MARKERS! Press 'M' to create a waypoint and be able to jump to it\",\r\n            \"Savegame levels are now shown in the main menu. For existing games, save them again to make the level show up.\",\r\n            \"Allow holding SHIFT to rotate counter clockwise\",\r\n            \"Added confirmation when deleting more than 500 buildings at a time\",\r\n            \"Added background to toolbar to increase contrast\",\r\n            \"Further decerase requirements of first levels\",\r\n            \"Pinned shapes now are saved\",\r\n            \"Allow placing extractors anywhere again, but they don't work at all if not placed on a resource\",\r\n            \"Show dialog explaining some keybindings after completing level 4\",\r\n            \"Fix keys being stuck when opening a dialog\",\r\n            \"Swapped shape order for painting upgrades\",\r\n            \"Allow changing all keybindings, including CTRL, ALT and SHIFT (by Dimava)\",\r\n            \"Fix cycling through keybindings selecting locked buildings as well (by Dimava)\",\r\n            \"There is now a github action, checking all pull requests with eslint. (by mrHedgehog)\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.0.4\",\r\n        date: \"26.05.2020\",\r\n        entries: [\r\n            \"Reduce cost of first painting upgrade, and change 'Shape Processing' to 'Cutting, Rotating & Stacking'\",\r\n            \"Add dialog after completing level 2 to check out the upgrades tab.\",\r\n            \"Allow changing the keybindings in the demo version\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.0.3\",\r\n        date: \"24.05.2020\",\r\n        entries: [\r\n            \"Reduced the amount of shapes required for the first 5 levels to make it easier to get into the game.\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.0.2\",\r\n        date: \"23.05.2020\",\r\n        entries: [\r\n            \"Introduced changelog\",\r\n            \"Removed 'early access' label because the game isn't actually early access - its in a pretty good state already! (No worries, a lot more updates will follow!)\",\r\n            \"Added a 'Show hint' button which shows a small video for almost all levels to help out\",\r\n            \"Now showing proper descriptions when completing levels, with instructions on what the gained reward does.\",\r\n            \"Show a landing page on mobile devices about the game not being ready to be played on mobile yet\",\r\n            \"Fix painters and mixers being affected by the shape processors upgrade and not the painter one\",\r\n            \"Added 'multiplace' setting which is equivalent to holding SHIFT all the time\",\r\n            \"Added keybindings to zoom in / zoom out\",\r\n            \"Tunnels now also show connection lines to tunnel exits, instead of just tunnel entries\",\r\n            \"Lots of minor fixes and improvements\",\r\n        ],\r\n    },\r\n    {\r\n        version: \"1.0.1\",\r\n        date: \"21.05.2020\",\r\n        entries: [\"Initial release!\"],\r\n    },\r\n];\r\n","import { Signal } from \"./signal\";\r\n\r\nimport BackgroundAnimationFrameEmitterWorker from \"worker-loader?inline=true&fallback=false!../webworkers/background_animation_frame_emittter.worker\";\r\n\r\nimport { createLogger } from \"./logging\";\r\nconst logger = createLogger(\"animation_frame\");\r\n\r\nconst maxDtMs = 1000;\r\nconst resetDtMs = 16;\r\n\r\nexport class AnimationFrame {\r\n    constructor() {\r\n        this.frameEmitted = new Signal();\r\n        this.bgFrameEmitted = new Signal();\r\n\r\n        this.lastTime = performance.now();\r\n        this.bgLastTime = performance.now();\r\n\r\n        this.boundMethod = this.handleAnimationFrame.bind(this);\r\n\r\n        this.backgroundWorker = new BackgroundAnimationFrameEmitterWorker();\r\n        this.backgroundWorker.addEventListener(\"error\", err => {\r\n            logger.error(\"Error in background fps worker:\", err);\r\n        });\r\n        this.backgroundWorker.addEventListener(\"message\", this.handleBackgroundTick.bind(this));\r\n    }\r\n\r\n    handleBackgroundTick() {\r\n        const time = performance.now();\r\n\r\n        let dt = time - this.bgLastTime;\r\n\r\n        if (dt > maxDtMs) {\r\n            dt = resetDtMs;\r\n        }\r\n\r\n        this.bgFrameEmitted.dispatch(dt);\r\n        this.bgLastTime = time;\r\n    }\r\n\r\n    start() {\r\n        assertAlways(window.requestAnimationFrame, \"requestAnimationFrame is not supported!\");\r\n        this.handleAnimationFrame();\r\n    }\r\n\r\n    handleAnimationFrame(time) {\r\n        let dt = time - this.lastTime;\r\n\r\n        if (dt > maxDtMs) {\r\n            dt = resetDtMs;\r\n        }\r\n\r\n        this.frameEmitted.dispatch(dt);\r\n        this.lastTime = time;\r\n\r\n        window.requestAnimationFrame(this.boundMethod);\r\n    }\r\n}\r\n","import { createLogger } from \"./logging\";\r\n\r\nconst logger = createLogger(\"assert\");\r\n\r\nlet assertionErrorShown = false;\r\n\r\nfunction initAssert() {\r\n    /**\r\n     * Expects a given condition to be true\r\n     * @param {Boolean} condition\r\n     * @param  {...String} failureMessage\r\n     */\r\n    // @ts-ignore\r\n    window.assert = function (condition, ...failureMessage) {\r\n        if (!condition) {\r\n            logger.error(\"assertion failed:\", ...failureMessage);\r\n            if (!assertionErrorShown) {\r\n                // alert(\"Assertion failed (the game will try to continue to run): \\n\\n\" + failureMessage);\r\n                assertionErrorShown = true;\r\n            }\r\n            throw new Error(\"AssertionError: \" + failureMessage.join(\" \"));\r\n        }\r\n    };\r\n}\r\n\r\ninitAssert();\r\n","import CompressionWorker from \"worker-loader?inline=true&fallback=false!../webworkers/compression.worker\";\r\nimport { createLogger } from \"./logging\";\r\n\r\nconst logger = createLogger(\"async_compression\");\r\n\r\nexport let compressionPrefix = String.fromCodePoint(1);\r\n\r\nfunction checkCryptPrefix(prefix) {\r\n    try {\r\n        window.localStorage.setItem(\"prefix_test\", prefix);\r\n        window.localStorage.removeItem(\"prefix_test\");\r\n        return true;\r\n    } catch (ex) {\r\n        logger.warn(\"Prefix '\" + prefix + \"' not available\");\r\n        return false;\r\n    }\r\n}\r\n\r\nif (!checkCryptPrefix(compressionPrefix)) {\r\n    logger.warn(\"Switching to basic prefix\");\r\n    compressionPrefix = \" \";\r\n    if (!checkCryptPrefix(compressionPrefix)) {\r\n        logger.warn(\"Prefix not available, ls seems to be unavailable\");\r\n    }\r\n}\r\n\r\n/**\r\n * @typedef {{\r\n *   errorHandler: function(any) : void,\r\n *   resolver: function(any) : void,\r\n *   startTime: number\r\n * }} JobEntry\r\n */\r\n\r\nclass AsynCompression {\r\n    constructor() {\r\n        this.worker = new CompressionWorker();\r\n\r\n        this.currentJobId = 1000;\r\n\r\n        /** @type {Object.<number, JobEntry>} */\r\n        this.currentJobs = {};\r\n\r\n        this.worker.addEventListener(\"message\", event => {\r\n            const { jobId, result } = event.data;\r\n            const jobData = this.currentJobs[jobId];\r\n            if (!jobData) {\r\n                logger.error(\"Failed to resolve job result, job id\", jobId, \"is not known\");\r\n                return;\r\n            }\r\n\r\n            const duration = performance.now() - jobData.startTime;\r\n            // log(this, \"Got response from worker within\", duration.toFixed(2), \"ms\");\r\n            const resolver = jobData.resolver;\r\n            delete this.currentJobs[jobId];\r\n            resolver(result);\r\n        });\r\n\r\n        this.worker.addEventListener(\"error\", err => {\r\n            logger.error(\"Got error from webworker:\", err, \"aborting all jobs\");\r\n            const failureCalls = [];\r\n            for (const jobId in this.currentJobs) {\r\n                failureCalls.push(this.currentJobs[jobId].errorHandler);\r\n            }\r\n            this.currentJobs = {};\r\n            for (let i = 0; i < failureCalls.length; ++i) {\r\n                failureCalls[i](err);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Compresses file\r\n     * @param {string} text\r\n     */\r\n    compressFileAsync(text) {\r\n        return this.internalQueueJob(\"compressFile\", {\r\n            text,\r\n            compressionPrefix,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Queues a new job\r\n     * @param {string} job\r\n     * @param {any} data\r\n     * @returns {Promise<any>}\r\n     */\r\n    internalQueueJob(job, data) {\r\n        const jobId = ++this.currentJobId;\r\n        return new Promise((resolve, reject) => {\r\n            const errorHandler = err => {\r\n                logger.error(\"Failed to compress job\", jobId, \":\", err);\r\n                reject(err);\r\n            };\r\n            this.currentJobs[jobId] = {\r\n                errorHandler,\r\n                resolver: resolve,\r\n                startTime: performance.now(),\r\n            };\r\n            this.worker.postMessage({ jobId, job, data });\r\n        });\r\n    }\r\n}\r\n\r\nexport const asyncCompressor = new AsynCompression();\r\n","/**\r\n * @typedef {{\r\n *   frame: { x: number, y: number, w: number, h: number },\r\n *   rotated: false,\r\n *   spriteSourceSize: { x: number, y: number, w: number, h: number },\r\n *   sourceSize: { w: number, h: number},\r\n *   trimmed: true\r\n * }} SpriteDefinition\r\n */\r\n\r\nexport class AtlasDefinition {\r\n    constructor(sourceData) {\r\n        this.sourceFileName = sourceData.meta.image;\r\n        this.meta = sourceData.meta;\r\n\r\n        /** @type {Object.<string, SpriteDefinition>} */\r\n        this.sourceData = sourceData.frames;\r\n    }\r\n\r\n    getFullSourcePath() {\r\n        return this.sourceFileName;\r\n    }\r\n}\r\n\r\nexport const atlasFiles = require\r\n    // @ts-ignore\r\n    .context(\"../../../res_built/atlas/\", false, /.*\\.json/i)\r\n    .keys()\r\n    .map(f => f.replace(/^\\.\\//gi, \"\"))\r\n    .map(f => require(\"../../../res_built/atlas/\" + f))\r\n    .map(data => new AtlasDefinition(data));\r\n","\r\n\r\nimport { Loader } from \"./loader\";\r\nimport { createLogger } from \"./logging\";\r\nimport { Signal } from \"./signal\";\r\nimport { SOUNDS, MUSIC } from \"../platform/sound\";\r\nimport { AtlasDefinition, atlasFiles } from \"./atlas_definitions\";\r\nimport { initBuildingCodesAfterResourcesLoaded } from \"../game/meta_building_registry\";\r\n\r\nconst logger = createLogger(\"background_loader\");\r\n\r\nconst essentialMainMenuSprites = [\r\n    \"logo.png\",\r\n    ...G_ALL_UI_IMAGES.filter(src => src.startsWith(\"ui/\") && src.indexOf(\".gif\") < 0),\r\n];\r\nconst essentialMainMenuSounds = [\r\n    SOUNDS.uiClick,\r\n    SOUNDS.uiError,\r\n    SOUNDS.dialogError,\r\n    SOUNDS.dialogOk,\r\n    SOUNDS.swishShow,\r\n    SOUNDS.swishHide,\r\n];\r\n\r\nconst essentialBareGameAtlases = atlasFiles;\r\nconst essentialBareGameSprites = G_ALL_UI_IMAGES.filter(src => src.indexOf(\".gif\") < 0);\r\nconst essentialBareGameSounds = [MUSIC.theme];\r\n\r\nconst additionalGameSprites = [];\r\n// @ts-ignore\r\nconst additionalGameSounds = [...Object.values(SOUNDS), ...Object.values(MUSIC)];\r\n\r\nexport class BackgroundResourcesLoader {\r\n    /**\r\n     *\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        this.app = app;\r\n\r\n        this.registerReady = false;\r\n        this.mainMenuReady = false;\r\n        this.bareGameReady = false;\r\n        this.additionalReady = false;\r\n\r\n        this.signalMainMenuLoaded = new Signal();\r\n        this.signalBareGameLoaded = new Signal();\r\n        this.signalAdditionalLoaded = new Signal();\r\n\r\n        this.numAssetsLoaded = 0;\r\n        this.numAssetsToLoadTotal = 0;\r\n\r\n        // Avoid loading stuff twice\r\n        this.spritesLoaded = [];\r\n        this.soundsLoaded = [];\r\n    }\r\n\r\n    getNumAssetsLoaded() {\r\n        return this.numAssetsLoaded;\r\n    }\r\n\r\n    getNumAssetsTotal() {\r\n        return this.numAssetsToLoadTotal;\r\n    }\r\n\r\n    getPromiseForMainMenu() {\r\n        if (this.mainMenuReady) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            this.signalMainMenuLoaded.add(resolve);\r\n        });\r\n    }\r\n\r\n    getPromiseForBareGame() {\r\n        if (this.bareGameReady) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            this.signalBareGameLoaded.add(resolve);\r\n        });\r\n    }\r\n\r\n    startLoading() {\r\n        this.internalStartLoadingEssentialsForMainMenu();\r\n    }\r\n\r\n    internalStartLoadingEssentialsForMainMenu() {\r\n        logger.log(\"⏰ Start load: main menu\");\r\n        this.internalLoadSpritesAndSounds(essentialMainMenuSprites, essentialMainMenuSounds)\r\n            .catch(err => {\r\n                logger.warn(\"⏰ Failed to load essentials for main menu:\", err);\r\n            })\r\n            .then(() => {\r\n                logger.log(\"⏰ Finish load: main menu\");\r\n                this.mainMenuReady = true;\r\n                this.signalMainMenuLoaded.dispatch();\r\n                this.internalStartLoadingEssentialsForBareGame();\r\n            });\r\n    }\r\n\r\n    internalStartLoadingEssentialsForBareGame() {\r\n        logger.log(\"⏰ Start load: bare game\");\r\n        this.internalLoadSpritesAndSounds(\r\n            essentialBareGameSprites,\r\n            essentialBareGameSounds,\r\n            essentialBareGameAtlases\r\n        )\r\n            .catch(err => {\r\n                logger.warn(\"⏰ Failed to load essentials for bare game:\", err);\r\n            })\r\n            .then(() => {\r\n                logger.log(\"⏰ Finish load: bare game\");\r\n                Loader.createAtlasLinks();\r\n                this.bareGameReady = true;\r\n                initBuildingCodesAfterResourcesLoaded();\r\n                this.signalBareGameLoaded.dispatch();\r\n                this.internalStartLoadingAdditionalGameAssets();\r\n            });\r\n    }\r\n\r\n    internalStartLoadingAdditionalGameAssets() {\r\n        const additionalAtlases = [];\r\n        logger.log(\"⏰ Start load: additional assets (\", additionalAtlases.length, \"images)\");\r\n        this.internalLoadSpritesAndSounds(additionalGameSprites, additionalGameSounds, additionalAtlases)\r\n            .catch(err => {\r\n                logger.warn(\"⏰ Failed to load additional assets:\", err);\r\n            })\r\n            .then(() => {\r\n                logger.log(\"⏰ Finish load: additional assets\");\r\n                this.additionalReady = true;\r\n                this.signalAdditionalLoaded.dispatch();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @param {Array<string>} sprites\r\n     * @param {Array<string>} sounds\r\n     * @param {Array<AtlasDefinition>} atlases\r\n     * @returns {Promise<void>}\r\n     */\r\n    internalLoadSpritesAndSounds(sprites, sounds, atlases = []) {\r\n        this.numAssetsToLoadTotal = sprites.length + sounds.length + atlases.length;\r\n        this.numAssetsLoaded = 0;\r\n\r\n        let promises = [];\r\n\r\n        for (let i = 0; i < sounds.length; ++i) {\r\n            if (this.soundsLoaded.indexOf(sounds[i]) >= 0) {\r\n                // Already loaded\r\n                continue;\r\n            }\r\n\r\n            this.soundsLoaded.push(sounds[i]);\r\n            promises.push(\r\n                this.app.sound\r\n                    .loadSound(sounds[i])\r\n                    .catch(err => {\r\n                        logger.warn(\"Failed to load sound:\", sounds[i]);\r\n                    })\r\n                    .then(() => {\r\n                        this.numAssetsLoaded++;\r\n                    })\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < sprites.length; ++i) {\r\n            if (this.spritesLoaded.indexOf(sprites[i]) >= 0) {\r\n                // Already loaded\r\n                continue;\r\n            }\r\n            this.spritesLoaded.push(sprites[i]);\r\n            promises.push(\r\n                Loader.preloadCSSSprite(sprites[i])\r\n                    .catch(err => {\r\n                        logger.warn(\"Failed to load css sprite:\", sprites[i]);\r\n                    })\r\n                    .then(() => {\r\n                        this.numAssetsLoaded++;\r\n                    })\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < atlases.length; ++i) {\r\n            const atlas = atlases[i];\r\n            promises.push(\r\n                Loader.preloadAtlas(atlas)\r\n                    .catch(err => {\r\n                        logger.warn(\"Failed to load atlas:\", atlas.sourceFileName);\r\n                    })\r\n                    .then(() => {\r\n                        this.numAssetsLoaded++;\r\n                    })\r\n            );\r\n        }\r\n\r\n        return (\r\n            Promise.all(promises)\r\n\r\n                // // Remove some pressure by waiting a bit\r\n                // .then(() => {\r\n                //     return new Promise(resolve => {\r\n                //         setTimeout(resolve, 200);\r\n                //     });\r\n                // })\r\n                .then(() => {\r\n                    this.numAssetsToLoadTotal = 0;\r\n                    this.numAssetsLoaded = 0;\r\n                })\r\n        );\r\n    }\r\n}\r\n","import { GameRoot } from \"../game/root\";\r\nimport { clearBufferBacklog, freeCanvas, getBufferStats, makeOffscreenBuffer } from \"./buffer_utils\";\r\nimport { createLogger } from \"./logging\";\r\nimport { round1Digit } from \"./utils\";\r\n\r\n/**\r\n * @typedef {{\r\n *  canvas: HTMLCanvasElement,\r\n *  context: CanvasRenderingContext2D,\r\n *  lastUse: number,\r\n * }} CacheEntry\r\n */\r\n\r\nconst logger = createLogger(\"buffers\");\r\n\r\nconst bufferGcDurationSeconds = 10;\r\n\r\nexport class BufferMaintainer {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        /** @type {Map<string, Map<string, CacheEntry>>} */\r\n        this.cache = new Map();\r\n\r\n        this.iterationIndex = 1;\r\n        this.lastIteration = 0;\r\n    }\r\n\r\n    /**\r\n     * Goes to the next buffer iteration, clearing all buffers which were not used\r\n     * for a few iterations\r\n     */\r\n    garbargeCollect() {\r\n        let totalKeys = 0;\r\n        let deletedKeys = 0;\r\n        const minIteration = this.iterationIndex;\r\n\r\n        this.cache.forEach((subCache, key) => {\r\n            let unusedSubKeys = [];\r\n\r\n            // Filter sub cache\r\n            subCache.forEach((cacheEntry, subKey) => {\r\n                if (cacheEntry.lastUse < minIteration) {\r\n                    unusedSubKeys.push(subKey);\r\n                    freeCanvas(cacheEntry.canvas);\r\n                    ++deletedKeys;\r\n                } else {\r\n                    ++totalKeys;\r\n                }\r\n            });\r\n\r\n            // Delete unused sub keys\r\n            for (let i = 0; i < unusedSubKeys.length; ++i) {\r\n                subCache.delete(unusedSubKeys[i]);\r\n            }\r\n        });\r\n\r\n        // Make sure our backlog never gets too big\r\n        clearBufferBacklog();\r\n\r\n        const bufferStats = getBufferStats();\r\n        const mbUsed = round1Digit(bufferStats.vramUsage / (1024 * 1024));\r\n        logger.log(\r\n            \"GC: Remove\",\r\n            (deletedKeys + \"\").padStart(4),\r\n            \", Remain\",\r\n            (totalKeys + \"\").padStart(4),\r\n            \"(\",\r\n            (bufferStats.bufferCount + \"\").padStart(4),\r\n            \"total\",\r\n            \")\",\r\n\r\n            \"(\",\r\n            (bufferStats.backlog + \"\").padStart(4),\r\n            \"backlog\",\r\n            \")\",\r\n\r\n            \"VRAM:\",\r\n            mbUsed,\r\n            \"MB\"\r\n        );\r\n\r\n        ++this.iterationIndex;\r\n    }\r\n\r\n    update() {\r\n        const now = this.root.time.realtimeNow();\r\n        if (now - this.lastIteration > bufferGcDurationSeconds) {\r\n            this.lastIteration = now;\r\n            this.garbargeCollect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @param {string} subKey\r\n     * @param {function(HTMLCanvasElement, CanvasRenderingContext2D, number, number, number, object?) : void} redrawMethod\r\n     * @param {object=} additionalParams\r\n     * @returns {HTMLCanvasElement}\r\n     *\r\n     */\r\n    getForKey(key, subKey, w, h, dpi, redrawMethod, additionalParams) {\r\n        // First, create parent key\r\n        let parent = this.cache.get(key);\r\n        if (!parent) {\r\n            parent = new Map();\r\n            this.cache.set(key, parent);\r\n        }\r\n\r\n        // Now search for sub key\r\n        const cacheHit = parent.get(subKey);\r\n        if (cacheHit) {\r\n            cacheHit.lastUse = this.iterationIndex;\r\n            return cacheHit.canvas;\r\n        }\r\n\r\n        // Need to generate new buffer\r\n        const effectiveWidth = w * dpi;\r\n        const effectiveHeight = h * dpi;\r\n\r\n        const [canvas, context] = makeOffscreenBuffer(effectiveWidth, effectiveHeight, {\r\n            reusable: true,\r\n            label: \"buffer-\" + key + \"/\" + subKey,\r\n            smooth: true,\r\n        });\r\n\r\n        redrawMethod(canvas, context, w, h, dpi, additionalParams);\r\n\r\n        parent.set(subKey, {\r\n            canvas,\r\n            context,\r\n            lastUse: this.iterationIndex,\r\n        });\r\n        return canvas;\r\n    }\r\n}\r\n","import { globalConfig } from \"./config\";\r\nimport { fastArrayDelete } from \"./utils\";\r\nimport { createLogger } from \"./logging\";\r\n\r\nconst logger = createLogger(\"buffer_utils\");\r\n\r\n/**\r\n * Enables images smoothing on a context\r\n * @param {CanvasRenderingContext2D} context\r\n */\r\nexport function enableImageSmoothing(context) {\r\n    context.imageSmoothingEnabled = true;\r\n    context.webkitImageSmoothingEnabled = true;\r\n\r\n    // @ts-ignore\r\n    context.imageSmoothingQuality = globalConfig.smoothing.quality;\r\n}\r\n\r\n/**\r\n * Disables image smoothing on a context\r\n * @param {CanvasRenderingContext2D} context\r\n */\r\nexport function disableImageSmoothing(context) {\r\n    context.imageSmoothingEnabled = false;\r\n    context.webkitImageSmoothingEnabled = false;\r\n}\r\n\r\nconst registeredCanvas = [];\r\nconst freeCanvasList = [];\r\n\r\nlet vramUsage = 0;\r\nlet bufferCount = 0;\r\n\r\n/**\r\n *\r\n * @param {HTMLCanvasElement} canvas\r\n */\r\nexport function getBufferVramUsageBytes(canvas) {\r\n    return canvas.width * canvas.height * 4;\r\n}\r\n\r\n/**\r\n * Returns stats on the allocated buffers\r\n */\r\nexport function getBufferStats() {\r\n    return {\r\n        vramUsage,\r\n        bufferCount,\r\n        backlog: freeCanvasList.length,\r\n    };\r\n}\r\n\r\nexport function clearBufferBacklog() {\r\n    while (freeCanvasList.length > 50) {\r\n        freeCanvasList.pop();\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a new offscreen buffer\r\n * @param {Number} w\r\n * @param {Number} h\r\n * @returns {[HTMLCanvasElement, CanvasRenderingContext2D]}\r\n */\r\nexport function makeOffscreenBuffer(w, h, { smooth = true, reusable = true, label = \"buffer\" }) {\r\n    assert(w > 0 && h > 0, \"W or H < 0\");\r\n    if (w % 1 !== 0 || h % 1 !== 0) {\r\n        // console.warn(\"Subpixel offscreen buffer size:\", w, h);\r\n    }\r\n    if (w < 1 || h < 1) {\r\n        logger.error(\"Offscreen buffer size < 0:\", w, \"x\", h);\r\n        w = Math.max(1, w);\r\n        h = Math.max(1, h);\r\n    }\r\n\r\n    const recommendedSize = 1024 * 1024;\r\n    if (w * h > recommendedSize) {\r\n        logger.warn(\"Creating huge buffer:\", w, \"x\", h, \"with label\", label);\r\n    }\r\n\r\n    w = Math.floor(w);\r\n    h = Math.floor(h);\r\n\r\n    let canvas = null;\r\n    let context = null;\r\n\r\n    let bestMatchingOne = null;\r\n    let bestMatchingPixelsDiff = 1e50;\r\n\r\n    const currentPixels = w * h;\r\n\r\n    // Ok, search in cache first\r\n    for (let i = 0; i < freeCanvasList.length; ++i) {\r\n        const { canvas: useableCanvas, context: useableContext } = freeCanvasList[i];\r\n        if (useableCanvas.width === w && useableCanvas.height === h) {\r\n            // Ok we found one\r\n            canvas = useableCanvas;\r\n            context = useableContext;\r\n\r\n            fastArrayDelete(freeCanvasList, i);\r\n            break;\r\n        }\r\n\r\n        const otherPixels = useableCanvas.width * useableCanvas.height;\r\n        const diff = Math.abs(otherPixels - currentPixels);\r\n        if (diff < bestMatchingPixelsDiff) {\r\n            bestMatchingPixelsDiff = diff;\r\n            bestMatchingOne = {\r\n                canvas: useableCanvas,\r\n                context: useableContext,\r\n                index: i,\r\n            };\r\n        }\r\n    }\r\n\r\n    // Ok none matching, reuse one though\r\n    if (!canvas && bestMatchingOne) {\r\n        canvas = bestMatchingOne.canvas;\r\n        context = bestMatchingOne.context;\r\n        canvas.width = w;\r\n        canvas.height = h;\r\n        fastArrayDelete(freeCanvasList, bestMatchingOne.index);\r\n    }\r\n\r\n    // Reset context\r\n    if (context) {\r\n        // Restore past state\r\n        context.restore();\r\n        context.save();\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        delete canvas.style.width;\r\n        delete canvas.style.height;\r\n    }\r\n\r\n    // None found , create new one\r\n    if (!canvas) {\r\n        canvas = document.createElement(\"canvas\");\r\n        context = canvas.getContext(\"2d\" /*, { alpha } */);\r\n\r\n        canvas.width = w;\r\n        canvas.height = h;\r\n\r\n        // Initial state\r\n        context.save();\r\n    }\r\n\r\n    canvas.label = label;\r\n\r\n    if (smooth) {\r\n        enableImageSmoothing(context);\r\n    } else {\r\n        disableImageSmoothing(context);\r\n    }\r\n\r\n    if (reusable) {\r\n        registerCanvas(canvas, context);\r\n    }\r\n\r\n    return [canvas, context];\r\n}\r\n\r\n/**\r\n * Frees a canvas\r\n * @param {HTMLCanvasElement} canvas\r\n */\r\nexport function registerCanvas(canvas, context) {\r\n    registeredCanvas.push({ canvas, context });\r\n\r\n    bufferCount += 1;\r\n    vramUsage += getBufferVramUsageBytes(canvas);\r\n}\r\n\r\n/**\r\n * Frees a canvas\r\n * @param {HTMLCanvasElement} canvas\r\n */\r\nexport function freeCanvas(canvas) {\r\n    assert(canvas, \"Canvas is empty\");\r\n\r\n    let index = -1;\r\n    let data = null;\r\n    for (let i = 0; i < registeredCanvas.length; ++i) {\r\n        if (registeredCanvas[i].canvas === canvas) {\r\n            index = i;\r\n            data = registeredCanvas[i];\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (index < 0) {\r\n        logger.error(\"Tried to free unregistered canvas of size\", canvas.width, canvas.height);\r\n        return;\r\n    }\r\n    fastArrayDelete(registeredCanvas, index);\r\n    freeCanvasList.push(data);\r\n\r\n    bufferCount -= 1;\r\n    vramUsage -= getBufferVramUsageBytes(canvas);\r\n}\r\n","/**\r\n * Generates a cachebuster string. This only modifies the path in the browser version\r\n * @param {string} path\r\n */\r\nexport function cachebust(path) {\r\n    if (G_IS_BROWSER && !G_IS_STANDALONE && !G_IS_DEV) {\r\n        return \"/v/\" + G_BUILD_COMMIT_HASH + \"/\" + path;\r\n    }\r\n    return path;\r\n}\r\n","import { createLogger } from \"../core/logging\";\r\nimport { Signal } from \"../core/signal\";\r\nimport { fastArrayDelete, fastArrayDeleteValueIfContained } from \"./utils\";\r\nimport { Vector } from \"./vector\";\r\nimport { IS_MOBILE, SUPPORT_TOUCH } from \"./config\";\r\nimport { SOUNDS } from \"../platform/sound\";\r\nimport { GLOBAL_APP } from \"./globals\";\r\n\r\nconst logger = createLogger(\"click_detector\");\r\n\r\nexport const MAX_MOVE_DISTANCE_PX = IS_MOBILE ? 20 : 80;\r\n\r\n// For debugging\r\nconst registerClickDetectors = G_IS_DEV && true;\r\nif (registerClickDetectors) {\r\n    /** @type {Array<ClickDetector>} */\r\n    window.activeClickDetectors = [];\r\n}\r\n\r\n// Store active click detectors so we can cancel them\r\n/** @type {Array<ClickDetector>} */\r\nconst ongoingClickDetectors = [];\r\n\r\n// Store when the last touch event was registered, to avoid accepting a touch *and* a click event\r\n\r\nexport let clickDetectorGlobals = {\r\n    lastTouchTime: -1000,\r\n};\r\n\r\n/**\r\n * Click detector creation payload typehints\r\n * @typedef {{\r\n *  consumeEvents?: boolean,\r\n *  preventDefault?: boolean,\r\n *  applyCssClass?: string,\r\n *  captureTouchmove?: boolean,\r\n *  targetOnly?: boolean,\r\n *  maxDistance?: number,\r\n *  clickSound?: string,\r\n *  preventClick?: boolean,\r\n * }} ClickDetectorConstructorArgs\r\n */\r\n\r\n// Detects clicks\r\nexport class ClickDetector {\r\n    /**\r\n     *\r\n     * @param {Element} element\r\n     * @param {object} param1\r\n     * @param {boolean=} param1.consumeEvents Whether to call stopPropagation\r\n     *                                       (Useful for nested elements where the parent has a click handler as wel)\r\n     * @param {boolean=} param1.preventDefault  Whether to call preventDefault (Usually makes the handler faster)\r\n     * @param {string=} param1.applyCssClass The css class to add while the element is pressed\r\n     * @param {boolean=} param1.captureTouchmove Whether to capture touchmove events as well\r\n     * @param {boolean=} param1.targetOnly Whether to also accept clicks on child elements (e.target !== element)\r\n     * @param {number=} param1.maxDistance The maximum distance in pixels to accept clicks\r\n     * @param {string=} param1.clickSound Sound key to play on touchdown\r\n     * @param {boolean=} param1.preventClick Whether to prevent click events\r\n     */\r\n    constructor(\r\n        element,\r\n        {\r\n            consumeEvents = false,\r\n            preventDefault = true,\r\n            applyCssClass = \"pressed\",\r\n            captureTouchmove = false,\r\n            targetOnly = false,\r\n            maxDistance = MAX_MOVE_DISTANCE_PX,\r\n            clickSound = SOUNDS.uiClick,\r\n            preventClick = false,\r\n        }\r\n    ) {\r\n        assert(element, \"No element given!\");\r\n        this.clickDownPosition = null;\r\n\r\n        this.consumeEvents = consumeEvents;\r\n        this.preventDefault = preventDefault;\r\n        this.applyCssClass = applyCssClass;\r\n        this.captureTouchmove = captureTouchmove;\r\n        this.targetOnly = targetOnly;\r\n        this.clickSound = clickSound;\r\n        this.maxDistance = maxDistance;\r\n        this.preventClick = preventClick;\r\n\r\n        // Signals\r\n        this.click = new Signal();\r\n        this.rightClick = new Signal();\r\n        this.touchstart = new Signal();\r\n        this.touchmove = new Signal();\r\n        this.touchend = new Signal();\r\n        this.touchcancel = new Signal();\r\n\r\n        // Simple signals which just receive the touch position\r\n        this.touchstartSimple = new Signal();\r\n        this.touchmoveSimple = new Signal();\r\n        this.touchendSimple = new Signal();\r\n\r\n        // Store time of touch start\r\n        this.clickStartTime = null;\r\n\r\n        // A click can be cancelled if another detector registers a click\r\n        this.cancelled = false;\r\n\r\n        this.internalBindTo(/** @type {HTMLElement} */ (element));\r\n    }\r\n\r\n    /**\r\n     * Cleans up all event listeners of this detector\r\n     */\r\n    cleanup() {\r\n        if (this.element) {\r\n            if (registerClickDetectors) {\r\n                const index = window.activeClickDetectors.indexOf(this);\r\n                if (index < 0) {\r\n                    logger.error(\"Click detector cleanup but is not active\");\r\n                } else {\r\n                    window.activeClickDetectors.splice(index, 1);\r\n                }\r\n            }\r\n            const options = this.internalGetEventListenerOptions();\r\n\r\n            if (SUPPORT_TOUCH) {\r\n                this.element.removeEventListener(\"touchstart\", this.handlerTouchStart, options);\r\n                this.element.removeEventListener(\"touchend\", this.handlerTouchEnd, options);\r\n                this.element.removeEventListener(\"touchcancel\", this.handlerTouchCancel, options);\r\n            }\r\n\r\n            this.element.removeEventListener(\"mouseup\", this.handlerTouchStart, options);\r\n            this.element.removeEventListener(\"mousedown\", this.handlerTouchEnd, options);\r\n            this.element.removeEventListener(\"mouseout\", this.handlerTouchCancel, options);\r\n\r\n            if (this.captureTouchmove) {\r\n                if (SUPPORT_TOUCH) {\r\n                    this.element.removeEventListener(\"touchmove\", this.handlerTouchMove, options);\r\n                }\r\n                this.element.removeEventListener(\"mousemove\", this.handlerTouchMove, options);\r\n            }\r\n\r\n            if (this.preventClick) {\r\n                this.element.removeEventListener(\"click\", this.handlerPreventClick, options);\r\n            }\r\n\r\n            this.click.removeAll();\r\n            this.touchstart.removeAll();\r\n            this.touchmove.removeAll();\r\n            this.touchend.removeAll();\r\n            this.touchcancel.removeAll();\r\n\r\n            // TODO: Remove pointer captures\r\n\r\n            this.element = null;\r\n        }\r\n    }\r\n\r\n    // INTERNAL METHODS\r\n\r\n    /**\r\n     *\r\n     * @param {Event} event\r\n     */\r\n    internalPreventClick(event) {\r\n        window.focus();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Internal method to get the options to pass to an event listener\r\n     */\r\n    internalGetEventListenerOptions() {\r\n        return {\r\n            capture: this.consumeEvents,\r\n            passive: !this.preventDefault,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Binds the click detector to an element\r\n     * @param {HTMLElement} element\r\n     */\r\n    internalBindTo(element) {\r\n        const options = this.internalGetEventListenerOptions();\r\n\r\n        this.handlerTouchStart = this.internalOnPointerDown.bind(this);\r\n        this.handlerTouchEnd = this.internalOnPointerEnd.bind(this);\r\n        this.handlerTouchMove = this.internalOnPointerMove.bind(this);\r\n        this.handlerTouchCancel = this.internalOnTouchCancel.bind(this);\r\n\r\n        if (this.preventClick) {\r\n            this.handlerPreventClick = this.internalPreventClick.bind(this);\r\n            element.addEventListener(\"click\", this.handlerPreventClick, options);\r\n        }\r\n\r\n        if (SUPPORT_TOUCH) {\r\n            element.addEventListener(\"touchstart\", this.handlerTouchStart, options);\r\n            element.addEventListener(\"touchend\", this.handlerTouchEnd, options);\r\n            element.addEventListener(\"touchcancel\", this.handlerTouchCancel, options);\r\n        }\r\n\r\n        element.addEventListener(\"mousedown\", this.handlerTouchStart, options);\r\n        element.addEventListener(\"mouseup\", this.handlerTouchEnd, options);\r\n        element.addEventListener(\"mouseout\", this.handlerTouchCancel, options);\r\n\r\n        if (this.captureTouchmove) {\r\n            if (SUPPORT_TOUCH) {\r\n                element.addEventListener(\"touchmove\", this.handlerTouchMove, options);\r\n            }\r\n            element.addEventListener(\"mousemove\", this.handlerTouchMove, options);\r\n        }\r\n\r\n        if (registerClickDetectors) {\r\n            window.activeClickDetectors.push(this);\r\n        }\r\n        this.element = element;\r\n    }\r\n\r\n    /**\r\n     * Returns if the bound element is currently in the DOM.\r\n     */\r\n    internalIsDomElementAttached() {\r\n        return this.element && document.documentElement.contains(this.element);\r\n    }\r\n\r\n    /**\r\n     * Checks if the given event is relevant for this detector\r\n     * @param {TouchEvent|MouseEvent} event\r\n     */\r\n    internalEventPreHandler(event, expectedRemainingTouches = 1) {\r\n        if (!this.element) {\r\n            // Already cleaned up\r\n            return false;\r\n        }\r\n\r\n        if (this.targetOnly && event.target !== this.element) {\r\n            // Clicked a child element\r\n            return false;\r\n        }\r\n\r\n        // Stop any propagation and defaults if configured\r\n        if (this.consumeEvents && event.cancelable) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (this.preventDefault && event.cancelable) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (window.TouchEvent && event instanceof TouchEvent) {\r\n            clickDetectorGlobals.lastTouchTime = performance.now();\r\n\r\n            // console.log(\"Got touches\", event.targetTouches.length, \"vs\", expectedRemainingTouches);\r\n            if (event.targetTouches.length !== expectedRemainingTouches) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (event instanceof MouseEvent) {\r\n            if (performance.now() - clickDetectorGlobals.lastTouchTime < 1000.0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Extracts the mous position from an event\r\n     * @param {TouchEvent|MouseEvent} event\r\n     * @returns {Vector} The client space position\r\n     */\r\n    static extractPointerPosition(event) {\r\n        if (window.TouchEvent && event instanceof TouchEvent) {\r\n            if (event.changedTouches.length !== 1) {\r\n                logger.warn(\r\n                    \"Got unexpected target touches:\",\r\n                    event.targetTouches.length,\r\n                    \"->\",\r\n                    event.targetTouches\r\n                );\r\n                return new Vector(0, 0);\r\n            }\r\n\r\n            const touch = event.changedTouches[0];\r\n            return new Vector(touch.clientX, touch.clientY);\r\n        }\r\n\r\n        if (event instanceof MouseEvent) {\r\n            return new Vector(event.clientX, event.clientY);\r\n        }\r\n\r\n        assertAlways(false, \"Got unknown event: \" + event);\r\n\r\n        return new Vector(0, 0);\r\n    }\r\n\r\n    /**\r\n     * Cacnels all ongoing events on this detector\r\n     */\r\n    cancelOngoingEvents() {\r\n        if (this.applyCssClass && this.element) {\r\n            this.element.classList.remove(this.applyCssClass);\r\n        }\r\n        this.clickDownPosition = null;\r\n        this.clickStartTime = null;\r\n        this.cancelled = true;\r\n        fastArrayDeleteValueIfContained(ongoingClickDetectors, this);\r\n    }\r\n\r\n    /**\r\n     * Internal pointer down handler\r\n     * @param {TouchEvent|MouseEvent} event\r\n     */\r\n    internalOnPointerDown(event) {\r\n        window.focus();\r\n\r\n        if (!this.internalEventPreHandler(event, 1)) {\r\n            return false;\r\n        }\r\n\r\n        const position = /** @type {typeof ClickDetector} */ (this.constructor).extractPointerPosition(event);\r\n\r\n        if (event instanceof MouseEvent) {\r\n            const isRightClick = event.button === 2;\r\n            if (isRightClick) {\r\n                // Ignore right clicks\r\n                this.rightClick.dispatch(position, event);\r\n                this.cancelled = true;\r\n                this.clickDownPosition = null;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.clickDownPosition) {\r\n            logger.warn(\"Ignoring double click\");\r\n            return false;\r\n        }\r\n\r\n        this.cancelled = false;\r\n        this.touchstart.dispatch(event);\r\n\r\n        // Store where the touch started\r\n        this.clickDownPosition = position;\r\n        this.clickStartTime = performance.now();\r\n        this.touchstartSimple.dispatch(this.clickDownPosition.x, this.clickDownPosition.y);\r\n\r\n        // If we are not currently within a click, register it\r\n        if (ongoingClickDetectors.indexOf(this) < 0) {\r\n            ongoingClickDetectors.push(this);\r\n        } else {\r\n            logger.warn(\"Click detector got pointer down of active pointer twice\");\r\n        }\r\n\r\n        // If we should apply any classes, do this now\r\n        if (this.applyCssClass) {\r\n            this.element.classList.add(this.applyCssClass);\r\n        }\r\n\r\n        // If we should play any sound, do this\r\n        if (this.clickSound) {\r\n            GLOBAL_APP.sound.playUiSound(this.clickSound);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Internal pointer move handler\r\n     * @param {TouchEvent|MouseEvent} event\r\n     */\r\n    internalOnPointerMove(event) {\r\n        if (!this.internalEventPreHandler(event, 1)) {\r\n            return false;\r\n        }\r\n        this.touchmove.dispatch(event);\r\n        const pos = /** @type {typeof ClickDetector} */ (this.constructor).extractPointerPosition(event);\r\n        this.touchmoveSimple.dispatch(pos.x, pos.y);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Internal pointer end handler\r\n     * @param {TouchEvent|MouseEvent} event\r\n     */\r\n    internalOnPointerEnd(event) {\r\n        window.focus();\r\n\r\n        if (!this.internalEventPreHandler(event, 0)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.cancelled) {\r\n            // warn(this, \"Not dispatching touchend on cancelled listener\");\r\n            return false;\r\n        }\r\n\r\n        if (event instanceof MouseEvent) {\r\n            const isRightClick = event.button === 2;\r\n            if (isRightClick) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        const index = ongoingClickDetectors.indexOf(this);\r\n        if (index < 0) {\r\n            logger.warn(\"Got pointer end but click detector is not in pressed state\");\r\n        } else {\r\n            fastArrayDelete(ongoingClickDetectors, index);\r\n        }\r\n\r\n        let dispatchClick = false;\r\n        let dispatchClickPos = null;\r\n\r\n        // Check for correct down position, otherwise must have pinched or so\r\n        if (this.clickDownPosition) {\r\n            const pos = /** @type {typeof ClickDetector} */ (this.constructor).extractPointerPosition(event);\r\n            const distance = pos.distance(this.clickDownPosition);\r\n            if (!IS_MOBILE || distance <= this.maxDistance) {\r\n                dispatchClick = true;\r\n                dispatchClickPos = pos;\r\n            } else {\r\n                console.warn(\"[ClickDetector] Touch does not count as click:\", \"(was\", distance, \")\");\r\n            }\r\n        }\r\n\r\n        this.clickDownPosition = null;\r\n        this.clickStartTime = null;\r\n\r\n        if (this.applyCssClass) {\r\n            this.element.classList.remove(this.applyCssClass);\r\n        }\r\n\r\n        // Dispatch in the end to avoid the element getting invalidated\r\n        // Also make sure that the element is still in the dom\r\n        if (this.internalIsDomElementAttached()) {\r\n            this.touchend.dispatch(event);\r\n            this.touchendSimple.dispatch();\r\n\r\n            if (dispatchClick) {\r\n                const detectors = ongoingClickDetectors.slice();\r\n                for (let i = 0; i < detectors.length; ++i) {\r\n                    detectors[i].cancelOngoingEvents();\r\n                }\r\n                this.click.dispatch(dispatchClickPos, event);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Internal touch cancel handler\r\n     * @param {TouchEvent|MouseEvent} event\r\n     */\r\n    internalOnTouchCancel(event) {\r\n        if (!this.internalEventPreHandler(event, 0)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.cancelled) {\r\n            // warn(this, \"Not dispatching touchcancel on cancelled listener\");\r\n            return false;\r\n        }\r\n\r\n        this.cancelOngoingEvents();\r\n        this.touchcancel.dispatch(event);\r\n        this.touchendSimple.dispatch(event);\r\n        return false;\r\n    }\r\n}\r\n","import { queryParamOptions } from \"./query_parameters\";\r\n\r\nexport const IS_DEBUG =\r\n    G_IS_DEV &&\r\n    typeof window !== \"undefined\" &&\r\n    window.location.port === \"3005\" &&\r\n    (window.location.host.indexOf(\"localhost:\") >= 0 || window.location.host.indexOf(\"192.168.0.\") >= 0) &&\r\n    window.location.search.indexOf(\"nodebug\") < 0;\r\n\r\nexport const IS_DEMO = queryParamOptions.fullVersion\r\n    ? false\r\n    : (!G_IS_DEV && !G_IS_STANDALONE) ||\r\n      (typeof window !== \"undefined\" && window.location.search.indexOf(\"demo\") >= 0);\r\n\r\nexport const SUPPORT_TOUCH = false;\r\n\r\nconst smoothCanvas = true;\r\n\r\nexport const THIRDPARTY_URLS = {\r\n    discord: \"https://discord.gg/HN7EVzV\",\r\n    github: \"https://github.com/tobspr/shapez.io\",\r\n    reddit: \"https://www.reddit.com/r/shapezio\",\r\n\r\n    standaloneStorePage: \"https://store.steampowered.com/app/1318690/shapezio/\",\r\n};\r\n\r\nexport const globalConfig = {\r\n    // Size of a single tile in Pixels.\r\n    // NOTICE: Update webpack.production.config too!\r\n    tileSize: 32,\r\n    halfTileSize: 16,\r\n\r\n    // Which dpi the assets have\r\n    assetsDpi: 192 / 32,\r\n    assetsSharpness: 1.2,\r\n    shapesSharpness: 1.4,\r\n\r\n    // Production analytics\r\n    statisticsGraphDpi: 2.5,\r\n    statisticsGraphSlices: 100,\r\n    analyticsSliceDurationSeconds: G_IS_DEV ? 1 : 10,\r\n\r\n    minimumTickRate: 25,\r\n    maximumTickRate: 500,\r\n\r\n    // Map\r\n    mapChunkSize: 16,\r\n    mapChunkPrerenderMinZoom: -1,\r\n    mapChunkOverviewMinZoom: 0.7,\r\n\r\n    // Belt speeds\r\n    // NOTICE: Update webpack.production.config too!\r\n    beltSpeedItemsPerSecond: 2,\r\n    minerSpeedItemsPerSecond: 0, // COMPUTED\r\n\r\n    beltItemSpacingByLayer: {\r\n        regular: 0.63,\r\n        wires: 0.4,\r\n    },\r\n\r\n    wiresSpeedItemsPerSecond: 6,\r\n\r\n    undergroundBeltMaxTilesByTier: [5, 8],\r\n\r\n    buildingSpeeds: {\r\n        cutter: 1 / 4,\r\n        cutterQuad: 1 / 4,\r\n        rotater: 1 / 1,\r\n        rotaterCCW: 1 / 1,\r\n        rotaterFL: 1 / 1,\r\n        painter: 1 / 6,\r\n        painterDouble: 1 / 8,\r\n        painterQuad: 1 / 8,\r\n        mixer: 1 / 5,\r\n        stacker: 1 / 6,\r\n        advancedProcessor: 1 / 3,\r\n    },\r\n\r\n    // Zooming\r\n    initialZoom: 1.9,\r\n    minZoomLevel: 0.1,\r\n    maxZoomLevel: 3,\r\n\r\n    // Global game speed\r\n    gameSpeed: 1,\r\n\r\n    warmupTimeSecondsFast: 0.1,\r\n    warmupTimeSecondsRegular: 1,\r\n\r\n    smoothing: {\r\n        smoothMainCanvas: smoothCanvas && true,\r\n        quality: \"low\", // Low is CRUCIAL for mobile performance!\r\n    },\r\n\r\n    rendering: {},\r\n    debug: G_IS_DEV ? require(\"./config.local\").default : {},\r\n\r\n    // Secret vars\r\n    info: {\r\n        // Binary file salt\r\n        file: \"Ec'])@^+*9zMevK3uMV4432x9%iK'=\",\r\n\r\n        // Savegame salt\r\n        sgSalt: \"}95Q3%8/.837Lqym_BJx%q7)pAHJbF\",\r\n\r\n        // Analytics key\r\n        analyticsApiKey: \"baf6a50f0cc7dfdec5a0e21c88a1c69a4b34bc4a\",\r\n    },\r\n};\r\n\r\nexport const IS_MOBILE = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\r\n// Automatic calculations\r\nglobalConfig.minerSpeedItemsPerSecond = globalConfig.beltSpeedItemsPerSecond / 5;\r\n\r\n// Dynamic calculations\r\nif (globalConfig.debug.disableMapOverview) {\r\n    globalConfig.mapChunkOverviewMinZoom = 0;\r\n    globalConfig.mapChunkPrerenderMinZoom = 0;\r\n}\r\n\r\n// Stuff for making the trailer\r\nif (G_IS_DEV && globalConfig.debug.renderForTrailer) {\r\n    globalConfig.debug.framePausesBetweenTicks = 32;\r\n    // globalConfig.mapChunkOverviewMinZoom = 0.0;\r\n    // globalConfig.mapChunkPrerenderMinZoom = globalConfig.mapChunkOverviewMinZoom;\r\n    // globalConfig.debug.instantBelts = true;\r\n    // globalConfig.debug.instantProcessors = true;\r\n    // globalConfig.debug.instantMiners = true;\r\n    globalConfig.debug.disableSavegameWrite = true;\r\n    // globalConfig.beltSpeedItemsPerSecond *= 2;\r\n}\r\n\r\nif (globalConfig.debug.fastGameEnter) {\r\n    globalConfig.debug.noArtificalDelays = true;\r\n}\r\n","export default {\r\n    // You can set any debug options here!\r\n    /* dev:start */\r\n    // -----------------------------------------------------------------------------------\r\n    _fastGameEnter: \"Quickly enters the game and skips the main menu - good for fast iterating\",\r\n    fastGameEnter: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _noArtificialDelays: \"Skips any delays like transitions between states and such\",\r\n    noArtificialDelays: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _disableSavegameWrite: \"Disables writing of savegames, useful for testing the same savegame over and over\",\r\n    disableSavegameWrite: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _showEntityBounds: \"Shows bounds of all entities\",\r\n    showEntityBounds: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _showAcceptorEjectors: \"Shows arrows for every ejector / acceptor\",\r\n    showAcceptorEjectors: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _disableMusic: \"Disables the music (Overrides any setting, can cause weird behaviour)\",\r\n    disableMusic: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _doNotRenderStatics: \"Do not render static map entities (=most buildings)\",\r\n    doNotRenderStatics: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _disableZoomLimits: \"Allow to zoom freely without limits\",\r\n    disableZoomLimits: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _showChunkBorders: \"Shows a border arround every chunk\",\r\n    showChunkBorders: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _rewardsInstant: \"All rewards can be unlocked by passing just 1 of any shape\",\r\n    rewardsInstant: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _allBuildingsUnlocked: \"Unlocks all buildings\",\r\n    allBuildingsUnlocked: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _blueprintsNoCost: \"Disables cost of blueprints\",\r\n    blueprintsNoCost: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _upgradesNoCost: \"Disables cost of upgrades\",\r\n    upgradesNoCost: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _disableUnlockDialog: \"Disables the dialog when completing a level\",\r\n    disableUnlockDialog: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _disableLogicTicks: \"Disables the simulation - This effectively pauses the game.\",\r\n    disableLogicTicks: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _testClipping: \"Test the rendering if everything is clipped out properly\",\r\n    testClipping: false,\r\n    // -----------------------------------------------------------------------------------\r\n    // Allows to render slower, useful for recording at half speed to avoid stuttering\r\n    // framePausesBetweenTicks: 1,\r\n    // -----------------------------------------------------------------------------------\r\n    _testTranslations: \"Replace all translations with emojis to see which texts are translateable\",\r\n    testTranslations: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _enableEntityInspector: \"Enables an inspector which shows information about the entity below the curosr\",\r\n    enableEntityInspector: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _testAds: \"Enables ads in the local build (normally they are deactivated there)\",\r\n    testAds: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _disableMapOverview: \"Disables the automatic switch to an overview when zooming out\",\r\n    disableMapOverview: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _disableUpgradeNotification: \"Disables the notification when there are new entries in the changelog since last played\",\r\n    disableUpgradeNotification: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _instantBelts: \"Makes belts almost infinitely fast\",\r\n    instantBelts: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _instantProcessors: \"Makes item processors almost infinitely fast\",\r\n    instantProcessors: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _instantMiners: \"Makes miners almost infinitely fast\",\r\n    instantMiners: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _resumeGameOnFastEnter: \"When using fastGameEnter, controls whether a new game is started or the last one is resumed\",\r\n    resumeGameOnFastEnter: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _renderForTrailer: \"Special option used to render the trailer\",\r\n    renderForTrailer: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _renderChanges: \"Whether to render changes\",\r\n    renderChanges: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _renderBeltPaths: \"Whether to render belt paths\",\r\n    renderBeltPaths: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _checkBeltPaths: \"Whether to check belt paths\",\r\n    checkBeltPaths: false,\r\n    // -----------------------------------------------------------------------------------\r\n    _detailedStatistics: \"Whether to items / s instead of items / m in stats\",\r\n    detailedStatistics: false,\r\n    // -----------------------------------------------------------------------------------\r\n    /* dev:end */\r\n};\r\n","import { globalConfig } from \"../core/config\";\r\nimport { round1Digit, round2Digits } from \"./utils\";\r\n\r\n/**\r\n * Returns the current dpi\r\n * @returns {number}\r\n */\r\nexport function getDeviceDPI() {\r\n    return window.devicePixelRatio || 1;\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} dpi\r\n * @returns {number} Smoothed dpi\r\n */\r\nexport function smoothenDpi(dpi) {\r\n    if (dpi < 0.05) {\r\n        return 0.05;\r\n    } else if (dpi < 0.1) {\r\n        return round2Digits(dpi);\r\n    } else if (dpi < 1) {\r\n        return round1Digit(dpi);\r\n    } else {\r\n        return round1Digit(Math.round(dpi / 0.5) * 0.5);\r\n    }\r\n}\r\n\r\n// Initial dpi\r\n// setDPIMultiplicator(1);\r\n\r\n/**\r\n * Prepares a context for hihg dpi rendering\r\n * @param {CanvasRenderingContext2D} context\r\n */\r\nexport function prepareHighDPIContext(context, smooth = true) {\r\n    const dpi = getDeviceDPI();\r\n    context.scale(dpi, dpi);\r\n\r\n    if (smooth) {\r\n        context.imageSmoothingEnabled = true;\r\n        context.webkitImageSmoothingEnabled = true;\r\n\r\n        // @ts-ignore\r\n        context.imageSmoothingQuality = globalConfig.smoothing.quality;\r\n    } else {\r\n        context.imageSmoothingEnabled = false;\r\n        context.webkitImageSmoothingEnabled = false;\r\n    }\r\n}\r\n\r\n/**\r\n * Resizes a high dpi canvas\r\n * @param {HTMLCanvasElement} canvas\r\n * @param {number} w\r\n * @param {number} h\r\n */\r\nexport function resizeHighDPICanvas(canvas, w, h, smooth = true) {\r\n    const dpi = getDeviceDPI();\r\n\r\n    const wNumber = Math.floor(w);\r\n    const hNumber = Math.floor(h);\r\n\r\n    const targetW = Math.floor(wNumber * dpi);\r\n    const targetH = Math.floor(hNumber * dpi);\r\n\r\n    if (targetW !== canvas.width || targetH !== canvas.height) {\r\n        // console.log(\"Resize Canvas from\", canvas.width, canvas.height, \"to\", targetW, targetH)\r\n        canvas.width = targetW;\r\n        canvas.height = targetH;\r\n        canvas.style.width = wNumber + \"px\";\r\n        canvas.style.height = hNumber + \"px\";\r\n        prepareHighDPIContext(canvas.getContext(\"2d\"), smooth);\r\n    }\r\n}\r\n\r\n/**\r\n * Resizes a canvas\r\n * @param {HTMLCanvasElement} canvas\r\n * @param {number} w\r\n * @param {number} h\r\n */\r\nexport function resizeCanvas(canvas, w, h, setStyle = true) {\r\n    const actualW = Math.ceil(w);\r\n    const actualH = Math.ceil(h);\r\n    if (actualW !== canvas.width || actualH !== canvas.height) {\r\n        canvas.width = actualW;\r\n        canvas.height = actualH;\r\n        if (setStyle) {\r\n            canvas.style.width = actualW + \"px\";\r\n            canvas.style.height = actualH + \"px\";\r\n        }\r\n        // console.log(\"Resizing canvas to\", actualW, \"x\", actualH);\r\n    }\r\n}\r\n\r\n/**\r\n * Resizes a canvas and makes sure its cleared\r\n * @param {HTMLCanvasElement} canvas\r\n * @param {CanvasRenderingContext2D} context\r\n * @param {number} w\r\n * @param {number} h\r\n */\r\nexport function resizeCanvasAndClear(canvas, context, w, h) {\r\n    const actualW = Math.ceil(w);\r\n    const actualH = Math.ceil(h);\r\n    if (actualW !== canvas.width || actualH !== canvas.height) {\r\n        canvas.width = actualW;\r\n        canvas.height = actualH;\r\n        canvas.style.width = actualW + \"px\";\r\n        canvas.style.height = actualH + \"px\";\r\n        // console.log(\"Resizing canvas to\", actualW, \"x\", actualH);\r\n    } else {\r\n        context.clearRect(0, 0, actualW, actualH);\r\n    }\r\n}\r\n","import { Rectangle } from \"./rectangle\";\r\nimport { globalConfig } from \"./config\";\r\n\r\n\r\n\r\nexport class DrawParameters {\r\n    constructor({ context, visibleRect, desiredAtlasScale, zoomLevel, root }) {\r\n        /** @type {CanvasRenderingContext2D} */\r\n        this.context = context;\r\n\r\n        /** @type {Rectangle} */\r\n        this.visibleRect = visibleRect;\r\n\r\n        /** @type {number} */\r\n        this.desiredAtlasScale = desiredAtlasScale;\r\n\r\n        /** @type {number} */\r\n        this.zoomLevel = zoomLevel;\r\n\r\n        // FIXME: Not really nice\r\n        /** @type {GameRoot} */\r\n        this.root = root;\r\n\r\n        if (G_IS_DEV && globalConfig.debug.testClipping) {\r\n            this.visibleRect = this.visibleRect.expandedInAllDirections(-100);\r\n        }\r\n    }\r\n}\r\n","\r\n\r\nimport { Vector } from \"./vector\";\r\nimport { Rectangle } from \"./rectangle\";\r\nimport { createLogger } from \"./logging\";\r\n\r\nconst logger = createLogger(\"draw_utils\");\r\n\r\nexport function initDrawUtils() {\r\n    CanvasRenderingContext2D.prototype.beginRoundedRect = function (x, y, w, h, r) {\r\n        if (r < 0.05) {\r\n            this.beginPath();\r\n            this.rect(x, y, w, h);\r\n            return;\r\n        }\r\n\r\n        if (w < 2 * r) {\r\n            r = w / 2;\r\n        }\r\n        if (h < 2 * r) {\r\n            r = h / 2;\r\n        }\r\n        this.beginPath();\r\n        this.moveTo(x + r, y);\r\n        this.arcTo(x + w, y, x + w, y + h, r);\r\n        this.arcTo(x + w, y + h, x, y + h, r);\r\n        this.arcTo(x, y + h, x, y, r);\r\n        this.arcTo(x, y, x + w, y, r);\r\n        // this.closePath();\r\n    };\r\n\r\n    CanvasRenderingContext2D.prototype.beginCircle = function (x, y, r) {\r\n        if (r < 0.05) {\r\n            this.beginPath();\r\n            this.rect(x, y, 1, 1);\r\n            return;\r\n        }\r\n        this.beginPath();\r\n        this.arc(x, y, r, 0, 2.0 * Math.PI);\r\n    };\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} param0\r\n * @param {DrawParameters} param0.parameters\r\n * @param {AtlasSprite} param0.sprite\r\n * @param {number} param0.x\r\n * @param {number} param0.y\r\n * @param {number} param0.angle\r\n * @param {number} param0.size\r\n * @param {number=} param0.offsetX\r\n * @param {number=} param0.offsetY\r\n */\r\nexport function drawRotatedSprite({ parameters, sprite, x, y, angle, size, offsetX = 0, offsetY = 0 }) {\r\n    parameters.context.translate(x, y);\r\n    parameters.context.rotate(angle);\r\n    sprite.drawCachedCentered(parameters, offsetX, offsetY, size, false);\r\n    parameters.context.rotate(-angle);\r\n    parameters.context.translate(-x, -y);\r\n}\r\n\r\nexport function drawLineFast(context, { x1, x2, y1, y2, color = null, lineSize = 1 }) {\r\n    const dX = x2 - x1;\r\n    const dY = y2 - y1;\r\n\r\n    const angle = Math.atan2(dY, dX) + 0.0 * Math.PI;\r\n    const len = Math.hypot(dX, dY);\r\n\r\n    context.translate(x1, y1);\r\n    context.rotate(angle);\r\n\r\n    if (color) {\r\n        context.fillStyle = color;\r\n    }\r\n\r\n    context.fillRect(0, -lineSize / 2, len, lineSize);\r\n\r\n    context.rotate(-angle);\r\n    context.translate(-x1, -y1);\r\n}\r\n\r\nconst INSIDE = 0;\r\nconst LEFT = 1;\r\nconst RIGHT = 2;\r\nconst BOTTOM = 4;\r\nconst TOP = 8;\r\n\r\n// https://en.wikipedia.org/wiki/Cohen%E2%80%93Sutherland_algorithm\r\n\r\nfunction computeOutCode(x, y, xmin, xmax, ymin, ymax) {\r\n    let code = INSIDE;\r\n\r\n    if (x < xmin)\r\n        // to the left of clip window\r\n        code |= LEFT;\r\n    else if (x > xmax)\r\n        // to the right of clip window\r\n        code |= RIGHT;\r\n    if (y < ymin)\r\n        // below the clip window\r\n        code |= BOTTOM;\r\n    else if (y > ymax)\r\n        // above the clip window\r\n        code |= TOP;\r\n\r\n    return code;\r\n}\r\n\r\n// Cohen–Sutherland clipping algorithm clips a line from\r\n// P0 = (x0, y0) to P1 = (x1, y1) against a rectangle with\r\n// diagonal from (xmin, ymin) to (xmax, ymax).\r\n/**\r\n *\r\n * @param {CanvasRenderingContext2D} context\r\n */\r\nexport function drawLineFastClipped(context, rect, { x0, y0, x1, y1, color = null, lineSize = 1 }) {\r\n    const xmin = rect.x;\r\n    const ymin = rect.y;\r\n    const xmax = rect.right();\r\n    const ymax = rect.bottom();\r\n\r\n    // compute outcodes for P0, P1, and whatever point lies outside the clip rectangle\r\n    let outcode0 = computeOutCode(x0, y0, xmin, xmax, ymin, ymax);\r\n    let outcode1 = computeOutCode(x1, y1, xmin, xmax, ymin, ymax);\r\n    let accept = false;\r\n\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        if (!(outcode0 | outcode1)) {\r\n            // bitwise OR is 0: both points inside window; trivially accept and exit loop\r\n            accept = true;\r\n            break;\r\n        } else if (outcode0 & outcode1) {\r\n            // bitwise AND is not 0: both points share an outside zone (LEFT, RIGHT, TOP,\r\n            // or BOTTOM), so both must be outside window; exit loop (accept is false)\r\n            break;\r\n        } else {\r\n            // failed both tests, so calculate the line segment to clip\r\n            // from an outside point to an intersection with clip edge\r\n            let x, y;\r\n\r\n            // At least one endpoint is outside the clip rectangle; pick it.\r\n            let outcodeOut = outcode0 ? outcode0 : outcode1;\r\n\r\n            // Now find the intersection point;\r\n            // use formulas:\r\n            //   slope = (y1 - y0) / (x1 - x0)\r\n            //   x = x0 + (1 / slope) * (ym - y0), where ym is ymin or ymax\r\n            //   y = y0 + slope * (xm - x0), where xm is xmin or xmax\r\n            // No need to worry about divide-by-zero because, in each case, the\r\n            // outcode bit being tested guarantees the denominator is non-zero\r\n            if (outcodeOut & TOP) {\r\n                // point is above the clip window\r\n                x = x0 + ((x1 - x0) * (ymax - y0)) / (y1 - y0);\r\n                y = ymax;\r\n            } else if (outcodeOut & BOTTOM) {\r\n                // point is below the clip window\r\n                x = x0 + ((x1 - x0) * (ymin - y0)) / (y1 - y0);\r\n                y = ymin;\r\n            } else if (outcodeOut & RIGHT) {\r\n                // point is to the right of clip window\r\n                y = y0 + ((y1 - y0) * (xmax - x0)) / (x1 - x0);\r\n                x = xmax;\r\n            } else if (outcodeOut & LEFT) {\r\n                // point is to the left of clip window\r\n                y = y0 + ((y1 - y0) * (xmin - x0)) / (x1 - x0);\r\n                x = xmin;\r\n            }\r\n\r\n            // Now we move outside point to intersection point to clip\r\n            // and get ready for next pass.\r\n            if (outcodeOut == outcode0) {\r\n                x0 = x;\r\n                y0 = y;\r\n                outcode0 = computeOutCode(x0, y0, xmin, xmax, ymin, ymax);\r\n            } else {\r\n                x1 = x;\r\n                y1 = y;\r\n                outcode1 = computeOutCode(x1, y1, xmin, xmax, ymin, ymax);\r\n            }\r\n        }\r\n    }\r\n    if (accept) {\r\n        // Following functions are left for implementation by user based on\r\n        // their platform (OpenGL/graphics.h etc.)\r\n        // DrawRectangle(xmin, ymin, xmax, ymax);\r\n        // LineSegment(x0, y0, x1, y1);\r\n        drawLineFast(context, {\r\n            x1: x0,\r\n            y1: y0,\r\n            x2: x1,\r\n            y2: y1,\r\n            color,\r\n            lineSize,\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * @param   {number}  h       The hue\r\n * @param   {number}  s       The saturation\r\n * @param   {number}  l       The lightness\r\n * @return  {Array}           The RGB representation\r\n */\r\nexport function hslToRgb(h, s, l) {\r\n    let r;\r\n    let g;\r\n    let b;\r\n\r\n    if (s === 0) {\r\n        r = g = b = l; // achromatic\r\n    } else {\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        const hue2rgb = function (p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n\r\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n}\r\n\r\nexport function wrapText(context, text, x, y, maxWidth, lineHeight, stroke = false) {\r\n    var words = text.split(\" \");\r\n    var line = \"\";\r\n\r\n    for (var n = 0; n < words.length; n++) {\r\n        var testLine = line + words[n] + \" \";\r\n        var metrics = context.measureText(testLine);\r\n        var testWidth = metrics.width;\r\n        if (testWidth > maxWidth && n > 0) {\r\n            if (stroke) {\r\n                context.strokeText(line, x, y);\r\n            } else {\r\n                context.fillText(line, x, y);\r\n            }\r\n            line = words[n] + \" \";\r\n            y += lineHeight;\r\n        } else {\r\n            line = testLine;\r\n        }\r\n    }\r\n\r\n    if (stroke) {\r\n        context.strokeText(line, x, y);\r\n    } else {\r\n        context.fillText(line, x, y);\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a rotated trapez, used for spotlight culling\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} w\r\n * @param {number} h\r\n * @param {number} leftHeight\r\n * @param {number} angle\r\n */\r\nexport function rotateTrapezRightFaced(x, y, w, h, leftHeight, angle) {\r\n    const halfY = y + h / 2;\r\n    const points = [\r\n        new Vector(x, halfY - leftHeight / 2),\r\n        new Vector(x + w, y),\r\n        new Vector(x, halfY + leftHeight / 2),\r\n        new Vector(x + w, y + h),\r\n    ];\r\n\r\n    return Rectangle.getAroundPointsRotated(points, angle);\r\n}\r\n\r\n/**\r\n * Converts values from 0 .. 255 to values like 07, 7f, 5d etc\r\n * @param {number} value\r\n * @returns {string}\r\n */\r\nexport function mapClampedColorValueToHex(value) {\r\n    const hex = \"0123456789abcdef\";\r\n    return hex[Math.floor(value / 16)] + hex[value % 16];\r\n}\r\n\r\n/**\r\n * Converts rgb to a hex string\r\n * @param {number} r\r\n * @param {number} g\r\n * @param {number} b\r\n * @returns {string}\r\n */\r\nexport function rgbToHex(r, g, b) {\r\n    return mapClampedColorValueToHex(r) + mapClampedColorValueToHex(g) + mapClampedColorValueToHex(b);\r\n}\r\n","import { logSection } from \"./logging\";\r\nimport { stringifyObjectContainingErrors } from \"./logging\";\r\nimport { removeAllChildren } from \"./utils\";\r\n\r\nexport let APPLICATION_ERROR_OCCURED = false;\r\n\r\n/**\r\n *\r\n * @param {Event|string} message\r\n * @param {string} source\r\n * @param {number} lineno\r\n * @param {number} colno\r\n * @param {Error} source\r\n */\r\nfunction catchErrors(message, source, lineno, colno, error) {\r\n    let fullPayload = JSON.parse(\r\n        stringifyObjectContainingErrors({\r\n            message,\r\n            source,\r\n            lineno,\r\n            colno,\r\n            error,\r\n        })\r\n    );\r\n\r\n    if ((\"\" + message).indexOf(\"Script error.\") >= 0) {\r\n        console.warn(\"Thirdparty script error:\", message);\r\n        return;\r\n    }\r\n\r\n    if ((\"\" + message).indexOf(\"NS_ERROR_FAILURE\") >= 0) {\r\n        console.warn(\"Firefox NS_ERROR_FAILURE error:\", message);\r\n        return;\r\n    }\r\n\r\n    if ((\"\" + message).indexOf(\"Cannot read property 'postMessage' of null\") >= 0) {\r\n        console.warn(\"Safari can not read post message error:\", message);\r\n        return;\r\n    }\r\n\r\n    if (!G_IS_DEV && G_IS_BROWSER && (\"\" + source).indexOf(\"shapez.io\") < 0) {\r\n        console.warn(\"Thirdparty error:\", message);\r\n        return;\r\n    }\r\n\r\n    console.log(\"\\n\\n\\n⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️\\n\\n\\n\");\r\n    console.log(\"          APPLICATION CRASHED             \");\r\n    console.log(\"\\n\\n⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️\\n\\n\\n\");\r\n\r\n    logSection(\"APPLICATION CRASH\", \"#e53935\");\r\n    console.error(\"Error:\", message, \"->\", error);\r\n    console.log(\"Payload:\", fullPayload);\r\n\r\n    if (window.Sentry && !window.anyModLoaded) {\r\n        window.Sentry.withScope(scope => {\r\n            window.Sentry.setTag(\"message\", message);\r\n            window.Sentry.setTag(\"source\", source);\r\n\r\n            window.Sentry.setExtra(\"message\", message);\r\n            window.Sentry.setExtra(\"source\", source);\r\n            window.Sentry.setExtra(\"lineno\", lineno);\r\n            window.Sentry.setExtra(\"colno\", colno);\r\n            window.Sentry.setExtra(\"error\", error);\r\n            window.Sentry.setExtra(\"fullPayload\", fullPayload);\r\n\r\n            try {\r\n                const userName = window.localStorage.getItem(\"tracking_context\") || null;\r\n                window.Sentry.setTag(\"username\", userName);\r\n            } catch (ex) {\r\n                // ignore\r\n            }\r\n\r\n            window.Sentry.captureException(error || source);\r\n        });\r\n    }\r\n\r\n    if (APPLICATION_ERROR_OCCURED) {\r\n        console.warn(\"ERROR: Only showing and submitting first error\");\r\n        return;\r\n    }\r\n\r\n    APPLICATION_ERROR_OCCURED = true;\r\n    const element = document.createElement(\"div\");\r\n    element.id = \"applicationError\";\r\n\r\n    const title = document.createElement(\"h1\");\r\n    title.innerText = \"Whoops!\";\r\n    element.appendChild(title);\r\n\r\n    const desc = document.createElement(\"div\");\r\n    desc.classList.add(\"desc\");\r\n    desc.innerHTML = `\r\n        It seems the application crashed - I am sorry for that!<br /><br />\r\n        An anonymized crash report has been sent, and I will have a look as soon as possible.<br /><br />\r\n        If you have additional information how I can reproduce this error, please E-Mail me:&nbsp;\r\n        <a href=\"mailto:bugs@shapez.io?title=Application+Crash\">bugs@shapez.io</a>`;\r\n    element.appendChild(desc);\r\n\r\n    const details = document.createElement(\"pre\");\r\n    details.classList.add(\"details\");\r\n    details.innerText = (error && error.stack) || message;\r\n    element.appendChild(details);\r\n\r\n    const inject = function () {\r\n        if (!G_IS_DEV) {\r\n            removeAllChildren(document.body);\r\n        }\r\n        if (document.body.parentElement) {\r\n            document.body.parentElement.appendChild(element);\r\n        } else {\r\n            document.body.appendChild(element);\r\n        }\r\n    };\r\n\r\n    if (document.body) {\r\n        inject();\r\n    } else {\r\n        setTimeout(() => {\r\n            inject();\r\n        }, 200);\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nwindow.onerror = catchErrors;\r\n","export class ExplainedResult {\r\n    constructor(result = true, reason = null, additionalProps = {}) {\r\n        /** @type {boolean} */\r\n        this.result = result;\r\n\r\n        /** @type {string} */\r\n        this.reason = reason;\r\n\r\n        // Copy additional props\r\n        for (const key in additionalProps) {\r\n            this[key] = additionalProps[key];\r\n        }\r\n    }\r\n\r\n    isGood() {\r\n        return !!this.result;\r\n    }\r\n\r\n    isBad() {\r\n        return !this.result;\r\n    }\r\n\r\n    static good() {\r\n        return new ExplainedResult(true);\r\n    }\r\n\r\n    static bad(reason, additionalProps) {\r\n        return new ExplainedResult(false, reason, additionalProps);\r\n    }\r\n\r\n    static requireAll(...args) {\r\n        for (let i = 0; i < args.length; ++i) {\r\n            const subResult = args[i].call();\r\n            if (!subResult.isGood()) {\r\n                return subResult;\r\n            }\r\n        }\r\n        return this.good();\r\n    }\r\n}\r\n","import { createLogger } from \"./logging\";\r\n\r\nconst logger = createLogger(\"factory\");\r\n\r\n// simple factory pattern\r\nexport class Factory {\r\n    constructor(id) {\r\n        this.id = id;\r\n\r\n        // Store array as well as dictionary, to speed up lookups\r\n        this.entries = [];\r\n        this.entryIds = [];\r\n        this.idToEntry = {};\r\n    }\r\n\r\n    getId() {\r\n        return this.id;\r\n    }\r\n\r\n    register(entry) {\r\n        // Extract id\r\n        const id = entry.getId();\r\n        assert(id, \"Factory: Invalid id for class: \" + entry);\r\n\r\n        // Check duplicates\r\n        assert(!this.idToEntry[id], \"Duplicate factory entry for \" + id);\r\n\r\n        // Insert\r\n        this.entries.push(entry);\r\n        this.entryIds.push(id);\r\n        this.idToEntry[id] = entry;\r\n    }\r\n\r\n    /**\r\n     * Checks if a given id is registered\r\n     * @param {string} id\r\n     * @returns {boolean}\r\n     */\r\n    hasId(id) {\r\n        return !!this.idToEntry[id];\r\n    }\r\n\r\n    /**\r\n     * Finds an instance by a given id\r\n     * @param {string} id\r\n     * @returns {object}\r\n     */\r\n    findById(id) {\r\n        const entry = this.idToEntry[id];\r\n        if (!entry) {\r\n            logger.error(\"Object with id\", id, \"is not registered on factory\", this.id, \"!\");\r\n            assert(false, \"Factory: Object with id '\" + id + \"' is not registered!\");\r\n            return null;\r\n        }\r\n        return entry;\r\n    }\r\n\r\n    /**\r\n     * Returns all entries\r\n     * @returns {Array<object>}\r\n     */\r\n    getEntries() {\r\n        return this.entries;\r\n    }\r\n\r\n    /**\r\n     * Returns all registered ids\r\n     * @returns {Array<string>}\r\n     */\r\n    getAllIds() {\r\n        return this.entryIds;\r\n    }\r\n\r\n    /**\r\n     * Returns amount of stored entries\r\n     * @returns {number}\r\n     */\r\n    getNumEntries() {\r\n        return this.entries.length;\r\n    }\r\n}\r\n","\r\n\r\nimport { globalConfig } from \"./config\";\r\nimport { ClickDetector } from \"./click_detector\";\r\nimport { logSection, createLogger } from \"./logging\";\r\nimport { InputReceiver } from \"./input_receiver\";\r\nimport { waitNextFrame } from \"./utils\";\r\nimport { RequestChannel } from \"./request_channel\";\r\nimport { MUSIC } from \"../platform/sound\";\r\n\r\nconst logger = createLogger(\"game_state\");\r\n\r\n/**\r\n * Basic state of the game state machine. This is the base of the whole game\r\n */\r\nexport class GameState {\r\n    /**\r\n     * Constructs a new state with the given id\r\n     * @param {string} key The id of the state. We use ids to refer to states because otherwise we get\r\n     *                     circular references\r\n     */\r\n    constructor(key) {\r\n        this.key = key;\r\n\r\n        /** @type {StateManager} */\r\n        this.stateManager = null;\r\n\r\n        /** @type {Application} */\r\n        this.app = null;\r\n\r\n        // Store if we are currently fading out\r\n        this.fadingOut = false;\r\n\r\n        /** @type {Array<ClickDetector>} */\r\n        this.clickDetectors = [];\r\n\r\n        // Every state captures keyboard events by default\r\n        this.inputReciever = new InputReceiver(\"state-\" + key);\r\n        this.inputReciever.backButton.add(this.onBackButton, this);\r\n\r\n        // A channel we can use to perform async ops\r\n        this.asyncChannel = new RequestChannel();\r\n    }\r\n\r\n    //// GETTERS / HELPER METHODS ////\r\n\r\n    /**\r\n     * Returns the states key\r\n     * @returns {string}\r\n     */\r\n    getKey() {\r\n        return this.key;\r\n    }\r\n\r\n    /**\r\n     * Returns the html element of the state\r\n     * @returns {HTMLElement}\r\n     */\r\n    getDivElement() {\r\n        return document.getElementById(\"state_\" + this.key);\r\n    }\r\n\r\n    /**\r\n     * Transfers to a new state\r\n     * @param {string} stateKey The id of the new state\r\n     */\r\n    moveToState(stateKey, payload = {}, skipFadeOut = false) {\r\n        if (this.fadingOut) {\r\n            logger.warn(\"Skipping move to '\" + stateKey + \"' since already fading out\");\r\n            return;\r\n        }\r\n\r\n        // Clean up event listeners\r\n        this.internalCleanUpClickDetectors();\r\n\r\n        // Fading\r\n        const fadeTime = this.internalGetFadeInOutTime();\r\n        const doFade = !skipFadeOut && this.getHasFadeOut() && fadeTime !== 0;\r\n        logger.log(\"Moving to\", stateKey, \"(fading=\", doFade, \")\");\r\n        if (doFade) {\r\n            this.htmlElement.classList.remove(\"arrived\");\r\n            this.fadingOut = true;\r\n            setTimeout(() => {\r\n                this.stateManager.moveToState(stateKey, payload);\r\n            }, fadeTime);\r\n        } else {\r\n            this.stateManager.moveToState(stateKey, payload);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} nextStateId\r\n     * @param {object=} nextStatePayload\r\n     */\r\n    watchAdAndMoveToState(nextStateId, nextStatePayload = {}) {\r\n        if (this.app.adProvider.getCanShowVideoAd() && this.app.isRenderable()) {\r\n            this.moveToState(\r\n                \"WatchAdState\",\r\n                {\r\n                    nextStateId,\r\n                    nextStatePayload,\r\n                },\r\n                true\r\n            );\r\n        } else {\r\n            this.moveToState(nextStateId, nextStatePayload);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tracks clicks on a given element and calls the given callback *on this state*.\r\n     * If you want to call another function wrap it inside a lambda.\r\n     * @param {Element} element The element to track clicks on\r\n     * @param {function():void} handler The handler to call\r\n     * @param {import(\"./click_detector\").ClickDetectorConstructorArgs=} args Click detector arguments\r\n     */\r\n    trackClicks(element, handler, args = {}) {\r\n        const detector = new ClickDetector(element, args);\r\n        detector.click.add(handler, this);\r\n        if (G_IS_DEV) {\r\n            // Append a source so we can check where the click detector is from\r\n            // @ts-ignore\r\n            detector._src = \"state-\" + this.key;\r\n        }\r\n        this.clickDetectors.push(detector);\r\n    }\r\n\r\n    /**\r\n     * Cancels all promises on the api as well as our async channel\r\n     */\r\n    cancelAllAsyncOperations() {\r\n        this.asyncChannel.cancelAll();\r\n    }\r\n\r\n    //// CALLBACKS ////\r\n\r\n    /**\r\n     * Callback when entering the state, to be overriddemn\r\n     * @param {any} payload Arbitrary data passed from the state which we are transferring from\r\n     */\r\n    onEnter(payload) {}\r\n\r\n    /**\r\n     * Callback when leaving the state\r\n     */\r\n    onLeave() {}\r\n\r\n    /**\r\n     * Callback before leaving the game state or when the page is unloaded\r\n     */\r\n    onBeforeExit() {}\r\n\r\n    /**\r\n     * Callback when the app got paused (on android, this means in background)\r\n     */\r\n    onAppPause() {}\r\n\r\n    /**\r\n     * Callback when the app got resumed (on android, this means in foreground again)\r\n     */\r\n    onAppResume() {}\r\n\r\n    /**\r\n     * Render callback\r\n     * @param {number} dt Delta time in ms since last render\r\n     */\r\n    onRender(dt) {}\r\n\r\n    /**\r\n     * Background tick callback, called while the game is inactiev\r\n     * @param {number} dt Delta time in ms since last tick\r\n     */\r\n    onBackgroundTick(dt) {}\r\n\r\n    /**\r\n     * Called when the screen resized\r\n     * @param {number} w window/screen width\r\n     * @param {number} h window/screen height\r\n     */\r\n    onResized(w, h) {}\r\n\r\n    /**\r\n     * Internal backbutton handler, called when the hardware back button is pressed or\r\n     * the escape key is pressed\r\n     */\r\n    onBackButton() {}\r\n\r\n    //// INTERFACE ////\r\n\r\n    /**\r\n     * Should return how many mulliseconds to fade in / out the state. Not recommended to override!\r\n     * @returns {number} Time in milliseconds to fade out\r\n     */\r\n    getInOutFadeTime() {\r\n        if (globalConfig.debug.noArtificialDelays) {\r\n            return 0;\r\n        }\r\n        return 200;\r\n    }\r\n\r\n    /**\r\n     * Should return whether to fade in the game state. This will then apply the right css classes\r\n     * for the fadein.\r\n     * @returns {boolean}\r\n     */\r\n    getHasFadeIn() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Should return whether to fade out the game state. This will then apply the right css classes\r\n     * for the fadeout and wait the delay before moving states\r\n     * @returns {boolean}\r\n     */\r\n    getHasFadeOut() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns if this state should get paused if it does not have focus\r\n     * @returns {boolean} true to pause the updating of the game\r\n     */\r\n    getPauseOnFocusLost() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Should return the html code of the state.\r\n     * @returns {string}\r\n     */\r\n    getInnerHTML() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Returns if the state has an unload confirmation, this is the\r\n     * \"Are you sure you want to leave the page\" message.\r\n     */\r\n    getHasUnloadConfirmation() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Should return the theme music for this state\r\n     * @returns {string|null}\r\n     */\r\n    getThemeMusic() {\r\n        return MUSIC.menu;\r\n    }\r\n\r\n    ////////////////////\r\n\r\n    //// INTERNAL ////\r\n\r\n    /**\r\n     * Internal callback from the manager. Do not override!\r\n     * @param {StateManager} stateManager\r\n     */\r\n    internalRegisterCallback(stateManager, app) {\r\n        assert(stateManager, \"No state manager\");\r\n        assert(app, \"No app\");\r\n        this.stateManager = stateManager;\r\n        this.app = app;\r\n    }\r\n\r\n    /**\r\n     * Internal callback when entering the state. Do not override!\r\n     * @param {any} payload Arbitrary data passed from the state which we are transferring from\r\n     * @param {boolean} callCallback Whether to call the onEnter callback\r\n     */\r\n    internalEnterCallback(payload, callCallback = true) {\r\n        logSection(this.key, \"#26a69a\");\r\n        this.app.inputMgr.pushReciever(this.inputReciever);\r\n\r\n        this.htmlElement = this.getDivElement();\r\n        this.htmlElement.classList.add(\"active\");\r\n\r\n        // Apply classes in the next frame so the css transition keeps up\r\n        waitNextFrame().then(() => {\r\n            if (this.htmlElement) {\r\n                this.htmlElement.classList.remove(\"fadingOut\");\r\n                this.htmlElement.classList.remove(\"fadingIn\");\r\n            }\r\n        });\r\n\r\n        // Call handler\r\n        if (callCallback) {\r\n            this.onEnter(payload);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal callback when the state is left. Do not override!\r\n     */\r\n    internalLeaveCallback() {\r\n        this.onLeave();\r\n\r\n        this.htmlElement.classList.remove(\"active\");\r\n        this.app.inputMgr.popReciever(this.inputReciever);\r\n        this.internalCleanUpClickDetectors();\r\n        this.asyncChannel.cancelAll();\r\n    }\r\n\r\n    /**\r\n     * Internal callback *before* the state is left. Also is called on page unload\r\n     */\r\n    internalOnBeforeExitCallback() {\r\n        this.onBeforeExit();\r\n    }\r\n\r\n    /**\r\n     * Internal app pause callback\r\n     */\r\n    internalOnAppPauseCallback() {\r\n        this.onAppPause();\r\n    }\r\n\r\n    /**\r\n     * Internal app resume callback\r\n     */\r\n    internalOnAppResumeCallback() {\r\n        this.onAppResume();\r\n    }\r\n\r\n    /**\r\n     * Cleans up all click detectors\r\n     */\r\n    internalCleanUpClickDetectors() {\r\n        if (this.clickDetectors) {\r\n            for (let i = 0; i < this.clickDetectors.length; ++i) {\r\n                this.clickDetectors[i].cleanup();\r\n            }\r\n            this.clickDetectors = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal method to get the HTML of the game state.\r\n     * @returns {string}\r\n     */\r\n    internalGetFullHtml() {\r\n        return this.getInnerHTML();\r\n    }\r\n\r\n    /**\r\n     * Internal method to compute the time to fade in / out\r\n     * @returns {number} time to fade in / out in ms\r\n     */\r\n    internalGetFadeInOutTime() {\r\n        if (G_IS_DEV && globalConfig.debug.fastGameEnter) {\r\n            return 1;\r\n        }\r\n        if (G_IS_DEV && globalConfig.debug.noArtificialDelays) {\r\n            return 1;\r\n        }\r\n        return this.getInOutFadeTime();\r\n    }\r\n}\r\n","import { SingletonFactory } from \"./singleton_factory\";\r\nimport { Factory } from \"./factory\";\r\n\r\n\r\n\r\n// These factories are here to remove circular dependencies\r\n\r\n/** @type {SingletonFactoryTemplate<MetaBuilding>} */\r\nexport let gMetaBuildingRegistry = new SingletonFactory();\r\n\r\n/** @type {Object.<string, Array<typeof MetaBuilding>>} */\r\nexport let gBuildingsByCategory = null;\r\n\r\n/** @type {FactoryTemplate<Component>} */\r\nexport let gComponentRegistry = new Factory(\"component\");\r\n\r\n/** @type {FactoryTemplate<BaseGameSpeed>} */\r\nexport let gGameSpeedRegistry = new Factory(\"gamespeed\");\r\n\r\n/** @type {FactoryTemplate<BaseItem>} */\r\nexport let gItemRegistry = new Factory(\"item\");\r\n\r\n// Helpers\r\n\r\n/**\r\n * @param {Object.<string, Array<typeof MetaBuilding>>} buildings\r\n */\r\nexport function initBuildingsByCategory(buildings) {\r\n    gBuildingsByCategory = buildings;\r\n}\r\n","\r\n\r\n/**\r\n * Used for the bug reporter, and the click detector which both have no handles to this.\r\n * It would be nicer to have no globals, but this is the only one. I promise!\r\n * @type {Application} */\r\nexport let GLOBAL_APP = null;\r\n\r\n/**\r\n * @param {Application} app\r\n */\r\nexport function setGlobalApp(app) {\r\n    assert(!GLOBAL_APP, \"Create application twice!\");\r\n    GLOBAL_APP = app;\r\n}\r\n","\r\n\r\nimport { Signal, STOP_PROPAGATION } from \"./signal\";\r\nimport { createLogger } from \"./logging\";\r\nimport { arrayDeleteValue, fastArrayDeleteValue } from \"./utils\";\r\n\r\nconst logger = createLogger(\"input_distributor\");\r\n\r\nexport class InputDistributor {\r\n    /**\r\n     *\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        this.app = app;\r\n\r\n        /** @type {Array<InputReceiver>} */\r\n        this.recieverStack = [];\r\n\r\n        /** @type {Array<function(any) : boolean>} */\r\n        this.filters = [];\r\n\r\n        /**\r\n         * All keys which are currently down\r\n         */\r\n        this.keysDown = new Set();\r\n\r\n        this.bindToEvents();\r\n    }\r\n\r\n    /**\r\n     * Attaches a new filter which can filter and reject events\r\n     * @param {function(any): boolean} filter\r\n     */\r\n    installFilter(filter) {\r\n        this.filters.push(filter);\r\n    }\r\n\r\n    /**\r\n     * Removes an attached filter\r\n     * @param {function(any) : boolean} filter\r\n     */\r\n    dismountFilter(filter) {\r\n        fastArrayDeleteValue(this.filters, filter);\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    pushReciever(reciever) {\r\n        if (this.isRecieverAttached(reciever)) {\r\n            assert(false, \"Can not add reciever \" + reciever.context + \" twice\");\r\n            logger.error(\"Can not add reciever\", reciever.context, \"twice\");\r\n            return;\r\n        }\r\n        this.recieverStack.push(reciever);\r\n\r\n        if (this.recieverStack.length > 10) {\r\n            logger.error(\r\n                \"Reciever stack is huge, probably some dead receivers arround:\",\r\n                this.recieverStack.map(x => x.context)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    popReciever(reciever) {\r\n        if (this.recieverStack.indexOf(reciever) < 0) {\r\n            assert(false, \"Can not pop reciever \" + reciever.context + \"  since its not contained\");\r\n            logger.error(\"Can not pop reciever\", reciever.context, \"since its not contained\");\r\n            return;\r\n        }\r\n        if (this.recieverStack[this.recieverStack.length - 1] !== reciever) {\r\n            logger.warn(\r\n                \"Popping reciever\",\r\n                reciever.context,\r\n                \"which is not on top of the stack. Stack is: \",\r\n                this.recieverStack.map(x => x.context)\r\n            );\r\n        }\r\n        arrayDeleteValue(this.recieverStack, reciever);\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    isRecieverAttached(reciever) {\r\n        return this.recieverStack.indexOf(reciever) >= 0;\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    isRecieverOnTop(reciever) {\r\n        return (\r\n            this.isRecieverAttached(reciever) &&\r\n            this.recieverStack[this.recieverStack.length - 1] === reciever\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    makeSureAttachedAndOnTop(reciever) {\r\n        this.makeSureDetached(reciever);\r\n        this.pushReciever(reciever);\r\n    }\r\n\r\n    /**\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    makeSureDetached(reciever) {\r\n        if (this.isRecieverAttached(reciever)) {\r\n            arrayDeleteValue(this.recieverStack, reciever);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {InputReceiver} reciever\r\n     */\r\n    destroyReceiver(reciever) {\r\n        this.makeSureDetached(reciever);\r\n        reciever.cleanup();\r\n    }\r\n\r\n    // Internal\r\n\r\n    getTopReciever() {\r\n        if (this.recieverStack.length > 0) {\r\n            return this.recieverStack[this.recieverStack.length - 1];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    bindToEvents() {\r\n        window.addEventListener(\"popstate\", this.handleBackButton.bind(this), false);\r\n        document.addEventListener(\"backbutton\", this.handleBackButton.bind(this), false);\r\n\r\n        window.addEventListener(\"keydown\", this.handleKeyMouseDown.bind(this));\r\n        window.addEventListener(\"keyup\", this.handleKeyMouseUp.bind(this));\r\n\r\n        window.addEventListener(\"mousedown\", this.handleKeyMouseDown.bind(this));\r\n        window.addEventListener(\"mouseup\", this.handleKeyMouseUp.bind(this));\r\n\r\n        window.addEventListener(\"blur\", this.handleBlur.bind(this));\r\n    }\r\n\r\n    forwardToReceiver(eventId, payload = null) {\r\n        // Check filters\r\n        for (let i = 0; i < this.filters.length; ++i) {\r\n            if (!this.filters[i](eventId)) {\r\n                return STOP_PROPAGATION;\r\n            }\r\n        }\r\n\r\n        const reciever = this.getTopReciever();\r\n        if (!reciever) {\r\n            logger.warn(\"Dismissing event because not reciever was found:\", eventId);\r\n            return;\r\n        }\r\n        const signal = reciever[eventId];\r\n        assert(signal instanceof Signal, \"Not a valid event id\");\r\n        return signal.dispatch(payload);\r\n    }\r\n\r\n    /**\r\n     * @param {Event} event\r\n     */\r\n    handleBackButton(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.forwardToReceiver(\"backButton\");\r\n    }\r\n\r\n    /**\r\n     * Handles when the page got blurred\r\n     */\r\n    handleBlur() {\r\n        this.forwardToReceiver(\"pageBlur\", {});\r\n        this.keysDown.clear();\r\n    }\r\n\r\n    /**\r\n     * @param {KeyboardEvent | MouseEvent} event\r\n     */\r\n    handleKeyMouseDown(event) {\r\n        const keyCode = event instanceof MouseEvent ? event.button + 1 : event.keyCode;\r\n        if (\r\n            keyCode === 4 || // MB4\r\n            keyCode === 5 || // MB5\r\n            keyCode === 9 || // TAB\r\n            keyCode === 16 || // SHIFT\r\n            keyCode === 17 || // CTRL\r\n            keyCode === 18 || // ALT\r\n            (keyCode >= 112 && keyCode < 122) // F1 - F10\r\n        ) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        const isInitial = !this.keysDown.has(keyCode);\r\n        this.keysDown.add(keyCode);\r\n\r\n        if (\r\n            this.forwardToReceiver(\"keydown\", {\r\n                keyCode: keyCode,\r\n                shift: event.shiftKey,\r\n                alt: event.altKey,\r\n                initial: isInitial,\r\n                event,\r\n            }) === STOP_PROPAGATION\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        if (keyCode === 27) {\r\n            // Escape key\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return this.forwardToReceiver(\"backButton\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {KeyboardEvent | MouseEvent} event\r\n     */\r\n    handleKeyMouseUp(event) {\r\n        const keyCode = event instanceof MouseEvent ? event.button + 1 : event.keyCode;\r\n        this.keysDown.delete(keyCode);\r\n\r\n        this.forwardToReceiver(\"keyup\", {\r\n            keyCode: keyCode,\r\n            shift: event.shiftKey,\r\n            alt: event.altKey,\r\n        });\r\n    }\r\n}\r\n","import { Signal } from \"./signal\";\r\n\r\nexport class InputReceiver {\r\n    constructor(context = \"unknown\") {\r\n        this.context = context;\r\n\r\n        this.backButton = new Signal();\r\n\r\n        this.keydown = new Signal();\r\n        this.keyup = new Signal();\r\n        this.pageBlur = new Signal();\r\n\r\n        // Dispatched on destroy\r\n        this.destroyed = new Signal();\r\n    }\r\n\r\n    cleanup() {\r\n        this.backButton.removeAll();\r\n        this.keydown.removeAll();\r\n        this.keyup.removeAll();\r\n\r\n        this.destroyed.dispatch();\r\n    }\r\n}\r\n","\r\n\r\nimport { AtlasDefinition } from \"./atlas_definitions\";\r\nimport { makeOffscreenBuffer } from \"./buffer_utils\";\r\nimport { AtlasSprite, BaseSprite, RegularSprite, SpriteAtlasLink } from \"./sprites\";\r\nimport { cachebust } from \"./cachebust\";\r\nimport { createLogger } from \"./logging\";\r\n\r\nconst logger = createLogger(\"loader\");\r\n\r\nconst missingSpriteIds = {};\r\n\r\nclass LoaderImpl {\r\n    constructor() {\r\n        /** @type {Application} */\r\n        this.app = null;\r\n\r\n        /** @type {Map<string, BaseSprite>} */\r\n        this.sprites = new Map();\r\n\r\n        this.rawImages = [];\r\n    }\r\n\r\n    linkAppAfterBoot(app) {\r\n        this.app = app;\r\n        this.makeSpriteNotFoundCanvas();\r\n    }\r\n\r\n    /**\r\n     * Fetches a given sprite from the cache\r\n     * @param {string} key\r\n     * @returns {BaseSprite}\r\n     */\r\n    getSpriteInternal(key) {\r\n        const sprite = this.sprites.get(key);\r\n        if (!sprite) {\r\n            if (!missingSpriteIds[key]) {\r\n                // Only show error once\r\n                missingSpriteIds[key] = true;\r\n                logger.error(\"Sprite '\" + key + \"' not found!\");\r\n            }\r\n            return this.spriteNotFoundSprite;\r\n        }\r\n        return sprite;\r\n    }\r\n\r\n    /**\r\n     * Returns an atlas sprite from the cache\r\n     * @param {string} key\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getSprite(key) {\r\n        const sprite = this.getSpriteInternal(key);\r\n        assert(sprite instanceof AtlasSprite || sprite === this.spriteNotFoundSprite, \"Not an atlas sprite\");\r\n        return /** @type {AtlasSprite} */ (sprite);\r\n    }\r\n\r\n    /**\r\n     * Retursn a regular sprite from the cache\r\n     * @param {string} key\r\n     * @returns {RegularSprite}\r\n     */\r\n    getRegularSprite(key) {\r\n        const sprite = this.getSpriteInternal(key);\r\n        assert(\r\n            sprite instanceof RegularSprite || sprite === this.spriteNotFoundSprite,\r\n            \"Not a regular sprite\"\r\n        );\r\n        return /** @type {RegularSprite} */ (sprite);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @returns {Promise<HTMLImageElement|null>}\r\n     */\r\n    internalPreloadImage(key) {\r\n        const url = cachebust(\"res/\" + key);\r\n        const image = new Image();\r\n\r\n        let triesSoFar = 0;\r\n\r\n        return Promise.race([\r\n            new Promise((resolve, reject) => {\r\n                setTimeout(reject, 10000);\r\n            }),\r\n\r\n            new Promise(resolve => {\r\n                image.onload = () => {\r\n                    image.onerror = null;\r\n                    image.onload = null;\r\n\r\n                    if (typeof image.decode === \"function\") {\r\n                        // SAFARI: Image.decode() fails on safari with svgs -> we dont want to fail\r\n                        // on that\r\n                        // FIREFOX: Decode never returns if the image is in cache, so call it in background\r\n                        image.decode().then(\r\n                            () => null,\r\n                            () => null\r\n                        );\r\n                    }\r\n                    resolve(image);\r\n                };\r\n\r\n                image.onerror = reason => {\r\n                    logger.warn(\"Failed to load '\" + url + \"':\", reason);\r\n                    if (++triesSoFar < 4) {\r\n                        logger.log(\"Retrying to load image from\", url);\r\n                        image.src = url + \"?try=\" + triesSoFar;\r\n                    } else {\r\n                        logger.warn(\"Failed to load\", url, \"after\", triesSoFar, \"tries with reason\", reason);\r\n                        image.onerror = null;\r\n                        image.onload = null;\r\n                        resolve(null);\r\n                    }\r\n                };\r\n\r\n                image.src = url;\r\n            }),\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Preloads a sprite\r\n     * @param {string} key\r\n     * @returns {Promise<void>}\r\n     */\r\n    preloadCSSSprite(key) {\r\n        return this.internalPreloadImage(key).then(image => {\r\n            if (key.indexOf(\"game_misc\") >= 0) {\r\n                // Allow access to regular sprites\r\n                this.sprites.set(key, new RegularSprite(image, image.width, image.height));\r\n            }\r\n            this.rawImages.push(image);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Preloads an atlas\r\n     * @param {AtlasDefinition} atlas\r\n     * @returns {Promise<void>}\r\n     */\r\n    preloadAtlas(atlas) {\r\n        return this.internalPreloadImage(atlas.getFullSourcePath()).then(image => {\r\n            // @ts-ignore\r\n            image.label = atlas.sourceFileName;\r\n            return this.internalParseAtlas(atlas, image);\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {AtlasDefinition} atlas\r\n     * @param {HTMLImageElement} loadedImage\r\n     */\r\n    internalParseAtlas(atlas, loadedImage) {\r\n        this.rawImages.push(loadedImage);\r\n\r\n        for (const spriteKey in atlas.sourceData) {\r\n            const spriteData = atlas.sourceData[spriteKey];\r\n\r\n            let sprite = /** @type {AtlasSprite} */ (this.sprites.get(spriteKey));\r\n\r\n            if (!sprite) {\r\n                sprite = new AtlasSprite({\r\n                    spriteName: spriteKey,\r\n                });\r\n                this.sprites.set(spriteKey, sprite);\r\n            }\r\n\r\n            const link = new SpriteAtlasLink({\r\n                packedX: spriteData.frame.x,\r\n                packedY: spriteData.frame.y,\r\n                packedW: spriteData.frame.w,\r\n                packedH: spriteData.frame.h,\r\n                packOffsetX: spriteData.spriteSourceSize.x,\r\n                packOffsetY: spriteData.spriteSourceSize.y,\r\n                atlas: loadedImage,\r\n                w: spriteData.sourceSize.w,\r\n                h: spriteData.sourceSize.h,\r\n            });\r\n            sprite.linksByResolution[atlas.meta.scale] = link;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the links for the sprites after the atlas has been loaded. Used so we\r\n     * don't have to store duplicate sprites.\r\n     */\r\n    createAtlasLinks() {\r\n        // NOT USED\r\n    }\r\n\r\n    /**\r\n     * Makes the canvas which shows the question mark, shown when a sprite was not found\r\n     */\r\n    makeSpriteNotFoundCanvas() {\r\n        const dims = 128;\r\n\r\n        const [canvas, context] = makeOffscreenBuffer(dims, dims, {\r\n            smooth: false,\r\n            label: \"not-found-sprite\",\r\n        });\r\n        context.fillStyle = \"#f77\";\r\n        context.fillRect(0, 0, dims, dims);\r\n\r\n        context.textAlign = \"center\";\r\n        context.textBaseline = \"middle\";\r\n        context.fillStyle = \"#eee\";\r\n        context.font = \"25px Arial\";\r\n        context.fillText(\"???\", dims / 2, dims / 2);\r\n\r\n        // TODO: Not sure why this is set here\r\n        // @ts-ignore\r\n        canvas.src = \"not-found\";\r\n\r\n        const resolutions = [\"0.1\", \"0.25\", \"0.5\", \"0.75\", \"1\"];\r\n        const sprite = new AtlasSprite({\r\n            spriteName: \"not-found\",\r\n        });\r\n\r\n        for (let i = 0; i < resolutions.length; ++i) {\r\n            const res = resolutions[i];\r\n            const link = new SpriteAtlasLink({\r\n                packedX: 0,\r\n                packedY: 0,\r\n                w: dims,\r\n                h: dims,\r\n                packOffsetX: 0,\r\n                packOffsetY: 0,\r\n                packedW: dims,\r\n                packedH: dims,\r\n                atlas: canvas,\r\n            });\r\n            sprite.linksByResolution[res] = link;\r\n        }\r\n        this.spriteNotFoundSprite = sprite;\r\n    }\r\n\r\n    /**\r\n     * Draw sprite with function\r\n     */\r\n    drawSprite(name, callback, { w = 128, h = 128, smooth = false, mipmap = false }) {\r\n        // TODO: mipmap\r\n        const [canvas, context] = makeOffscreenBuffer(w, h, {\r\n            smooth,\r\n            reusable: false,\r\n            label: \"not-found-sprite\",\r\n        });\r\n        const [canvas2, context2] = makeOffscreenBuffer(w, h, {\r\n            smooth,\r\n            reusable: true,\r\n            label: \"not-found-sprite\",\r\n        });\r\n\r\n        const resolution = 1; // mipmap scale, 1/0.75/0.5/...\r\n        context.save();\r\n        // TODO: scale and translate to make mipmap state same\r\n\r\n        callback({ canvas, context, canvas2, context2, w, h, smooth, mipmap, resolution });\r\n\r\n        const resolutions = [\"0.1\", \"0.25\", \"0.5\", \"0.75\", \"1\"];\r\n        const sprite = new AtlasSprite({\r\n            spriteName: name,\r\n        });\r\n        // TODO: remake for mipmapping\r\n        for (let i = 0; i < resolutions.length; ++i) {\r\n            const res = resolutions[i];\r\n            const link = new SpriteAtlasLink({\r\n                packedX: 0,\r\n                packedY: 0,\r\n                w,\r\n                h,\r\n                packOffsetX: 0,\r\n                packOffsetY: 0,\r\n                packedW: w,\r\n                packedH: h,\r\n                atlas: canvas,\r\n            });\r\n            sprite.linksByResolution[res] = link;\r\n        }\r\n\r\n        context.restore();\r\n        this.sprites.set(name, sprite);\r\n    }\r\n}\r\n\r\nexport const Loader = new LoaderImpl();\r\n","import { globalConfig } from \"../core/config\";\r\nconst circularJson = require(\"circular-json\");\r\n\r\n/*\r\nLogging functions\r\n- To be extended\r\n*/\r\n\r\n/**\r\n * Base logger class\r\n */\r\nclass Logger {\r\n    constructor(context) {\r\n        this.context = context;\r\n    }\r\n\r\n    debug(...args) {\r\n        globalDebug(this.context, ...args);\r\n    }\r\n\r\n    log(...args) {\r\n        globalLog(this.context, ...args);\r\n    }\r\n\r\n    warn(...args) {\r\n        globalWarn(this.context, ...args);\r\n    }\r\n\r\n    error(...args) {\r\n        globalError(this.context, ...args);\r\n    }\r\n}\r\n\r\nexport function createLogger(context) {\r\n    return new Logger(context);\r\n}\r\n\r\nfunction prepareObjectForLogging(obj, maxDepth = 1) {\r\n    if (!window.Sentry) {\r\n        // Not required without sentry\r\n        return obj;\r\n    }\r\n\r\n    if (typeof obj !== \"object\" && !Array.isArray(obj)) {\r\n        return obj;\r\n    }\r\n    const result = {};\r\n    for (const key in obj) {\r\n        const val = obj[key];\r\n\r\n        if (typeof val === \"object\") {\r\n            if (maxDepth > 0) {\r\n                result[key] = prepareObjectForLogging(val, maxDepth - 1);\r\n            } else {\r\n                result[key] = \"[object]\";\r\n            }\r\n        } else {\r\n            result[key] = val;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Serializes an error\r\n * @param {Error|ErrorEvent} err\r\n */\r\nexport function serializeError(err) {\r\n    if (!err) {\r\n        return null;\r\n    }\r\n    const result = {\r\n        type: err.constructor.name,\r\n    };\r\n\r\n    if (err instanceof Error) {\r\n        result.message = err.message;\r\n        result.name = err.name;\r\n        result.stack = err.stack;\r\n        result.type = \"{type.Error}\";\r\n    } else if (err instanceof ErrorEvent) {\r\n        result.filename = err.filename;\r\n        result.message = err.message;\r\n        result.lineno = err.lineno;\r\n        result.colno = err.colno;\r\n        result.type = \"{type.ErrorEvent}\";\r\n\r\n        if (err.error) {\r\n            result.error = serializeError(err.error);\r\n        } else {\r\n            result.error = \"{not-provided}\";\r\n        }\r\n    } else {\r\n        result.type = \"{unkown-type:\" + typeof err + \"}\";\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Serializes an event\r\n * @param {Event} event\r\n */\r\nfunction serializeEvent(event) {\r\n    let result = {\r\n        type: \"{type.Event:\" + typeof event + \"}\",\r\n    };\r\n    result.eventType = event.type;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Prepares a json payload\r\n * @param {string} key\r\n * @param {any} value\r\n */\r\nfunction preparePayload(key, value) {\r\n    if (value instanceof Error || value instanceof ErrorEvent) {\r\n        return serializeError(value);\r\n    }\r\n    if (value instanceof Event) {\r\n        return serializeEvent(value);\r\n    }\r\n    if (typeof value === \"undefined\") {\r\n        return null;\r\n    }\r\n    return value;\r\n}\r\n\r\n/**\r\n * Stringifies an object containing circular references and errors\r\n * @param {any} payload\r\n */\r\nexport function stringifyObjectContainingErrors(payload) {\r\n    return circularJson.stringify(payload, preparePayload);\r\n}\r\n\r\nexport function globalDebug(context, ...args) {\r\n    if (G_IS_DEV) {\r\n        logInternal(context, console.log, prepareArgsForLogging(args));\r\n    }\r\n}\r\n\r\nexport function globalLog(context, ...args) {\r\n    // eslint-disable-next-line no-console\r\n    logInternal(context, console.log, prepareArgsForLogging(args));\r\n}\r\n\r\nexport function globalWarn(context, ...args) {\r\n    // eslint-disable-next-line no-console\r\n    logInternal(context, console.warn, prepareArgsForLogging(args));\r\n}\r\n\r\nexport function globalError(context, ...args) {\r\n    args = prepareArgsForLogging(args);\r\n    // eslint-disable-next-line no-console\r\n    logInternal(context, console.error, args);\r\n\r\n    if (window.Sentry) {\r\n        window.Sentry.withScope(scope => {\r\n            scope.setExtra(\"args\", args);\r\n            window.Sentry.captureMessage(internalBuildStringFromArgs(args), \"error\");\r\n        });\r\n    }\r\n}\r\n\r\nfunction prepareArgsForLogging(args) {\r\n    let result = [];\r\n    for (let i = 0; i < args.length; ++i) {\r\n        result.push(prepareObjectForLogging(args[i]));\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param {Array<any>} args\r\n */\r\nfunction internalBuildStringFromArgs(args) {\r\n    let result = [];\r\n\r\n    for (let i = 0; i < args.length; ++i) {\r\n        let arg = args[i];\r\n        if (\r\n            typeof arg === \"string\" ||\r\n            typeof arg === \"number\" ||\r\n            typeof arg === \"boolean\" ||\r\n            arg === null ||\r\n            arg === undefined\r\n        ) {\r\n            result.push(\"\" + arg);\r\n        } else if (arg instanceof Error) {\r\n            result.push(arg.message);\r\n        } else {\r\n            result.push(\"[object]\");\r\n        }\r\n    }\r\n    return result.join(\" \");\r\n}\r\n\r\nexport function logSection(name, color) {\r\n    while (name.length <= 14) {\r\n        name = \" \" + name + \" \";\r\n    }\r\n    name = name.padEnd(19, \" \");\r\n\r\n    const lineCss =\r\n        \"letter-spacing: -3px; color: \" + color + \"; font-size: 6px; background: #eee; color: #eee;\";\r\n    const line = \"%c----------------------------\";\r\n    console.log(\"\\n\" + line + \" %c\" + name + \" \" + line + \"\\n\", lineCss, \"color: \" + color, lineCss);\r\n}\r\n\r\nfunction extractHandleContext(handle) {\r\n    let context = handle || \"unknown\";\r\n    if (handle && handle.constructor && handle.constructor.name) {\r\n        context = handle.constructor.name;\r\n        if (context === \"String\") {\r\n            context = handle;\r\n        }\r\n    }\r\n\r\n    if (handle && handle.name) {\r\n        context = handle.name;\r\n    }\r\n    return context + \"\";\r\n}\r\n\r\nfunction logInternal(handle, consoleMethod, args) {\r\n    const context = extractHandleContext(handle).padEnd(20, \" \");\r\n    const labelColor = handle && handle.LOG_LABEL_COLOR ? handle.LOG_LABEL_COLOR : \"#aaa\";\r\n\r\n    if (G_IS_DEV && globalConfig.debug.logTimestamps) {\r\n        const timestamp = \"⏱ %c\" + (Math.floor(performance.now()) + \"\").padEnd(6, \" \") + \"\";\r\n        consoleMethod.call(\r\n            console,\r\n            timestamp + \" %c\" + context,\r\n            \"color: #7f7;\",\r\n            \"color: \" + labelColor + \";\",\r\n            ...args\r\n        );\r\n    } else {\r\n        // if (G_IS_DEV && !globalConfig.debug.disableLoggingLogSources) {\r\n        consoleMethod.call(console, \"%c\" + context, \"color: \" + labelColor, ...args);\r\n        // } else {\r\n        // consoleMethod.call(console, ...args);\r\n        // }\r\n    }\r\n}\r\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\r\n// This work is free. You can redistribute it and/or modify it\r\n// under the terms of the WTFPL, Version 2\r\n// For more information see LICENSE.txt or http://www.wtfpl.net/\r\n//\r\n// For more information, the home page:\r\n// http://pieroxy.net/blog/pages/lz-string/testing.html\r\n//\r\n// LZ-based compression algorithm, version 1.4.4\r\n\r\nconst fromCharCode = String.fromCharCode;\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nconst keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\r\nconst baseReverseDic = {};\r\n\r\nfunction getBaseValue(alphabet, character) {\r\n    if (!baseReverseDic[alphabet]) {\r\n        baseReverseDic[alphabet] = {};\r\n        for (let i = 0; i < alphabet.length; i++) {\r\n            baseReverseDic[alphabet][alphabet.charAt(i)] = i;\r\n        }\r\n    }\r\n    return baseReverseDic[alphabet][character];\r\n}\r\n\r\n//compress into uint8array (UCS-2 big endian format)\r\nexport function compressU8(uncompressed) {\r\n    let compressed = compress(uncompressed);\r\n    let buf = new Uint8Array(compressed.length * 2); // 2 bytes per character\r\n\r\n    for (let i = 0, TotalLen = compressed.length; i < TotalLen; i++) {\r\n        let current_value = compressed.charCodeAt(i);\r\n        buf[i * 2] = current_value >>> 8;\r\n        buf[i * 2 + 1] = current_value % 256;\r\n    }\r\n    return buf;\r\n}\r\n\r\n// Compreses with header\r\n/**\r\n * @param {string} uncompressed\r\n * @param {number} header\r\n */\r\nexport function compressU8WHeader(uncompressed, header) {\r\n    let compressed = compress(uncompressed);\r\n    let buf = new Uint8Array(2 + compressed.length * 2); // 2 bytes per character\r\n\r\n    buf[0] = header >>> 8;\r\n    buf[1] = header % 256;\r\n    for (let i = 0, TotalLen = compressed.length; i < TotalLen; i++) {\r\n        let current_value = compressed.charCodeAt(i);\r\n        buf[2 + i * 2] = current_value >>> 8;\r\n        buf[2 + i * 2 + 1] = current_value % 256;\r\n    }\r\n    return buf;\r\n}\r\n\r\n//decompress from uint8array (UCS-2 big endian format)\r\n/**\r\n *\r\n * @param {Uint8Array} compressed\r\n */\r\nexport function decompressU8WHeader(compressed) {\r\n    // let buf = new Array(compressed.length / 2); // 2 bytes per character\r\n    // for (let i = 0, TotalLen = buf.length; i < TotalLen; i++) {\r\n    //     buf[i] = compressed[i * 2] * 256 + compressed[i * 2 + 1];\r\n    // }\r\n\r\n    // let result = [];\r\n    // buf.forEach(function (c) {\r\n    //     result.push(fromCharCode(c));\r\n    // });\r\n    let result = [];\r\n    for (let i = 2, n = compressed.length; i < n; i += 2) {\r\n        const code = compressed[i] * 256 + compressed[i + 1];\r\n        result.push(fromCharCode(code));\r\n    }\r\n    return decompress(result.join(\"\"));\r\n}\r\n\r\n//compress into a string that is already URI encoded\r\nexport function compressX64(input) {\r\n    if (input == null) return \"\";\r\n    return _compress(input, 6, function (a) {\r\n        return keyStrUriSafe.charAt(a);\r\n    });\r\n}\r\n\r\n//decompress from an output of compressToEncodedURIComponent\r\nexport function decompressX64(input) {\r\n    if (input == null) return \"\";\r\n    if (input == \"\") return null;\r\n    input = input.replace(/ /g, \"+\");\r\n    return _decompress(input.length, 32, function (index) {\r\n        return getBaseValue(keyStrUriSafe, input.charAt(index));\r\n    });\r\n}\r\n\r\nfunction compress(uncompressed) {\r\n    return _compress(uncompressed, 16, function (a) {\r\n        return fromCharCode(a);\r\n    });\r\n}\r\n\r\nfunction _compress(uncompressed, bitsPerChar, getCharFromInt) {\r\n    if (uncompressed == null) return \"\";\r\n    let i,\r\n        value,\r\n        context_dictionary = {},\r\n        context_dictionaryToCreate = {},\r\n        context_c = \"\",\r\n        context_wc = \"\",\r\n        context_w = \"\",\r\n        context_enlargeIn = 2, // Compensate for the first entry which should not count\r\n        context_dictSize = 3,\r\n        context_numBits = 2,\r\n        context_data = [],\r\n        context_data_val = 0,\r\n        context_data_position = 0,\r\n        ii;\r\n\r\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\r\n        context_c = uncompressed.charAt(ii);\r\n        if (!hasOwnProperty.call(context_dictionary, context_c)) {\r\n            context_dictionary[context_c] = context_dictSize++;\r\n            context_dictionaryToCreate[context_c] = true;\r\n        }\r\n\r\n        context_wc = context_w + context_c;\r\n        if (hasOwnProperty.call(context_dictionary, context_wc)) {\r\n            context_w = context_wc;\r\n        } else {\r\n            if (hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\r\n                if (context_w.charCodeAt(0) < 256) {\r\n                    for (i = 0; i < context_numBits; i++) {\r\n                        context_data_val = context_data_val << 1;\r\n                        if (context_data_position == bitsPerChar - 1) {\r\n                            context_data_position = 0;\r\n                            context_data.push(getCharFromInt(context_data_val));\r\n                            context_data_val = 0;\r\n                        } else {\r\n                            context_data_position++;\r\n                        }\r\n                    }\r\n                    value = context_w.charCodeAt(0);\r\n                    for (i = 0; i < 8; i++) {\r\n                        context_data_val = (context_data_val << 1) | (value & 1);\r\n                        if (context_data_position == bitsPerChar - 1) {\r\n                            context_data_position = 0;\r\n                            context_data.push(getCharFromInt(context_data_val));\r\n                            context_data_val = 0;\r\n                        } else {\r\n                            context_data_position++;\r\n                        }\r\n                        value = value >> 1;\r\n                    }\r\n                } else {\r\n                    value = 1;\r\n                    for (i = 0; i < context_numBits; i++) {\r\n                        context_data_val = (context_data_val << 1) | value;\r\n                        if (context_data_position == bitsPerChar - 1) {\r\n                            context_data_position = 0;\r\n                            context_data.push(getCharFromInt(context_data_val));\r\n                            context_data_val = 0;\r\n                        } else {\r\n                            context_data_position++;\r\n                        }\r\n                        value = 0;\r\n                    }\r\n                    value = context_w.charCodeAt(0);\r\n                    for (i = 0; i < 16; i++) {\r\n                        context_data_val = (context_data_val << 1) | (value & 1);\r\n                        if (context_data_position == bitsPerChar - 1) {\r\n                            context_data_position = 0;\r\n                            context_data.push(getCharFromInt(context_data_val));\r\n                            context_data_val = 0;\r\n                        } else {\r\n                            context_data_position++;\r\n                        }\r\n                        value = value >> 1;\r\n                    }\r\n                }\r\n                context_enlargeIn--;\r\n                if (context_enlargeIn == 0) {\r\n                    context_enlargeIn = Math.pow(2, context_numBits);\r\n                    context_numBits++;\r\n                }\r\n                delete context_dictionaryToCreate[context_w];\r\n            } else {\r\n                value = context_dictionary[context_w];\r\n                for (i = 0; i < context_numBits; i++) {\r\n                    context_data_val = (context_data_val << 1) | (value & 1);\r\n                    if (context_data_position == bitsPerChar - 1) {\r\n                        context_data_position = 0;\r\n                        context_data.push(getCharFromInt(context_data_val));\r\n                        context_data_val = 0;\r\n                    } else {\r\n                        context_data_position++;\r\n                    }\r\n                    value = value >> 1;\r\n                }\r\n            }\r\n            context_enlargeIn--;\r\n            if (context_enlargeIn == 0) {\r\n                context_enlargeIn = Math.pow(2, context_numBits);\r\n                context_numBits++;\r\n            }\r\n            // Add wc to the dictionary.\r\n            context_dictionary[context_wc] = context_dictSize++;\r\n            context_w = String(context_c);\r\n        }\r\n    }\r\n\r\n    // Output the code for w.\r\n    if (context_w !== \"\") {\r\n        if (hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\r\n            if (context_w.charCodeAt(0) < 256) {\r\n                for (i = 0; i < context_numBits; i++) {\r\n                    context_data_val = context_data_val << 1;\r\n                    if (context_data_position == bitsPerChar - 1) {\r\n                        context_data_position = 0;\r\n                        context_data.push(getCharFromInt(context_data_val));\r\n                        context_data_val = 0;\r\n                    } else {\r\n                        context_data_position++;\r\n                    }\r\n                }\r\n                value = context_w.charCodeAt(0);\r\n                for (i = 0; i < 8; i++) {\r\n                    context_data_val = (context_data_val << 1) | (value & 1);\r\n                    if (context_data_position == bitsPerChar - 1) {\r\n                        context_data_position = 0;\r\n                        context_data.push(getCharFromInt(context_data_val));\r\n                        context_data_val = 0;\r\n                    } else {\r\n                        context_data_position++;\r\n                    }\r\n                    value = value >> 1;\r\n                }\r\n            } else {\r\n                value = 1;\r\n                for (i = 0; i < context_numBits; i++) {\r\n                    context_data_val = (context_data_val << 1) | value;\r\n                    if (context_data_position == bitsPerChar - 1) {\r\n                        context_data_position = 0;\r\n                        context_data.push(getCharFromInt(context_data_val));\r\n                        context_data_val = 0;\r\n                    } else {\r\n                        context_data_position++;\r\n                    }\r\n                    value = 0;\r\n                }\r\n                value = context_w.charCodeAt(0);\r\n                for (i = 0; i < 16; i++) {\r\n                    context_data_val = (context_data_val << 1) | (value & 1);\r\n                    if (context_data_position == bitsPerChar - 1) {\r\n                        context_data_position = 0;\r\n                        context_data.push(getCharFromInt(context_data_val));\r\n                        context_data_val = 0;\r\n                    } else {\r\n                        context_data_position++;\r\n                    }\r\n                    value = value >> 1;\r\n                }\r\n            }\r\n            context_enlargeIn--;\r\n            if (context_enlargeIn == 0) {\r\n                context_enlargeIn = Math.pow(2, context_numBits);\r\n                context_numBits++;\r\n            }\r\n            delete context_dictionaryToCreate[context_w];\r\n        } else {\r\n            value = context_dictionary[context_w];\r\n            for (i = 0; i < context_numBits; i++) {\r\n                context_data_val = (context_data_val << 1) | (value & 1);\r\n                if (context_data_position == bitsPerChar - 1) {\r\n                    context_data_position = 0;\r\n                    context_data.push(getCharFromInt(context_data_val));\r\n                    context_data_val = 0;\r\n                } else {\r\n                    context_data_position++;\r\n                }\r\n                value = value >> 1;\r\n            }\r\n        }\r\n        context_enlargeIn--;\r\n        if (context_enlargeIn == 0) {\r\n            context_enlargeIn = Math.pow(2, context_numBits);\r\n            context_numBits++;\r\n        }\r\n    }\r\n\r\n    // Mark the end of the stream\r\n    value = 2;\r\n    for (i = 0; i < context_numBits; i++) {\r\n        context_data_val = (context_data_val << 1) | (value & 1);\r\n        if (context_data_position == bitsPerChar - 1) {\r\n            context_data_position = 0;\r\n            context_data.push(getCharFromInt(context_data_val));\r\n            context_data_val = 0;\r\n        } else {\r\n            context_data_position++;\r\n        }\r\n        value = value >> 1;\r\n    }\r\n\r\n    // Flush the last char\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        context_data_val = context_data_val << 1;\r\n        if (context_data_position == bitsPerChar - 1) {\r\n            context_data.push(getCharFromInt(context_data_val));\r\n            break;\r\n        } else context_data_position++;\r\n    }\r\n    return context_data.join(\"\");\r\n}\r\n\r\nfunction decompress(compressed) {\r\n    if (compressed == null) return \"\";\r\n    if (compressed == \"\") return null;\r\n    return _decompress(compressed.length, 32768, function (index) {\r\n        return compressed.charCodeAt(index);\r\n    });\r\n}\r\n\r\nfunction _decompress(length, resetValue, getNextValue) {\r\n    let dictionary = [],\r\n        next,\r\n        enlargeIn = 4,\r\n        dictSize = 4,\r\n        numBits = 3,\r\n        entry = \"\",\r\n        result = [],\r\n        i,\r\n        w,\r\n        bits,\r\n        resb,\r\n        maxpower,\r\n        power,\r\n        c,\r\n        data = { val: getNextValue(0), position: resetValue, index: 1 };\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n        dictionary[i] = i;\r\n    }\r\n\r\n    bits = 0;\r\n    maxpower = Math.pow(2, 2);\r\n    power = 1;\r\n    while (power != maxpower) {\r\n        resb = data.val & data.position;\r\n        data.position >>= 1;\r\n        if (data.position == 0) {\r\n            data.position = resetValue;\r\n            data.val = getNextValue(data.index++);\r\n        }\r\n        bits |= (resb > 0 ? 1 : 0) * power;\r\n        power <<= 1;\r\n    }\r\n\r\n    switch ((next = bits)) {\r\n        case 0:\r\n            bits = 0;\r\n            maxpower = Math.pow(2, 8);\r\n            power = 1;\r\n            while (power != maxpower) {\r\n                resb = data.val & data.position;\r\n                data.position >>= 1;\r\n                if (data.position == 0) {\r\n                    data.position = resetValue;\r\n                    data.val = getNextValue(data.index++);\r\n                }\r\n                bits |= (resb > 0 ? 1 : 0) * power;\r\n                power <<= 1;\r\n            }\r\n            c = fromCharCode(bits);\r\n            break;\r\n        case 1:\r\n            bits = 0;\r\n            maxpower = Math.pow(2, 16);\r\n            power = 1;\r\n            while (power != maxpower) {\r\n                resb = data.val & data.position;\r\n                data.position >>= 1;\r\n                if (data.position == 0) {\r\n                    data.position = resetValue;\r\n                    data.val = getNextValue(data.index++);\r\n                }\r\n                bits |= (resb > 0 ? 1 : 0) * power;\r\n                power <<= 1;\r\n            }\r\n            c = fromCharCode(bits);\r\n            break;\r\n        case 2:\r\n            return \"\";\r\n    }\r\n    dictionary[3] = c;\r\n    w = c;\r\n    result.push(c);\r\n\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n        if (data.index > length) {\r\n            return \"\";\r\n        }\r\n\r\n        bits = 0;\r\n        maxpower = Math.pow(2, numBits);\r\n        power = 1;\r\n        while (power != maxpower) {\r\n            resb = data.val & data.position;\r\n            data.position >>= 1;\r\n            if (data.position == 0) {\r\n                data.position = resetValue;\r\n                data.val = getNextValue(data.index++);\r\n            }\r\n            bits |= (resb > 0 ? 1 : 0) * power;\r\n            power <<= 1;\r\n        }\r\n\r\n        switch ((c = bits)) {\r\n            case 0:\r\n                bits = 0;\r\n                maxpower = Math.pow(2, 8);\r\n                power = 1;\r\n                while (power != maxpower) {\r\n                    resb = data.val & data.position;\r\n                    data.position >>= 1;\r\n                    if (data.position == 0) {\r\n                        data.position = resetValue;\r\n                        data.val = getNextValue(data.index++);\r\n                    }\r\n                    bits |= (resb > 0 ? 1 : 0) * power;\r\n                    power <<= 1;\r\n                }\r\n\r\n                dictionary[dictSize++] = fromCharCode(bits);\r\n                c = dictSize - 1;\r\n                enlargeIn--;\r\n                break;\r\n            case 1:\r\n                bits = 0;\r\n                maxpower = Math.pow(2, 16);\r\n                power = 1;\r\n                while (power != maxpower) {\r\n                    resb = data.val & data.position;\r\n                    data.position >>= 1;\r\n                    if (data.position == 0) {\r\n                        data.position = resetValue;\r\n                        data.val = getNextValue(data.index++);\r\n                    }\r\n                    bits |= (resb > 0 ? 1 : 0) * power;\r\n                    power <<= 1;\r\n                }\r\n                dictionary[dictSize++] = fromCharCode(bits);\r\n                c = dictSize - 1;\r\n                enlargeIn--;\r\n                break;\r\n            case 2:\r\n                return result.join(\"\");\r\n        }\r\n\r\n        if (enlargeIn == 0) {\r\n            enlargeIn = Math.pow(2, numBits);\r\n            numBits++;\r\n        }\r\n\r\n        if (dictionary[c]) {\r\n            // @ts-ignore\r\n            entry = dictionary[c];\r\n        } else {\r\n            if (c === dictSize) {\r\n                entry = w + w.charAt(0);\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        result.push(entry);\r\n\r\n        // Add w+entry[0] to the dictionary.\r\n        dictionary[dictSize++] = w + entry.charAt(0);\r\n        enlargeIn--;\r\n\r\n        w = entry;\r\n\r\n        if (enlargeIn == 0) {\r\n            enlargeIn = Math.pow(2, numBits);\r\n            numBits++;\r\n        }\r\n    }\r\n}\r\n","\r\n\r\nimport { Signal, STOP_PROPAGATION } from \"./signal\";\r\nimport { arrayDeleteValue, waitNextFrame } from \"./utils\";\r\nimport { ClickDetector } from \"./click_detector\";\r\nimport { SOUNDS } from \"../platform/sound\";\r\nimport { InputReceiver } from \"./input_receiver\";\r\nimport { FormElement } from \"./modal_dialog_forms\";\r\nimport { globalConfig } from \"./config\";\r\nimport { getStringForKeyCode } from \"../game/key_action_mapper\";\r\nimport { createLogger } from \"./logging\";\r\nimport { T } from \"../translations\";\r\n\r\nconst kbEnter = 13;\r\nconst kbCancel = 27;\r\n\r\nconst logger = createLogger(\"dialogs\");\r\n\r\n/**\r\n * Basic text based dialog\r\n */\r\nexport class Dialog {\r\n    /**\r\n     *\r\n     * Constructs a new dialog with the given options\r\n     * @param {object} param0\r\n     * @param {Application} param0.app\r\n     * @param {string} param0.title Title of the dialog\r\n     * @param {string} param0.contentHTML Inner dialog html\r\n     * @param {Array<string>} param0.buttons\r\n     *  Button list, each button contains of up to 3 parts seperated by ':'.\r\n     *  Part 0: The id, one of the one defined in dialog_buttons.yaml\r\n     *  Part 1: The style, either good, bad or misc\r\n     *  Part 2 (optional): Additional parameters seperated by '/', available are:\r\n     *    timeout: This button is only available after some waiting time\r\n     *    kb_enter: This button is triggered by the enter key\r\n     *    kb_escape This button is triggered by the escape key\r\n     * @param {string=} param0.type The dialog type, either \"info\" or \"warn\"\r\n     * @param {boolean=} param0.closeButton Whether this dialog has a close button\r\n     */\r\n    constructor({ app, title, contentHTML, buttons, type = \"info\", closeButton = false }) {\r\n        this.app = app;\r\n        this.title = title;\r\n        this.contentHTML = contentHTML;\r\n        this.type = type;\r\n        this.buttonIds = buttons;\r\n        this.closeButton = closeButton;\r\n\r\n        this.closeRequested = new Signal();\r\n        this.buttonSignals = {};\r\n\r\n        for (let i = 0; i < buttons.length; ++i) {\r\n            if (G_IS_DEV && globalConfig.debug.disableTimedButtons) {\r\n                this.buttonIds[i] = this.buttonIds[i].replace(\":timeout\", \"\");\r\n            }\r\n\r\n            const buttonId = this.buttonIds[i].split(\":\")[0];\r\n            this.buttonSignals[buttonId] = new Signal();\r\n        }\r\n\r\n        this.timeouts = [];\r\n        this.clickDetectors = [];\r\n\r\n        this.inputReciever = new InputReceiver(\"dialog-\" + this.title);\r\n\r\n        this.inputReciever.keydown.add(this.handleKeydown, this);\r\n\r\n        this.enterHandler = null;\r\n        this.escapeHandler = null;\r\n    }\r\n\r\n    /**\r\n     * Internal keydown handler\r\n     * @param {object} param0\r\n     * @param {number} param0.keyCode\r\n     * @param {boolean} param0.shift\r\n     * @param {boolean} param0.alt\r\n     */\r\n    handleKeydown({ keyCode, shift, alt }) {\r\n        if (keyCode === kbEnter && this.enterHandler) {\r\n            this.internalButtonHandler(this.enterHandler);\r\n            return STOP_PROPAGATION;\r\n        }\r\n\r\n        if (keyCode === kbCancel && this.escapeHandler) {\r\n            this.internalButtonHandler(this.escapeHandler);\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    internalButtonHandler(id, ...payload) {\r\n        this.app.inputMgr.popReciever(this.inputReciever);\r\n\r\n        if (id !== \"close-button\") {\r\n            this.buttonSignals[id].dispatch(...payload);\r\n        }\r\n        this.closeRequested.dispatch();\r\n    }\r\n\r\n    createElement() {\r\n        const elem = document.createElement(\"div\");\r\n        elem.classList.add(\"ingameDialog\");\r\n\r\n        this.dialogElem = document.createElement(\"div\");\r\n        this.dialogElem.classList.add(\"dialogInner\");\r\n\r\n        if (this.type) {\r\n            this.dialogElem.classList.add(this.type);\r\n        }\r\n        elem.appendChild(this.dialogElem);\r\n\r\n        const title = document.createElement(\"h1\");\r\n        title.innerText = this.title;\r\n        title.classList.add(\"title\");\r\n        this.dialogElem.appendChild(title);\r\n\r\n        if (this.closeButton) {\r\n            this.dialogElem.classList.add(\"hasCloseButton\");\r\n\r\n            const closeBtn = document.createElement(\"button\");\r\n            closeBtn.classList.add(\"closeButton\");\r\n\r\n            this.trackClicks(closeBtn, () => this.internalButtonHandler(\"close-button\"), {\r\n                applyCssClass: \"pressedSmallElement\",\r\n            });\r\n\r\n            title.appendChild(closeBtn);\r\n            this.inputReciever.backButton.add(() => this.internalButtonHandler(\"close-button\"));\r\n        }\r\n\r\n        const content = document.createElement(\"div\");\r\n        content.classList.add(\"content\");\r\n        content.innerHTML = this.contentHTML;\r\n        this.dialogElem.appendChild(content);\r\n\r\n        if (this.buttonIds.length > 0) {\r\n            const buttons = document.createElement(\"div\");\r\n            buttons.classList.add(\"buttons\");\r\n\r\n            // Create buttons\r\n            for (let i = 0; i < this.buttonIds.length; ++i) {\r\n                const [buttonId, buttonStyle, rawParams] = this.buttonIds[i].split(\":\");\r\n\r\n                const button = document.createElement(\"button\");\r\n                button.classList.add(\"button\");\r\n                button.classList.add(\"styledButton\");\r\n                button.classList.add(buttonStyle);\r\n                button.innerText = T.dialogs.buttons[buttonId];\r\n\r\n                const params = (rawParams || \"\").split(\"/\");\r\n                const useTimeout = params.indexOf(\"timeout\") >= 0;\r\n\r\n                const isEnter = params.indexOf(\"enter\") >= 0;\r\n                const isEscape = params.indexOf(\"escape\") >= 0;\r\n\r\n                if (isEscape && this.closeButton) {\r\n                    logger.warn(\"Showing dialog with close button, and additional cancel button\");\r\n                }\r\n\r\n                if (useTimeout) {\r\n                    button.classList.add(\"timedButton\");\r\n                    const timeout = setTimeout(() => {\r\n                        button.classList.remove(\"timedButton\");\r\n                        arrayDeleteValue(this.timeouts, timeout);\r\n                    }, 5000);\r\n                    this.timeouts.push(timeout);\r\n                }\r\n                if (isEnter || isEscape) {\r\n                    // if (this.app.settings.getShowKeyboardShortcuts()) {\r\n                    // Show keybinding\r\n                    const spacer = document.createElement(\"code\");\r\n                    spacer.classList.add(\"keybinding\");\r\n                    spacer.innerHTML = getStringForKeyCode(isEnter ? kbEnter : kbCancel);\r\n                    button.appendChild(spacer);\r\n                    // }\r\n\r\n                    if (isEnter) {\r\n                        this.enterHandler = buttonId;\r\n                    }\r\n                    if (isEscape) {\r\n                        this.escapeHandler = buttonId;\r\n                    }\r\n                }\r\n\r\n                this.trackClicks(button, () => this.internalButtonHandler(buttonId));\r\n                buttons.appendChild(button);\r\n            }\r\n\r\n            this.dialogElem.appendChild(buttons);\r\n        } else {\r\n            this.dialogElem.classList.add(\"buttonless\");\r\n        }\r\n\r\n        this.element = elem;\r\n        this.app.inputMgr.pushReciever(this.inputReciever);\r\n\r\n        return this.element;\r\n    }\r\n\r\n    setIndex(index) {\r\n        this.element.style.zIndex = index;\r\n    }\r\n\r\n    destroy() {\r\n        if (!this.element) {\r\n            assert(false, \"Tried to destroy dialog twice\");\r\n            return;\r\n        }\r\n        // We need to do this here, because if the backbutton event gets\r\n        // dispatched to the modal dialogs, it will not call the internalButtonHandler,\r\n        // and thus our receiver stays attached the whole time\r\n        this.app.inputMgr.destroyReceiver(this.inputReciever);\r\n\r\n        for (let i = 0; i < this.clickDetectors.length; ++i) {\r\n            this.clickDetectors[i].cleanup();\r\n        }\r\n        this.clickDetectors = [];\r\n\r\n        this.element.remove();\r\n        this.element = null;\r\n\r\n        for (let i = 0; i < this.timeouts.length; ++i) {\r\n            clearTimeout(this.timeouts[i]);\r\n        }\r\n        this.timeouts = [];\r\n    }\r\n\r\n    hide() {\r\n        this.element.classList.remove(\"visible\");\r\n    }\r\n\r\n    show() {\r\n        this.element.classList.add(\"visible\");\r\n    }\r\n\r\n    /**\r\n     * Helper method to track clicks on an element\r\n     * @param {Element} elem\r\n     * @param {function():void} handler\r\n     * @param {import(\"./click_detector\").ClickDetectorConstructorArgs=} args\r\n     * @returns {ClickDetector}\r\n     */\r\n    trackClicks(elem, handler, args = {}) {\r\n        const detector = new ClickDetector(elem, args);\r\n        detector.click.add(handler, this);\r\n        this.clickDetectors.push(detector);\r\n        return detector;\r\n    }\r\n}\r\n\r\n/**\r\n * Dialog which simply shows a loading spinner\r\n */\r\nexport class DialogLoading extends Dialog {\r\n    constructor(app) {\r\n        super({\r\n            app,\r\n            title: \"\",\r\n            contentHTML: \"\",\r\n            buttons: [],\r\n            type: \"loading\",\r\n        });\r\n\r\n        // Loading dialog can not get closed with back button\r\n        this.inputReciever.backButton.removeAll();\r\n        this.inputReciever.context = \"dialog-loading\";\r\n    }\r\n\r\n    createElement() {\r\n        const elem = document.createElement(\"div\");\r\n        elem.classList.add(\"ingameDialog\");\r\n        elem.classList.add(\"loadingDialog\");\r\n        this.element = elem;\r\n\r\n        const loader = document.createElement(\"div\");\r\n        loader.classList.add(\"prefab_LoadingTextWithAnim\");\r\n        loader.classList.add(\"loadingIndicator\");\r\n        loader.innerText = T.global.loading;\r\n        elem.appendChild(loader);\r\n\r\n        this.app.inputMgr.pushReciever(this.inputReciever);\r\n\r\n        return elem;\r\n    }\r\n}\r\n\r\nexport class DialogOptionChooser extends Dialog {\r\n    constructor({ app, title, options }) {\r\n        let html = \"<div class='optionParent'>\";\r\n\r\n        options.options.forEach(({ value, text, desc = null, iconPrefix = null }) => {\r\n            const descHtml = desc ? `<span class=\"desc\">${desc}</span>` : \"\";\r\n            let iconHtml = iconPrefix ? `<span class=\"icon icon-${iconPrefix}-${value}\"></span>` : \"\";\r\n            html += `\r\n                <div class='option ${value === options.active ? \"active\" : \"\"} ${\r\n                iconPrefix ? \"hasIcon\" : \"\"\r\n            }' data-optionvalue='${value}'>\r\n                    ${iconHtml}    \r\n                    <span class='title'>${text}</span>\r\n                    ${descHtml}\r\n                </div>\r\n                `;\r\n        });\r\n\r\n        html += \"</div>\";\r\n        super({\r\n            app,\r\n            title,\r\n            contentHTML: html,\r\n            buttons: [],\r\n            type: \"info\",\r\n            closeButton: true,\r\n        });\r\n\r\n        this.options = options;\r\n        this.initialOption = options.active;\r\n\r\n        this.buttonSignals.optionSelected = new Signal();\r\n    }\r\n\r\n    createElement() {\r\n        const div = super.createElement();\r\n        this.dialogElem.classList.add(\"optionChooserDialog\");\r\n\r\n        div.querySelectorAll(\"[data-optionvalue]\").forEach(handle => {\r\n            const value = handle.getAttribute(\"data-optionvalue\");\r\n            if (!handle) {\r\n                logger.error(\"Failed to bind option value in dialog:\", value);\r\n                return;\r\n            }\r\n            // Need click detector here to forward elements, otherwise scrolling does not work\r\n            const detector = new ClickDetector(handle, {\r\n                consumeEvents: false,\r\n                preventDefault: false,\r\n                clickSound: null,\r\n                applyCssClass: \"pressedOption\",\r\n                targetOnly: true,\r\n            });\r\n            this.clickDetectors.push(detector);\r\n\r\n            if (value !== this.initialOption) {\r\n                detector.click.add(() => {\r\n                    const selected = div.querySelector(\".option.active\");\r\n                    if (selected) {\r\n                        selected.classList.remove(\"active\");\r\n                    } else {\r\n                        logger.warn(\"No selected option\");\r\n                    }\r\n                    handle.classList.add(\"active\");\r\n                    this.app.sound.playUiSound(SOUNDS.uiClick);\r\n                    this.internalButtonHandler(\"optionSelected\", value);\r\n                });\r\n            }\r\n        });\r\n        return div;\r\n    }\r\n}\r\n\r\nexport class DialogWithForm extends Dialog {\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Application} param0.app\r\n     * @param {string} param0.title\r\n     * @param {string} param0.desc\r\n     * @param {array=} param0.buttons\r\n     * @param {string=} param0.confirmButtonId\r\n     * @param {string=} param0.extraButton\r\n     * @param {Array<FormElement>} param0.formElements\r\n     */\r\n    constructor({ app, title, desc, formElements, buttons = [\"cancel\", \"ok:good\"], confirmButtonId = \"ok\" }) {\r\n        let html = \"\";\r\n        html += desc + \"<br>\";\r\n        for (let i = 0; i < formElements.length; ++i) {\r\n            html += formElements[i].getHtml();\r\n        }\r\n\r\n        super({\r\n            app,\r\n            title: title,\r\n            contentHTML: html,\r\n            buttons: buttons,\r\n            type: \"info\",\r\n            closeButton: true,\r\n        });\r\n        this.confirmButtonId = confirmButtonId;\r\n        this.formElements = formElements;\r\n\r\n        this.enterHandler = confirmButtonId;\r\n    }\r\n\r\n    internalButtonHandler(id, ...payload) {\r\n        if (id === this.confirmButtonId) {\r\n            if (this.hasAnyInvalid()) {\r\n                this.dialogElem.classList.remove(\"errorShake\");\r\n                waitNextFrame().then(() => {\r\n                    if (this.dialogElem) {\r\n                        this.dialogElem.classList.add(\"errorShake\");\r\n                    }\r\n                });\r\n                this.app.sound.playUiSound(SOUNDS.uiError);\r\n                return;\r\n            }\r\n        }\r\n\r\n        super.internalButtonHandler(id, payload);\r\n    }\r\n\r\n    hasAnyInvalid() {\r\n        for (let i = 0; i < this.formElements.length; ++i) {\r\n            if (!this.formElements[i].isValid()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    createElement() {\r\n        const div = super.createElement();\r\n\r\n        for (let i = 0; i < this.formElements.length; ++i) {\r\n            const elem = this.formElements[i];\r\n            elem.bindEvents(div, this.clickDetectors);\r\n        }\r\n\r\n        waitNextFrame().then(() => {\r\n            this.formElements[0].focus();\r\n        });\r\n\r\n        return div;\r\n    }\r\n}\r\n","import { ClickDetector } from \"./click_detector\";\r\n\r\nexport class FormElement {\r\n    constructor(id, label) {\r\n        this.id = id;\r\n        this.label = label;\r\n    }\r\n\r\n    getHtml() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n\r\n    getFormElement(parent) {\r\n        return parent.querySelector(\"[data-formId='\" + this.id + \"']\");\r\n    }\r\n\r\n    bindEvents(parent, clickTrackers) {\r\n        abstract;\r\n    }\r\n\r\n    focus() {}\r\n\r\n    isValid() {\r\n        return true;\r\n    }\r\n\r\n    /** @returns {any} */\r\n    getValue() {\r\n        abstract;\r\n    }\r\n}\r\n\r\nexport class FormElementInput extends FormElement {\r\n    constructor({ id, label = null, placeholder, defaultValue = \"\", inputType = \"text\", validator = null }) {\r\n        super(id, label);\r\n        this.placeholder = placeholder;\r\n        this.defaultValue = defaultValue;\r\n        this.inputType = inputType;\r\n        this.validator = validator;\r\n\r\n        this.element = null;\r\n    }\r\n\r\n    getHtml() {\r\n        let classes = [];\r\n        let inputType = \"text\";\r\n        let maxlength = 256;\r\n        switch (this.inputType) {\r\n            case \"text\": {\r\n                classes.push(\"input-text\");\r\n                break;\r\n            }\r\n\r\n            case \"email\": {\r\n                classes.push(\"input-email\");\r\n                inputType = \"email\";\r\n                break;\r\n            }\r\n\r\n            case \"token\": {\r\n                classes.push(\"input-token\");\r\n                inputType = \"text\";\r\n                maxlength = 4;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return `\r\n            <div class=\"formElement input\">\r\n                ${this.label ? `<label>${this.label}</label>` : \"\"}\r\n                <input\r\n                    type=\"${inputType}\"\r\n                    value=\"${this.defaultValue.replace(/[\"\\\\]+/gi, \"\")}\"\r\n                    maxlength=\"${maxlength}\"\r\n                    autocomplete=\"off\"\r\n                    autocorrect=\"off\"\r\n                    autocapitalize=\"off\"\r\n                    spellcheck=\"false\"\r\n                    class=\"${classes.join(\" \")}\"\r\n                    placeholder=\"${this.placeholder.replace(/[\"\\\\]+/gi, \"\")}\"\r\n                    data-formId=\"${this.id}\">\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    bindEvents(parent, clickTrackers) {\r\n        this.element = this.getFormElement(parent);\r\n        this.element.addEventListener(\"input\", event => this.updateErrorState());\r\n        this.updateErrorState();\r\n    }\r\n\r\n    updateErrorState() {\r\n        this.element.classList.toggle(\"errored\", !this.isValid());\r\n    }\r\n\r\n    isValid() {\r\n        return !this.validator || this.validator(this.element.value);\r\n    }\r\n\r\n    getValue() {\r\n        return this.element.value;\r\n    }\r\n\r\n    focus() {\r\n        this.element.focus();\r\n    }\r\n}\r\n\r\nexport class FormElementCheckbox extends FormElement {\r\n    constructor({ id, label, defaultValue = true }) {\r\n        super(id, label);\r\n        this.defaultValue = defaultValue;\r\n        this.value = this.defaultValue;\r\n\r\n        this.element = null;\r\n    }\r\n\r\n    getHtml() {\r\n        return `\r\n            <div class=\"formElement checkBoxFormElem\">\r\n            ${this.label ? `<label>${this.label}</label>` : \"\"}\r\n                <div class=\"checkbox ${this.defaultValue ? \"checked\" : \"\"}\" data-formId='${this.id}'>\r\n                    <span class=\"knob\"></span >\r\n                </div >\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    bindEvents(parent, clickTrackers) {\r\n        this.element = this.getFormElement(parent);\r\n        const detector = new ClickDetector(this.element, {\r\n            consumeEvents: false,\r\n            preventDefault: false,\r\n        });\r\n        clickTrackers.push(detector);\r\n        detector.click.add(this.toggle, this);\r\n    }\r\n\r\n    getValue() {\r\n        return this.value;\r\n    }\r\n\r\n    toggle() {\r\n        this.value = !this.value;\r\n        this.element.classList.toggle(\"checked\", this.value);\r\n    }\r\n\r\n    focus(parent) {}\r\n}\r\n","function mathPolyfills() {\r\n    // Converts from degrees to radians.\r\n    Math.radians = function (degrees) {\r\n        return (degrees * Math.PI) / 180.0;\r\n    };\r\n\r\n    // Converts from radians to degrees.\r\n    Math.degrees = function (radians) {\r\n        return (radians * 180.0) / Math.PI;\r\n    };\r\n}\r\n\r\nfunction stringPolyfills() {\r\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\n    if (!String.prototype.padStart) {\r\n        String.prototype.padStart = function padStart(targetLength, padString) {\r\n            targetLength = targetLength >> 0; //truncate if number, or convert non-number to 0;\r\n            padString = String(typeof padString !== \"undefined\" ? padString : \" \");\r\n            if (this.length >= targetLength) {\r\n                return String(this);\r\n            } else {\r\n                targetLength = targetLength - this.length;\r\n                if (targetLength > padString.length) {\r\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\r\n                }\r\n                return padString.slice(0, targetLength) + String(this);\r\n            }\r\n        };\r\n    }\r\n\r\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\r\n    if (!String.prototype.padEnd) {\r\n        String.prototype.padEnd = function padEnd(targetLength, padString) {\r\n            targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\r\n            padString = String(typeof padString !== \"undefined\" ? padString : \" \");\r\n            if (this.length > targetLength) {\r\n                return String(this);\r\n            } else {\r\n                targetLength = targetLength - this.length;\r\n                if (targetLength > padString.length) {\r\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\r\n                }\r\n                return String(this) + padString.slice(0, targetLength);\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nfunction objectPolyfills() {\r\n    // https://github.com/tc39/proposal-object-values-entries/blob/master/polyfill.js\r\n\r\n    // @ts-ignore\r\n    const reduce = Function.bind.call(Function.call, Array.prototype.reduce);\r\n    // @ts-ignore\r\n    const isEnumerable = Function.bind.call(Function.call, Object.prototype.propertyIsEnumerable);\r\n    // @ts-ignore\r\n    const concat = Function.bind.call(Function.call, Array.prototype.concat);\r\n    const keys = Reflect.ownKeys;\r\n\r\n    // @ts-ignore\r\n    if (!Object.values) {\r\n        // @ts-ignore\r\n        Object.values = function values(O) {\r\n            return reduce(\r\n                keys(O),\r\n                (v, k) => concat(v, typeof k === \"string\" && isEnumerable(O, k) ? [O[k]] : []),\r\n                []\r\n            );\r\n        };\r\n    }\r\n\r\n    if (!Object.entries) {\r\n        // @ts-ignore\r\n        Object.entries = function entries(O) {\r\n            return reduce(\r\n                keys(O),\r\n                (e, k) => concat(e, typeof k === \"string\" && isEnumerable(O, k) ? [[k, O[k]]] : []),\r\n                []\r\n            );\r\n        };\r\n    }\r\n}\r\n\r\nfunction initPolyfills() {\r\n    mathPolyfills();\r\n    stringPolyfills();\r\n    objectPolyfills();\r\n}\r\n\r\nfunction initExtensions() {\r\n    String.prototype.replaceAll = function (search, replacement) {\r\n        var target = this;\r\n        return target.split(search).join(replacement);\r\n    };\r\n}\r\n\r\n// Fetch polyfill\r\nimport \"whatwg-fetch\";\r\n// Other polyfills\r\ninitPolyfills();\r\ninitExtensions();\r\n","const queryString = require(\"query-string\");\r\nconst options = queryString.parse(location.search);\r\n\r\nexport let queryParamOptions = {\r\n    embedProvider: null,\r\n    fullVersion: false,\r\n    sandboxMode: false,\r\n};\r\n\r\nif (options.embed) {\r\n    queryParamOptions.embedProvider = options.embed;\r\n}\r\n\r\n// Allow testing full version outside of standalone\r\nif (options.fullVersion && !G_IS_RELEASE) {\r\n    queryParamOptions.fullVersion = true;\r\n}\r\n\r\n// Allow testing full version outside of standalone\r\nif (options.sandboxMode && !G_IS_RELEASE) {\r\n    queryParamOptions.sandboxMode = true;\r\n}\r\n","\r\n\r\nimport { sha1 } from \"./sensitive_utils.encrypt\";\r\nimport { createLogger } from \"./logging\";\r\nimport { FILE_NOT_FOUND } from \"../platform/storage\";\r\nimport { accessNestedPropertyReverse } from \"./utils\";\r\nimport { IS_DEBUG, globalConfig } from \"./config\";\r\nimport { ExplainedResult } from \"./explained_result\";\r\nimport { decompressX64, compressX64 } from \"./lzstring\";\r\nimport { asyncCompressor, compressionPrefix } from \"./async_compression\";\r\nimport { compressObject, decompressObject } from \"../savegame/savegame_compressor\";\r\n\r\nconst logger = createLogger(\"read_write_proxy\");\r\n\r\nconst salt = accessNestedPropertyReverse(globalConfig, [\"file\", \"info\"]);\r\n\r\n// Helper which only writes / reads if verify() works. Also performs migration\r\nexport class ReadWriteProxy {\r\n    constructor(app, filename) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n\r\n        this.filename = filename;\r\n\r\n        /** @type {object} */\r\n        this.currentData = null;\r\n\r\n        // TODO: EXTREMELY HACKY! To verify we need to do this a step later\r\n        if (G_IS_DEV && IS_DEBUG) {\r\n            setTimeout(() => {\r\n                assert(\r\n                    this.verify(this.getDefaultData()).result,\r\n                    \"Verify() failed for default data: \" + this.verify(this.getDefaultData()).reason\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    // -- Methods to override\r\n\r\n    /** @returns {ExplainedResult} */\r\n    verify(data) {\r\n        abstract;\r\n        return ExplainedResult.bad();\r\n    }\r\n\r\n    // Should return the default data\r\n    getDefaultData() {\r\n        abstract;\r\n        return {};\r\n    }\r\n\r\n    // Should return the current version as an integer\r\n    getCurrentVersion() {\r\n        abstract;\r\n        return 0;\r\n    }\r\n\r\n    // Should migrate the data (Modify in place)\r\n    /** @returns {ExplainedResult} */\r\n    migrate(data) {\r\n        abstract;\r\n        return ExplainedResult.bad();\r\n    }\r\n\r\n    // -- / Methods\r\n\r\n    // Resets whole data, returns promise\r\n    resetEverythingAsync() {\r\n        logger.warn(\"Reset data to default\");\r\n        this.currentData = this.getDefaultData();\r\n        return this.writeAsync();\r\n    }\r\n\r\n    getCurrentData() {\r\n        return this.currentData;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} obj\r\n     */\r\n    static serializeObject(obj) {\r\n        const jsonString = JSON.stringify(compressObject(obj));\r\n        const checksum = sha1(jsonString + salt);\r\n        return compressionPrefix + compressX64(checksum + jsonString);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} text\r\n     */\r\n    static deserializeObject(text) {\r\n        const decompressed = decompressX64(text.substr(compressionPrefix.length));\r\n        if (!decompressed) {\r\n            // LZ string decompression failure\r\n            throw new Error(\"bad-content / decompression-failed\");\r\n        }\r\n        if (decompressed.length < 40) {\r\n            // String too short\r\n            throw new Error(\"bad-content / payload-too-small\");\r\n        }\r\n\r\n        // Compare stored checksum with actual checksum\r\n        const checksum = decompressed.substring(0, 40);\r\n        const jsonString = decompressed.substr(40);\r\n        const desiredChecksum = sha1(jsonString + salt);\r\n        if (desiredChecksum !== checksum) {\r\n            // Checksum mismatch\r\n            throw new Error(\"bad-content / checksum-mismatch\");\r\n        }\r\n\r\n        const parsed = JSON.parse(jsonString);\r\n        const decoded = decompressObject(parsed);\r\n        return decoded;\r\n    }\r\n\r\n    /**\r\n     * Writes the data asychronously, fails if verify() fails\r\n     * @returns {Promise<string>}\r\n     */\r\n    writeAsync() {\r\n        const verifyResult = this.internalVerifyEntry(this.currentData);\r\n\r\n        if (!verifyResult.result) {\r\n            logger.error(\"Tried to write invalid data to\", this.filename, \"reason:\", verifyResult.reason);\r\n            return Promise.reject(verifyResult.reason);\r\n        }\r\n        const jsonString = JSON.stringify(compressObject(this.currentData));\r\n\r\n        // if (!this.app.pageVisible || this.app.unloaded) {\r\n        //     logger.log(\"Saving file sync because in unload handler\");\r\n        //     const checksum = sha1(jsonString + salt);\r\n        //     let compressed = compressionPrefix + compressX64(checksum + jsonString);\r\n        //     if (G_IS_DEV && IS_DEBUG) {\r\n        //         compressed = jsonString;\r\n        //     }\r\n\r\n        //     if (!this.app.storage.writeFileSyncIfSupported(this.filename, compressed)) {\r\n        //         return Promise.reject(\"Failed to write \" + this.filename + \" sync!\");\r\n        //     } else {\r\n        //         logger.log(\"📄 Wrote (sync!)\", this.filename);\r\n        //         return Promise.resolve(compressed);\r\n        //     }\r\n        // }\r\n\r\n        return asyncCompressor\r\n            .compressFileAsync(jsonString)\r\n            .then(compressed => {\r\n                if (G_IS_DEV && IS_DEBUG) {\r\n                    compressed = jsonString;\r\n                }\r\n                return this.app.storage.writeFileAsync(this.filename, compressed);\r\n            })\r\n            .then(() => {\r\n                logger.log(\"📄 Wrote\", this.filename);\r\n                return jsonString;\r\n            })\r\n            .catch(err => {\r\n                logger.error(\"Failed to write\", this.filename, \":\", err);\r\n                throw err;\r\n            });\r\n    }\r\n\r\n    // Reads the data asynchronously, fails if verify() fails\r\n    readAsync() {\r\n        // Start read request\r\n        return (\r\n            this.app.storage\r\n                .readFileAsync(this.filename)\r\n\r\n                // Check for errors during read\r\n                .catch(err => {\r\n                    if (err === FILE_NOT_FOUND) {\r\n                        logger.log(\"File not found, using default data\");\r\n\r\n                        // File not found or unreadable, assume default file\r\n                        return Promise.resolve(null);\r\n                    }\r\n\r\n                    return Promise.reject(\"file-error: \" + err);\r\n                })\r\n\r\n                // Decrypt data (if its encrypted)\r\n                // @ts-ignore\r\n                .then(rawData => {\r\n                    if (rawData == null) {\r\n                        // So, the file has not been found, use default data\r\n                        return JSON.stringify(compressObject(this.getDefaultData()));\r\n                    }\r\n\r\n                    if (rawData.startsWith(compressionPrefix)) {\r\n                        const decompressed = decompressX64(rawData.substr(compressionPrefix.length));\r\n                        if (!decompressed) {\r\n                            // LZ string decompression failure\r\n                            return Promise.reject(\"bad-content / decompression-failed\");\r\n                        }\r\n                        if (decompressed.length < 40) {\r\n                            // String too short\r\n                            return Promise.reject(\"bad-content / payload-too-small\");\r\n                        }\r\n\r\n                        // Compare stored checksum with actual checksum\r\n                        const checksum = decompressed.substring(0, 40);\r\n                        const jsonString = decompressed.substr(40);\r\n                        const desiredChecksum = sha1(jsonString + salt);\r\n                        if (desiredChecksum !== checksum) {\r\n                            // Checksum mismatch\r\n                            return Promise.reject(\"bad-content / checksum-mismatch\");\r\n                        }\r\n                        return jsonString;\r\n                    } else {\r\n                        if (!G_IS_DEV) {\r\n                            return Promise.reject(\"bad-content / missing-compression\");\r\n                        }\r\n                    }\r\n                    return rawData;\r\n                })\r\n\r\n                // Parse JSON, this could throw but thats fine\r\n                .then(res => {\r\n                    try {\r\n                        return JSON.parse(res);\r\n                    } catch (ex) {\r\n                        logger.error(\r\n                            \"Failed to parse file content of\",\r\n                            this.filename,\r\n                            \":\",\r\n                            ex,\r\n                            \"(content was:\",\r\n                            res,\r\n                            \")\"\r\n                        );\r\n                        throw new Error(\"invalid-serialized-data\");\r\n                    }\r\n                })\r\n\r\n                // Decompress\r\n                .then(compressed => decompressObject(compressed))\r\n\r\n                // Verify basic structure\r\n                .then(contents => {\r\n                    const result = this.internalVerifyBasicStructure(contents);\r\n                    if (!result.isGood()) {\r\n                        return Promise.reject(\"verify-failed: \" + result.reason);\r\n                    }\r\n                    return contents;\r\n                })\r\n\r\n                // Check version and migrate if required\r\n                .then(contents => {\r\n                    if (contents.version > this.getCurrentVersion()) {\r\n                        return Promise.reject(\"stored-data-is-newer\");\r\n                    }\r\n\r\n                    if (contents.version < this.getCurrentVersion()) {\r\n                        logger.log(\r\n                            \"Trying to migrate data object from version\",\r\n                            contents.version,\r\n                            \"to\",\r\n                            this.getCurrentVersion()\r\n                        );\r\n                        const migrationResult = this.migrate(contents); // modify in place\r\n                        if (migrationResult.isBad()) {\r\n                            return Promise.reject(\"migration-failed: \" + migrationResult.reason);\r\n                        }\r\n                    }\r\n                    return contents;\r\n                })\r\n\r\n                // Verify\r\n                .then(contents => {\r\n                    const verifyResult = this.internalVerifyEntry(contents);\r\n                    if (!verifyResult.result) {\r\n                        logger.error(\r\n                            \"Read invalid data from\",\r\n                            this.filename,\r\n                            \"reason:\",\r\n                            verifyResult.reason,\r\n                            \"contents:\",\r\n                            contents\r\n                        );\r\n                        return Promise.reject(\"invalid-data: \" + verifyResult.reason);\r\n                    }\r\n                    return contents;\r\n                })\r\n\r\n                // Store\r\n                .then(contents => {\r\n                    this.currentData = contents;\r\n                    logger.log(\"📄 Read data with version\", this.currentData.version, \"from\", this.filename);\r\n                    return contents;\r\n                })\r\n\r\n                // Catchall\r\n                .catch(err => {\r\n                    return Promise.reject(\"Failed to read \" + this.filename + \": \" + err);\r\n                })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Deletes the file\r\n     * @returns {Promise<void>}\r\n     */\r\n    deleteAsync() {\r\n        return this.app.storage.deleteFileAsync(this.filename);\r\n    }\r\n\r\n    // Internal\r\n\r\n    /** @returns {ExplainedResult} */\r\n    internalVerifyBasicStructure(data) {\r\n        if (!data) {\r\n            return ExplainedResult.bad(\"Data is empty\");\r\n        }\r\n        if (!Number.isInteger(data.version) || data.version < 0) {\r\n            return ExplainedResult.bad(\r\n                `Data has invalid version: ${data.version} (expected ${this.getCurrentVersion()})`\r\n            );\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    /** @returns {ExplainedResult} */\r\n    internalVerifyEntry(data) {\r\n        if (data.version !== this.getCurrentVersion()) {\r\n            return ExplainedResult.bad(\r\n                \"Version mismatch, got \" + data.version + \" and expected \" + this.getCurrentVersion()\r\n            );\r\n        }\r\n\r\n        const verifyStructureError = this.internalVerifyBasicStructure(data);\r\n        if (!verifyStructureError.isGood()) {\r\n            return verifyStructureError;\r\n        }\r\n        return this.verify(data);\r\n    }\r\n}\r\n","import { globalConfig } from \"./config\";\r\nimport { clamp, epsilonCompare, round2Digits } from \"./utils\";\r\nimport { Vector } from \"./vector\";\r\n\r\nexport class Rectangle {\r\n    constructor(x = 0, y = 0, w = 0, h = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n\r\n    /**\r\n     * Creates a rectangle from top right bottom and left offsets\r\n     * @param {number} top\r\n     * @param {number} right\r\n     * @param {number} bottom\r\n     * @param {number} left\r\n     */\r\n    static fromTRBL(top, right, bottom, left) {\r\n        return new Rectangle(left, top, right - left, bottom - top);\r\n    }\r\n\r\n    /**\r\n     * Constructs a new square rectangle\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} size\r\n     */\r\n    static fromSquare(x, y, size) {\r\n        return new Rectangle(x, y, size, size);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Vector} p1\r\n     * @param {Vector} p2\r\n     */\r\n    static fromTwoPoints(p1, p2) {\r\n        const left = Math.min(p1.x, p2.x);\r\n        const top = Math.min(p1.y, p2.y);\r\n        const right = Math.max(p1.x, p2.x);\r\n        const bottom = Math.max(p1.y, p2.y);\r\n        return new Rectangle(left, top, right - left, bottom - top);\r\n    }\r\n\r\n    /**\r\n     * Returns if a intersects b\r\n     * @param {Rectangle} a\r\n     * @param {Rectangle} b\r\n     */\r\n    static intersects(a, b) {\r\n        return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;\r\n    }\r\n\r\n    /**\r\n     * Returns a rectangle arround a rotated point\r\n     * @param {Array<Vector>} points\r\n     * @param {number} angle\r\n     * @returns {Rectangle}\r\n     */\r\n    static getAroundPointsRotated(points, angle) {\r\n        let minX = 1e10;\r\n        let minY = 1e10;\r\n        let maxX = -1e10;\r\n        let maxY = -1e10;\r\n        for (let i = 0; i < points.length; ++i) {\r\n            const rotated = points[i].rotated(angle);\r\n            minX = Math.min(minX, rotated.x);\r\n            minY = Math.min(minY, rotated.y);\r\n            maxX = Math.max(maxX, rotated.x);\r\n            maxY = Math.max(maxY, rotated.y);\r\n        }\r\n        return new Rectangle(minX, minY, maxX - minX, maxY - minY);\r\n    }\r\n\r\n    /**\r\n     * Copies this instance\r\n     * @returns {Rectangle}\r\n     */\r\n    clone() {\r\n        return new Rectangle(this.x, this.y, this.w, this.h);\r\n    }\r\n\r\n    /**\r\n     * Ensures the rectangle contains the given square\r\n     * @param {number} centerX\r\n     * @param {number} centerY\r\n     * @param {number} halfWidth\r\n     * @param {number} halfHeight\r\n     */\r\n    extendBySquare(centerX, centerY, halfWidth, halfHeight) {\r\n        if (this.isEmpty()) {\r\n            // Just assign values since this rectangle is empty\r\n            this.x = centerX - halfWidth;\r\n            this.y = centerY - halfHeight;\r\n            this.w = halfWidth * 2;\r\n            this.h = halfHeight * 2;\r\n        } else {\r\n            this.setLeft(Math.min(this.x, centerX - halfWidth));\r\n            this.setRight(Math.max(this.right(), centerX + halfWidth));\r\n            this.setTop(Math.min(this.y, centerY - halfHeight));\r\n            this.setBottom(Math.max(this.bottom(), centerY + halfHeight));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns if this rectangle is empty\r\n     * @returns {boolean}\r\n     */\r\n    isEmpty() {\r\n        return epsilonCompare(this.w * this.h, 0);\r\n    }\r\n\r\n    /**\r\n     * Returns if this rectangle is equal to the other while taking an epsilon into account\r\n     * @param {Rectangle} other\r\n     * @param {number} epsilon\r\n     */\r\n    equalsEpsilon(other, epsilon) {\r\n        return (\r\n            epsilonCompare(this.x, other.x, epsilon) &&\r\n            epsilonCompare(this.y, other.y, epsilon) &&\r\n            epsilonCompare(this.w, other.w, epsilon) &&\r\n            epsilonCompare(this.h, other.h, epsilon)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    left() {\r\n        return this.x;\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    right() {\r\n        return this.x + this.w;\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    top() {\r\n        return this.y;\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    bottom() {\r\n        return this.y + this.h;\r\n    }\r\n\r\n    /**\r\n     * Returns Top, Right, Bottom, Left\r\n     * @returns {[number, number, number, number]}\r\n     */\r\n    trbl() {\r\n        return [this.y, this.right(), this.bottom(), this.x];\r\n    }\r\n\r\n    /**\r\n     * Returns the center of the rect\r\n     * @returns {Vector}\r\n     */\r\n    getCenter() {\r\n        return new Vector(this.x + this.w / 2, this.y + this.h / 2);\r\n    }\r\n\r\n    /**\r\n     * Sets the right side of the rect without moving it\r\n     * @param {number} right\r\n     */\r\n    setRight(right) {\r\n        this.w = right - this.x;\r\n    }\r\n\r\n    /**\r\n     * Sets the bottom side of the rect without moving it\r\n     * @param {number} bottom\r\n     */\r\n    setBottom(bottom) {\r\n        this.h = bottom - this.y;\r\n    }\r\n\r\n    /**\r\n     * Sets the top side of the rect without scaling it\r\n     * @param {number} top\r\n     */\r\n    setTop(top) {\r\n        const bottom = this.bottom();\r\n        this.y = top;\r\n        this.setBottom(bottom);\r\n    }\r\n\r\n    /**\r\n     * Sets the left side of the rect without scaling it\r\n     * @param {number} left\r\n     */\r\n    setLeft(left) {\r\n        const right = this.right();\r\n        this.x = left;\r\n        this.setRight(right);\r\n    }\r\n\r\n    /**\r\n     * Returns the top left point\r\n     * @returns {Vector}\r\n     */\r\n    topLeft() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    /**\r\n     * Returns the bottom left point\r\n     * @returns {Vector}\r\n     */\r\n    bottomRight() {\r\n        return new Vector(this.right(), this.bottom());\r\n    }\r\n\r\n    /**\r\n     * Moves the rectangle by the given parameters\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    moveBy(x, y) {\r\n        this.x += x;\r\n        this.y += y;\r\n    }\r\n\r\n    /**\r\n     * Moves the rectangle by the given vector\r\n     * @param {Vector} vec\r\n     */\r\n    moveByVector(vec) {\r\n        this.x += vec.x;\r\n        this.y += vec.y;\r\n    }\r\n\r\n    /**\r\n     * Scales every parameter (w, h, x, y) by the given factor. Useful to transform from world to\r\n     * tile space and vice versa\r\n     * @param {number} factor\r\n     */\r\n    allScaled(factor) {\r\n        return new Rectangle(this.x * factor, this.y * factor, this.w * factor, this.h * factor);\r\n    }\r\n\r\n    /**\r\n     * Expands the rectangle in all directions\r\n     * @param {number} amount\r\n     * @returns {Rectangle} new rectangle\r\n     */\r\n    expandedInAllDirections(amount) {\r\n        return new Rectangle(this.x - amount, this.y - amount, this.w + 2 * amount, this.h + 2 * amount);\r\n    }\r\n\r\n    /**\r\n     * Helper for computing a culling area. Returns the top left tile\r\n     * @returns {Vector}\r\n     */\r\n    getMinStartTile() {\r\n        return new Vector(this.x, this.y).snapWorldToTile();\r\n    }\r\n\r\n    /**\r\n     * Returns if the given rectangle is contained\r\n     * @param {Rectangle} rect\r\n     * @returns {boolean}\r\n     */\r\n    containsRect(rect) {\r\n        return (\r\n            this.x <= rect.right() &&\r\n            rect.x <= this.right() &&\r\n            this.y <= rect.bottom() &&\r\n            rect.y <= this.bottom()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns if this rectangle contains the other rectangle specified by the parameters\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @returns {boolean}\r\n     */\r\n    containsRect4Params(x, y, w, h) {\r\n        return this.x <= x + w && x <= this.right() && this.y <= y + h && y <= this.bottom();\r\n    }\r\n\r\n    /**\r\n     * Returns if the rectangle contains the given circle at (x, y) with the radius (radius)\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} radius\r\n     * @returns {boolean}\r\n     */\r\n    containsCircle(x, y, radius) {\r\n        return (\r\n            this.x <= x + radius &&\r\n            x - radius <= this.right() &&\r\n            this.y <= y + radius &&\r\n            y - radius <= this.bottom()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns if hte rectangle contains the given point\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {boolean}\r\n     */\r\n    containsPoint(x, y) {\r\n        return x >= this.x && x < this.right() && y >= this.y && y < this.bottom();\r\n    }\r\n\r\n    /**\r\n     * Returns the shared area with another rectangle, or null if there is no intersection\r\n     * @param {Rectangle} rect\r\n     * @returns {Rectangle|null}\r\n     */\r\n    getIntersection(rect) {\r\n        const left = Math.max(this.x, rect.x);\r\n        const top = Math.max(this.y, rect.y);\r\n\r\n        const right = Math.min(this.x + this.w, rect.x + rect.w);\r\n        const bottom = Math.min(this.y + this.h, rect.y + rect.h);\r\n\r\n        if (right <= left || bottom <= top) {\r\n            return null;\r\n        }\r\n\r\n        return Rectangle.fromTRBL(top, right, bottom, left);\r\n    }\r\n\r\n    /**\r\n     * Returns the union of this rectangle with another\r\n     * @param {Rectangle} rect\r\n     */\r\n    getUnion(rect) {\r\n        if (this.isEmpty()) {\r\n            // If this is rect is empty, return the other one\r\n            return rect.clone();\r\n        }\r\n        if (rect.isEmpty()) {\r\n            // If the other is empty, return this one\r\n            return this.clone();\r\n        }\r\n\r\n        // Find contained area\r\n        const left = Math.min(this.x, rect.x);\r\n        const top = Math.min(this.y, rect.y);\r\n        const right = Math.max(this.right(), rect.right());\r\n        const bottom = Math.max(this.bottom(), rect.bottom());\r\n\r\n        return Rectangle.fromTRBL(top, right, bottom, left);\r\n    }\r\n\r\n    /**\r\n     * Good for caching stuff\r\n     */\r\n    toCompareableString() {\r\n        return (\r\n            round2Digits(this.x) +\r\n            \"/\" +\r\n            round2Digits(this.y) +\r\n            \"/\" +\r\n            round2Digits(this.w) +\r\n            \"/\" +\r\n            round2Digits(this.h)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns a new recangle in tile space which includes all tiles which are visible in this rect\r\n     * @param {boolean=} includeHalfTiles\r\n     * @returns {Rectangle}\r\n     */\r\n    toTileCullRectangle(includeHalfTiles = true) {\r\n        let scaled = this.allScaled(1.0 / globalConfig.tileSize);\r\n\r\n        if (includeHalfTiles) {\r\n            // Increase rectangle size\r\n            scaled = Rectangle.fromTRBL(\r\n                Math.floor(scaled.y),\r\n                Math.ceil(scaled.right()),\r\n                Math.ceil(scaled.bottom()),\r\n                Math.floor(scaled.x)\r\n            );\r\n        }\r\n\r\n        return scaled;\r\n    }\r\n}\r\n","import { createLogger } from \"../core/logging\";\r\nimport { fastArrayDeleteValueIfContained } from \"../core/utils\";\r\n\r\nconst logger = createLogger(\"request_channel\");\r\n\r\n// Thrown when a request is aborted\r\nexport const PROMISE_ABORTED = \"promise-aborted\";\r\n\r\nexport class RequestChannel {\r\n    constructor() {\r\n        /** @type {Array<Promise>} */\r\n        this.pendingPromises = [];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Promise<any>} promise\r\n     * @returns {Promise<any>}\r\n     */\r\n    watch(promise) {\r\n        // log(this, \"Added new promise:\", promise, \"(pending =\", this.pendingPromises.length, \")\");\r\n        let cancelled = false;\r\n        const wrappedPromise = new Promise((resolve, reject) => {\r\n            promise.then(\r\n                result => {\r\n                    // Remove from pending promises\r\n                    fastArrayDeleteValueIfContained(this.pendingPromises, wrappedPromise);\r\n\r\n                    // If not cancelled, resolve promise with same payload\r\n                    if (!cancelled) {\r\n                        resolve.call(this, result);\r\n                    } else {\r\n                        logger.warn(\"Not resolving because promise got cancelled\");\r\n                        // reject.call(this, PROMISE_ABORTED);\r\n                    }\r\n                },\r\n                err => {\r\n                    // Remove from pending promises\r\n                    fastArrayDeleteValueIfContained(this.pendingPromises, wrappedPromise);\r\n\r\n                    // If not cancelled, reject promise with same payload\r\n                    if (!cancelled) {\r\n                        reject.call(this, err);\r\n                    } else {\r\n                        logger.warn(\"Not rejecting because promise got cancelled\");\r\n                        // reject.call(this, PROMISE_ABORTED);\r\n                    }\r\n                }\r\n            );\r\n        });\r\n\r\n        // Add cancel handler\r\n        // @ts-ignore\r\n        wrappedPromise.cancel = function () {\r\n            cancelled = true;\r\n        };\r\n\r\n        this.pendingPromises.push(wrappedPromise);\r\n        return wrappedPromise;\r\n    }\r\n\r\n    cancelAll() {\r\n        if (this.pendingPromises.length > 0) {\r\n            logger.log(\"Cancel all pending promises (\", this.pendingPromises.length, \")\");\r\n        }\r\n        for (let i = 0; i < this.pendingPromises.length; ++i) {\r\n            // @ts-ignore\r\n            this.pendingPromises[i].cancel();\r\n        }\r\n        this.pendingPromises = [];\r\n    }\r\n}\r\n","// ALEA RNG\r\n\r\nfunction Mash() {\r\n    var n = 0xefc8249d;\r\n    return function (data) {\r\n        data = data.toString();\r\n        for (var i = 0; i < data.length; i++) {\r\n            n += data.charCodeAt(i);\r\n            var h = 0.02519603282416938 * n;\r\n            n = h >>> 0;\r\n            h -= n;\r\n            h *= n;\r\n            n = h >>> 0;\r\n            h -= n;\r\n            n += h * 0x100000000; // 2^32\r\n        }\r\n        return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\r\n    };\r\n}\r\n\r\n/**\r\n * @param {number|string} seed\r\n */\r\nfunction makeNewRng(seed) {\r\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\r\n    var c = 1;\r\n    var mash = Mash();\r\n    let s0 = mash(\" \");\r\n    let s1 = mash(\" \");\r\n    let s2 = mash(\" \");\r\n\r\n    s0 -= mash(seed);\r\n    if (s0 < 0) {\r\n        s0 += 1;\r\n    }\r\n    s1 -= mash(seed);\r\n    if (s1 < 0) {\r\n        s1 += 1;\r\n    }\r\n    s2 -= mash(seed);\r\n    if (s2 < 0) {\r\n        s2 += 1;\r\n    }\r\n    mash = null;\r\n\r\n    var random = function () {\r\n        var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\r\n        s0 = s1;\r\n        s1 = s2;\r\n        return (s2 = t - (c = t | 0));\r\n    };\r\n\r\n    random.exportState = function () {\r\n        return [s0, s1, s2, c];\r\n    };\r\n\r\n    random.importState = function (i) {\r\n        s0 = +i[0] || 0;\r\n        s1 = +i[1] || 0;\r\n        s2 = +i[2] || 0;\r\n        c = +i[3] || 0;\r\n    };\r\n\r\n    return random;\r\n}\r\n\r\nexport class RandomNumberGenerator {\r\n    /**\r\n     *\r\n     * @param {number|string=} seed\r\n     */\r\n    constructor(seed) {\r\n        this.internalRng = makeNewRng(seed || Math.random());\r\n    }\r\n\r\n    /**\r\n     * Re-seeds the generator\r\n     * @param {number|string} seed\r\n     */\r\n    reseed(seed) {\r\n        this.internalRng = makeNewRng(seed || Math.random());\r\n    }\r\n\r\n    /**\r\n     * @returns {number} between 0 and 1\r\n     */\r\n    next() {\r\n        return this.internalRng();\r\n    }\r\n\r\n    /**\r\n     * Random choice of an array\r\n     * @param {array} array\r\n     */\r\n    choice(array) {\r\n        const index = this.nextIntRange(0, array.length);\r\n        return array[index];\r\n    }\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @returns {number} Integer in range [min, max[\r\n     */\r\n    nextIntRange(min, max) {\r\n        assert(Number.isFinite(min), \"Minimum is no integer\");\r\n        assert(Number.isFinite(max), \"Maximum is no integer\");\r\n        assert(max > min, \"rng: max <= min\");\r\n        return Math.floor(this.next() * (max - min) + min);\r\n    }\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @returns {number} Integer in range [min, max]\r\n     */\r\n    nextIntRangeInclusive(min, max) {\r\n        assert(Number.isFinite(min), \"Minimum is no integer\");\r\n        assert(Number.isFinite(max), \"Maximum is no integer\");\r\n        assert(max > min, \"rng: max <= min\");\r\n        return Math.round(this.next() * (max - min) + min);\r\n    }\r\n\r\n    /**\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @returns {number} Number in range [min, max[\r\n     */\r\n    nextRange(min, max) {\r\n        assert(max > min, \"rng: max <= min\");\r\n        return this.next() * (max - min) + min;\r\n    }\r\n\r\n    /**\r\n     * Updates the seed\r\n     * @param {number} seed\r\n     */\r\n    setSeed(seed) {\r\n        this.internalRng = makeNewRng(seed);\r\n    }\r\n}\r\n","import { createHash } from \"rusha\";\r\n\r\nimport { decompressX64 } from \"./lzstring\";\r\n\r\nexport function sha1(str) {\r\n    return createHash().update(str).digest(\"hex\");\r\n}\r\n\r\n// Window.location.host\r\nexport function getNameOfProvider() {\r\n    return window[decompressX64(\"DYewxghgLgliB2Q\")][decompressX64(\"BYewzgLgdghgtgUyA\")];\r\n}\r\n","export const STOP_PROPAGATION = \"stop_propagation\";\r\n\r\nexport class Signal {\r\n    constructor() {\r\n        this.receivers = [];\r\n        this.modifyCount = 0;\r\n    }\r\n\r\n    /**\r\n     * Adds a new signal listener\r\n     * @param {function} receiver\r\n     * @param {object} scope\r\n     */\r\n    add(receiver, scope = null) {\r\n        assert(receiver, \"receiver is null\");\r\n        this.receivers.push({ receiver, scope });\r\n        ++this.modifyCount;\r\n    }\r\n\r\n    /**\r\n     * Dispatches the signal\r\n     * @param  {...any} payload\r\n     */\r\n    dispatch() {\r\n        const modifyState = this.modifyCount;\r\n\r\n        const n = this.receivers.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            const { receiver, scope } = this.receivers[i];\r\n            if (receiver.apply(scope, arguments) === STOP_PROPAGATION) {\r\n                return STOP_PROPAGATION;\r\n            }\r\n\r\n            if (modifyState !== this.modifyCount) {\r\n                // Signal got modified during iteration\r\n                return STOP_PROPAGATION;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes a receiver\r\n     * @param {function} receiver\r\n     */\r\n    remove(receiver) {\r\n        let index = null;\r\n        const n = this.receivers.length;\r\n        for (let i = 0; i < n; ++i) {\r\n            if (this.receivers[i].receiver === receiver) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        assert(index !== null, \"Receiver not found in list\");\r\n        this.receivers.splice(index, 1);\r\n        ++this.modifyCount;\r\n    }\r\n\r\n    /**\r\n     * Removes all receivers\r\n     */\r\n    removeAll() {\r\n        this.receivers = [];\r\n        ++this.modifyCount;\r\n    }\r\n}\r\n","import { createLogger } from \"./logging\";\r\n\r\nconst logger = createLogger(\"singleton_factory\");\r\n\r\n// simple factory pattern\r\nexport class SingletonFactory {\r\n    constructor(id) {\r\n        this.id = id;\r\n\r\n        // Store array as well as dictionary, to speed up lookups\r\n        this.entries = [];\r\n        this.idToEntry = {};\r\n    }\r\n\r\n    getId() {\r\n        return this.id;\r\n    }\r\n\r\n    register(classHandle) {\r\n        // First, construct instance\r\n        const instance = new classHandle();\r\n\r\n        // Extract id\r\n        const id = instance.getId();\r\n        assert(id, \"Factory: Invalid id for class \" + classHandle.name + \": \" + id);\r\n\r\n        // Check duplicates\r\n        assert(!this.idToEntry[id], \"Duplicate factory entry for \" + id);\r\n\r\n        // Insert\r\n        this.entries.push(instance);\r\n        this.idToEntry[id] = instance;\r\n    }\r\n\r\n    /**\r\n     * Checks if a given id is registered\r\n     * @param {string} id\r\n     * @returns {boolean}\r\n     */\r\n    hasId(id) {\r\n        return !!this.idToEntry[id];\r\n    }\r\n\r\n    /**\r\n     * Finds an instance by a given id\r\n     * @param {string} id\r\n     * @returns {object}\r\n     */\r\n    findById(id) {\r\n        const entry = this.idToEntry[id];\r\n        if (!entry) {\r\n            logger.error(\"Object with id\", id, \"is not registered!\");\r\n            assert(false, \"Factory: Object with id '\" + id + \"' is not registered!\");\r\n            return null;\r\n        }\r\n        return entry;\r\n    }\r\n\r\n    /**\r\n     * Finds an instance by its constructor (The class handle)\r\n     * @param {object} classHandle\r\n     * @returns {object}\r\n     */\r\n    findByClass(classHandle) {\r\n        for (let i = 0; i < this.entries.length; ++i) {\r\n            if (this.entries[i] instanceof classHandle) {\r\n                return this.entries[i];\r\n            }\r\n        }\r\n        assert(false, \"Factory: Object not found by classHandle (classid: \" + classHandle.name + \")\");\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Returns all entries\r\n     * @returns {Array<object>}\r\n     */\r\n    getEntries() {\r\n        return this.entries;\r\n    }\r\n\r\n    /**\r\n     * Returns all registered ids\r\n     * @returns {Array<string>}\r\n     */\r\n    getAllIds() {\r\n        return Object.keys(this.idToEntry);\r\n    }\r\n\r\n    /**\r\n     * Returns amount of stored entries\r\n     * @returns {number}\r\n     */\r\n    getNumEntries() {\r\n        return this.entries.length;\r\n    }\r\n}\r\n","import { DrawParameters } from \"./draw_parameters\";\r\nimport { Rectangle } from \"./rectangle\";\r\nimport { epsilonCompare, round3Digits } from \"./utils\";\r\n\r\nconst floorSpriteCoordinates = false;\r\n\r\nconst ORIGINAL_SCALE = \"1\";\r\n\r\nexport class BaseSprite {\r\n    /**\r\n     * Returns the raw handle\r\n     * @returns {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    getRawTexture() {\r\n        abstract;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Draws the sprite\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     */\r\n    draw(context, x, y, w, h) {\r\n        // eslint-disable-line no-unused-vars\r\n        abstract;\r\n    }\r\n}\r\n\r\n/**\r\n * Position of a sprite within an atlas\r\n */\r\nexport class SpriteAtlasLink {\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {number} param0.packedX\r\n     * @param {number} param0.packedY\r\n     * @param {number} param0.packOffsetX\r\n     * @param {number} param0.packOffsetY\r\n     * @param {number} param0.packedW\r\n     * @param {number} param0.packedH\r\n     * @param {number} param0.w\r\n     * @param {number} param0.h\r\n     * @param {HTMLImageElement|HTMLCanvasElement} param0.atlas\r\n     */\r\n    constructor({ w, h, packedX, packedY, packOffsetX, packOffsetY, packedW, packedH, atlas }) {\r\n        this.packedX = packedX;\r\n        this.packedY = packedY;\r\n        this.packedW = packedW;\r\n        this.packedH = packedH;\r\n        this.packOffsetX = packOffsetX;\r\n        this.packOffsetY = packOffsetY;\r\n        this.atlas = atlas;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n}\r\n\r\nexport class AtlasSprite extends BaseSprite {\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {string} param0.spriteName\r\n     */\r\n    constructor({ spriteName = \"sprite\" }) {\r\n        super();\r\n        /** @type {Object.<string, SpriteAtlasLink>} */\r\n        this.linksByResolution = {};\r\n        this.spriteName = spriteName;\r\n    }\r\n\r\n    getRawTexture() {\r\n        return this.linksByResolution[ORIGINAL_SCALE].atlas;\r\n    }\r\n\r\n    /**\r\n     * Draws the sprite onto a regular context using no contexts\r\n     * @see {BaseSprite.draw}\r\n     */\r\n    draw(context, x, y, w, h) {\r\n        if (G_IS_DEV) {\r\n            assert(context instanceof CanvasRenderingContext2D, \"Not a valid context\");\r\n        }\r\n\r\n        const link = this.linksByResolution[ORIGINAL_SCALE];\r\n\r\n        assert(\r\n            link,\r\n            \"Link not known: \" + ORIGINAL_SCALE + \" (having \" + Object.keys(this.linksByResolution) + \")\"\r\n        );\r\n\r\n        const width = w || link.w;\r\n        const height = h || link.h;\r\n\r\n        const scaleW = width / link.w;\r\n        const scaleH = height / link.h;\r\n\r\n        context.drawImage(\r\n            link.atlas,\r\n\r\n            link.packedX,\r\n            link.packedY,\r\n            link.packedW,\r\n            link.packedH,\r\n\r\n            x + link.packOffsetX * scaleW,\r\n            y + link.packOffsetY * scaleH,\r\n            link.packedW * scaleW,\r\n            link.packedH * scaleH\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} size\r\n     * @param {boolean=} clipping\r\n     */\r\n    drawCachedCentered(parameters, x, y, size, clipping = true) {\r\n        this.drawCached(parameters, x - size / 2, y - size / 2, size, size, clipping);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} size\r\n     */\r\n    drawCentered(context, x, y, size) {\r\n        this.draw(context, x - size / 2, y - size / 2, size, size);\r\n    }\r\n\r\n    /**\r\n     * Draws the sprite\r\n     * @param {DrawParameters} parameters\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @param {boolean=} clipping Whether to perform culling\r\n     */\r\n    drawCached(parameters, x, y, w = null, h = null, clipping = true) {\r\n        if (G_IS_DEV) {\r\n            assert(parameters instanceof DrawParameters, \"Not a valid context\");\r\n            assert(!!w && w > 0, \"Not a valid width:\" + w);\r\n            assert(!!h && h > 0, \"Not a valid height:\" + h);\r\n        }\r\n\r\n        const visibleRect = parameters.visibleRect;\r\n\r\n        const scale = parameters.desiredAtlasScale;\r\n        const link = this.linksByResolution[scale];\r\n\r\n        if (!link) {\r\n            assert(false, `Link not known: ${scale} (having ${Object.keys(this.linksByResolution)})`);\r\n        }\r\n\r\n        const scaleW = w / link.w;\r\n        const scaleH = h / link.h;\r\n\r\n        let destX = x + link.packOffsetX * scaleW;\r\n        let destY = y + link.packOffsetY * scaleH;\r\n        let destW = link.packedW * scaleW;\r\n        let destH = link.packedH * scaleH;\r\n\r\n        let srcX = link.packedX;\r\n        let srcY = link.packedY;\r\n        let srcW = link.packedW;\r\n        let srcH = link.packedH;\r\n\r\n        let intersection = null;\r\n\r\n        if (clipping) {\r\n            const rect = new Rectangle(destX, destY, destW, destH);\r\n            intersection = rect.getIntersection(visibleRect);\r\n            if (!intersection) {\r\n                return;\r\n            }\r\n\r\n            srcX += (intersection.x - destX) / scaleW;\r\n            srcY += (intersection.y - destY) / scaleH;\r\n\r\n            srcW *= intersection.w / destW;\r\n            srcH *= intersection.h / destH;\r\n\r\n            destX = intersection.x;\r\n            destY = intersection.y;\r\n\r\n            destW = intersection.w;\r\n            destH = intersection.h;\r\n        }\r\n\r\n        // assert(epsilonCompare(scaleW, scaleH), \"Sprite should be square for cached rendering\");\r\n\r\n        if (floorSpriteCoordinates) {\r\n            parameters.context.drawImage(\r\n                link.atlas,\r\n\r\n                // atlas src pos\r\n                Math.floor(srcX),\r\n                Math.floor(srcY),\r\n\r\n                // atlas src size\r\n                Math.floor(srcW),\r\n                Math.floor(srcH),\r\n\r\n                // dest pos\r\n                Math.floor(destX),\r\n                Math.floor(destY),\r\n\r\n                // dest size\r\n                Math.floor(destW),\r\n                Math.floor(destH)\r\n            );\r\n        } else {\r\n            parameters.context.drawImage(\r\n                link.atlas,\r\n\r\n                // atlas src pos\r\n                srcX,\r\n                srcY,\r\n\r\n                // atlas src siize\r\n                srcW,\r\n                srcH,\r\n\r\n                // dest pos and size\r\n                destX,\r\n                destY,\r\n                destW,\r\n                destH\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders into an html element\r\n     * @param {HTMLElement} element\r\n     * @param {number} w\r\n     * @param {number} h\r\n     */\r\n    renderToHTMLElement(element, w = 1, h = 1) {\r\n        element.style.position = \"relative\";\r\n        element.innerHTML = this.getAsHTML(w, h);\r\n    }\r\n\r\n    /**\r\n     * Returns the html to render as icon\r\n     * @param {number} w\r\n     * @param {number} h\r\n     */\r\n    getAsHTML(w, h) {\r\n        const link = this.linksByResolution[\"0.5\"];\r\n\r\n        // Find out how much we have to scale it so that it fits\r\n        const scaleX = w / link.w;\r\n        const scaleY = h / link.h;\r\n\r\n        // Find out how big the scaled atlas is\r\n        const atlasW = link.atlas.width * scaleX;\r\n        const atlasH = link.atlas.height * scaleY;\r\n\r\n        // @ts-ignore\r\n        const srcSafe = link.atlas.src.replaceAll(\"\\\\\", \"/\");\r\n\r\n        // Find out how big we render the sprite\r\n        const widthAbsolute = scaleX * link.packedW;\r\n        const heightAbsolute = scaleY * link.packedH;\r\n\r\n        // Compute the position in the relative container\r\n        const leftRelative = (link.packOffsetX * scaleX) / w;\r\n        const topRelative = (link.packOffsetY * scaleY) / h;\r\n        const widthRelative = widthAbsolute / w;\r\n        const heightRelative = heightAbsolute / h;\r\n\r\n        // Scale the atlas relative to the width and height of the element\r\n        const bgW = atlasW / widthAbsolute;\r\n        const bgH = atlasH / heightAbsolute;\r\n\r\n        // Figure out what the position of the atlas is\r\n        const bgX = link.packedX * scaleX;\r\n        const bgY = link.packedY * scaleY;\r\n\r\n        // Fuck you, whoever thought its a good idea to make background-position work like it does now\r\n        const bgXRelative = -bgX / (widthAbsolute - atlasW);\r\n        const bgYRelative = -bgY / (heightAbsolute - atlasH);\r\n\r\n        return `\r\n            <span class=\"spritesheetImage\" style=\"\r\n                background-image: url('${srcSafe}');\r\n                left: ${round3Digits(leftRelative * 100.0)}%;\r\n                top: ${round3Digits(topRelative * 100.0)}%;\r\n                width: ${round3Digits(widthRelative * 100.0)}%;\r\n                height: ${round3Digits(heightRelative * 100.0)}%;\r\n                background-repeat: repeat;\r\n                background-position: ${round3Digits(bgXRelative * 100.0)}% ${round3Digits(\r\n            bgYRelative * 100.0\r\n        )}%;\r\n                background-size: ${round3Digits(bgW * 100.0)}% ${round3Digits(bgH * 100.0)}%;\r\n            \"></span>\r\n        `;\r\n    }\r\n}\r\n\r\nexport class RegularSprite extends BaseSprite {\r\n    constructor(sprite, w, h) {\r\n        super();\r\n        this.w = w;\r\n        this.h = h;\r\n        this.sprite = sprite;\r\n    }\r\n\r\n    getRawTexture() {\r\n        return this.sprite;\r\n    }\r\n\r\n    /**\r\n     * Draws the sprite, do *not* use this for sprites which are rendered! Only for drawing\r\n     * images into buffers\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     */\r\n    draw(context, x, y, w, h) {\r\n        assert(context, \"No context given\");\r\n        assert(x !== undefined, \"No x given\");\r\n        assert(y !== undefined, \"No y given\");\r\n        assert(w !== undefined, \"No width given\");\r\n        assert(h !== undefined, \"No height given\");\r\n        context.drawImage(this.sprite, x, y, w, h);\r\n    }\r\n\r\n    /**\r\n     * Draws the sprite, do *not* use this for sprites which are rendered! Only for drawing\r\n     * images into buffers\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} w\r\n     * @param {number} h\r\n     */\r\n    drawCentered(context, x, y, w, h) {\r\n        assert(context, \"No context given\");\r\n        assert(x !== undefined, \"No x given\");\r\n        assert(y !== undefined, \"No y given\");\r\n        assert(w !== undefined, \"No width given\");\r\n        assert(h !== undefined, \"No height given\");\r\n        context.drawImage(this.sprite, x - w / 2, y - h / 2, w, h);\r\n    }\r\n}\r\n","\r\n\r\nimport { GameState } from \"./game_state\";\r\nimport { createLogger } from \"./logging\";\r\nimport { APPLICATION_ERROR_OCCURED } from \"./error_handler\";\r\nimport { waitNextFrame, removeAllChildren } from \"./utils\";\r\n\r\nconst logger = createLogger(\"state_manager\");\r\n\r\n/**\r\n * This is the main state machine which drives the game states.\r\n */\r\nexport class StateManager {\r\n    /**\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        this.app = app;\r\n\r\n        /** @type {GameState} */\r\n        this.currentState = null;\r\n\r\n        /** @type {Object.<string, new() => GameState>} */\r\n        this.stateClasses = {};\r\n    }\r\n\r\n    /**\r\n     * Registers a new state class, should be a GameState derived class\r\n     * @param {object} stateClass\r\n     */\r\n    register(stateClass) {\r\n        // Create a dummy to retrieve the key\r\n        const dummy = new stateClass();\r\n        assert(dummy instanceof GameState, \"Not a state!\");\r\n        const key = dummy.getKey();\r\n        assert(!this.stateClasses[key], `State '${key}' is already registered!`);\r\n        this.stateClasses[key] = stateClass;\r\n    }\r\n\r\n    /**\r\n     * Constructs a new state or returns the instance from the cache\r\n     * @param {string} key\r\n     */\r\n    constructState(key) {\r\n        if (this.stateClasses[key]) {\r\n            return new this.stateClasses[key]();\r\n        }\r\n        assert(false, `State '${key}' is not known!`);\r\n    }\r\n\r\n    /**\r\n     * Moves to a given state\r\n     * @param {string} key State Key\r\n     */\r\n    moveToState(key, payload = {}) {\r\n        if (APPLICATION_ERROR_OCCURED) {\r\n            console.warn(\"Skipping state transition because of application crash\");\r\n            return;\r\n        }\r\n\r\n        if (this.currentState) {\r\n            if (key === this.currentState.getKey()) {\r\n                logger.error(`State '${key}' is already active!`);\r\n                return false;\r\n            }\r\n            this.currentState.internalLeaveCallback();\r\n\r\n            // Remove all references\r\n            for (const stateKey in this.currentState) {\r\n                if (this.currentState.hasOwnProperty(stateKey)) {\r\n                    delete this.currentState[stateKey];\r\n                }\r\n            }\r\n            this.currentState = null;\r\n        }\r\n\r\n        this.currentState = this.constructState(key);\r\n        this.currentState.internalRegisterCallback(this, this.app);\r\n\r\n        // Clean up old elements\r\n        removeAllChildren(document.body);\r\n\r\n        document.body.className = \"gameState \" + (this.currentState.getHasFadeIn() ? \"\" : \"arrived\");\r\n        document.body.id = \"state_\" + key;\r\n        document.body.innerHTML = this.currentState.internalGetFullHtml();\r\n\r\n        const dialogParent = document.createElement(\"div\");\r\n        dialogParent.classList.add(\"modalDialogParent\");\r\n        document.body.appendChild(dialogParent);\r\n\r\n        this.app.sound.playThemeMusic(this.currentState.getThemeMusic());\r\n\r\n        this.currentState.internalEnterCallback(payload);\r\n        this.currentState.onResized(this.app.screenWidth, this.app.screenHeight);\r\n\r\n        this.app.analytics.trackStateEnter(key);\r\n\r\n        window.history.pushState(\r\n            {\r\n                key,\r\n            },\r\n            key\r\n        );\r\n\r\n        waitNextFrame().then(() => {\r\n            document.body.classList.add(\"arrived\");\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns the current state\r\n     * @returns {GameState}\r\n     */\r\n    getCurrentState() {\r\n        return this.currentState;\r\n    }\r\n}\r\n","import { HUDModalDialogs } from \"../game/hud/parts/modal_dialogs\";\r\nimport { GameState } from \"./game_state\";\r\nimport { T } from \"../translations\";\r\n\r\n/**\r\n * Baseclass for all game states which are structured similary: A header with back button + some\r\n * scrollable content.\r\n */\r\nexport class TextualGameState extends GameState {\r\n    ///// INTERFACE ////\r\n\r\n    /**\r\n     * Should return the states inner html. If not overriden, will create a scrollable container\r\n     * with the content of getMainContentHTML()\r\n     * @returns {string}\r\n     */\r\n    getInnerHTML() {\r\n        return `\r\n            <div class=\"content mainContent\">\r\n                ${this.getMainContentHTML()}\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Should return the states HTML content.\r\n     */\r\n    getMainContentHTML() {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Should return the title of the game state. If null, no title and back button will\r\n     * get created\r\n     * @returns {string|null}\r\n     */\r\n    getStateHeaderTitle() {\r\n        return null;\r\n    }\r\n\r\n    /////////////\r\n\r\n    /**\r\n     * Back button handler, can be overridden. Per default it goes back to the main menu,\r\n     * or if coming from the game it moves back to the game again.\r\n     */\r\n    onBackButton() {\r\n        if (this.backToStateId) {\r\n            this.moveToState(this.backToStateId, this.backToStatePayload);\r\n        } else {\r\n            this.moveToState(this.getDefaultPreviousState());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the default state to go back to\r\n     */\r\n    getDefaultPreviousState() {\r\n        return \"MainMenuState\";\r\n    }\r\n\r\n    /**\r\n     * Goes to a new state, telling him to go back to this state later\r\n     * @param {string} stateId\r\n     */\r\n    moveToStateAddGoBack(stateId) {\r\n        this.moveToState(stateId, {\r\n            backToStateId: this.key,\r\n            backToStatePayload: {\r\n                backToStateId: this.backToStateId,\r\n                backToStatePayload: this.backToStatePayload,\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Removes all click detectors, except the one on the back button. Useful when regenerating\r\n     * content.\r\n     */\r\n    clearClickDetectorsExceptHeader() {\r\n        for (let i = 0; i < this.clickDetectors.length; ++i) {\r\n            const detector = this.clickDetectors[i];\r\n            if (detector.element === this.headerElement) {\r\n                continue;\r\n            }\r\n            detector.cleanup();\r\n            this.clickDetectors.splice(i, 1);\r\n            i -= 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Overrides the GameState implementation to provide our own html\r\n     */\r\n    internalGetFullHtml() {\r\n        let headerHtml = \"\";\r\n        if (this.getStateHeaderTitle()) {\r\n            headerHtml = `\r\n            <div class=\"headerBar\">\r\n            \r\n                <h1><button class=\"backButton\"></button> ${this.getStateHeaderTitle()}</h1>\r\n            </div>`;\r\n        }\r\n\r\n        return `\r\n            ${headerHtml}\r\n            <div class=\"container\">\r\n                    ${this.getInnerHTML()}\r\n\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    //// INTERNALS /////\r\n\r\n    /**\r\n     * Overrides the GameState leave callback to cleanup stuff\r\n     */\r\n    internalLeaveCallback() {\r\n        super.internalLeaveCallback();\r\n        this.dialogs.cleanup();\r\n    }\r\n\r\n    /**\r\n     * Overrides the GameState enter callback to setup required stuff\r\n     * @param {any} payload\r\n     */\r\n    internalEnterCallback(payload) {\r\n        super.internalEnterCallback(payload, false);\r\n        if (payload.backToStateId) {\r\n            this.backToStateId = payload.backToStateId;\r\n            this.backToStatePayload = payload.backToStatePayload;\r\n        }\r\n\r\n        this.htmlElement.classList.add(\"textualState\");\r\n        if (this.getStateHeaderTitle()) {\r\n            this.htmlElement.classList.add(\"hasTitle\");\r\n        }\r\n\r\n        this.containerElement = this.htmlElement.querySelector(\".widthKeeper .container\");\r\n        this.headerElement = this.htmlElement.querySelector(\".headerBar > h1\");\r\n\r\n        if (this.headerElement) {\r\n            this.trackClicks(this.headerElement, this.onBackButton);\r\n        }\r\n\r\n        this.dialogs = new HUDModalDialogs(null, this.app);\r\n        const dialogsElement = document.body.querySelector(\".modalDialogParent\");\r\n        this.dialogs.initializeToElement(dialogsElement);\r\n\r\n        this.onEnter(payload);\r\n    }\r\n}\r\n","export class TrackedState {\r\n    constructor(callbackMethod = null, callbackScope = null) {\r\n        this.lastSeenValue = null;\r\n\r\n        if (callbackMethod) {\r\n            this.callback = callbackMethod;\r\n            if (callbackScope) {\r\n                this.callback = this.callback.bind(callbackScope);\r\n            }\r\n        }\r\n    }\r\n\r\n    set(value, changeHandler = null, changeScope = null) {\r\n        if (value !== this.lastSeenValue) {\r\n            // Copy value since the changeHandler call could actually modify our lastSeenValue\r\n            const valueCopy = value;\r\n            this.lastSeenValue = value;\r\n            if (changeHandler) {\r\n                if (changeScope) {\r\n                    changeHandler.call(changeScope, valueCopy);\r\n                } else {\r\n                    changeHandler(valueCopy);\r\n                }\r\n            } else if (this.callback) {\r\n                this.callback(value);\r\n            } else {\r\n                assert(false, \"No callback specified\");\r\n            }\r\n        }\r\n    }\r\n\r\n    setSilent(value) {\r\n        this.lastSeenValue = value;\r\n    }\r\n\r\n    get() {\r\n        return this.lastSeenValue;\r\n    }\r\n}\r\n","import { globalConfig, IS_DEBUG } from \"./config\";\r\nimport { Vector } from \"./vector\";\r\nimport { T } from \"../translations\";\r\n\r\n// Constants\r\nexport const TOP = new Vector(0, -1);\r\nexport const RIGHT = new Vector(1, 0);\r\nexport const BOTTOM = new Vector(0, 1);\r\nexport const LEFT = new Vector(-1, 0);\r\nexport const ALL_DIRECTIONS = [TOP, RIGHT, BOTTOM, LEFT];\r\n\r\nconst bigNumberSuffixTranslationKeys = [\"thousands\", \"millions\", \"billions\", \"trillions\"];\r\n\r\n/**\r\n * Returns the build id\r\n * @returns {string}\r\n */\r\nexport function getBuildId() {\r\n    if (G_IS_DEV && IS_DEBUG) {\r\n        return \"local-dev\";\r\n    } else if (G_IS_DEV) {\r\n        return \"dev-\" + getPlatformName() + \"-\" + G_BUILD_COMMIT_HASH;\r\n    } else {\r\n        return \"prod-\" + getPlatformName() + \"-\" + G_BUILD_COMMIT_HASH;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns the environment id (dev, prod, etc)\r\n * @returns {string}\r\n */\r\nexport function getEnvironmentId() {\r\n    if (G_IS_DEV && IS_DEBUG) {\r\n        return \"local-dev\";\r\n    } else if (G_IS_DEV) {\r\n        return \"dev-\" + getPlatformName();\r\n    } else if (G_IS_RELEASE) {\r\n        return \"release-\" + getPlatformName();\r\n    } else {\r\n        return \"staging-\" + getPlatformName();\r\n    }\r\n}\r\n\r\n/**\r\n * Returns if this platform is android\r\n * @returns {boolean}\r\n */\r\nexport function isAndroid() {\r\n    if (!G_IS_MOBILE_APP) {\r\n        return false;\r\n    }\r\n    const platform = window.device.platform;\r\n    return platform === \"Android\" || platform === \"amazon-fireos\";\r\n}\r\n\r\n/**\r\n * Returns if this platform is iOs\r\n * @returns {boolean}\r\n */\r\nexport function isIos() {\r\n    if (!G_IS_MOBILE_APP) {\r\n        return false;\r\n    }\r\n    return window.device.platform === \"iOS\";\r\n}\r\n\r\n/**\r\n * Returns a platform name\r\n * @returns {string}\r\n */\r\nexport function getPlatformName() {\r\n    if (G_IS_STANDALONE) {\r\n        return \"standalone\";\r\n    } else if (G_IS_BROWSER) {\r\n        return \"browser\";\r\n    } else if (G_IS_MOBILE_APP && isAndroid()) {\r\n        return \"android\";\r\n    } else if (G_IS_MOBILE_APP && isIos()) {\r\n        return \"ios\";\r\n    }\r\n    return \"unknown\";\r\n}\r\n\r\n/**\r\n * Returns the IPC renderer, or null if not within the standalone\r\n * @returns {object|null}\r\n */\r\nlet ipcRenderer = null;\r\nexport function getIPCRenderer() {\r\n    if (!G_IS_STANDALONE) {\r\n        return null;\r\n    }\r\n    if (!ipcRenderer) {\r\n        ipcRenderer = eval(\"require\")(\"electron\").ipcRenderer;\r\n    }\r\n    return ipcRenderer;\r\n}\r\n\r\n/**\r\n * Formats a sensitive token by only displaying the first digits of it. Use for\r\n * stuff like savegame keys etc which should not appear in the log.\r\n * @param {string} key\r\n */\r\nexport function formatSensitive(key) {\r\n    if (!key) {\r\n        return \"<null>\";\r\n    }\r\n    key = key || \"\";\r\n    return \"[\" + key.substr(0, 8) + \"...]\";\r\n}\r\n\r\n/**\r\n * Creates a new 2D array with the given fill method\r\n * @param {number} w Width\r\n * @param {number} h Height\r\n * @param {(function(number, number) : any) | number | boolean | string | null | undefined} filler Either Fill method, which should return the content for each cell, or static content\r\n * @param {string=} context Optional context for memory tracking\r\n * @returns {Array<Array<any>>}\r\n */\r\nexport function make2DArray(w, h, filler, context = null) {\r\n    if (typeof filler === \"function\") {\r\n        const tiles = new Array(w);\r\n        for (let x = 0; x < w; ++x) {\r\n            const row = new Array(h);\r\n            for (let y = 0; y < h; ++y) {\r\n                row[y] = filler(x, y);\r\n            }\r\n            tiles[x] = row;\r\n        }\r\n        return tiles;\r\n    } else {\r\n        const tiles = new Array(w);\r\n        const row = new Array(h);\r\n        for (let y = 0; y < h; ++y) {\r\n            row[y] = filler;\r\n        }\r\n\r\n        for (let x = 0; x < w; ++x) {\r\n            tiles[x] = row.slice();\r\n        }\r\n        return tiles;\r\n    }\r\n}\r\n\r\n/**\r\n * Makes a new 2D array with undefined contents\r\n * @param {number} w\r\n * @param {number} h\r\n * @param {string=} context\r\n * @returns {Array<Array<any>>}\r\n */\r\nexport function make2DUndefinedArray(w, h, context = null) {\r\n    const result = new Array(w);\r\n    for (let x = 0; x < w; ++x) {\r\n        result[x] = new Array(h);\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Clears a given 2D array with the given fill method\r\n * @param {Array<Array<any>>} array\r\n * @param {number} w Width\r\n * @param {number} h Height\r\n * @param {(function(number, number) : any) | number | boolean | string | null | undefined} filler Either Fill method, which should return the content for each cell, or static content\r\n */\r\nexport function clear2DArray(array, w, h, filler) {\r\n    assert(array.length === w, \"Array dims mismatch w\");\r\n    assert(array[0].length === h, \"Array dims mismatch h\");\r\n    if (typeof filler === \"function\") {\r\n        for (let x = 0; x < w; ++x) {\r\n            const row = array[x];\r\n            for (let y = 0; y < h; ++y) {\r\n                row[y] = filler(x, y);\r\n            }\r\n        }\r\n    } else {\r\n        for (let x = 0; x < w; ++x) {\r\n            const row = array[x];\r\n            for (let y = 0; y < h; ++y) {\r\n                row[y] = filler;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a new map (an empty object without any props)\r\n */\r\nexport function newEmptyMap() {\r\n    return Object.create(null);\r\n}\r\n\r\n/**\r\n * Returns a random integer in the range [start,end]\r\n * @param {number} start\r\n * @param {number} end\r\n */\r\nexport function randomInt(start, end) {\r\n    return start + Math.round(Math.random() * (end - start));\r\n}\r\n\r\n/**\r\n * Access an object in a very annoying way, used for obsfuscation.\r\n * @param {any} obj\r\n * @param {Array<string>} keys\r\n */\r\nexport function accessNestedPropertyReverse(obj, keys) {\r\n    let result = obj;\r\n    for (let i = keys.length - 1; i >= 0; --i) {\r\n        result = result[keys[i]];\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Chooses a random entry of an array\r\n * @param {Array | string} arr\r\n */\r\nexport function randomChoice(arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\n/**\r\n * Deletes from an array by swapping with the last element\r\n * @param {Array<any>} array\r\n * @param {number} index\r\n */\r\nexport function fastArrayDelete(array, index) {\r\n    if (index < 0 || index >= array.length) {\r\n        throw new Error(\"Out of bounds\");\r\n    }\r\n    // When the element is not the last element\r\n    if (index !== array.length - 1) {\r\n        // Get the last element, and swap it with the one we want to delete\r\n        const last = array[array.length - 1];\r\n        array[index] = last;\r\n    }\r\n\r\n    // Finally remove the last element\r\n    array.length -= 1;\r\n}\r\n\r\n/**\r\n * Deletes from an array by swapping with the last element. Searches\r\n * for the value in the array first\r\n * @param {Array<any>} array\r\n * @param {any} value\r\n */\r\nexport function fastArrayDeleteValue(array, value) {\r\n    if (array == null) {\r\n        throw new Error(\"Tried to delete from non array!\");\r\n    }\r\n    const index = array.indexOf(value);\r\n    if (index < 0) {\r\n        console.error(\"Value\", value, \"not contained in array:\", array, \"!\");\r\n        return value;\r\n    }\r\n    return fastArrayDelete(array, index);\r\n}\r\n\r\n/**\r\n * @see fastArrayDeleteValue\r\n * @param {Array<any>} array\r\n * @param {any} value\r\n */\r\nexport function fastArrayDeleteValueIfContained(array, value) {\r\n    if (array == null) {\r\n        throw new Error(\"Tried to delete from non array!\");\r\n    }\r\n    const index = array.indexOf(value);\r\n    if (index < 0) {\r\n        return value;\r\n    }\r\n    return fastArrayDelete(array, index);\r\n}\r\n\r\n/**\r\n * Deletes from an array at the given index\r\n * @param {Array<any>} array\r\n * @param {number} index\r\n */\r\nexport function arrayDelete(array, index) {\r\n    if (index < 0 || index >= array.length) {\r\n        throw new Error(\"Out of bounds\");\r\n    }\r\n    array.splice(index, 1);\r\n}\r\n\r\n/**\r\n * Deletes the given value from an array\r\n * @param {Array<any>} array\r\n * @param {any} value\r\n */\r\nexport function arrayDeleteValue(array, value) {\r\n    if (array == null) {\r\n        throw new Error(\"Tried to delete from non array!\");\r\n    }\r\n    const index = array.indexOf(value);\r\n    if (index < 0) {\r\n        console.error(\"Value\", value, \"not contained in array:\", array, \"!\");\r\n        return value;\r\n    }\r\n    return arrayDelete(array, index);\r\n}\r\n\r\n// Converts a direction into a 0 .. 7 index\r\n/**\r\n * Converts a direction into a index from 0 .. 7, used for miners, zombies etc which have 8 sprites\r\n * @param {Vector} offset direction\r\n * @param {boolean} inverse if inverse, the direction is reversed\r\n * @returns {number} in range [0, 7]\r\n */\r\nexport function angleToSpriteIndex(offset, inverse = false) {\r\n    const twoPi = 2.0 * Math.PI;\r\n    const factor = inverse ? -1 : 1;\r\n    const offs = inverse ? 2.5 : 3.5;\r\n    const angle = (factor * Math.atan2(offset.y, offset.x) + offs * Math.PI) % twoPi;\r\n\r\n    const index = Math.round((angle / twoPi) * 8) % 8;\r\n    return index;\r\n}\r\n\r\n/**\r\n * Compare two floats for epsilon equality\r\n * @param {number} a\r\n * @param {number} b\r\n * @returns {boolean}\r\n */\r\nexport function epsilonCompare(a, b, epsilon = 1e-5) {\r\n    return Math.abs(a - b) < epsilon;\r\n}\r\n\r\n/**\r\n * Compare a float for epsilon equal to 0\r\n * @param {number} a\r\n * @returns {boolean}\r\n */\r\nexport function epsilonIsZero(a) {\r\n    return epsilonCompare(a, 0);\r\n}\r\n\r\n/**\r\n * Interpolates two numbers\r\n * @param {number} a\r\n * @param {number} b\r\n * @param {number} x Mix factor, 0 means 100% a, 1 means 100%b, rest is interpolated\r\n */\r\nexport function lerp(a, b, x) {\r\n    return a * (1 - x) + b * x;\r\n}\r\n\r\n/**\r\n * Finds a value which is nice to display, e.g. 15669 -> 15000. Also handles fractional stuff\r\n * @param {number} num\r\n */\r\nexport function findNiceValue(num) {\r\n    if (num > 1e8) {\r\n        return num;\r\n    }\r\n    if (num < 0.00001) {\r\n        return 0;\r\n    }\r\n\r\n    let roundAmount = 1;\r\n    if (num > 50000) {\r\n        roundAmount = 10000;\r\n    } else if (num > 20000) {\r\n        roundAmount = 5000;\r\n    } else if (num > 5000) {\r\n        roundAmount = 1000;\r\n    } else if (num > 2000) {\r\n        roundAmount = 500;\r\n    } else if (num > 1000) {\r\n        roundAmount = 100;\r\n    } else if (num > 100) {\r\n        roundAmount = 20;\r\n    } else if (num > 20) {\r\n        roundAmount = 5;\r\n    }\r\n\r\n    const niceValue = Math.floor(num / roundAmount) * roundAmount;\r\n    if (num >= 10) {\r\n        return Math.round(niceValue);\r\n    }\r\n    if (num >= 1) {\r\n        return Math.round(niceValue * 10) / 10;\r\n    }\r\n\r\n    return Math.round(niceValue * 100) / 100;\r\n}\r\n\r\n/**\r\n * Finds a nice integer value\r\n * @see findNiceValue\r\n * @param {number} num\r\n */\r\nexport function findNiceIntegerValue(num) {\r\n    return Math.ceil(findNiceValue(num));\r\n}\r\n\r\n/**\r\n * Smart rounding + fractional handling\r\n * @param {number} n\r\n */\r\nfunction roundSmart(n) {\r\n    if (n < 100) {\r\n        return n.toFixed(1);\r\n    }\r\n    return Math.round(n);\r\n}\r\n\r\n/**\r\n * Formats a big number\r\n * @param {number} num\r\n * @param {string=} separator The decimal separator for numbers like 50.1 (separator='.')\r\n * @returns {string}\r\n */\r\nexport function formatBigNumber(num, separator = T.global.decimalSeparator) {\r\n    const sign = num < 0 ? \"-\" : \"\";\r\n    num = Math.abs(num);\r\n\r\n    if (num > 1e54) {\r\n        return sign + T.global.infinite;\r\n    }\r\n\r\n    if (num < 10 && !Number.isInteger(num)) {\r\n        return sign + num.toFixed(2);\r\n    }\r\n    if (num < 50 && !Number.isInteger(num)) {\r\n        return sign + num.toFixed(1);\r\n    }\r\n    num = Math.floor(num);\r\n\r\n    if (num < 1000) {\r\n        return sign + \"\" + num;\r\n    } else {\r\n        let leadingDigits = num;\r\n        let suffix = \"\";\r\n        for (let suffixIndex = 0; suffixIndex < bigNumberSuffixTranslationKeys.length; ++suffixIndex) {\r\n            leadingDigits = leadingDigits / 1000;\r\n            suffix = T.global.suffix[bigNumberSuffixTranslationKeys[suffixIndex]];\r\n            if (leadingDigits < 1000) {\r\n                break;\r\n            }\r\n        }\r\n        const leadingDigitsRounded = round1Digit(leadingDigits);\r\n        const leadingDigitsNoTrailingDecimal = leadingDigitsRounded\r\n            .toString()\r\n            .replace(\".0\", \"\")\r\n            .replace(\".\", separator);\r\n        return sign + leadingDigitsNoTrailingDecimal + suffix;\r\n    }\r\n}\r\n\r\n/**\r\n * Formats a big number, but does not add any suffix and instead uses its full representation\r\n * @param {number} num\r\n * @param {string=} divider The divider for numbers like 50,000 (divider=',')\r\n * @returns {string}\r\n */\r\nexport function formatBigNumberFull(num, divider = T.global.thousandsDivider) {\r\n    if (num < 1000) {\r\n        return num + \"\";\r\n    }\r\n    if (num > 1e54) {\r\n        return T.global.infinite;\r\n    }\r\n    let rest = num;\r\n    let out = \"\";\r\n    while (rest >= 1000) {\r\n        out = (rest % 1000).toString().padStart(3, \"0\") + divider + out;\r\n        rest = Math.floor(rest / 1000);\r\n    }\r\n    out = rest + divider + out;\r\n\r\n    return out.substring(0, out.length - 1);\r\n}\r\n\r\n/**\r\n * Delayes a promise so that it will resolve after a *minimum* amount of time only\r\n * @param {Promise<any>} promise The promise to delay\r\n * @param {number} minTimeMs The time to make it run at least\r\n * @returns {Promise<any>} The delayed promise\r\n */\r\nexport function artificialDelayedPromise(promise, minTimeMs = 500) {\r\n    if (G_IS_DEV && globalConfig.debug.noArtificialDelays) {\r\n        return promise;\r\n    }\r\n\r\n    const startTime = performance.now();\r\n    return promise.then(\r\n        result => {\r\n            const timeTaken = performance.now() - startTime;\r\n            const waitTime = Math.floor(minTimeMs - timeTaken);\r\n            if (waitTime > 0) {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        resolve(result);\r\n                    }, waitTime);\r\n                });\r\n            } else {\r\n                return result;\r\n            }\r\n        },\r\n        error => {\r\n            const timeTaken = performance.now() - startTime;\r\n            const waitTime = Math.floor(minTimeMs - timeTaken);\r\n            if (waitTime > 0) {\r\n                // @ts-ignore\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(() => {\r\n                        reject(error);\r\n                    }, waitTime);\r\n                });\r\n            } else {\r\n                throw error;\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\n/**\r\n * Computes a sine-based animation which pulsates from 0 .. 1 .. 0\r\n * @param {number} time Current time in seconds\r\n * @param {number} duration Duration of the full pulse in seconds\r\n * @param {number} seed Seed to offset the animation\r\n */\r\nexport function pulseAnimation(time, duration = 1.0, seed = 0.0) {\r\n    return Math.sin((time * Math.PI * 2.0) / duration + seed * 5642.86729349) * 0.5 + 0.5;\r\n}\r\n\r\n/**\r\n * Returns the smallest angle between two angles\r\n * @param {number} a\r\n * @param {number} b\r\n * @returns {number} 0 .. 2 PI\r\n */\r\nexport function smallestAngle(a, b) {\r\n    return safeMod(a - b + Math.PI, 2.0 * Math.PI) - Math.PI;\r\n}\r\n\r\n/**\r\n * Modulo which works for negative numbers\r\n * @param {number} n\r\n * @param {number} m\r\n */\r\nexport function safeMod(n, m) {\r\n    return ((n % m) + m) % m;\r\n}\r\n\r\n/**\r\n * Wraps an angle between 0 and 2 pi\r\n * @param {number} angle\r\n */\r\nexport function wrapAngle(angle) {\r\n    return safeMod(angle, 2.0 * Math.PI);\r\n}\r\n\r\n/**\r\n * Waits two frames so the ui is updated\r\n * @returns {Promise<void>}\r\n */\r\nexport function waitNextFrame() {\r\n    return new Promise(function (resolve, reject) {\r\n        window.requestAnimationFrame(function () {\r\n            window.requestAnimationFrame(function () {\r\n                resolve();\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Rounds 1 digit\r\n * @param {number} n\r\n * @returns {number}\r\n */\r\nexport function round1Digit(n) {\r\n    return Math.floor(n * 10.0) / 10.0;\r\n}\r\n\r\n/**\r\n * Rounds 2 digits\r\n * @param {number} n\r\n * @returns {number}\r\n */\r\nexport function round2Digits(n) {\r\n    return Math.floor(n * 100.0) / 100.0;\r\n}\r\n\r\n/**\r\n * Rounds 3 digits\r\n * @param {number} n\r\n * @returns {number}\r\n */\r\nexport function round3Digits(n) {\r\n    return Math.floor(n * 1000.0) / 1000.0;\r\n}\r\n\r\n/**\r\n * Rounds 4 digits\r\n * @param {number} n\r\n * @returns {number}\r\n */\r\nexport function round4Digits(n) {\r\n    return Math.floor(n * 10000.0) / 10000.0;\r\n}\r\n\r\n/**\r\n * Clamps a value between [min, max]\r\n * @param {number} v\r\n * @param {number=} minimum Default 0\r\n * @param {number=} maximum Default 1\r\n */\r\nexport function clamp(v, minimum = 0, maximum = 1) {\r\n    return Math.max(minimum, Math.min(maximum, v));\r\n}\r\n\r\n/**\r\n * Measures how long a function took\r\n * @param {string} name\r\n * @param {function():void} target\r\n */\r\nexport function measure(name, target) {\r\n    const now = performance.now();\r\n    for (let i = 0; i < 25; ++i) {\r\n        target();\r\n    }\r\n    const dur = (performance.now() - now) / 25.0;\r\n    console.warn(\"->\", name, \"took\", dur.toFixed(2), \"ms\");\r\n}\r\n\r\n/**\r\n * Helper method to create a new div element\r\n * @param {string=} id\r\n * @param {Array<string>=} classes\r\n * @param {string=} innerHTML\r\n */\r\nexport function makeDivElement(id = null, classes = [], innerHTML = \"\") {\r\n    const div = document.createElement(\"div\");\r\n    if (id) {\r\n        div.id = id;\r\n    }\r\n    for (let i = 0; i < classes.length; ++i) {\r\n        div.classList.add(classes[i]);\r\n    }\r\n    div.innerHTML = innerHTML;\r\n    return div;\r\n}\r\n\r\n/**\r\n * Helper method to create a new div\r\n * @param {Element} parent\r\n * @param {string=} id\r\n * @param {Array<string>=} classes\r\n * @param {string=} innerHTML\r\n */\r\nexport function makeDiv(parent, id = null, classes = [], innerHTML = \"\") {\r\n    const div = makeDivElement(id, classes, innerHTML);\r\n    parent.appendChild(div);\r\n    return div;\r\n}\r\n\r\n/**\r\n * Helper method to create a new div and place before reference Node\r\n * @param {Element} parent\r\n * @param {Element} referenceNode\r\n * @param {string=} id\r\n * @param {Array<string>=} classes\r\n * @param {string=} innerHTML\r\n */\r\nexport function makeDivBefore(parent, referenceNode, id = null, classes = [], innerHTML = \"\") {\r\n    const div = makeDivElement(id, classes, innerHTML);\r\n    parent.insertBefore(div, referenceNode);\r\n    return div;\r\n}\r\n\r\n/**\r\n * Helper method to create a new button element\r\n * @param {Array<string>=} classes\r\n * @param {string=} innerHTML\r\n */\r\nexport function makeButtonElement(classes = [], innerHTML = \"\") {\r\n    const element = document.createElement(\"button\");\r\n    for (let i = 0; i < classes.length; ++i) {\r\n        element.classList.add(classes[i]);\r\n    }\r\n    element.classList.add(\"styledButton\");\r\n    element.innerHTML = innerHTML;\r\n    return element;\r\n}\r\n\r\n/**\r\n * Helper method to create a new button\r\n * @param {Element} parent\r\n * @param {Array<string>=} classes\r\n * @param {string=} innerHTML\r\n */\r\nexport function makeButton(parent, classes = [], innerHTML = \"\") {\r\n    const element = makeButtonElement(classes, innerHTML);\r\n    parent.appendChild(element);\r\n    return element;\r\n}\r\n\r\n/**\r\n * Helper method to create a new button and place before reference Node\r\n * @param {Element} parent\r\n * @param {Element} referenceNode\r\n * @param {Array<string>=} classes\r\n * @param {string=} innerHTML\r\n */\r\nexport function makeButtonBefore(parent, referenceNode, classes = [], innerHTML = \"\") {\r\n    const element = makeButtonElement(classes, innerHTML);\r\n    parent.insertBefore(element, referenceNode);\r\n    return element;\r\n}\r\n\r\n/**\r\n * Removes all children of the given element\r\n * @param {Element} elem\r\n */\r\nexport function removeAllChildren(elem) {\r\n    if (elem) {\r\n        var range = document.createRange();\r\n        range.selectNodeContents(elem);\r\n        range.deleteContents();\r\n    }\r\n}\r\n\r\nexport function smartFadeNumber(current, newOne, minFade = 0.01, maxFade = 0.9) {\r\n    const tolerance = Math.min(current, newOne) * 0.5 + 10;\r\n    let fade = minFade;\r\n    if (Math.abs(current - newOne) < tolerance) {\r\n        fade = maxFade;\r\n    }\r\n\r\n    return current * fade + newOne * (1 - fade);\r\n}\r\n\r\n/**\r\n * Fixes lockstep simulation by converting times like 34.0000000003 to 34.00.\r\n * We use 3 digits of precision, this allows to store sufficient precision of 1 ms without\r\n * the risk to simulation errors due to resync issues\r\n * @param {number} value\r\n */\r\nexport function quantizeFloat(value) {\r\n    return Math.round(value * 100000.0) / 100000.0;\r\n}\r\n\r\n/**\r\n * Safe check to check if a timer is expired. quantizes numbers\r\n * @param {number} now Current time\r\n * @param {number} lastTick Last tick of the timer\r\n * @param {number} tickRate Interval of the timer\r\n */\r\nexport function checkTimerExpired(now, lastTick, tickRate) {\r\n    if (G_IS_DEV) {\r\n        if (quantizeFloat(now) !== now) {\r\n            console.error(\"Got non-quantizied time:\" + now + \" vs \" + quantizeFloat(now));\r\n            now = quantizeFloat(now);\r\n        }\r\n        if (quantizeFloat(lastTick) !== lastTick) {\r\n            // FIXME: REENABLE\r\n            // console.error(\"Got non-quantizied timer:\" + lastTick + \" vs \" + quantizeFloat(lastTick));\r\n            lastTick = quantizeFloat(lastTick);\r\n        }\r\n    } else {\r\n        // just to be safe\r\n        now = quantizeFloat(now);\r\n        lastTick = quantizeFloat(lastTick);\r\n    }\r\n    /*\r\n    Ok, so heres the issue (Died a bit while debugging it):\r\n\r\n    In multiplayer lockstep simulation, client A will simulate everything at T, but client B\r\n    will simulate it at T + 3. So we are running into the following precision issue:\r\n    Lets say on client A the time is T = 30. Then on clientB the time is T = 33.\r\n    Now, our timer takes 0.1 seconds and ticked at 29.90 - What does happen now?\r\n    Client A computes the timer and checks T > lastTick + interval. He computes\r\n\r\n    30 >= 29.90 + 0.1   <=> 30 >= 30.0000  <=> True  <=> Tick performed\r\n\r\n    However, this is what it looks on client B:\r\n\r\n    33 >= 32.90 + 0.1   <=> 33 >= 32.999999999999998 <=> False <=> No tick performed!\r\n\r\n    This means that Client B will only tick at the *next* frame, which means it from now is out\r\n    of sync by one tick, which means the game will resync further or later and be not able to recover,\r\n    since it will run into the same issue over and over.\r\n    */\r\n\r\n    // The next tick, in our example it would be 30.0000 / 32.99999999998. In order to fix it, we quantize\r\n    // it, so its now 30.0000 / 33.0000\r\n    const nextTick = quantizeFloat(lastTick + tickRate);\r\n\r\n    // This check is safe, but its the only check where you may compare times. You always need to use\r\n    // this method!\r\n    return now >= nextTick;\r\n}\r\n\r\n/**\r\n * Returns if the game supports this browser\r\n */\r\nexport function isSupportedBrowser() {\r\n    // please note,\r\n    // that IE11 now returns undefined again for window.chrome\r\n    // and new Opera 30 outputs true for window.chrome\r\n    // but needs to check if window.opr is not undefined\r\n    // and new IE Edge outputs to true now for window.chrome\r\n    // and if not iOS Chrome check\r\n    // so use the below updated condition\r\n\r\n    if (G_IS_MOBILE_APP || G_IS_STANDALONE) {\r\n        return true;\r\n    }\r\n\r\n    // @ts-ignore\r\n    var isChromium = window.chrome;\r\n    var winNav = window.navigator;\r\n    var vendorName = winNav.vendor;\r\n    // @ts-ignore\r\n    var isIEedge = winNav.userAgent.indexOf(\"Edge\") > -1;\r\n    var isIOSChrome = winNav.userAgent.match(\"CriOS\");\r\n\r\n    if (isIOSChrome) {\r\n        // is Google Chrome on IOS\r\n        return false;\r\n    } else if (\r\n        isChromium !== null &&\r\n        typeof isChromium !== \"undefined\" &&\r\n        vendorName === \"Google Inc.\" &&\r\n        isIEedge === false\r\n    ) {\r\n        // is Google Chrome\r\n        return true;\r\n    } else {\r\n        // not Google Chrome\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * Helper function to create a json schema object\r\n * @param {any} properties\r\n */\r\nexport function schemaObject(properties) {\r\n    return {\r\n        type: \"object\",\r\n        required: Object.keys(properties).slice(),\r\n        additionalProperties: false,\r\n        properties,\r\n    };\r\n}\r\n\r\n/**\r\n * Quickly\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} deg\r\n * @returns {Vector}\r\n */\r\nexport function fastRotateMultipleOf90(x, y, deg) {\r\n    switch (deg) {\r\n        case 0: {\r\n            return new Vector(x, y);\r\n        }\r\n        case 90: {\r\n            return new Vector(x, y);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Formats an amount of seconds into something like \"5s ago\"\r\n * @param {number} secs Seconds\r\n * @returns {string}\r\n */\r\nexport function formatSecondsToTimeAgo(secs) {\r\n    const seconds = Math.floor(secs);\r\n    const minutes = Math.floor(seconds / 60);\r\n    const hours = Math.floor(minutes / 60);\r\n    const days = Math.floor(hours / 24);\r\n\r\n    if (seconds < 60) {\r\n        if (seconds === 1) {\r\n            return T.global.time.oneSecondAgo;\r\n        }\r\n        return T.global.time.xSecondsAgo.replace(\"<x>\", \"\" + seconds);\r\n    } else if (minutes < 60) {\r\n        if (minutes === 1) {\r\n            return T.global.time.oneMinuteAgo;\r\n        }\r\n        return T.global.time.xMinutesAgo.replace(\"<x>\", \"\" + minutes);\r\n    } else if (hours < 24) {\r\n        if (hours === 1) {\r\n            return T.global.time.oneHourAgo;\r\n        }\r\n        return T.global.time.xHoursAgo.replace(\"<x>\", \"\" + hours);\r\n    } else {\r\n        if (days === 1) {\r\n            return T.global.time.oneDayAgo;\r\n        }\r\n        return T.global.time.xDaysAgo.replace(\"<x>\", \"\" + days);\r\n    }\r\n}\r\n\r\n/**\r\n * Formats seconds into a readable string like \"5h 23m\"\r\n * @param {number} secs Seconds\r\n * @returns {string}\r\n */\r\nexport function formatSeconds(secs) {\r\n    const trans = T.global.time;\r\n    secs = Math.ceil(secs);\r\n    if (secs < 60) {\r\n        return trans.secondsShort.replace(\"<seconds>\", \"\" + secs);\r\n    } else if (secs < 60 * 60) {\r\n        const minutes = Math.floor(secs / 60);\r\n        const seconds = secs % 60;\r\n        return trans.minutesAndSecondsShort\r\n            .replace(\"<seconds>\", \"\" + seconds)\r\n            .replace(\"<minutes>\", \"\" + minutes);\r\n    } else {\r\n        const hours = Math.floor(secs / 3600);\r\n        const minutes = Math.floor(secs / 60) % 60;\r\n        return trans.hoursAndMinutesShort.replace(\"<minutes>\", \"\" + minutes).replace(\"<hours>\", \"\" + hours);\r\n    }\r\n}\r\n\r\n/**\r\n * Generates a file download\r\n * @param {string} filename\r\n * @param {string} text\r\n */\r\nexport function generateFileDownload(filename, text) {\r\n    var element = document.createElement(\"a\");\r\n    element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\r\n    element.setAttribute(\"download\", filename);\r\n\r\n    element.style.display = \"none\";\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n    document.body.removeChild(element);\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter\r\n * @param {string} str\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    return str.substr(0, 1).toUpperCase() + str.substr(1).toLowerCase();\r\n}\r\n\r\n/**\r\n * Formats a number like 2.5 to \"2.5 items / s\"\r\n * @param {number} speed\r\n * @param {boolean=} double\r\n * @param {string=} separator The decimal separator for numbers like 50.1 (separator='.')\r\n */\r\nexport function formatItemsPerSecond(speed, double = false, separator = T.global.decimalSeparator) {\r\n    return speed === 1.0\r\n        ? T.ingame.buildingPlacement.infoTexts.oneItemPerSecond\r\n        : T.ingame.buildingPlacement.infoTexts.itemsPerSecond.replace(\r\n              \"<x>\",\r\n              round2Digits(speed).toString().replace(\".\", separator)\r\n          ) + (double ? \"  \" + T.ingame.buildingPlacement.infoTexts.itemsPerSecondDouble : \"\");\r\n}\r\n","import { globalConfig } from \"./config\";\r\n\r\nconst tileSize = globalConfig.tileSize;\r\nconst halfTileSize = globalConfig.halfTileSize;\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const enumDirection = {\r\n    top: \"top\",\r\n    right: \"right\",\r\n    bottom: \"bottom\",\r\n    left: \"left\",\r\n};\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const enumInvertedDirections = {\r\n    [enumDirection.top]: enumDirection.bottom,\r\n    [enumDirection.right]: enumDirection.left,\r\n    [enumDirection.bottom]: enumDirection.top,\r\n    [enumDirection.left]: enumDirection.right,\r\n};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport const enumDirectionToAngle = {\r\n    [enumDirection.top]: 0,\r\n    [enumDirection.right]: 90,\r\n    [enumDirection.bottom]: 180,\r\n    [enumDirection.left]: 270,\r\n};\r\n\r\n/**\r\n * @enum {enumDirection}\r\n */\r\nexport const enumAngleToDirection = {\r\n    0: enumDirection.top,\r\n    90: enumDirection.right,\r\n    180: enumDirection.bottom,\r\n    270: enumDirection.left,\r\n};\r\n\r\nexport class Vector {\r\n    /**\r\n     *\r\n     * @param {number=} x\r\n     * @param {number=} y\r\n     */\r\n    constructor(x, y) {\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n    }\r\n\r\n    /**\r\n     * return a copy of the vector\r\n     * @returns {Vector}\r\n     */\r\n    copy() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    /**\r\n     * Adds a vector and return a new vector\r\n     * @param {Vector} other\r\n     * @returns {Vector}\r\n     */\r\n    add(other) {\r\n        return new Vector(this.x + other.x, this.y + other.y);\r\n    }\r\n\r\n    /**\r\n     * Adds a vector\r\n     * @param {Vector} other\r\n     * @returns {Vector}\r\n     */\r\n    addInplace(other) {\r\n        this.x += other.x;\r\n        this.y += other.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Substracts a vector and return a new vector\r\n     * @param {Vector} other\r\n     * @returns {Vector}\r\n     */\r\n    sub(other) {\r\n        return new Vector(this.x - other.x, this.y - other.y);\r\n    }\r\n\r\n    /**\r\n     * Subs a vector\r\n     * @param {Vector} other\r\n     * @returns {Vector}\r\n     */\r\n    subInplace(other) {\r\n        this.x -= other.x;\r\n        this.y -= other.y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiplies with a vector and return a new vector\r\n     * @param {Vector} other\r\n     * @returns {Vector}\r\n     */\r\n    mul(other) {\r\n        return new Vector(this.x * other.x, this.y * other.y);\r\n    }\r\n\r\n    /**\r\n     * Adds two scalars and return a new vector\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {Vector}\r\n     */\r\n    addScalars(x, y) {\r\n        return new Vector(this.x + x, this.y + y);\r\n    }\r\n\r\n    /**\r\n     * Substracts a scalar and return a new vector\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    subScalar(f) {\r\n        return new Vector(this.x - f, this.y - f);\r\n    }\r\n\r\n    /**\r\n     * Substracts two scalars and return a new vector\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {Vector}\r\n     */\r\n    subScalars(x, y) {\r\n        return new Vector(this.x - x, this.y - y);\r\n    }\r\n\r\n    /**\r\n     * Returns the euclidian length\r\n     * @returns {number}\r\n     */\r\n    length() {\r\n        return Math.hypot(this.x, this.y);\r\n    }\r\n\r\n    /**\r\n     * Returns the square length\r\n     * @returns {number}\r\n     */\r\n    lengthSquare() {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n\r\n    /**\r\n     * Divides both components by a scalar and return a new vector\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    divideScalar(f) {\r\n        return new Vector(this.x / f, this.y / f);\r\n    }\r\n\r\n    /**\r\n     * Divides both components by the given scalars and return a new vector\r\n     * @param {number} a\r\n     * @param {number} b\r\n     * @returns {Vector}\r\n     */\r\n    divideScalars(a, b) {\r\n        return new Vector(this.x / a, this.y / b);\r\n    }\r\n\r\n    /**\r\n     * Divides both components by a scalar\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    divideScalarInplace(f) {\r\n        this.x /= f;\r\n        this.y /= f;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Multiplies both components with a scalar and return a new vector\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    multiplyScalar(f) {\r\n        return new Vector(this.x * f, this.y * f);\r\n    }\r\n\r\n    /**\r\n     * Multiplies both components with two scalars and returns a new vector\r\n     * @param {number} a\r\n     * @param {number} b\r\n     * @returns {Vector}\r\n     */\r\n    multiplyScalars(a, b) {\r\n        return new Vector(this.x * a, this.y * b);\r\n    }\r\n\r\n    /**\r\n     * For both components, compute the maximum of each component and the given scalar, and return a new vector.\r\n     * For example:\r\n     *   - new Vector(-1, 5).maxScalar(0) -> Vector(0, 5)\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    maxScalar(f) {\r\n        return new Vector(Math.max(f, this.x), Math.max(f, this.y));\r\n    }\r\n\r\n    /**\r\n     * Adds a scalar to both components and return a new vector\r\n     * @param {number} f\r\n     * @returns {Vector}\r\n     */\r\n    addScalar(f) {\r\n        return new Vector(this.x + f, this.y + f);\r\n    }\r\n\r\n    /**\r\n     * Computes the component wise minimum and return a new vector\r\n     * @param {Vector} v\r\n     * @returns {Vector}\r\n     */\r\n    min(v) {\r\n        return new Vector(Math.min(v.x, this.x), Math.min(v.y, this.y));\r\n    }\r\n\r\n    /**\r\n     * Computes the component wise maximum and return a new vector\r\n     * @param {Vector} v\r\n     * @returns {Vector}\r\n     */\r\n    max(v) {\r\n        return new Vector(Math.max(v.x, this.x), Math.max(v.y, this.y));\r\n    }\r\n    /**\r\n     * Computes the component wise absolute\r\n     * @returns {Vector}\r\n     */\r\n    abs() {\r\n        return new Vector(Math.abs(this.x), Math.abs(this.y));\r\n    }\r\n\r\n    /**\r\n     * Computes the scalar product\r\n     * @param {Vector} v\r\n     * @returns {number}\r\n     */\r\n    dot(v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n\r\n    /**\r\n     * Computes the distance to a given vector\r\n     * @param {Vector} v\r\n     * @returns {number}\r\n     */\r\n    distance(v) {\r\n        return Math.hypot(this.x - v.x, this.y - v.y);\r\n    }\r\n\r\n    /**\r\n     * Computes the square distance to a given vectort\r\n     * @param {Vector} v\r\n     * @returns {number}\r\n     */\r\n    distanceSquare(v) {\r\n        const dx = this.x - v.x;\r\n        const dy = this.y - v.y;\r\n        return dx * dx + dy * dy;\r\n    }\r\n\r\n    /**\r\n     * Computes and returns the center between both points\r\n     * @param {Vector} v\r\n     * @returns {Vector}\r\n     */\r\n    centerPoint(v) {\r\n        const cx = this.x + v.x;\r\n        const cy = this.y + v.y;\r\n        return new Vector(cx / 2, cy / 2);\r\n    }\r\n\r\n    /**\r\n     * Computes componentwise floor and returns a new vector\r\n     * @returns {Vector}\r\n     */\r\n    floor() {\r\n        return new Vector(Math.floor(this.x), Math.floor(this.y));\r\n    }\r\n\r\n    /**\r\n     * Computes componentwise ceil and returns a new vector\r\n     * @returns {Vector}\r\n     */\r\n    ceil() {\r\n        return new Vector(Math.ceil(this.x), Math.ceil(this.y));\r\n    }\r\n\r\n    /**\r\n     * Computes componentwise round and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    round() {\r\n        return new Vector(Math.round(this.x), Math.round(this.y));\r\n    }\r\n\r\n    /**\r\n     * Converts this vector from world to tile space and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    toTileSpace() {\r\n        return new Vector(Math.floor(this.x / tileSize), Math.floor(this.y / tileSize));\r\n    }\r\n\r\n    /**\r\n     * Converts this vector from world to street space and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    toStreetSpace() {\r\n        return new Vector(Math.floor(this.x / halfTileSize + 0.25), Math.floor(this.y / halfTileSize + 0.25));\r\n    }\r\n\r\n    /**\r\n     * Converts this vector to world space and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    toWorldSpace() {\r\n        return new Vector(this.x * tileSize, this.y * tileSize);\r\n    }\r\n\r\n    /**\r\n     * Converts this vector to world space and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    toWorldSpaceCenterOfTile() {\r\n        return new Vector(this.x * tileSize + halfTileSize, this.y * tileSize + halfTileSize);\r\n    }\r\n\r\n    /**\r\n     * Converts the top left tile position of this vector\r\n     * @returns {Vector}\r\n     */\r\n    snapWorldToTile() {\r\n        return new Vector(Math.floor(this.x / tileSize) * tileSize, Math.floor(this.y / tileSize) * tileSize);\r\n    }\r\n\r\n    /**\r\n     * Normalizes the vector, dividing by the length(), and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    normalize() {\r\n        const len = Math.max(1e-5, Math.hypot(this.x, this.y));\r\n        return new Vector(this.x / len, this.y / len);\r\n    }\r\n\r\n    /**\r\n     * Normalizes the vector, dividing by the length(), and return a new vector\r\n     * @returns {Vector}\r\n     */\r\n    normalizeIfGreaterOne() {\r\n        const len = Math.max(1, Math.hypot(this.x, this.y));\r\n        return new Vector(this.x / len, this.y / len);\r\n    }\r\n\r\n    /**\r\n     * Returns the normalized vector to the other point\r\n     * @param {Vector} v\r\n     * @returns {Vector}\r\n     */\r\n    normalizedDirection(v) {\r\n        const dx = v.x - this.x;\r\n        const dy = v.y - this.y;\r\n        const len = Math.max(1e-5, Math.hypot(dx, dy));\r\n        return new Vector(dx / len, dy / len);\r\n    }\r\n\r\n    /**\r\n     * Returns a perpendicular vector\r\n     * @returns {Vector}\r\n     */\r\n    findPerpendicular() {\r\n        return new Vector(-this.y, this.x);\r\n    }\r\n\r\n    /**\r\n     * Returns the unnormalized direction to the other point\r\n     * @param {Vector} v\r\n     * @returns {Vector}\r\n     */\r\n    direction(v) {\r\n        return new Vector(v.x - this.x, v.y - this.y);\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of the vector\r\n     * @returns {string}\r\n     */\r\n    toString() {\r\n        return this.x + \",\" + this.y;\r\n    }\r\n\r\n    /**\r\n     * Compares both vectors for exact equality. Does not do an epsilon compare\r\n     * @param {Vector} v\r\n     * @returns {Boolean}\r\n     */\r\n    equals(v) {\r\n        return this.x === v.x && this.y === v.y;\r\n    }\r\n\r\n    /**\r\n     * Rotates this vector\r\n     * @param {number} angle\r\n     * @returns {Vector} new vector\r\n     */\r\n    rotated(angle) {\r\n        const sin = Math.sin(angle);\r\n        const cos = Math.cos(angle);\r\n        return new Vector(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\r\n    }\r\n\r\n    /**\r\n     * Rotates this vector\r\n     * @param {number} angle\r\n     * @returns {Vector} this vector\r\n     */\r\n    rotateInplaceFastMultipleOf90(angle) {\r\n        // const sin = Math.sin(angle);\r\n        // const cos = Math.cos(angle);\r\n        // let sin = 0, cos = 1;\r\n        assert(angle >= 0 && angle <= 360, \"Invalid angle, please clamp first: \" + angle);\r\n\r\n        switch (angle) {\r\n            case 0:\r\n            case 360: {\r\n                return this;\r\n            }\r\n            case 90: {\r\n                // sin = 1;\r\n                // cos = 0;\r\n\r\n                const x = this.x;\r\n                this.x = -this.y;\r\n                this.y = x;\r\n                return this;\r\n            }\r\n            case 180: {\r\n                // sin = 0\r\n                // cos = -1\r\n                this.x = -this.x;\r\n                this.y = -this.y;\r\n                return this;\r\n            }\r\n            case 270: {\r\n                // sin = -1\r\n                // cos = 0\r\n                const x = this.x;\r\n                this.x = this.y;\r\n                this.y = -x;\r\n                return this;\r\n            }\r\n            default: {\r\n                assertAlways(false, \"Invalid fast inplace rotation: \" + angle);\r\n                return this;\r\n            }\r\n        }\r\n        // return new Vector(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\r\n    }\r\n\r\n    /**\r\n     * Rotates this vector\r\n     * @param {number} angle\r\n     * @returns {Vector} new vector\r\n     */\r\n    rotateFastMultipleOf90(angle) {\r\n        assert(angle >= 0 && angle <= 360, \"Invalid angle, please clamp first: \" + angle);\r\n\r\n        switch (angle) {\r\n            case 360:\r\n            case 0: {\r\n                return new Vector(this.x, this.y);\r\n            }\r\n            case 90: {\r\n                return new Vector(-this.y, this.x);\r\n            }\r\n            case 180: {\r\n                return new Vector(-this.x, -this.y);\r\n            }\r\n            case 270: {\r\n                return new Vector(this.y, -this.x);\r\n            }\r\n            default: {\r\n                assertAlways(false, \"Invalid fast inplace rotation: \" + angle);\r\n                return new Vector();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper method to rotate a direction\r\n     * @param {enumDirection} direction\r\n     * @param {number} angle\r\n     * @returns {enumDirection}\r\n     */\r\n    static transformDirectionFromMultipleOf90(direction, angle) {\r\n        if (angle === 0 || angle === 360) {\r\n            return direction;\r\n        }\r\n        assert(angle >= 0 && angle <= 360, \"Invalid angle: \" + angle);\r\n        switch (direction) {\r\n            case enumDirection.top: {\r\n                switch (angle) {\r\n                    case 90:\r\n                        return enumDirection.right;\r\n                    case 180:\r\n                        return enumDirection.bottom;\r\n                    case 270:\r\n                        return enumDirection.left;\r\n                    default:\r\n                        assertAlways(false, \"Invalid angle: \" + angle);\r\n                        return;\r\n                }\r\n            }\r\n\r\n            case enumDirection.right: {\r\n                switch (angle) {\r\n                    case 90:\r\n                        return enumDirection.bottom;\r\n                    case 180:\r\n                        return enumDirection.left;\r\n                    case 270:\r\n                        return enumDirection.top;\r\n                    default:\r\n                        assertAlways(false, \"Invalid angle: \" + angle);\r\n                        return;\r\n                }\r\n            }\r\n\r\n            case enumDirection.bottom: {\r\n                switch (angle) {\r\n                    case 90:\r\n                        return enumDirection.left;\r\n                    case 180:\r\n                        return enumDirection.top;\r\n                    case 270:\r\n                        return enumDirection.right;\r\n                    default:\r\n                        assertAlways(false, \"Invalid angle: \" + angle);\r\n                        return;\r\n                }\r\n            }\r\n\r\n            case enumDirection.left: {\r\n                switch (angle) {\r\n                    case 90:\r\n                        return enumDirection.top;\r\n                    case 180:\r\n                        return enumDirection.right;\r\n                    case 270:\r\n                        return enumDirection.bottom;\r\n                    default:\r\n                        assertAlways(false, \"Invalid angle: \" + angle);\r\n                        return;\r\n                }\r\n            }\r\n            default:\r\n                assertAlways(false, \"Invalid angle: \" + angle);\r\n                return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compares both vectors for epsilon equality\r\n     * @param {Vector} v\r\n     * @returns {Boolean}\r\n     */\r\n    equalsEpsilon(v, epsilon = 1e-5) {\r\n        return Math.abs(this.x - v.x) < 1e-5 && Math.abs(this.y - v.y) < epsilon;\r\n    }\r\n\r\n    /**\r\n     * Returns the angle\r\n     * @returns {number} 0 .. 2 PI\r\n     */\r\n    angle() {\r\n        return Math.atan2(this.y, this.x) + Math.PI / 2;\r\n    }\r\n\r\n    /**\r\n     * Serializes the vector to a string\r\n     * @returns {string}\r\n     */\r\n    serializeTile() {\r\n        return String.fromCharCode(33 + this.x) + String.fromCharCode(33 + this.y);\r\n    }\r\n\r\n    /**\r\n     * Creates a simple representation of the vector\r\n     */\r\n    serializeSimple() {\r\n        return { x: this.x, y: this.y };\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    serializeTileToInt() {\r\n        return this.x + this.y * 256;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} i\r\n     * @returns {Vector}\r\n     */\r\n    static deserializeTileFromInt(i) {\r\n        const x = i % 256;\r\n        const y = Math.floor(i / 256);\r\n        return new Vector(x, y);\r\n    }\r\n\r\n    /**\r\n     * Deserializes a vector from a string\r\n     * @param {string} s\r\n     * @returns {Vector}\r\n     */\r\n    static deserializeTile(s) {\r\n        return new Vector(s.charCodeAt(0) - 33, s.charCodeAt(1) - 33);\r\n    }\r\n\r\n    /**\r\n     * Deserializes a vector from a serialized json object\r\n     * @param {object} obj\r\n     * @returns {Vector}\r\n     */\r\n    static fromSerializedObject(obj) {\r\n        if (obj) {\r\n            return new Vector(obj.x || 0, obj.y || 0);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Interpolates two vectors, for a = 0, returns v1 and for a = 1 return v2, otherwise interpolate\r\n * @param {Vector} v1\r\n * @param {Vector} v2\r\n * @param {number} a\r\n */\r\nexport function mixVector(v1, v2, a) {\r\n    return new Vector(v1.x * (1 - a) + v2.x * a, v1.y * (1 - a) + v2.y * a);\r\n}\r\n\r\n/**\r\n * Mapping from string direction to actual vector\r\n * @enum {Vector}\r\n */\r\nexport const enumDirectionToVector = {\r\n    top: new Vector(0, -1),\r\n    right: new Vector(1, 0),\r\n    bottom: new Vector(0, 1),\r\n    left: new Vector(-1, 0),\r\n};\r\n","import { GameRoot } from \"./root\";\r\nimport { globalConfig, IS_DEBUG } from \"../core/config\";\r\nimport { createLogger } from \"../core/logging\";\r\n\r\n// How important it is that a savegame is created\r\n/**\r\n * @enum {number}\r\n */\r\nexport const enumSavePriority = {\r\n    regular: 2,\r\n    asap: 100,\r\n};\r\n\r\nconst logger = createLogger(\"autosave\");\r\n\r\n// Internals\r\nlet MIN_INTERVAL_SECS = 60;\r\n\r\nexport class AutomaticSave {\r\n    constructor(root) {\r\n        /** @type {GameRoot} */\r\n        this.root = root;\r\n\r\n        // Store the current maximum save importance\r\n        this.saveImportance = enumSavePriority.regular;\r\n\r\n        this.lastSaveAttempt = -1000;\r\n    }\r\n\r\n    setSaveImportance(importance) {\r\n        this.saveImportance = Math.max(this.saveImportance, importance);\r\n    }\r\n\r\n    doSave() {\r\n        if (G_IS_DEV && globalConfig.debug.disableSavegameWrite) {\r\n            return;\r\n        }\r\n\r\n        this.root.gameState.doSave();\r\n        this.saveImportance = enumSavePriority.regular;\r\n    }\r\n\r\n    update() {\r\n        if (!this.root.gameInitialized) {\r\n            // Bad idea\r\n            return;\r\n        }\r\n\r\n        const saveInterval = this.root.app.settings.getAutosaveIntervalSeconds();\r\n        if (!saveInterval) {\r\n            // Disabled\r\n            return;\r\n        }\r\n\r\n        // Check when the last save was, but make sure that if it fails, we don't spam\r\n        const lastSaveTime = Math.max(this.lastSaveAttempt, this.root.savegame.getRealLastUpdate());\r\n\r\n        const secondsSinceLastSave = (Date.now() - lastSaveTime) / 1000.0;\r\n        let shouldSave = false;\r\n\r\n        switch (this.saveImportance) {\r\n            case enumSavePriority.asap:\r\n                // High always should save\r\n                shouldSave = true;\r\n                break;\r\n\r\n            case enumSavePriority.regular:\r\n                // Could determine if there is a good / bad point here\r\n                shouldSave = secondsSinceLastSave > saveInterval;\r\n                break;\r\n\r\n            default:\r\n                assert(false, \"Unknown save prio: \" + this.saveImportance);\r\n                break;\r\n        }\r\n        if (shouldSave) {\r\n            logger.log(\"Saving automatically\");\r\n            this.lastSaveAttempt = Date.now();\r\n            this.doSave();\r\n        }\r\n    }\r\n}\r\n","import { DrawParameters } from \"../core/draw_parameters\";\r\nimport { BasicSerializableObject } from \"../savegame/serialization\";\r\nimport { enumLayer } from \"./root\";\r\n\r\n/** @enum {string} */\r\nexport const enumItemType = {\r\n    shape: \"shape\",\r\n    color: \"color\",\r\n    positiveEnergy: \"positiveEnergy\",\r\n    negativeEnergy: \"negativeEnergy\",\r\n\r\n    // Can be used for filters\r\n    genericEnergy: \"genericEnergy\",\r\n};\r\n\r\n/** @enum {enumLayer} */\r\nexport const enumItemTypeToLayer = {\r\n    [enumItemType.shape]: enumLayer.regular,\r\n    [enumItemType.color]: enumLayer.regular,\r\n    [enumItemType.positiveEnergy]: enumLayer.wires,\r\n    [enumItemType.negativeEnergy]: enumLayer.wires,\r\n    [enumItemType.genericEnergy]: enumLayer.wires,\r\n};\r\n\r\n/**\r\n * Class for items on belts etc. Not an entity for performance reasons\r\n */\r\nexport class BaseItem extends BasicSerializableObject {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static getId() {\r\n        return \"base_item\";\r\n    }\r\n\r\n    /** @returns {object} */\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    /** @returns {enumItemType} */\r\n    getItemType() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Draws the item at the given position\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {DrawParameters} parameters\r\n     * @param {number=} size\r\n     */\r\n    draw(x, y, parameters, size) {}\r\n\r\n    getBackgroundColorAsResource() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n}\r\n","import { globalConfig } from \"../core/config\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { epsilonCompare, round4Digits } from \"../core/utils\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { BaseItem } from \"./base_item\";\r\nimport { Entity } from \"./entity\";\r\nimport { GameRoot, enumLayer } from \"./root\";\r\nimport { Rectangle } from \"../core/rectangle\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { gItemRegistry } from \"../core/global_registries\";\r\n\r\nconst logger = createLogger(\"belt_path\");\r\n\r\n// Helpers for more semantic access into interleaved arrays\r\nconst _nextDistance = 0;\r\nconst _item = 1;\r\n\r\nconst DEBUG = G_IS_DEV && false;\r\n\r\n/**\r\n * Stores a path of belts, used for optimizing performance\r\n */\r\nexport class BeltPath extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"BeltPath\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            entityPath: types.array(types.entity),\r\n            items: types.array(types.pair(types.ufloat, types.obj(gItemRegistry))),\r\n            spacingToFirstItem: types.ufloat,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a path from a serialized object\r\n     * @param {GameRoot} root\r\n     * @param {Object} data\r\n     * @returns {BeltPath|string}\r\n     */\r\n    static fromSerialized(root, data) {\r\n        // Create fake object which looks like a belt path but skips the constructor\r\n        const fakeObject = /** @type {BeltPath} */ (Object.create(BeltPath.prototype));\r\n        fakeObject.root = root;\r\n\r\n        // Deserialize the data\r\n        const errorCodeDeserialize = fakeObject.deserialize(data);\r\n        if (errorCodeDeserialize) {\r\n            return errorCodeDeserialize;\r\n        }\r\n\r\n        // Compute other properties\r\n        fakeObject.init(false);\r\n\r\n        return fakeObject;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {Array<Entity>} entityPath\r\n     */\r\n    constructor(root, entityPath) {\r\n        super();\r\n        this.root = root;\r\n\r\n        assert(entityPath.length > 0, \"invalid entity path\");\r\n        this.entityPath = entityPath;\r\n\r\n        /**\r\n         * Stores the items sorted, and their distance to the previous item (or start)\r\n         * Layout: [distanceToNext, item]\r\n         * @type {Array<[number, BaseItem]>}\r\n         */\r\n        this.items = [];\r\n\r\n        /**\r\n         * Stores the spacing to the first item\r\n         */\r\n\r\n        this.init();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"constructor\");\r\n        }\r\n    }\r\n    /**\r\n     * Initializes the path by computing the properties which are not saved\r\n     * @param {boolean} computeSpacing Whether to also compute the spacing\r\n     */\r\n    init(computeSpacing = true) {\r\n        this.onPathChanged();\r\n\r\n        this.totalLength = this.computeTotalLength();\r\n\r\n        if (computeSpacing) {\r\n            this.spacingToFirstItem = this.totalLength;\r\n        }\r\n\r\n        /**\r\n         * Current bounds of this path\r\n         * @type {Rectangle}\r\n         */\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        // Connect the belts\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            this.entityPath[i].components.Belt.assignedPath = this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether this path can accept a new item\r\n     * @returns {boolean}\r\n     */\r\n    canAcceptItem() {\r\n        return this.spacingToFirstItem >= this.getItemSpacing();\r\n    }\r\n\r\n    /**\r\n     * Returns the spacing between items\r\n     */\r\n    getItemSpacing() {\r\n        return globalConfig.beltItemSpacingByLayer[this.layer];\r\n    }\r\n\r\n    /**\r\n     * Returns the layer of the this path\r\n     * @returns {enumLayer}\r\n     */\r\n    getLayer() {\r\n        return this.entityPath[0].layer;\r\n    }\r\n\r\n    /**\r\n     * Tries to accept the item\r\n     * @param {BaseItem} item\r\n     */\r\n    tryAcceptItem(item) {\r\n        if (this.spacingToFirstItem >= this.getItemSpacing()) {\r\n            // So, since we already need one tick to accept this item we will add this directly.\r\n            const beltProgressPerTick =\r\n                this.root.hubGoals.getBeltBaseSpeed(this.layer) *\r\n                this.root.dynamicTickrate.deltaSeconds *\r\n                this.getItemSpacing();\r\n\r\n            // First, compute how much progress we can make *at max*\r\n            const maxProgress = Math.max(0, this.spacingToFirstItem - this.getItemSpacing());\r\n            const initialProgress = Math.min(maxProgress, beltProgressPerTick);\r\n\r\n            this.items.unshift([this.spacingToFirstItem - initialProgress, item]);\r\n            this.spacingToFirstItem = initialProgress;\r\n\r\n            if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n                this.debug_checkIntegrity(\"accept-item\");\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * SLOW / Tries to find the item closest to the given tile\r\n     * @param {Vector} tile\r\n     * @returns {BaseItem|null}\r\n     */\r\n    findItemAtTile(tile) {\r\n        // TODO: This breaks color blind mode otherwise\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Computes the tile bounds of the path\r\n     * @returns {Rectangle}\r\n     */\r\n    computeBounds() {\r\n        let bounds = this.entityPath[0].components.StaticMapEntity.getTileSpaceBounds();\r\n        for (let i = 1; i < this.entityPath.length; ++i) {\r\n            const staticComp = this.entityPath[i].components.StaticMapEntity;\r\n            const otherBounds = staticComp.getTileSpaceBounds();\r\n            bounds = bounds.getUnion(otherBounds);\r\n        }\r\n        return bounds.allScaled(globalConfig.tileSize);\r\n    }\r\n\r\n    /**\r\n     * Updates all ejectors on the path, so that only the last ejector\r\n     */\r\n    onPathChanged() {\r\n        this.ejectorComp = this.entityPath[this.entityPath.length - 1].components.ItemEjector;\r\n        this.ejectorSlot = this.ejectorComp.slots[0];\r\n\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const ejectorComp = this.entityPath[i].components.ItemEjector;\r\n            const isLast = i === this.entityPath.length - 1;\r\n            ejectorComp.enabled = isLast;\r\n\r\n            // Clear all slots of non-end entities\r\n            if (!isLast) {\r\n                for (let k = 0; k < ejectorComp.slots.length; ++k) {\r\n                    ejectorComp.slots[k].item = null;\r\n                    ejectorComp.slots[k].progress = 0.0;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.layer = this.entityPath[0].layer;\r\n    }\r\n\r\n    // Following code will be compiled out outside of dev versions\r\n    /* dev:start */\r\n\r\n    /**\r\n     * Helper to throw an error on mismatch\r\n     * @param {string} change\r\n     * @param {Array<any>} reason\r\n     */\r\n    debug_failIntegrity(change, ...reason) {\r\n        throw new Error(\"belt path invalid (\" + change + \"): \" + reason.map(i => \"\" + i).join(\" \"));\r\n    }\r\n\r\n    /**\r\n     * Checks if this path is valid\r\n     */\r\n    debug_checkIntegrity(currentChange = \"change\") {\r\n        const fail = (...args) => this.debug_failIntegrity(currentChange, ...args);\r\n\r\n        // Check for empty path\r\n        if (this.entityPath.length === 0) {\r\n            return fail(\"Belt path is empty\");\r\n        }\r\n\r\n        // Check for mismatching length\r\n        const totalLength = this.computeTotalLength();\r\n        if (!epsilonCompare(this.totalLength, totalLength, 0.01)) {\r\n            return this.debug_failIntegrity(\r\n                currentChange,\r\n                \"Total length mismatch, stored =\",\r\n                this.totalLength,\r\n                \"but correct is\",\r\n                totalLength\r\n            );\r\n        }\r\n\r\n        // Check for misconnected entities\r\n        for (let i = 0; i < this.entityPath.length - 1; ++i) {\r\n            const entity = this.entityPath[i];\r\n            if (entity.destroyed) {\r\n                return fail(\"Reference to destroyed entity \" + entity.uid);\r\n            }\r\n\r\n            const enabledState = i === this.entityPath.length - 1;\r\n            if (entity.components.ItemEjector.enabled !== enabledState) {\r\n                return fail(\"Item ejector enabled state is not synchronized (index =\" + i + \")\");\r\n            }\r\n\r\n            const followUp = this.root.systemMgr.systems.belt.findFollowUpEntity(entity);\r\n            if (!followUp) {\r\n                return fail(\r\n                    \"Follow up entity for the\",\r\n                    i,\r\n                    \"-th entity (total length\",\r\n                    this.entityPath.length,\r\n                    \") was null!\"\r\n                );\r\n            }\r\n            if (followUp !== this.entityPath[i + 1]) {\r\n                return fail(\r\n                    \"Follow up entity mismatch, stored is\",\r\n                    this.entityPath[i + 1].uid,\r\n                    \"but real one is\",\r\n                    followUp.uid\r\n                );\r\n            }\r\n            if (entity.components.Belt.assignedPath !== this) {\r\n                return fail(\r\n                    \"Entity with uid\",\r\n                    entity.uid,\r\n                    \"doesn't have this path assigned, but this path contains the entity.\"\r\n                );\r\n            }\r\n        }\r\n\r\n        // Check for right ejector component and slot\r\n        if (this.ejectorComp !== this.entityPath[this.entityPath.length - 1].components.ItemEjector) {\r\n            return fail(\"Stale ejectorComp handle\");\r\n        }\r\n        if (this.ejectorSlot !== this.ejectorComp.slots[0]) {\r\n            return fail(\"Stale ejector slot handle\");\r\n        }\r\n        if (!this.ejectorComp) {\r\n            return fail(\"Ejector comp not set\");\r\n        }\r\n        if (!this.ejectorSlot) {\r\n            return fail(\"Ejector slot not set\");\r\n        }\r\n\r\n        // Check spacing\r\n        if (this.spacingToFirstItem > this.totalLength + 0.005) {\r\n            return fail(\r\n                currentChange,\r\n                \"spacing to first item (\",\r\n                this.spacingToFirstItem,\r\n                \") is greater than total length (\",\r\n                this.totalLength,\r\n                \")\"\r\n            );\r\n        }\r\n\r\n        // Check distance if empty\r\n        if (this.items.length === 0 && !epsilonCompare(this.spacingToFirstItem, this.totalLength, 0.01)) {\r\n            return fail(\r\n                currentChange,\r\n                \"Path is empty but spacing to first item (\",\r\n                this.spacingToFirstItem,\r\n                \") does not equal total length (\",\r\n                this.totalLength,\r\n                \")\"\r\n            );\r\n        }\r\n\r\n        // Check items etc\r\n        let currentPos = this.spacingToFirstItem;\r\n        for (let i = 0; i < this.items.length; ++i) {\r\n            const item = this.items[i];\r\n\r\n            if (item[_nextDistance] < 0 || item[_nextDistance] > this.totalLength + 0.02) {\r\n                return fail(\r\n                    \"Item has invalid offset to next item: \",\r\n                    item[_nextDistance],\r\n                    \"(total length:\",\r\n                    this.totalLength,\r\n                    \")\"\r\n                );\r\n            }\r\n\r\n            currentPos += item[_nextDistance];\r\n        }\r\n\r\n        // Check the total sum matches\r\n        if (!epsilonCompare(currentPos, this.totalLength, 0.01)) {\r\n            return fail(\r\n                \"total sum (\",\r\n                currentPos,\r\n                \") of first item spacing (\",\r\n                this.spacingToFirstItem,\r\n                \") and items does not match total length (\",\r\n                this.totalLength,\r\n                \") -> items: \" + this.items.map(i => i[_nextDistance]).join(\"|\")\r\n            );\r\n        }\r\n\r\n        // Check bounds\r\n        const actualBounds = this.computeBounds();\r\n        if (!actualBounds.equalsEpsilon(this.worldBounds, 0.01)) {\r\n            return fail(\"Bounds are stale\");\r\n        }\r\n    }\r\n\r\n    /* dev:end */\r\n\r\n    /**\r\n     * Extends the belt path by the given belt\r\n     * @param {Entity} entity\r\n     */\r\n    extendOnEnd(entity) {\r\n        DEBUG && logger.log(\"Extending belt path by entity at\", entity.components.StaticMapEntity.origin);\r\n\r\n        const beltComp = entity.components.Belt;\r\n\r\n        // If the last belt has something on its ejector, put that into the path first\r\n        const pendingItem = this.ejectorComp.takeSlotItem(0);\r\n        if (pendingItem) {\r\n            // Ok, so we have a pending item\r\n            DEBUG && logger.log(\"Taking pending item and putting it back on the path\");\r\n            this.items.push([0, pendingItem]);\r\n        }\r\n\r\n        // Append the entity\r\n        this.entityPath.push(entity);\r\n        this.onPathChanged();\r\n\r\n        // Extend the path length\r\n        const additionalLength = beltComp.getEffectiveLengthTiles(entity.layer);\r\n        this.totalLength += additionalLength;\r\n        DEBUG && logger.log(\"  Extended total length by\", additionalLength, \"to\", this.totalLength);\r\n\r\n        // If we have no item, just update the distance to the first item\r\n        if (this.items.length === 0) {\r\n            this.spacingToFirstItem = this.totalLength;\r\n            DEBUG && logger.log(\"  Extended spacing to first to\", this.totalLength, \"(= total length)\");\r\n        } else {\r\n            // Otherwise, update the next-distance of the last item\r\n            const lastItem = this.items[this.items.length - 1];\r\n            DEBUG &&\r\n                logger.log(\r\n                    \"  Extended spacing of last item from\",\r\n                    lastItem[_nextDistance],\r\n                    \"to\",\r\n                    lastItem[_nextDistance] + additionalLength\r\n                );\r\n            lastItem[_nextDistance] += additionalLength;\r\n        }\r\n\r\n        // Assign reference\r\n        beltComp.assignedPath = this;\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"extend-on-end\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Extends the path with the given entity on the beginning\r\n     * @param {Entity} entity\r\n     */\r\n    extendOnBeginning(entity) {\r\n        const beltComp = entity.components.Belt;\r\n\r\n        DEBUG && logger.log(\"Extending the path on the beginning\");\r\n\r\n        // All items on that belt are simply lost (for now)\r\n\r\n        const length = beltComp.getEffectiveLengthTiles(entity.layer);\r\n\r\n        // Extend the length of this path\r\n        this.totalLength += length;\r\n\r\n        // Simply adjust the first item spacing cuz we have no items contained\r\n        this.spacingToFirstItem += length;\r\n\r\n        // Set handles and append entity\r\n        beltComp.assignedPath = this;\r\n        this.entityPath.unshift(entity);\r\n        this.onPathChanged();\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"extend-on-begin\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns if the given entity is the end entity of the path\r\n     * @param {Entity} entity\r\n     * @returns {boolean}\r\n     */\r\n    isEndEntity(entity) {\r\n        return this.entityPath[this.entityPath.length - 1] === entity;\r\n    }\r\n\r\n    /**\r\n     * Returns if the given entity is the start entity of the path\r\n     * @param {Entity} entity\r\n     * @returns {boolean}\r\n     */\r\n    isStartEntity(entity) {\r\n        return this.entityPath[0] === entity;\r\n    }\r\n\r\n    /**\r\n     * Splits this path at the given entity by removing it, and\r\n     * returning the new secondary paht\r\n     * @param {Entity} entity\r\n     * @returns {BeltPath}\r\n     */\r\n    deleteEntityOnPathSplitIntoTwo(entity) {\r\n        DEBUG && logger.log(\"Splitting path at entity\", entity.components.StaticMapEntity.origin);\r\n\r\n        // First, find where the current path ends\r\n        const beltComp = entity.components.Belt;\r\n        beltComp.assignedPath = null;\r\n\r\n        const entityLength = beltComp.getEffectiveLengthTiles(entity.layer);\r\n        assert(this.entityPath.indexOf(entity) >= 0, \"Entity not contained for split\");\r\n        assert(this.entityPath.indexOf(entity) !== 0, \"Entity is first\");\r\n        assert(this.entityPath.indexOf(entity) !== this.entityPath.length - 1, \"Entity is last\");\r\n\r\n        let firstPathEntityCount = 0;\r\n        let firstPathLength = 0;\r\n        let firstPathEndEntity = null;\r\n\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const otherEntity = this.entityPath[i];\r\n            if (otherEntity === entity) {\r\n                DEBUG && logger.log(\"Found entity at\", i, \"of length\", firstPathLength);\r\n                break;\r\n            }\r\n\r\n            ++firstPathEntityCount;\r\n            firstPathEndEntity = otherEntity;\r\n            firstPathLength += otherEntity.components.Belt.getEffectiveLengthTiles(otherEntity.layer);\r\n        }\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"First path ends at\",\r\n                firstPathLength,\r\n                \"and entity\",\r\n                firstPathEndEntity.components.StaticMapEntity.origin,\r\n                \"and has\",\r\n                firstPathEntityCount,\r\n                \"entities\"\r\n            );\r\n\r\n        // Compute length of second path\r\n        const secondPathLength = this.totalLength - firstPathLength - entityLength;\r\n        const secondPathStart = firstPathLength + entityLength;\r\n        const secondEntities = this.entityPath.splice(firstPathEntityCount + 1);\r\n        DEBUG &&\r\n            logger.log(\r\n                \"Second path starts at\",\r\n                secondPathStart,\r\n                \"and has a length of \",\r\n                secondPathLength,\r\n                \"with\",\r\n                secondEntities.length,\r\n                \"entities\"\r\n            );\r\n\r\n        // Remove the last item\r\n        this.entityPath.pop();\r\n\r\n        DEBUG && logger.log(\"Splitting\", this.items.length, \"items\");\r\n        DEBUG &&\r\n            logger.log(\r\n                \"Old items are\",\r\n                this.items.map(i => i[_nextDistance])\r\n            );\r\n\r\n        // Create second path\r\n        const secondPath = new BeltPath(this.root, secondEntities);\r\n\r\n        // Remove all items which are no longer relevant and transfer them to the second path\r\n        let itemPos = this.spacingToFirstItem;\r\n        for (let i = 0; i < this.items.length; ++i) {\r\n            const item = this.items[i];\r\n            const distanceToNext = item[_nextDistance];\r\n\r\n            DEBUG && logger.log(\"  Checking item at\", itemPos, \"with distance of\", distanceToNext, \"to next\");\r\n\r\n            // Check if this item is past the first path\r\n            if (itemPos >= firstPathLength) {\r\n                // Remove it from the first path\r\n                this.items.splice(i, 1);\r\n                i -= 1;\r\n                DEBUG &&\r\n                    logger.log(\"     Removed item from first path since its no longer contained @\", itemPos);\r\n\r\n                // Check if its on the second path (otherwise its on the removed belt and simply lost)\r\n                if (itemPos >= secondPathStart) {\r\n                    // Put item on second path\r\n                    secondPath.items.push([distanceToNext, item[_item]]);\r\n                    DEBUG &&\r\n                        logger.log(\r\n                            \"     Put item to second path @\",\r\n                            itemPos,\r\n                            \"with distance to next =\",\r\n                            distanceToNext\r\n                        );\r\n\r\n                    // If it was the first item, adjust the distance to the first item\r\n                    if (secondPath.items.length === 1) {\r\n                        DEBUG && logger.log(\"       Sinc it was the first, set sapcing of first to\", itemPos);\r\n                        secondPath.spacingToFirstItem = itemPos - secondPathStart;\r\n                    }\r\n                } else {\r\n                    DEBUG && logger.log(\"    Item was on the removed belt, so its gone - forever!\");\r\n                }\r\n            } else {\r\n                // Seems this item is on the first path (so all good), so just make sure it doesn't\r\n                // have a nextDistance which is bigger than the total path length\r\n                const clampedDistanceToNext = Math.min(itemPos + distanceToNext, firstPathLength) - itemPos;\r\n                if (clampedDistanceToNext < distanceToNext) {\r\n                    DEBUG &&\r\n                        logger.log(\r\n                            \"Correcting next distance (first path) from\",\r\n                            distanceToNext,\r\n                            \"to\",\r\n                            clampedDistanceToNext\r\n                        );\r\n                    item[_nextDistance] = clampedDistanceToNext;\r\n                }\r\n            }\r\n\r\n            // Advance items\r\n            itemPos += distanceToNext;\r\n        }\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"New items are\",\r\n                this.items.map(i => i[_nextDistance])\r\n            );\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"And second path items are\",\r\n                secondPath.items.map(i => i[_nextDistance])\r\n            );\r\n\r\n        // Adjust our total length\r\n        this.totalLength = firstPathLength;\r\n\r\n        // Make sure that if we are empty, we set our first distance properly\r\n        if (this.items.length === 0) {\r\n            this.spacingToFirstItem = this.totalLength;\r\n        }\r\n\r\n        this.onPathChanged();\r\n        secondPath.onPathChanged();\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"split-two-first\");\r\n            secondPath.debug_checkIntegrity(\"split-two-second\");\r\n        }\r\n\r\n        return secondPath;\r\n    }\r\n\r\n    /**\r\n     * Deletes the last entity\r\n     * @param {Entity} entity\r\n     */\r\n    deleteEntityOnEnd(entity) {\r\n        assert(\r\n            this.entityPath[this.entityPath.length - 1] === entity,\r\n            \"Not actually the last entity (instead \" + this.entityPath.indexOf(entity) + \")\"\r\n        );\r\n\r\n        // Ok, first remove the entity\r\n        const beltComp = entity.components.Belt;\r\n        const beltLength = beltComp.getEffectiveLengthTiles(entity.layer);\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"Deleting last entity on path with length\",\r\n                this.entityPath.length,\r\n                \"(reducing\",\r\n                this.totalLength,\r\n                \" by\",\r\n                beltLength,\r\n                \")\"\r\n            );\r\n        this.totalLength -= beltLength;\r\n        this.entityPath.pop();\r\n        this.onPathChanged();\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"  New path has length of\",\r\n                this.totalLength,\r\n                \"with\",\r\n                this.entityPath.length,\r\n                \"entities\"\r\n            );\r\n\r\n        // This is just for sanity\r\n        beltComp.assignedPath = null;\r\n\r\n        // Clean up items\r\n        if (this.items.length === 0) {\r\n            // Simple case with no items, just update the first item spacing\r\n            this.spacingToFirstItem = this.totalLength;\r\n        } else {\r\n            // Ok, make sure we simply drop all items which are no longer contained\r\n            let itemOffset = this.spacingToFirstItem;\r\n            let lastItemOffset = itemOffset;\r\n\r\n            DEBUG && logger.log(\"  Adjusting\", this.items.length, \"items\");\r\n\r\n            for (let i = 0; i < this.items.length; ++i) {\r\n                const item = this.items[i];\r\n\r\n                // Get rid of items past this path\r\n                if (itemOffset >= this.totalLength) {\r\n                    DEBUG && logger.log(\"Dropping item (current index=\", i, \")\");\r\n                    this.items.splice(i, 1);\r\n                    i -= 1;\r\n                    continue;\r\n                }\r\n\r\n                DEBUG && logger.log(\"Item\", i, \"is at\", itemOffset, \"with next offset\", item[_nextDistance]);\r\n                lastItemOffset = itemOffset;\r\n                itemOffset += item[_nextDistance];\r\n            }\r\n\r\n            // If we still have an item, make sure the last item matches\r\n            if (this.items.length > 0) {\r\n                // We can easily compute the next distance since we know where the last item is now\r\n                const lastDistance = this.totalLength - lastItemOffset;\r\n                assert(\r\n                    lastDistance >= 0.0,\r\n                    \"Last item distance mismatch: \" +\r\n                        lastDistance +\r\n                        \" -> Total length was \" +\r\n                        this.totalLength +\r\n                        \" and lastItemOffset was \" +\r\n                        lastItemOffset\r\n                );\r\n\r\n                DEBUG &&\r\n                    logger.log(\r\n                        \"Adjusted distance of last item: it is at\",\r\n                        lastItemOffset,\r\n                        \"so it has a distance of\",\r\n                        lastDistance,\r\n                        \"to the end (\",\r\n                        this.totalLength,\r\n                        \")\"\r\n                    );\r\n                this.items[this.items.length - 1][_nextDistance] = lastDistance;\r\n            } else {\r\n                DEBUG && logger.log(\"  Removed all items so we'll update spacing to total length\");\r\n\r\n                // We removed all items so update our spacing\r\n                this.spacingToFirstItem = this.totalLength;\r\n            }\r\n        }\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"delete-on-end\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes the entity of the start of the path\r\n     * @see deleteEntityOnEnd\r\n     * @param {Entity} entity\r\n     */\r\n    deleteEntityOnStart(entity) {\r\n        assert(\r\n            entity === this.entityPath[0],\r\n            \"Not actually the start entity (instead \" + this.entityPath.indexOf(entity) + \")\"\r\n        );\r\n\r\n        // Ok, first remove the entity\r\n        const beltComp = entity.components.Belt;\r\n        const beltLength = beltComp.getEffectiveLengthTiles(entity.layer);\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"Deleting first entity on path with length\",\r\n                this.entityPath.length,\r\n                \"(reducing\",\r\n                this.totalLength,\r\n                \" by\",\r\n                beltLength,\r\n                \")\"\r\n            );\r\n        this.totalLength -= beltLength;\r\n        this.entityPath.shift();\r\n        this.onPathChanged();\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"  New path has length of\",\r\n                this.totalLength,\r\n                \"with\",\r\n                this.entityPath.length,\r\n                \"entities\"\r\n            );\r\n\r\n        // This is just for sanity\r\n        beltComp.assignedPath = null;\r\n\r\n        // Clean up items\r\n        if (this.items.length === 0) {\r\n            // Simple case with no items, just update the first item spacing\r\n            this.spacingToFirstItem = this.totalLength;\r\n        } else {\r\n            // Simple case, we had no item on the beginning -> all good\r\n            if (this.spacingToFirstItem >= beltLength) {\r\n                DEBUG &&\r\n                    logger.log(\r\n                        \"  No item on the first place, so we can just adjust the spacing (spacing=\",\r\n                        this.spacingToFirstItem,\r\n                        \") removed =\",\r\n                        beltLength\r\n                    );\r\n                this.spacingToFirstItem -= beltLength;\r\n            } else {\r\n                // Welp, okay we need to drop all items which are < beltLength and adjust\r\n                // the other item offsets as well\r\n\r\n                DEBUG &&\r\n                    logger.log(\r\n                        \"  We have at least one item in the beginning, drop those and adjust spacing (first item @\",\r\n                        this.spacingToFirstItem,\r\n                        \") since we removed\",\r\n                        beltLength,\r\n                        \"length from path\"\r\n                    );\r\n                DEBUG &&\r\n                    logger.log(\r\n                        \"    Items:\",\r\n                        this.items.map(i => i[_nextDistance])\r\n                    );\r\n\r\n                // Find offset to first item\r\n                let itemOffset = this.spacingToFirstItem;\r\n                for (let i = 0; i < this.items.length; ++i) {\r\n                    const item = this.items[i];\r\n                    if (itemOffset <= beltLength) {\r\n                        DEBUG &&\r\n                            logger.log(\r\n                                \"  -> Dropping item with index\",\r\n                                i,\r\n                                \"at\",\r\n                                itemOffset,\r\n                                \"since it was on the removed belt\"\r\n                            );\r\n                        // This item must be dropped\r\n                        this.items.splice(i, 1);\r\n                        i -= 1;\r\n                        itemOffset += item[_nextDistance];\r\n                        continue;\r\n                    } else {\r\n                        // This item can be kept, thus its the first we know\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (this.items.length > 0) {\r\n                    DEBUG &&\r\n                        logger.log(\r\n                            \"  Offset of first non-dropped item was at:\",\r\n                            itemOffset,\r\n                            \"-> setting spacing to it (total length=\",\r\n                            this.totalLength,\r\n                            \")\"\r\n                        );\r\n\r\n                    this.spacingToFirstItem = itemOffset - beltLength;\r\n                    assert(\r\n                        this.spacingToFirstItem >= 0.0,\r\n                        \"Invalid spacing after delete on start: \" + this.spacingToFirstItem\r\n                    );\r\n                } else {\r\n                    DEBUG && logger.log(\"  We dropped all items, simply set spacing to total length\");\r\n                    // We dropped all items, simple one\r\n                    this.spacingToFirstItem = this.totalLength;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"delete-on-start\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Extends the path by the given other path\r\n     * @param {BeltPath} otherPath\r\n     */\r\n    extendByPath(otherPath) {\r\n        assert(otherPath !== this, \"Circular path dependency\");\r\n\r\n        const entities = otherPath.entityPath;\r\n        DEBUG && logger.log(\"Extending path by other path, starting to add entities\");\r\n\r\n        const oldLength = this.totalLength;\r\n\r\n        DEBUG && logger.log(\"  Adding\", entities.length, \"new entities, current length =\", this.totalLength);\r\n\r\n        // First, append entities\r\n        for (let i = 0; i < entities.length; ++i) {\r\n            const entity = entities[i];\r\n            const beltComp = entity.components.Belt;\r\n\r\n            // Add to path and update references\r\n            this.entityPath.push(entity);\r\n            beltComp.assignedPath = this;\r\n\r\n            // Update our length\r\n            const additionalLength = beltComp.getEffectiveLengthTiles(entity.layer);\r\n            this.totalLength += additionalLength;\r\n        }\r\n\r\n        DEBUG &&\r\n            logger.log(\r\n                \"  Path is now\",\r\n                this.entityPath.length,\r\n                \"entities and has a length of\",\r\n                this.totalLength\r\n            );\r\n\r\n        // Now, update the distance of our last item\r\n        if (this.items.length !== 0) {\r\n            const lastItem = this.items[this.items.length - 1];\r\n            lastItem[_nextDistance] += otherPath.spacingToFirstItem;\r\n            DEBUG &&\r\n                logger.log(\"  Add distance to last item, effectively being\", lastItem[_nextDistance], \"now\");\r\n        } else {\r\n            // Seems we have no items, update our first item distance\r\n            this.spacingToFirstItem = oldLength + otherPath.spacingToFirstItem;\r\n            DEBUG &&\r\n                logger.log(\r\n                    \"  We had no items, so our new spacing to first is old length (\",\r\n                    oldLength,\r\n                    \") plus others spacing to first (\",\r\n                    otherPath.spacingToFirstItem,\r\n                    \") =\",\r\n                    this.spacingToFirstItem\r\n                );\r\n        }\r\n\r\n        DEBUG && logger.log(\"  Pushing\", otherPath.items.length, \"items from other path\");\r\n\r\n        // Aaand push the other paths items\r\n        for (let i = 0; i < otherPath.items.length; ++i) {\r\n            const item = otherPath.items[i];\r\n            this.items.push([item[_nextDistance], item[_item]]);\r\n        }\r\n\r\n        // Update bounds\r\n        this.worldBounds = this.computeBounds();\r\n\r\n        this.onPathChanged();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"extend-by-path\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Computes the total length of the path\r\n     * @returns {number}\r\n     */\r\n    computeTotalLength() {\r\n        let length = 0;\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const entity = this.entityPath[i];\r\n            length += entity.components.Belt.getEffectiveLengthTiles(this.layer);\r\n        }\r\n        return length;\r\n    }\r\n\r\n    /**\r\n     * Performs one tick\r\n     */\r\n    update() {\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"pre-update\");\r\n        }\r\n\r\n        // Divide by item spacing on belts since we use throughput and not speed\r\n        let beltSpeed =\r\n            this.root.hubGoals.getBeltBaseSpeed(this.layer) *\r\n            this.root.dynamicTickrate.deltaSeconds *\r\n            this.getItemSpacing();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.instantBelts) {\r\n            beltSpeed *= 100;\r\n        }\r\n\r\n        let minimumDistance = this.ejectorSlot.item ? this.getItemSpacing() : 0;\r\n\r\n        // Try to reduce spacing\r\n        let remainingAmount = beltSpeed;\r\n        for (let i = this.items.length - 1; i >= 0; --i) {\r\n            const nextDistanceAndItem = this.items[i];\r\n            const minimumSpacing = minimumDistance;\r\n\r\n            const takeAway = Math.max(\r\n                0,\r\n                Math.min(remainingAmount, nextDistanceAndItem[_nextDistance] - minimumSpacing)\r\n            );\r\n\r\n            remainingAmount -= takeAway;\r\n            nextDistanceAndItem[_nextDistance] -= takeAway;\r\n\r\n            this.spacingToFirstItem += takeAway;\r\n            if (remainingAmount < 0.01) {\r\n                break;\r\n            }\r\n\r\n            minimumDistance = this.getItemSpacing();\r\n        }\r\n\r\n        const lastItem = this.items[this.items.length - 1];\r\n        if (lastItem && lastItem[_nextDistance] === 0) {\r\n            // Take over\r\n            if (this.ejectorComp.tryEject(0, lastItem[_item])) {\r\n                this.items.pop();\r\n            }\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_checkIntegrity(\"post-update\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Computes a world space position from the given progress\r\n     * @param {number} progress\r\n     * @returns {Vector}\r\n     */\r\n    computePositionFromProgress(progress) {\r\n        let currentLength = 0;\r\n\r\n        // floating point issuses ..\r\n        assert(progress <= this.totalLength + 0.02, \"Progress too big: \" + progress);\r\n\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const beltComp = this.entityPath[i].components.Belt;\r\n            const localLength = beltComp.getEffectiveLengthTiles(this.layer);\r\n\r\n            if (currentLength + localLength >= progress || i === this.entityPath.length - 1) {\r\n                // Min required here due to floating point issues\r\n                const localProgress = Math.min(1.0, progress - currentLength);\r\n\r\n                assert(localProgress >= 0.0, \"Invalid local progress: \" + localProgress);\r\n                const localSpace = beltComp.transformBeltToLocalSpace(localProgress, this.layer);\r\n                return this.entityPath[i].components.StaticMapEntity.localTileToWorld(localSpace);\r\n            }\r\n            currentLength += localLength;\r\n        }\r\n\r\n        assert(false, \"invalid progress: \" + progress + \" (max: \" + this.totalLength + \")\");\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawDebug(parameters) {\r\n        if (!parameters.visibleRect.containsRect(this.worldBounds)) {\r\n            return;\r\n        }\r\n\r\n        if (this.entityPath[0].layer !== this.root.currentLayer) {\r\n            // Don't draw\r\n            return;\r\n        }\r\n\r\n        parameters.context.fillStyle = \"#d79a25\";\r\n        parameters.context.strokeStyle = \"#d79a25\";\r\n        parameters.context.beginPath();\r\n\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const entity = this.entityPath[i];\r\n            const pos = entity.components.StaticMapEntity;\r\n            const worldPos = pos.origin.toWorldSpaceCenterOfTile();\r\n\r\n            if (i === 0) {\r\n                parameters.context.moveTo(worldPos.x, worldPos.y);\r\n            } else {\r\n                parameters.context.lineTo(worldPos.x, worldPos.y);\r\n            }\r\n        }\r\n        parameters.context.stroke();\r\n\r\n        // Items\r\n        let progress = this.spacingToFirstItem;\r\n        for (let i = 0; i < this.items.length; ++i) {\r\n            const nextDistanceAndItem = this.items[i];\r\n            const worldPos = this.computePositionFromProgress(progress).toWorldSpaceCenterOfTile();\r\n            parameters.context.fillStyle = \"#268e4d\";\r\n            parameters.context.beginRoundedRect(worldPos.x - 5, worldPos.y - 5, 10, 10, 3);\r\n            parameters.context.fill();\r\n            parameters.context.font = \"6px GameFont\";\r\n            parameters.context.fillStyle = \"#111\";\r\n            parameters.context.fillText(\r\n                \"\" + round4Digits(nextDistanceAndItem[_nextDistance]),\r\n                worldPos.x + 5,\r\n                worldPos.y + 2\r\n            );\r\n            progress += nextDistanceAndItem[_nextDistance];\r\n        }\r\n\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const entity = this.entityPath[i];\r\n            parameters.context.fillStyle = \"#d79a25\";\r\n            const pos = entity.components.StaticMapEntity;\r\n            const worldPos = pos.origin.toWorldSpaceCenterOfTile();\r\n            parameters.context.beginCircle(worldPos.x, worldPos.y, i === 0 ? 5 : 3);\r\n            parameters.context.fill();\r\n        }\r\n\r\n        for (let progress = 0; progress <= this.totalLength + 0.01; progress += 0.2) {\r\n            const worldPos = this.computePositionFromProgress(progress).toWorldSpaceCenterOfTile();\r\n            parameters.context.fillStyle = \"red\";\r\n            parameters.context.beginCircle(worldPos.x, worldPos.y, 1);\r\n            parameters.context.fill();\r\n        }\r\n\r\n        const firstItemIndicator = this.computePositionFromProgress(\r\n            this.spacingToFirstItem\r\n        ).toWorldSpaceCenterOfTile();\r\n        parameters.context.fillStyle = \"purple\";\r\n        parameters.context.fillRect(firstItemIndicator.x - 3, firstItemIndicator.y - 1, 6, 2);\r\n    }\r\n\r\n    /**\r\n     * Draws the path\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        if (!parameters.visibleRect.containsRect(this.worldBounds)) {\r\n            return;\r\n        }\r\n\r\n        if (this.items.length === 0) {\r\n            // Early out\r\n            return;\r\n        }\r\n\r\n        let currentItemPos = this.spacingToFirstItem;\r\n        let currentItemIndex = 0;\r\n\r\n        let trackPos = 0.0;\r\n\r\n        // Iterate whole track and check items\r\n        for (let i = 0; i < this.entityPath.length; ++i) {\r\n            const entity = this.entityPath[i];\r\n            const beltComp = entity.components.Belt;\r\n            const beltLength = beltComp.getEffectiveLengthTiles(this.layer);\r\n\r\n            // Check if the current items are on the belt\r\n            while (trackPos + beltLength >= currentItemPos) {\r\n                // Its on the belt, render it now\r\n                const staticComp = entity.components.StaticMapEntity;\r\n                assert(\r\n                    currentItemPos - trackPos >= 0,\r\n                    \"invalid track pos: \" + currentItemPos + \" vs \" + trackPos + \" (l  =\" + beltLength + \")\"\r\n                );\r\n\r\n                const localPos = beltComp.transformBeltToLocalSpace(currentItemPos - trackPos, this.layer);\r\n                const worldPos = staticComp.localTileToWorld(localPos).toWorldSpaceCenterOfTile();\r\n\r\n                const distanceAndItem = this.items[currentItemIndex];\r\n                if (parameters.visibleRect.containsCircle(worldPos.x, worldPos.y, 10)) {\r\n                    distanceAndItem[_item].draw(worldPos.x, worldPos.y, parameters);\r\n                }\r\n\r\n                // Check for the next item\r\n                currentItemPos += distanceAndItem[_nextDistance];\r\n                ++currentItemIndex;\r\n\r\n                if (currentItemIndex >= this.items.length) {\r\n                    // We rendered all items\r\n                    return;\r\n                }\r\n            }\r\n\r\n            trackPos += beltLength;\r\n        }\r\n    }\r\n}\r\n","import { DrawParameters } from \"../core/draw_parameters\";\r\nimport { Loader } from \"../core/loader\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { Entity } from \"./entity\";\r\nimport { GameRoot, enumLayer } from \"./root\";\r\nimport { findNiceIntegerValue } from \"../core/utils\";\r\nimport { blueprintShape } from \"./upgrades\";\r\nimport { globalConfig } from \"../core/config\";\r\n\r\nconst logger = createLogger(\"blueprint\");\r\n\r\nexport class Blueprint {\r\n    /**\r\n     * @param {Array<Entity>} entities\r\n     */\r\n    constructor(entities) {\r\n        this.entities = entities;\r\n    }\r\n\r\n    /**\r\n     * Returns the layer of this blueprint\r\n     * @returns {enumLayer}\r\n     */\r\n    get layer() {\r\n        if (this.entities.length === 0) {\r\n            return enumLayer.regular;\r\n        }\r\n        return this.entities[0].layer;\r\n    }\r\n\r\n    /**\r\n     * Creates a new blueprint from the given entity uids\r\n     * @param {GameRoot} root\r\n     * @param {Array<number>} uids\r\n     */\r\n    static fromUids(root, uids) {\r\n        const newEntities = [];\r\n\r\n        let averagePosition = new Vector();\r\n\r\n        // First, create a copy\r\n        for (let i = 0; i < uids.length; ++i) {\r\n            const entity = root.entityMgr.findByUid(uids[i]);\r\n            assert(entity, \"Entity for blueprint not found:\" + uids[i]);\r\n\r\n            const clone = entity.duplicateWithoutContents();\r\n            newEntities.push(clone);\r\n\r\n            const pos = entity.components.StaticMapEntity.getTileSpaceBounds().getCenter();\r\n            averagePosition.addInplace(pos);\r\n        }\r\n\r\n        averagePosition.divideScalarInplace(uids.length);\r\n        const blueprintOrigin = averagePosition.subScalars(0.5, 0.5).floor();\r\n\r\n        for (let i = 0; i < uids.length; ++i) {\r\n            newEntities[i].components.StaticMapEntity.origin.subInplace(blueprintOrigin);\r\n        }\r\n\r\n        // Now, make sure the origin is 0,0\r\n        return new Blueprint(newEntities);\r\n    }\r\n\r\n    /**\r\n     * Returns the cost of this blueprint in shapes\r\n     */\r\n    getCost() {\r\n        if (G_IS_DEV && globalConfig.debug.blueprintsNoCost) {\r\n            return 0;\r\n        }\r\n        return findNiceIntegerValue(4 * Math.pow(this.entities.length, 1.1));\r\n    }\r\n\r\n    /**\r\n     * Draws the blueprint at the given origin\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters, tile) {\r\n        parameters.context.globalAlpha = 0.8;\r\n        for (let i = 0; i < this.entities.length; ++i) {\r\n            const entity = this.entities[i];\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const newPos = staticComp.origin.add(tile);\r\n\r\n            const rect = staticComp.getTileSpaceBounds();\r\n            rect.moveBy(tile.x, tile.y);\r\n\r\n            if (!parameters.root.logic.checkCanPlaceEntity(entity, tile)) {\r\n                parameters.context.globalAlpha = 0.3;\r\n            } else {\r\n                parameters.context.globalAlpha = 1;\r\n            }\r\n\r\n            staticComp.drawSpriteOnFullEntityBounds(\r\n                parameters,\r\n                staticComp.getBlueprintSprite(),\r\n                0,\r\n                true,\r\n                newPos\r\n            );\r\n        }\r\n        parameters.context.globalAlpha = 1;\r\n    }\r\n\r\n    /**\r\n     * Rotates the blueprint clockwise\r\n     */\r\n    rotateCw() {\r\n        for (let i = 0; i < this.entities.length; ++i) {\r\n            const entity = this.entities[i];\r\n            const staticComp = entity.components.StaticMapEntity;\r\n\r\n            staticComp.rotation = (staticComp.rotation + 90) % 360;\r\n            staticComp.originalRotation = (staticComp.originalRotation + 90) % 360;\r\n            staticComp.origin = staticComp.origin.rotateFastMultipleOf90(90);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rotates the blueprint counter clock wise\r\n     */\r\n    rotateCcw() {\r\n        // Well ...\r\n        for (let i = 0; i < 3; ++i) {\r\n            this.rotateCw();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the blueprint can be placed at the given tile\r\n     * @param {GameRoot} root\r\n     * @param {Vector} tile\r\n     */\r\n    canPlace(root, tile) {\r\n        let anyPlaceable = false;\r\n\r\n        for (let i = 0; i < this.entities.length; ++i) {\r\n            const entity = this.entities[i];\r\n            if (root.logic.checkCanPlaceEntity(entity, tile)) {\r\n                anyPlaceable = true;\r\n            }\r\n        }\r\n\r\n        return anyPlaceable;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    canAfford(root) {\r\n        return root.hubGoals.getShapesStoredByKey(blueprintShape) >= this.getCost();\r\n    }\r\n\r\n    /**\r\n     * Attempts to place the blueprint at the given tile\r\n     * @param {GameRoot} root\r\n     * @param {Vector} tile\r\n     */\r\n    tryPlace(root, tile) {\r\n        return root.logic.performBulkOperation(() => {\r\n            let anyPlaced = false;\r\n            for (let i = 0; i < this.entities.length; ++i) {\r\n                const entity = this.entities[i];\r\n                if (!root.logic.checkCanPlaceEntity(entity, tile)) {\r\n                    continue;\r\n                }\r\n\r\n                const clone = entity.duplicateWithoutContents();\r\n                clone.components.StaticMapEntity.origin.addInplace(tile);\r\n                root.logic.freeEntityAreaBeforeBuild(clone);\r\n                root.map.placeStaticEntity(clone);\r\n                root.entityMgr.registerEntity(clone);\r\n                anyPlaced = true;\r\n            }\r\n            return anyPlaced;\r\n        });\r\n    }\r\n}\r\n","import { MetaBuilding, defaultBuildingVariant } from \"./meta_building\";\r\nimport { AtlasSprite } from \"../core/sprites\";\r\n\r\n/**\r\n * @typedef {{\r\n *   metaClass: typeof MetaBuilding,\r\n *   metaInstance?: MetaBuilding,\r\n *   variant?: string,\r\n *   rotationVariant?: number,\r\n *   sprite?: AtlasSprite,\r\n *   blueprintSprite?: AtlasSprite,\r\n *   silhouetteColor?: string\r\n * }} BuildingVariantIdentifier\r\n */\r\n\r\n/**\r\n * Stores a lookup table for all building variants (for better performance)\r\n * @type {Object<number, BuildingVariantIdentifier>}\r\n */\r\nexport const gBuildingVariants = {\r\n    // Set later\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} id\r\n * @param {*} meta\r\n * @param {*} variant\r\n * @param {*} rotationVariant\r\n */\r\nexport function registerBuildingVariant(id, meta, variant = defaultBuildingVariant, rotationVariant = 0) {\r\n    assert(!gBuildingVariants[id], \"Duplicate id: \" + id);\r\n    gBuildingVariants[id] = {\r\n        metaClass: meta,\r\n        variant,\r\n        rotationVariant,\r\n    };\r\n}\r\n\r\n/**\r\n *\r\n * @param {number} code\r\n * @returns {BuildingVariantIdentifier}\r\n */\r\nexport function getBuildingDataFromCode(code) {\r\n    assert(gBuildingVariants[code], \"Invalid building code: \" + code);\r\n    return gBuildingVariants[code];\r\n}\r\n\r\n/**\r\n * Finds the code for a given variant\r\n * @param {MetaBuilding} metaBuilding\r\n * @param {string} variant\r\n * @param {number} rotationVariant\r\n */\r\nexport function getCodeFromBuildingData(metaBuilding, variant, rotationVariant) {\r\n    for (const key in gBuildingVariants) {\r\n        const data = gBuildingVariants[key];\r\n        if (\r\n            data.metaInstance.getId() === metaBuilding.getId() &&\r\n            data.variant === variant &&\r\n            data.rotationVariant === rotationVariant\r\n        ) {\r\n            return +key;\r\n        }\r\n    }\r\n    assertAlways(\r\n        false,\r\n        \"Building not found by data: \" + metaBuilding.getId() + \" / \" + variant + \" / \" + rotationVariant\r\n    );\r\n    return 0;\r\n}\r\n","import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { enumItemType } from \"../base_item\";\r\nimport { EnergyConsumerComponent } from \"../components/energy_consumer\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding } from \"../meta_building\";\r\nimport { enumLayer, GameRoot } from \"../root\";\r\n\r\nexport class MetaAdvancedProcessorBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"advanced_processor\");\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#25d7b8\";\r\n    }\r\n\r\n    getDimensions(variant) {\r\n        return new Vector(2, 2);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.advancedProcessor);\r\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(\"reward_inverter\");\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new ItemProcessorComponent({\r\n                inputsPerCharge: 1,\r\n                processorType: enumItemProcessorTypes.advancedProcessor,\r\n            })\r\n        );\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [\r\n                    { pos: new Vector(1, 0), direction: enumDirection.right },\r\n                    { pos: new Vector(1, 0), direction: enumDirection.top, layer: enumLayer.wires },\r\n                ],\r\n            })\r\n        );\r\n        entity.addComponent(\r\n            new EnergyConsumerComponent({\r\n                bufferSize: 3,\r\n                perCharge: 1,\r\n                batteryPosition: new Vector(0.63, 0.7),\r\n                acceptorSlotIndex: 1,\r\n                ejectorSlotIndex: 1,\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new WiredPinsComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        direction: enumDirection.top,\r\n                        type: enumPinSlotType.positiveEnergyAcceptor,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        direction: enumDirection.top,\r\n                        type: enumPinSlotType.negativeEnergyEjector,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 1),\r\n                        directions: [enumDirection.left],\r\n                    },\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.top],\r\n                        filter: enumItemType.positiveEnergy,\r\n                        layer: enumLayer.wires,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Loader } from \"../../core/loader\";\r\nimport { enumDirection } from \"../../core/vector\";\r\nimport { SOUNDS } from \"../../platform/sound\";\r\nimport { arrayBeltVariantToRotation, MetaBeltBaseBuilding } from \"./belt_base\";\r\n\r\nexport class MetaBeltBuilding extends MetaBeltBaseBuilding {\r\n    constructor() {\r\n        super(\"belt\");\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#777\";\r\n    }\r\n\r\n    getPlacementSound() {\r\n        return SOUNDS.placeBelt;\r\n    }\r\n\r\n    getPreviewSprite(rotationVariant) {\r\n        switch (arrayBeltVariantToRotation[rotationVariant]) {\r\n            case enumDirection.top: {\r\n                return Loader.getSprite(\"sprites/buildings/belt_top.png\");\r\n            }\r\n            case enumDirection.left: {\r\n                return Loader.getSprite(\"sprites/buildings/belt_left.png\");\r\n            }\r\n            case enumDirection.right: {\r\n                return Loader.getSprite(\"sprites/buildings/belt_right.png\");\r\n            }\r\n            default: {\r\n                assertAlways(false, \"Invalid belt rotation variant\");\r\n            }\r\n        }\r\n    }\r\n\r\n    getBlueprintSprite(rotationVariant) {\r\n        switch (arrayBeltVariantToRotation[rotationVariant]) {\r\n            case enumDirection.top: {\r\n                return Loader.getSprite(\"sprites/blueprints/belt_top.png\");\r\n            }\r\n            case enumDirection.left: {\r\n                return Loader.getSprite(\"sprites/blueprints/belt_left.png\");\r\n            }\r\n            case enumDirection.right: {\r\n                return Loader.getSprite(\"sprites/blueprints/belt_right.png\");\r\n            }\r\n            default: {\r\n                assertAlways(false, \"Invalid belt rotation variant\");\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumAngleToDirection, enumDirection, Vector } from \"../../core/vector\";\r\nimport { SOUNDS } from \"../../platform/sound\";\r\nimport { T } from \"../../translations\";\r\nimport { BeltComponent } from \"../components/belt\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { ReplaceableMapEntityComponent } from \"../components/replaceable_map_entity\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot, enumLayer } from \"../root\";\r\n\r\nexport const arrayBeltVariantToRotation = [enumDirection.top, enumDirection.left, enumDirection.right];\r\n\r\nexport class MetaBeltBaseBuilding extends MetaBuilding {\r\n    getHasDirectionLockAvailable() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        const beltSpeed = root.hubGoals.getBeltBaseSpeed(enumLayer.regular);\r\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(beltSpeed)]];\r\n    }\r\n\r\n    getStayInPlacementMode() {\r\n        return true;\r\n    }\r\n\r\n    getRotateAutomaticallyWhilePlacing() {\r\n        return true;\r\n    }\r\n\r\n    getPlacementSound() {\r\n        return SOUNDS.placeBelt;\r\n    }\r\n\r\n    getSprite() {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new BeltComponent({\r\n                direction: enumDirection.top, // updated later\r\n            })\r\n        );\r\n        // Make this entity replaceabel\r\n        entity.addComponent(new ReplaceableMapEntityComponent());\r\n\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        layer: this.getLayer(),\r\n                    },\r\n                ],\r\n                animated: false,\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        direction: enumDirection.top, // updated later\r\n                        layer: this.getLayer(),\r\n                    },\r\n                ],\r\n                instantEject: true,\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     */\r\n    updateVariants(entity, rotationVariant) {\r\n        entity.components.Belt.direction = arrayBeltVariantToRotation[rotationVariant];\r\n        entity.components.ItemEjector.slots[0].direction = arrayBeltVariantToRotation[rotationVariant];\r\n    }\r\n\r\n    /**\r\n     * Should compute the optimal rotation variant on the given tile\r\n     * @param {object} param0\r\n     * @param {GameRoot} param0.root\r\n     * @param {Vector} param0.tile\r\n     * @param {number} param0.rotation\r\n     * @param {string} param0.variant\r\n     * @param {string} param0.layer\r\n     * @return {{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }}\r\n     */\r\n    computeOptimalDirectionAndRotationVariantAtTile({ root, tile, rotation, variant, layer }) {\r\n        const topDirection = enumAngleToDirection[rotation];\r\n        const rightDirection = enumAngleToDirection[(rotation + 90) % 360];\r\n        const bottomDirection = enumAngleToDirection[(rotation + 180) % 360];\r\n        const leftDirection = enumAngleToDirection[(rotation + 270) % 360];\r\n\r\n        const { ejectors, acceptors } = root.logic.getEjectorsAndAcceptorsAtTile(tile, layer);\r\n\r\n        let hasBottomEjector = false;\r\n        let hasRightEjector = false;\r\n        let hasLeftEjector = false;\r\n\r\n        let hasTopAcceptor = false;\r\n        let hasLeftAcceptor = false;\r\n        let hasRightAcceptor = false;\r\n\r\n        // Check all ejectors\r\n        for (let i = 0; i < ejectors.length; ++i) {\r\n            const ejector = ejectors[i];\r\n\r\n            if (ejector.toDirection === topDirection) {\r\n                hasBottomEjector = true;\r\n            } else if (ejector.toDirection === leftDirection) {\r\n                hasRightEjector = true;\r\n            } else if (ejector.toDirection === rightDirection) {\r\n                hasLeftEjector = true;\r\n            }\r\n        }\r\n\r\n        // Check all acceptors\r\n        for (let i = 0; i < acceptors.length; ++i) {\r\n            const acceptor = acceptors[i];\r\n            if (acceptor.fromDirection === bottomDirection) {\r\n                hasTopAcceptor = true;\r\n            } else if (acceptor.fromDirection === rightDirection) {\r\n                hasLeftAcceptor = true;\r\n            } else if (acceptor.fromDirection === leftDirection) {\r\n                hasRightAcceptor = true;\r\n            }\r\n        }\r\n\r\n        // Soo .. if there is any ejector below us we always prioritize\r\n        // this ejector\r\n        if (!hasBottomEjector) {\r\n            // When something ejects to us from the left and nothing from the right,\r\n            // do a curve from the left to the top\r\n\r\n            if (hasRightEjector && !hasLeftEjector) {\r\n                return {\r\n                    rotation: (rotation + 270) % 360,\r\n                    rotationVariant: 2,\r\n                };\r\n            }\r\n\r\n            // When something ejects to us from the right and nothing from the left,\r\n            // do a curve from the right to the top\r\n            if (hasLeftEjector && !hasRightEjector) {\r\n                return {\r\n                    rotation: (rotation + 90) % 360,\r\n                    rotationVariant: 1,\r\n                };\r\n            }\r\n        }\r\n\r\n        // When there is a top acceptor, ignore sides\r\n        // NOTICE: This makes the belt prefer side turns *way* too much!\r\n        if (!hasTopAcceptor) {\r\n            // When there is an acceptor to the right but no acceptor to the left,\r\n            // do a turn to the right\r\n            if (hasRightAcceptor && !hasLeftAcceptor) {\r\n                return {\r\n                    rotation,\r\n                    rotationVariant: 2,\r\n                };\r\n            }\r\n\r\n            // When there is an acceptor to the left but no acceptor to the right,\r\n            // do a turn to the left\r\n            if (hasLeftAcceptor && !hasRightAcceptor) {\r\n                return {\r\n                    rotation,\r\n                    rotationVariant: 1,\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            rotation,\r\n            rotationVariant: 0,\r\n        };\r\n    }\r\n}\r\n","import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { enumItemType } from \"../base_item\";\r\n\r\n/** @enum {string} */\r\nexport const enumCutterVariants = { quad: \"quad\" };\r\n\r\nexport class MetaCutterBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"cutter\");\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#7dcda2\";\r\n    }\r\n\r\n    getDimensions(variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant:\r\n                return new Vector(2, 1);\r\n            case enumCutterVariants.quad:\r\n                return new Vector(4, 1);\r\n            default:\r\n                assertAlways(false, \"Unknown splitter variant: \" + variant);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        const speed = root.hubGoals.getProcessorBaseSpeed(\r\n            variant === enumCutterVariants.quad\r\n                ? enumItemProcessorTypes.cutterQuad\r\n                : enumItemProcessorTypes.cutter\r\n        );\r\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        if (root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_cutter_quad)) {\r\n            return [defaultBuildingVariant, enumCutterVariants.quad];\r\n        }\r\n        return super.getAvailableVariants(root);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_cutter_and_trash);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new ItemProcessorComponent({\r\n                inputsPerCharge: 1,\r\n                processorType: enumItemProcessorTypes.cutter,\r\n            })\r\n        );\r\n        entity.addComponent(new ItemEjectorComponent({}));\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant: {\r\n                entity.components.ItemEjector.setSlots([\r\n                    { pos: new Vector(0, 0), direction: enumDirection.top },\r\n                    { pos: new Vector(1, 0), direction: enumDirection.top },\r\n                ]);\r\n                entity.components.ItemProcessor.type = enumItemProcessorTypes.cutter;\r\n                break;\r\n            }\r\n            case enumCutterVariants.quad: {\r\n                entity.components.ItemEjector.setSlots([\r\n                    { pos: new Vector(0, 0), direction: enumDirection.top },\r\n                    { pos: new Vector(1, 0), direction: enumDirection.top },\r\n                    { pos: new Vector(2, 0), direction: enumDirection.top },\r\n                    { pos: new Vector(3, 0), direction: enumDirection.top },\r\n                ]);\r\n                entity.components.ItemProcessor.type = enumItemProcessorTypes.cutterQuad;\r\n                break;\r\n            }\r\n\r\n            default:\r\n                assertAlways(false, \"Unknown painter variant: \" + variant);\r\n        }\r\n    }\r\n}\r\n","import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { enumItemType } from \"../base_item\";\r\nimport { EnergyGeneratorComponent } from \"../components/energy_generator\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding } from \"../meta_building\";\r\nimport { enumLayer, GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaEnergyGenerator extends MetaBuilding {\r\n    constructor() {\r\n        super(\"energy_generator\");\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#c425d7\";\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        // TODO\r\n        return [];\r\n    }\r\n\r\n    getDimensions(variant) {\r\n        return new Vector(2, 2);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return true;\r\n        // return root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_cutter_and_trash);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 1),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 1),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        directions: [enumDirection.top],\r\n                        layer: enumLayer.wires,\r\n                        filter: enumItemType.negativeEnergy,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        direction: enumDirection.top,\r\n                        layer: enumLayer.wires,\r\n                    },\r\n                ],\r\n                instantEject: true,\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new EnergyGeneratorComponent({\r\n                // Set by the energy generator system later\r\n                requiredKey: null,\r\n                wasteAcceptorSlotIndex: 2,\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new WiredPinsComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        type: enumPinSlotType.positiveEnergyEjector,\r\n                        direction: enumDirection.top,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        type: enumPinSlotType.negativeEnergyAcceptor,\r\n                        direction: enumDirection.top,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { enumItemType } from \"../base_item\";\r\nimport { HubComponent } from \"../components/hub\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { UnremovableComponent } from \"../components/unremovable\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding } from \"../meta_building\";\r\n\r\nexport class MetaHubBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"hub\");\r\n    }\r\n\r\n    getDimensions() {\r\n        return new Vector(4, 4);\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#eb5555\";\r\n    }\r\n\r\n    isRotateable() {\r\n        return false;\r\n    }\r\n\r\n    getBlueprintSprite() {\r\n        return null;\r\n    }\r\n\r\n    getSprite() {\r\n        // We render it ourself\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(new HubComponent());\r\n        entity.addComponent(\r\n            new ItemProcessorComponent({\r\n                inputsPerCharge: 1,\r\n                processorType: enumItemProcessorTypes.hub,\r\n            })\r\n        );\r\n\r\n        entity.addComponent(new UnremovableComponent());\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.top, enumDirection.left],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        directions: [enumDirection.top],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(2, 0),\r\n                        directions: [enumDirection.top],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(3, 0),\r\n                        directions: [enumDirection.top, enumDirection.right],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(0, 3),\r\n                        directions: [enumDirection.bottom, enumDirection.left],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 3),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(2, 3),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(3, 3),\r\n                        directions: [enumDirection.bottom, enumDirection.right],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(0, 1),\r\n                        directions: [enumDirection.left],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(0, 2),\r\n                        directions: [enumDirection.left],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(0, 3),\r\n                        directions: [enumDirection.left],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(3, 1),\r\n                        directions: [enumDirection.right],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(3, 2),\r\n                        directions: [enumDirection.right],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(3, 3),\r\n                        directions: [enumDirection.right],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { MinerComponent } from \"../components/miner\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding, defaultBuildingVariant } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { T } from \"../../translations\";\r\nimport { round1Digit, round2Digits, formatItemsPerSecond } from \"../../core/utils\";\r\n\r\n/** @enum {string} */\r\nexport const enumMinerVariants = { chainable: \"chainable\" };\r\n\r\nexport class MetaMinerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"miner\");\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#b37dcd\";\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        const speed = root.hubGoals.getMinerBaseSpeed();\r\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        if (root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_miner_chainable)) {\r\n            return [defaultBuildingVariant, enumMinerVariants.chainable];\r\n        }\r\n        return super.getAvailableVariants(root);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(new MinerComponent({}));\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [{ pos: new Vector(0, 0), direction: enumDirection.top }],\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        entity.components.Miner.chainable = variant === enumMinerVariants.chainable;\r\n    }\r\n}\r\n","import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { enumItemType } from \"../base_item\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\n\r\nexport class MetaMixerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"mixer\");\r\n    }\r\n\r\n    getDimensions() {\r\n        return new Vector(2, 1);\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#cdbb7d\";\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_mixer);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.mixer);\r\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new ItemProcessorComponent({\r\n                inputsPerCharge: 2,\r\n                processorType: enumItemProcessorTypes.mixer,\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [{ pos: new Vector(0, 0), direction: enumDirection.top }],\r\n            })\r\n        );\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.color,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.color,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { enumItemType } from \"../base_item\";\r\n\r\n/** @enum {string} */\r\nexport const enumPainterVariants = { mirrored: \"mirrored\", double: \"double\", quad: \"quad\" };\r\n\r\nexport class MetaPainterBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"painter\");\r\n    }\r\n\r\n    getDimensions(variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant:\r\n            case enumPainterVariants.mirrored:\r\n                return new Vector(2, 1);\r\n            case enumPainterVariants.double:\r\n                return new Vector(2, 2);\r\n            case enumPainterVariants.quad:\r\n                return new Vector(4, 1);\r\n            default:\r\n                assertAlways(false, \"Unknown painter variant: \" + variant);\r\n        }\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#cd9b7d\";\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant:\r\n            case enumPainterVariants.mirrored: {\r\n                const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.painter);\r\n                return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n            }\r\n            case enumPainterVariants.double: {\r\n                const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.painterDouble);\r\n                return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed, true)]];\r\n            }\r\n            case enumPainterVariants.quad: {\r\n                const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.painterQuad);\r\n                return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        let variants = [defaultBuildingVariant, enumPainterVariants.mirrored];\r\n        if (root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_painter_double)) {\r\n            variants.push(enumPainterVariants.double);\r\n        }\r\n        if (root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_painter_quad)) {\r\n            variants.push(enumPainterVariants.quad);\r\n        }\r\n        return variants;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_painter);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(new ItemProcessorComponent({}));\r\n\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [{ pos: new Vector(1, 0), direction: enumDirection.right }],\r\n            })\r\n        );\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.left],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        directions: [enumDirection.top],\r\n                        filter: enumItemType.color,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant:\r\n            case enumPainterVariants.mirrored: {\r\n                entity.components.ItemAcceptor.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.left],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        directions: [\r\n                            variant === defaultBuildingVariant ? enumDirection.top : enumDirection.bottom,\r\n                        ],\r\n                        filter: enumItemType.color,\r\n                    },\r\n                ]);\r\n\r\n                entity.components.ItemProcessor.type = enumItemProcessorTypes.painter;\r\n                entity.components.ItemProcessor.inputsPerCharge = 2;\r\n                entity.components.ItemEjector.setSlots([\r\n                    { pos: new Vector(1, 0), direction: enumDirection.right },\r\n                ]);\r\n                break;\r\n            }\r\n            case enumPainterVariants.double: {\r\n                entity.components.ItemAcceptor.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.left],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(0, 1),\r\n                        directions: [enumDirection.left],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        directions: [enumDirection.top],\r\n                        filter: enumItemType.color,\r\n                    },\r\n                ]);\r\n\r\n                entity.components.ItemProcessor.type = enumItemProcessorTypes.painterDouble;\r\n                entity.components.ItemProcessor.inputsPerCharge = 3;\r\n\r\n                entity.components.ItemEjector.setSlots([\r\n                    { pos: new Vector(1, 0), direction: enumDirection.right },\r\n                ]);\r\n                break;\r\n            }\r\n            case enumPainterVariants.quad: {\r\n                entity.components.ItemAcceptor.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.left],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.color,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.color,\r\n                    },\r\n                    {\r\n                        pos: new Vector(2, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.color,\r\n                    },\r\n                    {\r\n                        pos: new Vector(3, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.color,\r\n                    },\r\n                ]);\r\n\r\n                entity.components.ItemProcessor.type = enumItemProcessorTypes.painterQuad;\r\n                entity.components.ItemProcessor.inputsPerCharge = 5;\r\n\r\n                entity.components.ItemEjector.setSlots([\r\n                    { pos: new Vector(0, 0), direction: enumDirection.top },\r\n                ]);\r\n                break;\r\n            }\r\n            default:\r\n                assertAlways(false, \"Unknown painter variant: \" + variant);\r\n        }\r\n    }\r\n}\r\n","import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { enumItemType } from \"../base_item\";\r\n\r\n/** @enum {string} */\r\nexport const enumRotaterVariants = { ccw: \"ccw\", fl: \"fl\" };\r\n\r\nexport class MetaRotaterBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"rotater\");\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#7dc6cd\";\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant: {\r\n                const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.rotater);\r\n                return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n            }\r\n            case enumRotaterVariants.ccw: {\r\n                const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.rotaterCCW);\r\n                return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n            }\r\n            case enumRotaterVariants.fl: {\r\n                const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.rotaterFL);\r\n                return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        let variants = [defaultBuildingVariant];\r\n        if (root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_rotater_ccw)) {\r\n            variants.push(enumRotaterVariants.ccw);\r\n        }\r\n        if (root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_rotater_fl)) {\r\n            variants.push(enumRotaterVariants.fl);\r\n        }\r\n        return variants;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_rotater);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new ItemProcessorComponent({\r\n                inputsPerCharge: 1,\r\n                processorType: enumItemProcessorTypes.rotater,\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [{ pos: new Vector(0, 0), direction: enumDirection.top }],\r\n            })\r\n        );\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant: {\r\n                entity.components.ItemProcessor.type = enumItemProcessorTypes.rotater;\r\n                break;\r\n            }\r\n            case enumRotaterVariants.ccw: {\r\n                entity.components.ItemProcessor.type = enumItemProcessorTypes.rotaterCCW;\r\n                break;\r\n            }\r\n            case enumRotaterVariants.fl: {\r\n                entity.components.ItemProcessor.type = enumItemProcessorTypes.rotaterFL;\r\n                break;\r\n            }\r\n            default:\r\n                assertAlways(false, \"Unknown rotater variant: \" + variant);\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding, defaultBuildingVariant } from \"../meta_building\";\r\nimport { GameRoot, enumLayer } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { T } from \"../../translations\";\r\nimport { formatItemsPerSecond } from \"../../core/utils\";\r\n\r\n/** @enum {string} */\r\nexport const enumSplitterVariants = { compact: \"compact\", compactInverse: \"compact-inverse\" };\r\n\r\nexport class MetaSplitterBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"splitter\");\r\n    }\r\n\r\n    getDimensions(variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant:\r\n                return new Vector(2, 1);\r\n            case enumSplitterVariants.compact:\r\n            case enumSplitterVariants.compactInverse:\r\n                return new Vector(1, 1);\r\n            default:\r\n                assertAlways(false, \"Unknown splitter variant: \" + variant);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.splitter);\r\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#444\";\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        if (root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_splitter_compact)) {\r\n            return [\r\n                defaultBuildingVariant,\r\n                enumSplitterVariants.compact,\r\n                enumSplitterVariants.compactInverse,\r\n            ];\r\n        }\r\n        return super.getAvailableVariants(root);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_splitter);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [], // set later\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new ItemProcessorComponent({\r\n                inputsPerCharge: 1,\r\n                processorType: enumItemProcessorTypes.splitter,\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [], // set later\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant: {\r\n                entity.components.ItemAcceptor.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        directions: [enumDirection.bottom],\r\n                    },\r\n                ]);\r\n\r\n                entity.components.ItemEjector.setSlots([\r\n                    { pos: new Vector(0, 0), direction: enumDirection.top },\r\n                    { pos: new Vector(1, 0), direction: enumDirection.top },\r\n                ]);\r\n\r\n                entity.components.ItemAcceptor.beltUnderlays = [\r\n                    { pos: new Vector(0, 0), direction: enumDirection.top, layer: enumLayer.regular },\r\n                    { pos: new Vector(1, 0), direction: enumDirection.top, layer: enumLayer.regular },\r\n                ];\r\n\r\n                break;\r\n            }\r\n            case enumSplitterVariants.compact:\r\n            case enumSplitterVariants.compactInverse: {\r\n                entity.components.ItemAcceptor.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                    },\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [\r\n                            variant === enumSplitterVariants.compactInverse\r\n                                ? enumDirection.left\r\n                                : enumDirection.right,\r\n                        ],\r\n                    },\r\n                ]);\r\n\r\n                entity.components.ItemEjector.setSlots([\r\n                    { pos: new Vector(0, 0), direction: enumDirection.top },\r\n                ]);\r\n\r\n                entity.components.ItemAcceptor.beltUnderlays = [\r\n                    { pos: new Vector(0, 0), direction: enumDirection.top, layer: enumLayer.regular },\r\n                ];\r\n\r\n                break;\r\n            }\r\n            default:\r\n                assertAlways(false, \"Unknown painter variant: \" + variant);\r\n        }\r\n    }\r\n}\r\n","import { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { T } from \"../../translations\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding } from \"../meta_building\";\r\nimport { GameRoot } from \"../root\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { enumItemType } from \"../base_item\";\r\n\r\nexport class MetaStackerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"stacker\");\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#9fcd7d\";\r\n    }\r\n\r\n    getDimensions() {\r\n        return new Vector(2, 1);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes.stacker);\r\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_stacker);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new ItemProcessorComponent({\r\n                inputsPerCharge: 2,\r\n                processorType: enumItemProcessorTypes.stacker,\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [{ pos: new Vector(0, 0), direction: enumDirection.top }],\r\n            })\r\n        );\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding, defaultBuildingVariant } from \"../meta_building\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { GameRoot } from \"../root\";\r\nimport { StorageComponent } from \"../components/storage\";\r\nimport { T } from \"../../translations\";\r\nimport { formatBigNumber } from \"../../core/utils\";\r\n\r\n/** @enum {string} */\r\nexport const enumTrashVariants = { storage: \"storage\" };\r\n\r\nconst trashSize = 5000;\r\n\r\nexport class MetaTrashBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"trash\");\r\n    }\r\n\r\n    isRotateable(variant) {\r\n        return variant !== defaultBuildingVariant;\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#cd7d86\";\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        if (variant === enumTrashVariants.storage) {\r\n            return [[T.ingame.buildingPlacement.infoTexts.storage, formatBigNumber(trashSize)]];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    getDimensions(variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant:\r\n                return new Vector(1, 1);\r\n            case enumTrashVariants.storage:\r\n                return new Vector(2, 2);\r\n            default:\r\n                assertAlways(false, \"Unknown trash variant: \" + variant);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        if (root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_storage)) {\r\n            return [defaultBuildingVariant, enumTrashVariants.storage];\r\n        }\r\n        return super.getAvailableVariants(root);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_cutter_and_trash);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        // Required, since the item processor needs this.\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [],\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [\r\n                            enumDirection.top,\r\n                            enumDirection.right,\r\n                            enumDirection.bottom,\r\n                            enumDirection.left,\r\n                        ],\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant: {\r\n                if (!entity.components.ItemProcessor) {\r\n                    entity.addComponent(\r\n                        new ItemProcessorComponent({\r\n                            inputsPerCharge: 1,\r\n                            processorType: enumItemProcessorTypes.trash,\r\n                        })\r\n                    );\r\n                }\r\n                if (entity.components.Storage) {\r\n                    entity.removeComponent(StorageComponent);\r\n                }\r\n\r\n                entity.components.ItemAcceptor.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [\r\n                            enumDirection.top,\r\n                            enumDirection.right,\r\n                            enumDirection.bottom,\r\n                            enumDirection.left,\r\n                        ],\r\n                    },\r\n                ]);\r\n                entity.components.ItemEjector.setSlots([]);\r\n                entity.components.ItemProcessor.type = enumItemProcessorTypes.trash;\r\n                break;\r\n            }\r\n            case enumTrashVariants.storage: {\r\n                if (entity.components.ItemProcessor) {\r\n                    entity.removeComponent(ItemProcessorComponent);\r\n                }\r\n                if (!entity.components.Storage) {\r\n                    entity.addComponent(new StorageComponent({}));\r\n                }\r\n\r\n                entity.components.Storage.maximumStorage = trashSize;\r\n                entity.components.ItemAcceptor.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 1),\r\n                        directions: [enumDirection.bottom],\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 1),\r\n                        directions: [enumDirection.bottom],\r\n                    },\r\n                ]);\r\n\r\n                entity.components.ItemEjector.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        direction: enumDirection.top,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 0),\r\n                        direction: enumDirection.top,\r\n                    },\r\n                ]);\r\n                break;\r\n            }\r\n            default:\r\n                assertAlways(false, \"Unknown trash variant: \" + variant);\r\n        }\r\n    }\r\n}\r\n","import { Loader } from \"../../core/loader\";\r\nimport { enumDirection, Vector, enumAngleToDirection, enumDirectionToVector } from \"../../core/vector\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumUndergroundBeltMode, UndergroundBeltComponent } from \"../components/underground_belt\";\r\nimport { Entity } from \"../entity\";\r\nimport { MetaBuilding, defaultBuildingVariant } from \"../meta_building\";\r\nimport { GameRoot, enumLayer } from \"../root\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { enumHubGoalRewards } from \"../tutorial_goals\";\r\nimport { formatItemsPerSecond } from \"../../core/utils\";\r\nimport { T } from \"../../translations\";\r\n\r\n/** @enum {string} */\r\nexport const arrayUndergroundRotationVariantToMode = [\r\n    enumUndergroundBeltMode.sender,\r\n    enumUndergroundBeltMode.receiver,\r\n];\r\n\r\n/** @enum {string} */\r\nexport const enumUndergroundBeltVariants = { tier2: \"tier2\" };\r\n\r\nexport const enumUndergroundBeltVariantToTier = {\r\n    [defaultBuildingVariant]: 0,\r\n    [enumUndergroundBeltVariants.tier2]: 1,\r\n};\r\n\r\nexport class MetaUndergroundBeltBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"underground_belt\");\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#555\";\r\n    }\r\n\r\n    getFlipOrientationAfterPlacement() {\r\n        return true;\r\n    }\r\n\r\n    getStayInPlacementMode() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        const rangeTiles =\r\n            globalConfig.undergroundBeltMaxTilesByTier[enumUndergroundBeltVariantToTier[variant]];\r\n\r\n        const beltSpeed = root.hubGoals.getUndergroundBeltBaseSpeed();\r\n        return [\r\n            [\r\n                T.ingame.buildingPlacement.infoTexts.range,\r\n                T.ingame.buildingPlacement.infoTexts.tiles.replace(\"<x>\", \"\" + rangeTiles),\r\n            ],\r\n            [T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(beltSpeed)],\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        if (root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_underground_belt_tier_2)) {\r\n            return [defaultBuildingVariant, enumUndergroundBeltVariants.tier2];\r\n        }\r\n        return super.getAvailableVariants(root);\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    getPreviewSprite(rotationVariant, variant) {\r\n        let suffix = \"\";\r\n        if (variant !== defaultBuildingVariant) {\r\n            suffix = \"-\" + variant;\r\n        }\r\n\r\n        switch (arrayUndergroundRotationVariantToMode[rotationVariant]) {\r\n            case enumUndergroundBeltMode.sender:\r\n                return Loader.getSprite(\"sprites/buildings/underground_belt_entry\" + suffix + \".png\");\r\n            case enumUndergroundBeltMode.receiver:\r\n                return Loader.getSprite(\"sprites/buildings/underground_belt_exit\" + suffix + \".png\");\r\n            default:\r\n                assertAlways(false, \"Invalid rotation variant\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    getBlueprintSprite(rotationVariant, variant) {\r\n        let suffix = \"\";\r\n        if (variant !== defaultBuildingVariant) {\r\n            suffix = \"-\" + variant;\r\n        }\r\n\r\n        switch (arrayUndergroundRotationVariantToMode[rotationVariant]) {\r\n            case enumUndergroundBeltMode.sender:\r\n                return Loader.getSprite(\"sprites/blueprints/underground_belt_entry\" + suffix + \".png\");\r\n            case enumUndergroundBeltMode.receiver:\r\n                return Loader.getSprite(\"sprites/blueprints/underground_belt_exit\" + suffix + \".png\");\r\n            default:\r\n                assertAlways(false, \"Invalid rotation variant\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    getSprite(rotationVariant, variant) {\r\n        return this.getPreviewSprite(rotationVariant, variant);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_tunnel);\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        // Required, since the item processor needs this.\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [],\r\n            })\r\n        );\r\n\r\n        entity.addComponent(new UndergroundBeltComponent({}));\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [],\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Should compute the optimal rotation variant on the given tile\r\n     * @param {object} param0\r\n     * @param {GameRoot} param0.root\r\n     * @param {Vector} param0.tile\r\n     * @param {number} param0.rotation\r\n     * @param {string} param0.variant\r\n     * @param {string} param0.layer\r\n     * @return {{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }}\r\n     */\r\n    computeOptimalDirectionAndRotationVariantAtTile({ root, tile, rotation, variant, layer }) {\r\n        const searchDirection = enumAngleToDirection[rotation];\r\n        const searchVector = enumDirectionToVector[searchDirection];\r\n        const tier = enumUndergroundBeltVariantToTier[variant];\r\n\r\n        const targetRotation = (rotation + 180) % 360;\r\n        const targetSenderRotation = rotation;\r\n\r\n        for (\r\n            let searchOffset = 1;\r\n            searchOffset <= globalConfig.undergroundBeltMaxTilesByTier[tier];\r\n            ++searchOffset\r\n        ) {\r\n            tile = tile.addScalars(searchVector.x, searchVector.y);\r\n\r\n            /* WIRES: FIXME */\r\n            const contents = root.map.getTileContent(tile, enumLayer.regular);\r\n            if (contents) {\r\n                const undergroundComp = contents.components.UndergroundBelt;\r\n                if (undergroundComp && undergroundComp.tier === tier) {\r\n                    const staticComp = contents.components.StaticMapEntity;\r\n                    if (staticComp.rotation === targetRotation) {\r\n                        if (undergroundComp.mode !== enumUndergroundBeltMode.sender) {\r\n                            // If we encounter an underground receiver on our way which is also faced in our direction, we don't accept that\r\n                            break;\r\n                        }\r\n                        return {\r\n                            rotation: targetRotation,\r\n                            rotationVariant: 1,\r\n                            connectedEntities: [contents],\r\n                        };\r\n                    } else if (staticComp.rotation === targetSenderRotation) {\r\n                        // Draw connections to receivers\r\n                        if (undergroundComp.mode === enumUndergroundBeltMode.receiver) {\r\n                            return {\r\n                                rotation: rotation,\r\n                                rotationVariant: 0,\r\n                                connectedEntities: [contents],\r\n                            };\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            rotation,\r\n            rotationVariant: 0,\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        entity.components.UndergroundBelt.tier = enumUndergroundBeltVariantToTier[variant];\r\n\r\n        switch (arrayUndergroundRotationVariantToMode[rotationVariant]) {\r\n            case enumUndergroundBeltMode.sender: {\r\n                entity.components.UndergroundBelt.mode = enumUndergroundBeltMode.sender;\r\n                entity.components.ItemEjector.setSlots([]);\r\n                entity.components.ItemAcceptor.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                    },\r\n                ]);\r\n                return;\r\n            }\r\n            case enumUndergroundBeltMode.receiver: {\r\n                entity.components.UndergroundBelt.mode = enumUndergroundBeltMode.receiver;\r\n                entity.components.ItemAcceptor.setSlots([]);\r\n                entity.components.ItemEjector.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        direction: enumDirection.top,\r\n                    },\r\n                ]);\r\n                return;\r\n            }\r\n            default:\r\n                assertAlways(false, \"Invalid rotation variant\");\r\n        }\r\n    }\r\n}\r\n","import { Loader } from \"../../core/loader\";\r\nimport { enumDirection } from \"../../core/vector\";\r\nimport { enumLayer } from \"../root\";\r\nimport { arrayBeltVariantToRotation, MetaBeltBaseBuilding } from \"./belt_base\";\r\n\r\nexport class MetaWireBaseBuilding extends MetaBeltBaseBuilding {\r\n    constructor() {\r\n        super(\"wire\");\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#c425d7\";\r\n    }\r\n\r\n    getLayer() {\r\n        return enumLayer.wires;\r\n    }\r\n\r\n    getPreviewSprite(rotationVariant) {\r\n        switch (arrayBeltVariantToRotation[rotationVariant]) {\r\n            case enumDirection.top: {\r\n                return Loader.getSprite(\"sprites/buildings/wire_top.png\");\r\n            }\r\n            case enumDirection.left: {\r\n                return Loader.getSprite(\"sprites/buildings/wire_left.png\");\r\n            }\r\n            case enumDirection.right: {\r\n                return Loader.getSprite(\"sprites/buildings/wire_right.png\");\r\n            }\r\n            default: {\r\n                assertAlways(false, \"Invalid belt rotation variant\");\r\n            }\r\n        }\r\n    }\r\n\r\n    getBlueprintSprite(rotationVariant) {\r\n        switch (arrayBeltVariantToRotation[rotationVariant]) {\r\n            case enumDirection.top: {\r\n                return Loader.getSprite(\"sprites/blueprints/wire_top.png\");\r\n            }\r\n            case enumDirection.left: {\r\n                return Loader.getSprite(\"sprites/blueprints/wire_left.png\");\r\n            }\r\n            case enumDirection.right: {\r\n                return Loader.getSprite(\"sprites/blueprints/wire_right.png\");\r\n            }\r\n            default: {\r\n                assertAlways(false, \"Invalid belt rotation variant\");\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { enumItemType } from \"../base_item\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../meta_building\";\r\nimport { enumLayer, GameRoot } from \"../root\";\r\n\r\n/** @enum {string} */\r\nexport const enumWireCrossingVariants = {\r\n    // Default = splitter\r\n    merger: \"merger\",\r\n};\r\n\r\nexport class MetaWireCrossingsBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(\"wire_crossings\");\r\n    }\r\n\r\n    getDimensions(variant) {\r\n        return new Vector(1, 1);\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return \"#c425d7\";\r\n    }\r\n\r\n    getLayer() {\r\n        return enumLayer.wires;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        return [defaultBuildingVariant, enumWireCrossingVariants.merger];\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [], // set later\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new ItemProcessorComponent({\r\n                inputsPerCharge: 1,\r\n                processorType: enumItemProcessorTypes.splitterWires,\r\n            })\r\n        );\r\n\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [], // set later\r\n                instantEject: true,\r\n            })\r\n        );\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {\r\n        switch (variant) {\r\n            case defaultBuildingVariant: {\r\n                entity.components.ItemAcceptor.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                        layer: enumLayer.wires,\r\n                    },\r\n                ]);\r\n\r\n                entity.components.ItemEjector.setSlots([\r\n                    { pos: new Vector(0, 0), direction: enumDirection.top, layer: enumLayer.wires },\r\n                    { pos: new Vector(0, 0), direction: enumDirection.right, layer: enumLayer.wires },\r\n                ]);\r\n\r\n                break;\r\n            }\r\n            case enumWireCrossingVariants.merger: {\r\n                entity.components.ItemAcceptor.setSlots([\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.top],\r\n                        layer: enumLayer.wires,\r\n                    },\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.right],\r\n                        layer: enumLayer.wires,\r\n                    },\r\n                ]);\r\n\r\n                entity.components.ItemEjector.setSlots([\r\n                    { pos: new Vector(0, 0), direction: enumDirection.bottom, layer: enumLayer.wires },\r\n                ]);\r\n                break;\r\n            }\r\n            default:\r\n                assertAlways(false, \"Unknown painter variant: \" + variant);\r\n        }\r\n    }\r\n}\r\n","import { clickDetectorGlobals } from \"../core/click_detector\";\r\nimport { globalConfig, SUPPORT_TOUCH } from \"../core/config\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { Rectangle } from \"../core/rectangle\";\r\nimport { Signal, STOP_PROPAGATION } from \"../core/signal\";\r\nimport { clamp } from \"../core/utils\";\r\nimport { mixVector, Vector } from \"../core/vector\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { KEYMAPPINGS } from \"./key_action_mapper\";\r\nimport { GameRoot } from \"./root\";\r\n\r\nconst logger = createLogger(\"camera\");\r\n\r\nexport const USER_INTERACT_MOVE = \"move\";\r\nexport const USER_INTERACT_ZOOM = \"zoom\";\r\nexport const USER_INTERACT_TOUCHEND = \"touchend\";\r\n\r\nconst velocitySmoothing = 0.5;\r\nconst velocityFade = 0.98;\r\nconst velocityStrength = 0.4;\r\nconst velocityMax = 20;\r\nconst ticksBeforeErasingVelocity = 10;\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const enumMouseButton = {\r\n    left: \"left\",\r\n    middle: \"middle\",\r\n    right: \"right\",\r\n};\r\n\r\nexport class Camera extends BasicSerializableObject {\r\n    constructor(root) {\r\n        super();\r\n\r\n        /** @type {GameRoot} */\r\n        this.root = root;\r\n\r\n        // Zoom level, 2 means double size\r\n\r\n        // Find optimal initial zoom\r\n\r\n        this.zoomLevel = this.findInitialZoom();\r\n        this.clampZoomLevel();\r\n\r\n        /** @type {Vector} */\r\n        this.center = new Vector(0, 0);\r\n\r\n        // Input handling\r\n        this.currentlyMoving = false;\r\n        this.lastMovingPosition = null;\r\n        this.lastMovingPositionLastTick = null;\r\n        this.numTicksStandingStill = null;\r\n        this.cameraUpdateTimeBucket = 0.0;\r\n        this.didMoveSinceTouchStart = false;\r\n        this.currentlyPinching = false;\r\n        this.lastPinchPositions = null;\r\n\r\n        this.keyboardForce = new Vector();\r\n\r\n        // Signal which gets emitted once the user changed something\r\n        this.userInteraction = new Signal();\r\n\r\n        /** @type {Vector} */\r\n        this.currentShake = new Vector(0, 0);\r\n\r\n        /** @type {Vector} */\r\n        this.currentPan = new Vector(0, 0);\r\n\r\n        // Set desired pan (camera movement)\r\n        /** @type {Vector} */\r\n        this.desiredPan = new Vector(0, 0);\r\n\r\n        // Set desired camera center\r\n        /** @type {Vector} */\r\n        this.desiredCenter = null;\r\n\r\n        // Set desired camera zoom\r\n        /** @type {number} */\r\n        this.desiredZoom = null;\r\n\r\n        /** @type {Vector} */\r\n        this.touchPostMoveVelocity = new Vector(0, 0);\r\n\r\n        // Handlers\r\n        this.downPreHandler = /** @type {TypedSignal<[Vector, enumMouseButton]>} */ (new Signal());\r\n        this.movePreHandler = /** @type {TypedSignal<[Vector]>} */ (new Signal());\r\n        // this.pinchPreHandler = /** @type {TypedSignal<[Vector]>} */ (new Signal());\r\n        this.upPostHandler = /** @type {TypedSignal<[Vector]>} */ (new Signal());\r\n\r\n        this.internalInitEvents();\r\n        this.clampZoomLevel();\r\n        this.bindKeys();\r\n        if (G_IS_DEV) {\r\n            window.addEventListener(\"keydown\", ev => {\r\n                if (ev.key === \"i\") {\r\n                    this.zoomLevel = 3;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Serialization\r\n    static getId() {\r\n        return \"Camera\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            zoomLevel: types.float,\r\n            center: types.vector,\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        const errorCode = super.deserialize(data);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n\r\n        // Safety\r\n        this.clampZoomLevel();\r\n    }\r\n\r\n    // Simple geters & setters\r\n\r\n    addScreenShake(amount) {\r\n        const currentShakeAmount = this.currentShake.length();\r\n        const scale = 1 / (1 + 3 * currentShakeAmount);\r\n        this.currentShake.x = this.currentShake.x + 2 * (Math.random() - 0.5) * scale * amount;\r\n        this.currentShake.y = this.currentShake.y + 2 * (Math.random() - 0.5) * scale * amount;\r\n    }\r\n\r\n    /**\r\n     * Sets a point in world space to focus on\r\n     * @param {Vector} center\r\n     */\r\n    setDesiredCenter(center) {\r\n        this.desiredCenter = center.copy();\r\n        this.currentlyMoving = false;\r\n    }\r\n\r\n    /**\r\n     * Sets a desired zoom level\r\n     * @param {number} zoom\r\n     */\r\n    setDesiredZoom(zoom) {\r\n        this.desiredZoom = zoom;\r\n    }\r\n\r\n    /**\r\n     * Returns if this camera is currently moving by a non-user interaction\r\n     */\r\n    isCurrentlyMovingToDesiredCenter() {\r\n        return this.desiredCenter !== null;\r\n    }\r\n\r\n    /**\r\n     * Sets the camera pan, every frame the camera will move by this amount\r\n     * @param {Vector} pan\r\n     */\r\n    setPan(pan) {\r\n        this.desiredPan = pan.copy();\r\n    }\r\n\r\n    /**\r\n     * Finds a good initial zoom level\r\n     */\r\n    findInitialZoom() {\r\n        const desiredWorldSpaceWidth = 15 * globalConfig.tileSize;\r\n        const zoomLevelX = this.root.gameWidth / desiredWorldSpaceWidth;\r\n        const zoomLevelY = this.root.gameHeight / desiredWorldSpaceWidth;\r\n\r\n        const finalLevel = Math.min(zoomLevelX, zoomLevelY);\r\n        assert(\r\n            Number.isFinite(finalLevel) && finalLevel > 0,\r\n            \"Invalid zoom level computed for initial zoom: \" + finalLevel\r\n        );\r\n        return finalLevel;\r\n    }\r\n\r\n    /**\r\n     * Clears all animations\r\n     */\r\n    clearAnimations() {\r\n        this.touchPostMoveVelocity.x = 0;\r\n        this.touchPostMoveVelocity.y = 0;\r\n        this.desiredCenter = null;\r\n        this.desiredPan.x = 0;\r\n        this.desiredPan.y = 0;\r\n        this.currentPan.x = 0;\r\n        this.currentPan.y = 0;\r\n        this.currentlyPinching = false;\r\n        this.currentlyMoving = false;\r\n        this.lastMovingPosition = null;\r\n        this.didMoveSinceTouchStart = false;\r\n        this.desiredZoom = null;\r\n    }\r\n\r\n    /**\r\n     * Returns if the user is currently interacting with the camera\r\n     * @returns {boolean} true if the user interacts\r\n     */\r\n    isCurrentlyInteracting() {\r\n        if (this.currentlyPinching) {\r\n            return true;\r\n        }\r\n        if (this.currentlyMoving) {\r\n            // Only interacting if moved at least once\r\n            return this.didMoveSinceTouchStart;\r\n        }\r\n        if (this.touchPostMoveVelocity.lengthSquare() > 1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns if in the next frame the viewport will change\r\n     * @returns {boolean} true if it willchange\r\n     */\r\n    viewportWillChange() {\r\n        return this.desiredCenter !== null || this.desiredZoom !== null || this.isCurrentlyInteracting();\r\n    }\r\n\r\n    /**\r\n     * Cancels all interactions, that is user interaction and non user interaction\r\n     */\r\n    cancelAllInteractions() {\r\n        this.touchPostMoveVelocity = new Vector(0, 0);\r\n        this.desiredCenter = null;\r\n        this.currentlyMoving = false;\r\n        this.currentlyPinching = false;\r\n        this.desiredZoom = null;\r\n    }\r\n\r\n    /**\r\n     * Returns effective viewport width\r\n     */\r\n    getViewportWidth() {\r\n        return this.root.gameWidth / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns effective viewport height\r\n     */\r\n    getViewportHeight() {\r\n        return this.root.gameHeight / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns effective world space viewport left\r\n     */\r\n    getViewportLeft() {\r\n        return this.center.x - this.getViewportWidth() / 2 + (this.currentShake.x * 10) / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns effective world space viewport right\r\n     */\r\n    getViewportRight() {\r\n        return this.center.x + this.getViewportWidth() / 2 + (this.currentShake.x * 10) / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns effective world space viewport top\r\n     */\r\n    getViewportTop() {\r\n        return this.center.y - this.getViewportHeight() / 2 + (this.currentShake.x * 10) / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns effective world space viewport bottom\r\n     */\r\n    getViewportBottom() {\r\n        return this.center.y + this.getViewportHeight() / 2 + (this.currentShake.x * 10) / this.zoomLevel;\r\n    }\r\n\r\n    /**\r\n     * Returns the visible world space rect\r\n     * @returns {Rectangle}\r\n     */\r\n    getVisibleRect() {\r\n        return Rectangle.fromTRBL(\r\n            Math.floor(this.getViewportTop()),\r\n            Math.ceil(this.getViewportRight()),\r\n            Math.ceil(this.getViewportBottom()),\r\n            Math.floor(this.getViewportLeft())\r\n        );\r\n    }\r\n\r\n    getIsMapOverlayActive() {\r\n        return this.zoomLevel < globalConfig.mapChunkOverviewMinZoom;\r\n    }\r\n\r\n    /**\r\n     * Attaches all event listeners\r\n     */\r\n    internalInitEvents() {\r\n        this.eventListenerTouchStart = this.onTouchStart.bind(this);\r\n        this.eventListenerTouchEnd = this.onTouchEnd.bind(this);\r\n        this.eventListenerTouchMove = this.onTouchMove.bind(this);\r\n        this.eventListenerMousewheel = this.onMouseWheel.bind(this);\r\n        this.eventListenerMouseDown = this.onMouseDown.bind(this);\r\n        this.eventListenerMouseMove = this.onMouseMove.bind(this);\r\n        this.eventListenerMouseUp = this.onMouseUp.bind(this);\r\n\r\n        if (SUPPORT_TOUCH) {\r\n            this.root.canvas.addEventListener(\"touchstart\", this.eventListenerTouchStart);\r\n            this.root.canvas.addEventListener(\"touchend\", this.eventListenerTouchEnd);\r\n            this.root.canvas.addEventListener(\"touchcancel\", this.eventListenerTouchEnd);\r\n            this.root.canvas.addEventListener(\"touchmove\", this.eventListenerTouchMove);\r\n        }\r\n\r\n        this.root.canvas.addEventListener(\"wheel\", this.eventListenerMousewheel);\r\n        this.root.canvas.addEventListener(\"mousedown\", this.eventListenerMouseDown);\r\n        this.root.canvas.addEventListener(\"mousemove\", this.eventListenerMouseMove);\r\n        window.addEventListener(\"mouseup\", this.eventListenerMouseUp);\r\n        // this.root.canvas.addEventListener(\"mouseout\", this.eventListenerMouseUp);\r\n    }\r\n\r\n    /**\r\n     * Cleans up all event listeners\r\n     */\r\n    cleanup() {\r\n        if (SUPPORT_TOUCH) {\r\n            this.root.canvas.removeEventListener(\"touchstart\", this.eventListenerTouchStart);\r\n            this.root.canvas.removeEventListener(\"touchend\", this.eventListenerTouchEnd);\r\n            this.root.canvas.removeEventListener(\"touchcancel\", this.eventListenerTouchEnd);\r\n            this.root.canvas.removeEventListener(\"touchmove\", this.eventListenerTouchMove);\r\n        }\r\n\r\n        this.root.canvas.removeEventListener(\"wheel\", this.eventListenerMousewheel);\r\n        this.root.canvas.removeEventListener(\"mousedown\", this.eventListenerMouseDown);\r\n        this.root.canvas.removeEventListener(\"mousemove\", this.eventListenerMouseMove);\r\n        window.removeEventListener(\"mouseup\", this.eventListenerMouseUp);\r\n        // this.root.canvas.removeEventListener(\"mouseout\", this.eventListenerMouseUp);\r\n    }\r\n\r\n    /**\r\n     * Binds the arrow keys\r\n     */\r\n    bindKeys() {\r\n        const mapper = this.root.keyMapper;\r\n        mapper.getBinding(KEYMAPPINGS.navigation.mapMoveUp).add(() => (this.keyboardForce.y = -1));\r\n        mapper.getBinding(KEYMAPPINGS.navigation.mapMoveDown).add(() => (this.keyboardForce.y = 1));\r\n        mapper.getBinding(KEYMAPPINGS.navigation.mapMoveRight).add(() => (this.keyboardForce.x = 1));\r\n        mapper.getBinding(KEYMAPPINGS.navigation.mapMoveLeft).add(() => (this.keyboardForce.x = -1));\r\n\r\n        mapper\r\n            .getBinding(KEYMAPPINGS.navigation.mapZoomIn)\r\n            .add(() => (this.desiredZoom = this.zoomLevel * 1.2));\r\n        mapper\r\n            .getBinding(KEYMAPPINGS.navigation.mapZoomOut)\r\n            .add(() => (this.desiredZoom = this.zoomLevel * 0.8));\r\n\r\n        mapper.getBinding(KEYMAPPINGS.navigation.centerMap).add(() => this.centerOnMap());\r\n    }\r\n\r\n    centerOnMap() {\r\n        this.desiredCenter = new Vector(0, 0);\r\n    }\r\n\r\n    /**\r\n     * Converts from screen to world space\r\n     * @param {Vector} screen\r\n     * @returns {Vector} world space\r\n     */\r\n    screenToWorld(screen) {\r\n        const centerSpace = screen.subScalars(this.root.gameWidth / 2, this.root.gameHeight / 2);\r\n        return centerSpace.divideScalar(this.zoomLevel).add(this.center);\r\n    }\r\n\r\n    /**\r\n     * Converts from world to screen space\r\n     * @param {Vector} world\r\n     * @returns {Vector} screen space\r\n     */\r\n    worldToScreen(world) {\r\n        const screenSpace = world.sub(this.center).multiplyScalar(this.zoomLevel);\r\n        return screenSpace.addScalars(this.root.gameWidth / 2, this.root.gameHeight / 2);\r\n    }\r\n\r\n    /**\r\n     * Returns if a point is on screen\r\n     * @param {Vector} point\r\n     * @returns {boolean} true if its on screen\r\n     */\r\n    isWorldPointOnScreen(point) {\r\n        const rect = this.getVisibleRect();\r\n        return rect.containsPoint(point.x, point.y);\r\n    }\r\n\r\n    /**\r\n     * Returns if we can further zoom in\r\n     * @returns {boolean}\r\n     */\r\n    canZoomIn() {\r\n        const maxLevel = this.root.app.platformWrapper.getMaximumZoom();\r\n        return this.zoomLevel <= maxLevel - 0.01;\r\n    }\r\n\r\n    /**\r\n     * Returns if we can further zoom out\r\n     * @returns {boolean}\r\n     */\r\n    canZoomOut() {\r\n        const minLevel = this.root.app.platformWrapper.getMinimumZoom();\r\n        return this.zoomLevel >= minLevel + 0.01;\r\n    }\r\n\r\n    // EVENTS\r\n\r\n    /**\r\n     * Checks if the mouse event is too close after a touch event and thus\r\n     * should get ignored\r\n     */\r\n    checkPreventDoubleMouse() {\r\n        if (performance.now() - clickDetectorGlobals.lastTouchTime < 1000.0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Mousedown handler\r\n     * @param {MouseEvent} event\r\n     */\r\n    onMouseDown(event) {\r\n        if (event.cancelable) {\r\n            event.preventDefault();\r\n            // event.stopPropagation();\r\n        }\r\n\r\n        if (!this.checkPreventDoubleMouse()) {\r\n            return;\r\n        }\r\n\r\n        this.touchPostMoveVelocity = new Vector(0, 0);\r\n        if (event.button === 0) {\r\n            this.combinedSingleTouchStartHandler(event.clientX, event.clientY);\r\n        } else if (event.button === 1) {\r\n            this.downPreHandler.dispatch(new Vector(event.clientX, event.clientY), enumMouseButton.middle);\r\n        } else if (event.button === 2) {\r\n            this.downPreHandler.dispatch(new Vector(event.clientX, event.clientY), enumMouseButton.right);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Mousemove handler\r\n     * @param {MouseEvent} event\r\n     */\r\n    onMouseMove(event) {\r\n        if (event.cancelable) {\r\n            event.preventDefault();\r\n            // event.stopPropagation();\r\n        }\r\n\r\n        if (!this.checkPreventDoubleMouse()) {\r\n            return;\r\n        }\r\n\r\n        if (event.button === 0) {\r\n            this.combinedSingleTouchMoveHandler(event.clientX, event.clientY);\r\n        }\r\n\r\n        // Clamp everything afterwards\r\n        this.clampZoomLevel();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Mouseup handler\r\n     * @param {MouseEvent=} event\r\n     */\r\n    onMouseUp(event) {\r\n        if (event) {\r\n            if (event.cancelable) {\r\n                event.preventDefault();\r\n                // event.stopPropagation();\r\n            }\r\n        }\r\n\r\n        if (!this.checkPreventDoubleMouse()) {\r\n            return;\r\n        }\r\n\r\n        this.combinedSingleTouchStopHandler(event.clientX, event.clientY);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Mousewheel event\r\n     * @param {WheelEvent} event\r\n     */\r\n    onMouseWheel(event) {\r\n        if (event.cancelable) {\r\n            event.preventDefault();\r\n            // event.stopPropagation();\r\n        }\r\n        const prevZoom = this.zoomLevel;\r\n\r\n        const delta = Math.sign(event.deltaY) * -0.15 * this.root.app.settings.getScrollWheelSensitivity();\r\n        assert(Number.isFinite(delta), \"Got invalid delta in mouse wheel event: \" + event.deltaY);\r\n        assert(Number.isFinite(this.zoomLevel), \"Got invalid zoom level *before* wheel: \" + this.zoomLevel);\r\n        this.zoomLevel *= 1 + delta;\r\n        assert(Number.isFinite(this.zoomLevel), \"Got invalid zoom level *after* wheel: \" + this.zoomLevel);\r\n\r\n        this.clampZoomLevel();\r\n        this.desiredZoom = null;\r\n\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (mousePosition) {\r\n            const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n            const worldDelta = worldPos.sub(this.center);\r\n            const actualDelta = this.zoomLevel / prevZoom - 1;\r\n            this.center = this.center.add(worldDelta.multiplyScalar(actualDelta));\r\n            this.desiredCenter = null;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Touch start handler\r\n     * @param {TouchEvent} event\r\n     */\r\n    onTouchStart(event) {\r\n        if (event.cancelable) {\r\n            event.preventDefault();\r\n            // event.stopPropagation();\r\n        }\r\n\r\n        clickDetectorGlobals.lastTouchTime = performance.now();\r\n        this.touchPostMoveVelocity = new Vector(0, 0);\r\n\r\n        if (event.touches.length === 1) {\r\n            const touch = event.touches[0];\r\n            this.combinedSingleTouchStartHandler(touch.clientX, touch.clientY);\r\n        } else if (event.touches.length === 2) {\r\n            // if (this.pinchPreHandler.dispatch() === STOP_PROPAGATION) {\r\n            //     // Something prevented pinching\r\n            //     return false;\r\n            // }\r\n\r\n            const touch1 = event.touches[0];\r\n            const touch2 = event.touches[1];\r\n            this.currentlyMoving = false;\r\n            this.currentlyPinching = true;\r\n            this.lastPinchPositions = [\r\n                new Vector(touch1.clientX, touch1.clientY),\r\n                new Vector(touch2.clientX, touch2.clientY),\r\n            ];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Touch move handler\r\n     * @param {TouchEvent} event\r\n     */\r\n    onTouchMove(event) {\r\n        if (event.cancelable) {\r\n            event.preventDefault();\r\n            // event.stopPropagation();\r\n        }\r\n\r\n        clickDetectorGlobals.lastTouchTime = performance.now();\r\n\r\n        if (event.touches.length === 1) {\r\n            const touch = event.touches[0];\r\n            this.combinedSingleTouchMoveHandler(touch.clientX, touch.clientY);\r\n        } else if (event.touches.length === 2) {\r\n            if (this.currentlyPinching) {\r\n                const touch1 = event.touches[0];\r\n                const touch2 = event.touches[1];\r\n\r\n                const newPinchPositions = [\r\n                    new Vector(touch1.clientX, touch1.clientY),\r\n                    new Vector(touch2.clientX, touch2.clientY),\r\n                ];\r\n\r\n                // Get distance of taps last time and now\r\n                const lastDistance = this.lastPinchPositions[0].distance(this.lastPinchPositions[1]);\r\n                const thisDistance = newPinchPositions[0].distance(newPinchPositions[1]);\r\n\r\n                // IMPORTANT to do math max here to avoid NaN and causing an invalid zoom level\r\n                const difference = thisDistance / Math.max(0.001, lastDistance);\r\n\r\n                // Find old center of zoom\r\n                let oldCenter = this.lastPinchPositions[0].centerPoint(this.lastPinchPositions[1]);\r\n\r\n                // Find new center of zoom\r\n                let center = newPinchPositions[0].centerPoint(newPinchPositions[1]);\r\n\r\n                // Compute movement\r\n                let movement = oldCenter.sub(center);\r\n                this.center.x += movement.x / this.zoomLevel;\r\n                this.center.y += movement.y / this.zoomLevel;\r\n\r\n                // Compute zoom\r\n                center = center.sub(new Vector(this.root.gameWidth / 2, this.root.gameHeight / 2));\r\n\r\n                // Apply zoom\r\n                assert(\r\n                    Number.isFinite(difference),\r\n                    \"Invalid pinch difference: \" +\r\n                        difference +\r\n                        \"(last=\" +\r\n                        lastDistance +\r\n                        \", new = \" +\r\n                        thisDistance +\r\n                        \")\"\r\n                );\r\n                this.zoomLevel *= difference;\r\n\r\n                // Stick to pivot point\r\n                const correcture = center.multiplyScalar(difference - 1).divideScalar(this.zoomLevel);\r\n\r\n                this.center = this.center.add(correcture);\r\n                this.lastPinchPositions = newPinchPositions;\r\n                this.userInteraction.dispatch(USER_INTERACT_MOVE);\r\n\r\n                // Since we zoomed, abort any programmed zooming\r\n                if (this.desiredZoom) {\r\n                    this.desiredZoom = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Clamp everything afterwards\r\n        this.clampZoomLevel();\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Touch end and cancel handler\r\n     * @param {TouchEvent=} event\r\n     */\r\n    onTouchEnd(event) {\r\n        if (event) {\r\n            if (event.cancelable) {\r\n                event.preventDefault();\r\n                // event.stopPropagation();\r\n            }\r\n        }\r\n\r\n        clickDetectorGlobals.lastTouchTime = performance.now();\r\n        if (event.changedTouches.length === 0) {\r\n            logger.warn(\"Touch end without changed touches\");\r\n        }\r\n\r\n        const touch = event.changedTouches[0];\r\n        this.combinedSingleTouchStopHandler(touch.clientX, touch.clientY);\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Internal touch start handler\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    combinedSingleTouchStartHandler(x, y) {\r\n        const pos = new Vector(x, y);\r\n        if (this.downPreHandler.dispatch(pos, enumMouseButton.left) === STOP_PROPAGATION) {\r\n            // Somebody else captured it\r\n            return;\r\n        }\r\n\r\n        this.touchPostMoveVelocity = new Vector(0, 0);\r\n        this.currentlyMoving = true;\r\n        this.lastMovingPosition = pos;\r\n        this.lastMovingPositionLastTick = null;\r\n        this.numTicksStandingStill = 0;\r\n        this.didMoveSinceTouchStart = false;\r\n    }\r\n\r\n    /**\r\n     * Internal touch move handler\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    combinedSingleTouchMoveHandler(x, y) {\r\n        const pos = new Vector(x, y);\r\n        if (this.movePreHandler.dispatch(pos) === STOP_PROPAGATION) {\r\n            // Somebody else captured it\r\n            return;\r\n        }\r\n\r\n        if (!this.currentlyMoving) {\r\n            return false;\r\n        }\r\n\r\n        let delta = this.lastMovingPosition.sub(pos).divideScalar(this.zoomLevel);\r\n        if (G_IS_DEV && globalConfig.debug.testCulling) {\r\n            // When testing culling, we see everything from the same distance\r\n            delta = delta.multiplyScalar(this.zoomLevel * -2);\r\n        }\r\n\r\n        this.didMoveSinceTouchStart = this.didMoveSinceTouchStart || delta.length() > 0;\r\n        this.center = this.center.add(delta);\r\n\r\n        this.touchPostMoveVelocity = this.touchPostMoveVelocity\r\n            .multiplyScalar(velocitySmoothing)\r\n            .add(delta.multiplyScalar(1 - velocitySmoothing));\r\n\r\n        this.lastMovingPosition = pos;\r\n        this.userInteraction.dispatch(USER_INTERACT_MOVE);\r\n\r\n        // Since we moved, abort any programmed moving\r\n        if (this.desiredCenter) {\r\n            this.desiredCenter = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal touch stop handler\r\n     */\r\n    combinedSingleTouchStopHandler(x, y) {\r\n        if (this.currentlyMoving || this.currentlyPinching) {\r\n            this.currentlyMoving = false;\r\n            this.currentlyPinching = false;\r\n            this.lastMovingPosition = null;\r\n            this.lastMovingPositionLastTick = null;\r\n            this.numTicksStandingStill = 0;\r\n            this.lastPinchPositions = null;\r\n            this.userInteraction.dispatch(USER_INTERACT_TOUCHEND);\r\n            this.didMoveSinceTouchStart = false;\r\n        }\r\n        this.upPostHandler.dispatch(new Vector(x, y));\r\n    }\r\n\r\n    /**\r\n     * Clamps the camera zoom level within the allowed range\r\n     */\r\n    clampZoomLevel() {\r\n        if (G_IS_DEV && globalConfig.debug.disableZoomLimits) {\r\n            return;\r\n        }\r\n        const wrapper = this.root.app.platformWrapper;\r\n\r\n        assert(Number.isFinite(this.zoomLevel), \"Invalid zoom level *before* clamp: \" + this.zoomLevel);\r\n        this.zoomLevel = clamp(this.zoomLevel, wrapper.getMinimumZoom(), wrapper.getMaximumZoom());\r\n        assert(Number.isFinite(this.zoomLevel), \"Invalid zoom level *after* clamp: \" + this.zoomLevel);\r\n\r\n        if (this.desiredZoom) {\r\n            this.desiredZoom = clamp(this.desiredZoom, wrapper.getMinimumZoom(), wrapper.getMaximumZoom());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the camera\r\n     * @param {number} dt Delta time in milliseconds\r\n     */\r\n    update(dt) {\r\n        dt = Math.min(dt, 33);\r\n        this.cameraUpdateTimeBucket += dt;\r\n\r\n        // Simulate movement of N FPS\r\n        const updatesPerFrame = 4;\r\n        const physicsStepSizeMs = 1000.0 / (60.0 * updatesPerFrame);\r\n\r\n        let now = this.root.time.systemNow() - 3 * physicsStepSizeMs;\r\n\r\n        while (this.cameraUpdateTimeBucket > physicsStepSizeMs) {\r\n            now += physicsStepSizeMs;\r\n            this.cameraUpdateTimeBucket -= physicsStepSizeMs;\r\n\r\n            this.internalUpdatePanning(now, physicsStepSizeMs);\r\n            this.internalUpdateZooming(now, physicsStepSizeMs);\r\n            this.internalUpdateCentering(now, physicsStepSizeMs);\r\n            this.internalUpdateShake(now, physicsStepSizeMs);\r\n            this.internalUpdateKeyboardForce(now, physicsStepSizeMs);\r\n        }\r\n        this.clampZoomLevel();\r\n    }\r\n\r\n    /**\r\n     * Prepares a context to transform it\r\n     * @param {CanvasRenderingContext2D} context\r\n     */\r\n    transform(context) {\r\n        if (G_IS_DEV && globalConfig.debug.testCulling) {\r\n            context.transform(1, 0, 0, 1, 100, 100);\r\n            return;\r\n        }\r\n\r\n        this.clampZoomLevel();\r\n        const zoom = this.zoomLevel;\r\n\r\n        context.transform(\r\n            // Scale, skew, rotate\r\n            zoom,\r\n            0,\r\n            0,\r\n            zoom,\r\n\r\n            // Translate\r\n            -zoom * this.getViewportLeft(),\r\n            -zoom * this.getViewportTop()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Internal shake handler\r\n     * @param {number} now Time now in seconds\r\n     * @param {number} dt Delta time\r\n     */\r\n    internalUpdateShake(now, dt) {\r\n        this.currentShake = this.currentShake.multiplyScalar(0.92);\r\n    }\r\n\r\n    /**\r\n     * Internal pan handler\r\n     * @param {number} now Time now in seconds\r\n     * @param {number} dt Delta time\r\n     */\r\n    internalUpdatePanning(now, dt) {\r\n        const baseStrength = velocityStrength * this.root.app.platformWrapper.getTouchPanStrength();\r\n\r\n        this.touchPostMoveVelocity = this.touchPostMoveVelocity.multiplyScalar(velocityFade);\r\n\r\n        // Check if the camera is being dragged but standing still: if not, zero out `touchPostMoveVelocity`.\r\n        if (this.currentlyMoving && this.desiredCenter === null) {\r\n            if (\r\n                this.lastMovingPositionLastTick !== null &&\r\n                this.lastMovingPositionLastTick.equalsEpsilon(this.lastMovingPosition)\r\n            ) {\r\n                this.numTicksStandingStill++;\r\n            } else {\r\n                this.numTicksStandingStill = 0;\r\n            }\r\n            this.lastMovingPositionLastTick = this.lastMovingPosition.copy();\r\n\r\n            if (this.numTicksStandingStill >= ticksBeforeErasingVelocity) {\r\n                this.touchPostMoveVelocity.x = 0;\r\n                this.touchPostMoveVelocity.y = 0;\r\n            }\r\n        }\r\n        // Check influence of past points\r\n        if (!this.currentlyMoving && !this.currentlyPinching) {\r\n            const len = this.touchPostMoveVelocity.length();\r\n            if (len >= velocityMax) {\r\n                this.touchPostMoveVelocity.x = (this.touchPostMoveVelocity.x * velocityMax) / len;\r\n                this.touchPostMoveVelocity.y = (this.touchPostMoveVelocity.y * velocityMax) / len;\r\n            }\r\n\r\n            this.center = this.center.add(this.touchPostMoveVelocity.multiplyScalar(baseStrength));\r\n\r\n            // Panning\r\n            this.currentPan = mixVector(this.currentPan, this.desiredPan, 0.06);\r\n            this.center = this.center.add(this.currentPan.multiplyScalar((0.5 * dt) / this.zoomLevel));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the non user interaction zooming\r\n     * @param {number} now Time now in seconds\r\n     * @param {number} dt Delta time\r\n     */\r\n    internalUpdateZooming(now, dt) {\r\n        if (!this.currentlyPinching && this.desiredZoom !== null) {\r\n            const diff = this.zoomLevel - this.desiredZoom;\r\n            if (Math.abs(diff) > 0.0001) {\r\n                let fade = 0.94;\r\n                if (diff > 0) {\r\n                    // Zoom out faster than in\r\n                    fade = 0.9;\r\n                }\r\n\r\n                assert(Number.isFinite(this.desiredZoom), \"Desired zoom is NaN: \" + this.desiredZoom);\r\n                assert(Number.isFinite(fade), \"Zoom fade is NaN: \" + fade);\r\n                this.zoomLevel = this.zoomLevel * fade + this.desiredZoom * (1 - fade);\r\n                assert(Number.isFinite(this.zoomLevel), \"Zoom level is NaN after fade: \" + this.zoomLevel);\r\n            } else {\r\n                this.desiredZoom = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the non user interaction centering\r\n     * @param {number} now Time now in seconds\r\n     * @param {number} dt Delta time\r\n     */\r\n    internalUpdateCentering(now, dt) {\r\n        if (!this.currentlyMoving && this.desiredCenter !== null) {\r\n            const diff = this.center.direction(this.desiredCenter);\r\n            const length = diff.length();\r\n            const tolerance = 1 / this.zoomLevel;\r\n            if (length > tolerance) {\r\n                const movement = diff.multiplyScalar(Math.min(1, dt * 0.008));\r\n                this.center.x += movement.x;\r\n                this.center.y += movement.y;\r\n            } else {\r\n                this.desiredCenter = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the keyboard forces\r\n     * @param {number} now\r\n     * @param {number} dt Delta time\r\n     */\r\n    internalUpdateKeyboardForce(now, dt) {\r\n        if (!this.currentlyMoving && this.desiredCenter == null) {\r\n            const limitingDimension = Math.min(this.root.gameWidth, this.root.gameHeight);\r\n\r\n            const moveAmount = ((limitingDimension / 2048) * dt) / this.zoomLevel;\r\n\r\n            let forceX = 0;\r\n            let forceY = 0;\r\n\r\n            const actionMapper = this.root.keyMapper;\r\n            if (actionMapper.getBinding(KEYMAPPINGS.navigation.mapMoveUp).pressed) {\r\n                forceY -= 1;\r\n            }\r\n\r\n            if (actionMapper.getBinding(KEYMAPPINGS.navigation.mapMoveDown).pressed) {\r\n                forceY += 1;\r\n            }\r\n\r\n            if (actionMapper.getBinding(KEYMAPPINGS.navigation.mapMoveLeft).pressed) {\r\n                forceX -= 1;\r\n            }\r\n\r\n            if (actionMapper.getBinding(KEYMAPPINGS.navigation.mapMoveRight).pressed) {\r\n                forceX += 1;\r\n            }\r\n\r\n            let movementSpeed =\r\n                this.root.app.settings.getMovementSpeed() *\r\n                (actionMapper.getBinding(KEYMAPPINGS.navigation.mapMoveFaster).pressed ? 4 : 1);\r\n\r\n            this.center.x += moveAmount * forceX * movementSpeed;\r\n            this.center.y += moveAmount * forceY * movementSpeed;\r\n        }\r\n    }\r\n}\r\n","import { customColors } from \"./custom/colors\";\r\n\r\n/** @enum {string} */\r\nexport const enumColors = {\r\n    red: \"red\",\r\n    green: \"green\",\r\n    blue: \"blue\",\r\n\r\n    yellow: \"yellow\",\r\n    magenta: \"magenta\",\r\n    cyan: \"cyan\",\r\n\r\n    white: \"white\",\r\n    uncolored: \"uncolored\",\r\n\r\n    black: \"black\",\r\n};\r\n\r\n/** @enum {string} */\r\nexport const enumColorToShortcode = {\r\n    [enumColors.red]: \"r\",\r\n    [enumColors.green]: \"g\",\r\n    [enumColors.blue]: \"b\",\r\n\r\n    [enumColors.yellow]: \"y\",\r\n    [enumColors.magenta]: \"m\",\r\n    [enumColors.cyan]: \"c\",\r\n\r\n    [enumColors.white]: \"w\",\r\n    [enumColors.uncolored]: \"u\",\r\n\r\n    [enumColors.black]: \"0\",\r\n};\r\n\r\n/** @enum {enumColors} */\r\nexport const enumShortcodeToColor = {};\r\n\r\n/** @enum {string} */\r\nexport const enumColorsToHexCode = {};\r\n\r\n/** @enum {enumColors} */\r\nexport const enumInvertedColors = {};\r\n\r\nconst c = enumColors;\r\n/** @enum {Object.<string, Object>} */\r\nexport const enumColorMixingResults = {};\r\n\r\n/**\r\n * @typedef {Object} ColorData\r\n * @property {string} id\r\n * @property {string} code\r\n * @property {string} hex\r\n * @property {string[][] | string[]} [mixingFrom]\r\n * @property {Object.<string, string>} [mixing]\r\n * @property {boolean} [spawnable]\r\n * @property {number} [minDistance]\r\n * @property {string} [inverted]\r\n * @property {number} [tier]\r\n */\r\n\r\n/** @enum {ColorData} */\r\nexport const allColorData = {\r\n    uncolored: {\r\n        id: \"uncolored\",\r\n        code: \"u\",\r\n        hex: \"#aaaaaa\",\r\n        mixing: {\r\n            any: \"any\",\r\n        },\r\n        inverted: \"this\",\r\n        tier: 0,\r\n    },\r\n    red: {\r\n        id: \"red\",\r\n        code: \"r\",\r\n        hex: \"#ff666a\",\r\n        // no recipes\r\n        spawnable: true,\r\n        tier: 1,\r\n    },\r\n    green: {\r\n        id: \"green\",\r\n        code: \"g\",\r\n        hex: \"#78ff66\",\r\n        // no recipes\r\n        spawnable: true,\r\n        tier: 1,\r\n    },\r\n    blue: {\r\n        id: \"blue\",\r\n        code: \"b\",\r\n        hex: \"#66a7ff\",\r\n        // no recipes\r\n        spawnable: true,\r\n        minDistance: 3,\r\n        tier: 1,\r\n    },\r\n    cyan: {\r\n        id: \"cyan\",\r\n        code: \"c\",\r\n        hex: \"#00fcff\",\r\n        mixingFrom: [\"green\", \"blue\"],\r\n        mixing: {\r\n            green: \"this\",\r\n            blue: \"this\",\r\n        },\r\n        inverted: \"red\",\r\n        tier: 2,\r\n    },\r\n    magenta: {\r\n        id: \"magenta\",\r\n        code: \"m\",\r\n        hex: \"#dd66ff\",\r\n        mixingFrom: [\"red\", \"blue\"],\r\n        mixing: {\r\n            red: \"this\",\r\n            blue: \"this\",\r\n        },\r\n        inverted: \"green\",\r\n        tier: 2,\r\n    },\r\n    yellow: {\r\n        id: \"yellow\",\r\n        code: \"y\",\r\n        hex: \"#fcf52a\",\r\n        mixingFrom: [\"red\", \"green\"],\r\n        mixing: {\r\n            red: \"this\",\r\n            green: \"this\",\r\n        },\r\n        inverted: \"blue\",\r\n        tier: 2,\r\n    },\r\n    white: {\r\n        id: \"white\",\r\n        code: \"w\",\r\n        hex: \"#ffffff\",\r\n        mixing: {\r\n            any: \"white\",\r\n        },\r\n        mixingFrom: [\r\n            [\"red\", \"cyan\"],\r\n            [\"green\", \"magenta\"],\r\n            [\"blue\", \"yellow\"],\r\n            [\"cyan\", \"magenta\"],\r\n            [\"cyan\", \"yellow\"],\r\n            [\"magenta\", \"yellow\"],\r\n        ],\r\n        inverted: \"black\",\r\n        tier: 3,\r\n    },\r\n    black: {\r\n        id: \"black\",\r\n        code: \"k\",\r\n        hex: \"#31383a\",\r\n        mixing: {\r\n            any: \"any\",\r\n            white: \"uncolored\",\r\n            uncolored: \"uncolored\",\r\n        },\r\n        tier: 4,\r\n    },\r\n};\r\n\r\n/**\r\n * @param {Object} colorData\r\n * @property {string} colorData.id\r\n * @property {string} colorData.code\r\n * @property {string} colorData.hex\r\n * @property {Object.<string, string>} [colorData.mixing]\r\n * @property {string[2][] | string[2]} [colorData.mixingFrom]\r\n */\r\nfunction registerColor(colorData) {\r\n    allColorData[colorData.id] = colorData;\r\n}\r\n\r\nexport let allowColorMixingMismatch = false;\r\nexport let allowColorMixingOverride = false;\r\nexport let allowColorMixingMissingSource = false;\r\nexport let allowColorMixingMissingTarget = false;\r\n\r\nfor (let data of customColors) {\r\n    registerColor(data);\r\n}\r\n\r\nconst mix = enumColorMixingResults;\r\n\r\ninitColors();\r\n\r\nexport function initColors() {\r\n    for (let c1 in allColorData) {\r\n        let data = allColorData[c1];\r\n        assert(data);\r\n        assert(data.id == c1);\r\n        assert(data.code.toLowerCase() == data.code);\r\n        if (data.disabled) {\r\n            continue;\r\n        }\r\n        if (data.spawnable && !data.minDistance) {\r\n            data.minDistance = 0;\r\n        }\r\n        enumColors[c1] = c1;\r\n        enumColorToShortcode[c1] = data.code;\r\n        enumShortcodeToColor[data.code] = c1;\r\n        enumColorsToHexCode[c1] = data.hex;\r\n        if (!mix[c1]) {\r\n            mix[c1] = {};\r\n        }\r\n        let mixing = mix[c1];\r\n        if (data.mixing) {\r\n            for (let c2 in data.mixing) {\r\n                if (c2 == \"any\") {\r\n                    continue;\r\n                }\r\n                let result = data.mixing[c2] == \"this\" ? c1 : data.mixing[c2] == \"any\" ? c2 : data.mixing[c2];\r\n                if (mixing[c2] && mixing[c2] != result) {\r\n                    if (!allowColorMixingOverride) {\r\n                        assertAlways(\r\n                            false,\r\n                            `Color mixing recipe overrides are not implemented (${c1}+${c2}=${mixing[c2]}->${result})`\r\n                        );\r\n                    }\r\n                }\r\n                mixing[c2] = result;\r\n            }\r\n        }\r\n        if (data.inverted) {\r\n            if (data.inverted == \"this\") {\r\n                enumInvertedColors[c1] = c1;\r\n            } else {\r\n                enumInvertedColors[c1] = data.inverted;\r\n            }\r\n        }\r\n    }\r\n    for (let id in allColorData) {\r\n        let data = allColorData[id];\r\n        let mixingFrom = !data.mixingFrom\r\n            ? []\r\n            : data.mixingFrom[0] instanceof Array\r\n            ? data.mixingFrom\r\n            : [data.mixingFrom];\r\n        for (let [c1, c2] of mixingFrom) {\r\n            if (!c[c1] || !c[c2]) {\r\n                if (!allowColorMixingMissingSource) {\r\n                    assertAlways(false, `Color mixing recipe source is not known (${c1}+${c2}=${id})`);\r\n                }\r\n                continue;\r\n            }\r\n            if (mix[c1][c2] && mix[c1][c2] != id) {\r\n                // TODO\r\n                throw \"wut\";\r\n            }\r\n            if (mix[c2][c1] && mix[c2][c1] != id) {\r\n                // TODO\r\n                throw \"wut\";\r\n            }\r\n            mix[c1][c2] = id;\r\n        }\r\n    }\r\n    for (let c1 in c) {\r\n        for (let c2 in c) {\r\n            if (mix[c1][c2] != mix[c2][c1]) {\r\n                if (mix[c1][c2] && mix[c2][c1] && !allowColorMixingMismatch) {\r\n                    assertAlways(\r\n                        false,\r\n                        `Color mixing recipe result mismatch (${c1}+${c2}=${mix[c1][c2]}/${mix[c2][c1]}}`\r\n                    );\r\n                }\r\n                mix[c1][c2] = mix[c2][c1] = mix[c1][c2] || mix[c2][c1];\r\n            }\r\n        }\r\n    }\r\n    for (let c1 in c) {\r\n        if (!mix[c1][c1]) {\r\n            mix[c1][c1] = c1;\r\n        }\r\n    }\r\n    let anyPairs = {};\r\n    for (let c1 in c) {\r\n        let mixing = allColorData[c1].mixing;\r\n        if (!mixing || !mixing.any) {\r\n            continue;\r\n        }\r\n        for (let c2 in c) {\r\n            if (mix[c1][c2] || mix[c2][c1]) {\r\n                continue;\r\n            }\r\n            if (anyPairs[`${c1}+${c2}`]) {\r\n                throw \"wut\";\r\n            }\r\n            anyPairs[`${c1}+${c2}`] = anyPairs[`${c2}+${c1}`] = true;\r\n            mix[c1][c2] = mix[c2][c1] = mixing.any == \"any\" ? c2 : mixing.any;\r\n        }\r\n    }\r\n    for (let c1 in c) {\r\n        for (let c2 in c) {\r\n            if (!mix[c1][c2]) {\r\n                assertAlways(false, \"Color mixing of\", c1, \"with\", c2, \"is not defined\");\r\n            }\r\n        }\r\n    }\r\n    for (let c1 in c) {\r\n        if (enumInvertedColors[c1] && !enumInvertedColors[enumInvertedColors[c1]]) {\r\n            enumInvertedColors[enumInvertedColors[c1]] = c1;\r\n        }\r\n    }\r\n}\r\n","import { BasicSerializableObject } from \"../savegame/serialization\";\r\n\r\nexport class Component extends BasicSerializableObject {\r\n    /**\r\n     * Returns the components unique id\r\n     * @returns {string}\r\n     */\r\n    static getId() {\r\n        abstract;\r\n        return \"unknown-component\";\r\n    }\r\n\r\n    /**\r\n     * Should return the schema used for serialization\r\n     */\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    /**\r\n     * Should duplicate the component but without its contents\r\n     * @returns {object}\r\n     */\r\n    duplicateWithoutContents() {\r\n        abstract;\r\n    }\r\n\r\n    /* dev:start */\r\n\r\n    /**\r\n     * Fixes typeof DerivedComponent is not assignable to typeof Component, compiled out\r\n     * in non-dev builds\r\n     */\r\n    constructor(...args) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Returns a string representing the components data, only in dev builds\r\n     * @returns {string}\r\n     */\r\n    getDebugString() {\r\n        return null;\r\n    }\r\n    /* dev:end */\r\n}\r\n","import { gComponentRegistry } from \"../core/global_registries\";\r\nimport { StaticMapEntityComponent } from \"./components/static_map_entity\";\r\nimport { BeltComponent } from \"./components/belt\";\r\nimport { ItemEjectorComponent } from \"./components/item_ejector\";\r\nimport { ItemAcceptorComponent } from \"./components/item_acceptor\";\r\nimport { MinerComponent } from \"./components/miner\";\r\nimport { ItemProcessorComponent } from \"./components/item_processor\";\r\nimport { ReplaceableMapEntityComponent } from \"./components/replaceable_map_entity\";\r\nimport { UndergroundBeltComponent } from \"./components/underground_belt\";\r\nimport { UnremovableComponent } from \"./components/unremovable\";\r\nimport { HubComponent } from \"./components/hub\";\r\nimport { StorageComponent } from \"./components/storage\";\r\nimport { EnergyGeneratorComponent } from \"./components/energy_generator\";\r\nimport { WiredPinsComponent } from \"./components/wired_pins\";\r\nimport { EnergyConsumerComponent } from \"./components/energy_consumer\";\r\n// import { allCustomBuildingData } from \"./custom/modBuildings\"\r\n\r\nexport function initComponentRegistry() {\r\n    gComponentRegistry.register(StaticMapEntityComponent);\r\n    gComponentRegistry.register(BeltComponent);\r\n    gComponentRegistry.register(ItemEjectorComponent);\r\n    gComponentRegistry.register(ItemAcceptorComponent);\r\n    gComponentRegistry.register(MinerComponent);\r\n    gComponentRegistry.register(ItemProcessorComponent);\r\n    gComponentRegistry.register(ReplaceableMapEntityComponent);\r\n    gComponentRegistry.register(UndergroundBeltComponent);\r\n    gComponentRegistry.register(UnremovableComponent);\r\n    gComponentRegistry.register(HubComponent);\r\n    gComponentRegistry.register(StorageComponent);\r\n    gComponentRegistry.register(EnergyGeneratorComponent);\r\n    gComponentRegistry.register(WiredPinsComponent);\r\n    gComponentRegistry.register(EnergyConsumerComponent);\r\n\r\n    // for (let custom of allCustomBuildingData) {\r\n    //     if (custom.component) {\r\n    //         gComponentRegistry.register(custom.component);\r\n    //     }\r\n    // }\r\n\r\n    // IMPORTANT ^^^^^ UPDATE ENTITY COMPONENT STORAGE AFTERWARDS\r\n\r\n    // Sanity check - If this is thrown, you (=me, lol) forgot to add a new component here\r\n\r\n    assert(\r\n        // @ts-ignore\r\n        require.context(\"./components\", false, /.*\\.js/i).keys().length + 0 === // allCustomBuildingData.filter(e => e.component).length ===\r\n            gComponentRegistry.getNumEntries(),\r\n        \"Not all components are registered\"\r\n    );\r\n\r\n    console.log(\"📦 There are\", gComponentRegistry.getNumEntries(), \"components\");\r\n}\r\n","import { enumDirection, Vector } from \"../../core/vector\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BeltPath } from \"../belt_path\";\r\nimport { Component } from \"../component\";\r\nimport { Entity } from \"../entity\";\r\nimport { enumLayer } from \"../root\";\r\n\r\nexport const curvedBeltLength = /* Math.PI / 4 */ 0.78;\r\n\r\nexport class BeltComponent extends Component {\r\n    static getId() {\r\n        return \"Belt\";\r\n    }\r\n\r\n    static getSchema() {\r\n        // The followUpCache field is not serialized.\r\n        return {\r\n            direction: types.string,\r\n        };\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new BeltComponent({ direction: this.direction });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {enumDirection=} param0.direction The direction of the belt\r\n     */\r\n    constructor({ direction = enumDirection.top }) {\r\n        super();\r\n\r\n        this.direction = direction;\r\n\r\n        /** @type {Entity} */\r\n        this.followUpCache = null;\r\n\r\n        /**\r\n         * The path this belt is contained in, not serialized\r\n         * @type {BeltPath}\r\n         */\r\n        this.assignedPath = null;\r\n    }\r\n\r\n    /**\r\n     * Returns the effective length of this belt in tile space\r\n     * @param {enumLayer} layer\r\n     * @returns {number}\r\n     */\r\n    getEffectiveLengthTiles(layer) {\r\n        assert(layer, \"no layer given\");\r\n        if (layer === enumLayer.wires) {\r\n            return 1.0;\r\n        }\r\n        return this.direction === enumDirection.top ? 1.0 : curvedBeltLength;\r\n    }\r\n\r\n    /**\r\n     * Converts from belt space (0 = start of belt ... 1 = end of belt) to the local\r\n     * belt coordinates (-0.5|-0.5 to 0.5|0.5)\r\n     * @param {number} progress\r\n     * @param {enumLayer} layer\r\n     * @returns {Vector}\r\n     */\r\n    transformBeltToLocalSpace(progress, layer) {\r\n        assert(progress >= 0.0, \"Invalid progress ( < 0): \" + progress);\r\n\r\n        switch (layer) {\r\n            case enumLayer.regular: {\r\n                switch (this.direction) {\r\n                    case enumDirection.top:\r\n                        assert(progress <= 1.02, \"Invalid progress: \" + progress);\r\n                        return new Vector(0, 0.5 - progress);\r\n\r\n                    case enumDirection.right: {\r\n                        assert(progress <= curvedBeltLength + 0.02, \"Invalid progress 2: \" + progress);\r\n                        const arcProgress = (progress / curvedBeltLength) * 0.5 * Math.PI;\r\n                        return new Vector(\r\n                            0.5 - 0.5 * Math.cos(arcProgress),\r\n                            0.5 - 0.5 * Math.sin(arcProgress)\r\n                        );\r\n                    }\r\n                    case enumDirection.left: {\r\n                        assert(progress <= curvedBeltLength + 0.02, \"Invalid progress 3: \" + progress);\r\n                        const arcProgress = (progress / curvedBeltLength) * 0.5 * Math.PI;\r\n                        return new Vector(\r\n                            -0.5 + 0.5 * Math.cos(arcProgress),\r\n                            0.5 - 0.5 * Math.sin(arcProgress)\r\n                        );\r\n                    }\r\n                    default:\r\n                        assertAlways(false, \"Invalid belt direction: \" + this.direction);\r\n                        return new Vector(0, 0);\r\n                }\r\n            }\r\n            case enumLayer.wires: {\r\n                const pow = 0.5;\r\n                switch (this.direction) {\r\n                    case enumDirection.top:\r\n                        assert(progress <= 1.02, \"Invalid progress: \" + progress);\r\n                        return new Vector(0, 0.5 - progress);\r\n\r\n                    case enumDirection.right: {\r\n                        assert(progress <= 1.02, \"Invalid progress 2: \" + progress);\r\n                        return progress > 0.5 ? new Vector(progress - 0.5, 0) : new Vector(0, 0.5 - progress);\r\n                    }\r\n                    case enumDirection.left: {\r\n                        assert(progress <= 1.02, \"Invalid progress 3: \" + progress);\r\n                        return progress > 0.5\r\n                            ? new Vector(-progress + 0.5, 0)\r\n                            : new Vector(0, 0.5 - progress);\r\n                    }\r\n                    default:\r\n                        assertAlways(false, \"Invalid belt direction: \" + this.direction);\r\n                        return new Vector(0, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Component } from \"../component\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { Vector } from \"../../core/vector\";\r\nimport { BaseItem, enumItemTypeToLayer, enumItemType } from \"../base_item\";\r\n\r\nexport class EnergyConsumerComponent extends Component {\r\n    static getId() {\r\n        return \"EnergyConsumer\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            bufferSize: types.float,\r\n            perCharge: types.float,\r\n            batteryPosition: types.vector,\r\n            energyType: types.enum(enumItemType),\r\n            wasteType: types.enum(enumItemType),\r\n            acceptorSlotIndex: types.uint,\r\n            ejectorSlotIndex: types.uint,\r\n\r\n            stored: types.float,\r\n            piledOutput: types.float,\r\n        };\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new EnergyConsumerComponent({\r\n            bufferSize: this.bufferSize,\r\n            perCharge: this.perCharge,\r\n            batteryPosition: this.batteryPosition.copy(),\r\n            acceptorSlotIndex: this.acceptorSlotIndex,\r\n            ejectorSlotIndex: this.ejectorSlotIndex,\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {number} param0.bufferSize How much energy this consumer can store\r\n     * @param {number} param0.perCharge How much energy this consumer needs per charge\r\n     * @param {Vector} param0.batteryPosition world space render offset of the battery icon\r\n     * @param {number} param0.acceptorSlotIndex Which slot to accept energy on\r\n     * @param {number} param0.ejectorSlotIndex Which slot to eject energy off\r\n     *\r\n     */\r\n    constructor({\r\n        bufferSize = 3,\r\n        perCharge = 1,\r\n        batteryPosition = new Vector(),\r\n        acceptorSlotIndex = 0,\r\n        ejectorSlotIndex = 0,\r\n    }) {\r\n        super();\r\n        this.bufferSize = bufferSize;\r\n        this.perCharge = perCharge;\r\n        this.batteryPosition = batteryPosition;\r\n        this.energyType = enumItemType.positiveEnergy;\r\n        this.wasteType = enumItemType.negativeEnergy;\r\n        this.acceptorSlotIndex = acceptorSlotIndex;\r\n        this.ejectorSlotIndex = ejectorSlotIndex;\r\n\r\n        /**\r\n         * How much energy we have stored right now\r\n         */\r\n        this.stored = 0;\r\n\r\n        /**\r\n         * How much waste we have piled up so far\r\n         */\r\n        this.piledOutput = 0;\r\n    }\r\n\r\n    /**\r\n     * Tries to accept a given item\r\n     * @param {BaseItem} item\r\n     * @param {number} slotIndex\r\n     */\r\n    tryAcceptItem(item, slotIndex) {\r\n        if (slotIndex !== this.acceptorSlotIndex) {\r\n            // Wrong slot\r\n            return false;\r\n        }\r\n\r\n        if (item.getItemType() !== this.energyType) {\r\n            // Not the right type\r\n            return false;\r\n        }\r\n\r\n        if (this.stored >= this.bufferSize) {\r\n            // We are full\r\n            return false;\r\n        }\r\n\r\n        // All good, consume\r\n        this.stored = Math.min(this.stored + 1, this.bufferSize);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Tries to start the next charge\r\n     */\r\n    tryStartNextCharge() {\r\n        if (this.hasTooMuchWastePiled()) {\r\n            // Too much waste remaining\r\n            return false;\r\n        }\r\n\r\n        if (this.stored < this.perCharge) {\r\n            // Not enough energy stored\r\n            return false;\r\n        }\r\n\r\n        this.stored -= this.perCharge;\r\n        this.piledOutput += this.perCharge;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns if there is too much waste piled\r\n     */\r\n    hasTooMuchWastePiled() {\r\n        return this.piledOutput >= 1.0;\r\n    }\r\n\r\n    /**\r\n     * Reduces the waste by the given amount\r\n     * @param {number} amount\r\n     */\r\n    reduceWaste(amount) {\r\n        this.piledOutput = Math.max(0, this.piledOutput - amount);\r\n    }\r\n}\r\n","import { types } from \"../../savegame/serialization\";\r\nimport { BaseItem, enumItemType } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\nimport { ShapeItem } from \"../items/shape_item\";\r\n\r\nconst maxQueueSize = 4;\r\n\r\nexport class EnergyGeneratorComponent extends Component {\r\n    static getId() {\r\n        return \"EnergyGenerator\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            requiredKey: types.nullable(types.string),\r\n            itemsInQueue: types.uint,\r\n            wasteAcceptorSlotIndex: types.uint,\r\n        };\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new EnergyGeneratorComponent({\r\n            requiredKey: null,\r\n            wasteAcceptorSlotIndex: this.wasteAcceptorSlotIndex,\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {string=} param0.requiredKey Which shape this generator needs, can be null if not computed yet\r\n     * @param {number} param0.wasteAcceptorSlotIndex Which slot accepts the waste\r\n     */\r\n    constructor({ requiredKey, wasteAcceptorSlotIndex = 0 }) {\r\n        super();\r\n        this.requiredKey = requiredKey;\r\n\r\n        /**\r\n         * Stores how many items are ready to be converted to energy\r\n         * @type {number}\r\n         */\r\n        this.itemsInQueue = 0;\r\n\r\n        /**\r\n         * Stores which slot accepts the waste\r\n         * @type {number}\r\n         */\r\n        this.wasteAcceptorSlotIndex = wasteAcceptorSlotIndex;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {BaseItem} item\r\n     * @param {number} slot\r\n     */\r\n    tryTakeItem(item, slot) {\r\n        if (slot === this.wasteAcceptorSlotIndex) {\r\n            // this is the acceptor slot on the wires layer\r\n            // just destroy it\r\n            return true;\r\n        } else {\r\n            if (item.getItemType() !== enumItemType.shape) {\r\n                // This shouldn't happen since we have a filter - still, it doesn't hurt\r\n                // to check either\r\n                assertAlways(\r\n                    false,\r\n                    \"Energy generator took wrong item: \" +\r\n                        item.getItemType() +\r\n                        \" on slot \" +\r\n                        slot +\r\n                        \" (waste slot = \" +\r\n                        this.wasteAcceptorSlotIndex +\r\n                        \")\"\r\n                );\r\n                return false;\r\n            }\r\n\r\n            if (/** @type {ShapeItem} */ (item).definition.getHash() !== this.requiredKey) {\r\n                // Not our shape\r\n                return false;\r\n            }\r\n\r\n            if (this.itemsInQueue >= maxQueueSize) {\r\n                // Queue is full\r\n                return false;\r\n            }\r\n\r\n            // Take item and put it into the queue\r\n            ++this.itemsInQueue;\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","import { Component } from \"../component\";\r\nimport { ShapeDefinition } from \"../shape_definition\";\r\nimport { types } from \"../../savegame/serialization\";\r\n\r\nexport class HubComponent extends Component {\r\n    static getId() {\r\n        return \"Hub\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            definitionsToAnalyze: types.array(types.knownType(ShapeDefinition)),\r\n        };\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * Shape definitions in queue to be analyzed and counted towards the goal\r\n         * @type {Array<ShapeDefinition>}\r\n         */\r\n        this.definitionsToAnalyze = [];\r\n    }\r\n\r\n    /**\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    queueShapeDefinition(definition) {\r\n        this.definitionsToAnalyze.push(definition);\r\n    }\r\n}\r\n","import { enumDirection, enumInvertedDirections, Vector } from \"../../core/vector\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem, enumItemType } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\nimport { enumLayer } from \"../root\";\r\n\r\n/** @typedef {{\r\n * pos: Vector,\r\n * directions: enumDirection[],\r\n * layer: enumLayer,\r\n * filter?: enumItemType\r\n * }} ItemAcceptorSlot */\r\n\r\n/**\r\n * Contains information about a slot plus its location\r\n * @typedef {{\r\n *  slot: ItemAcceptorSlot,\r\n *  index: number,\r\n *  acceptedDirection: enumDirection\r\n * }} ItemAcceptorLocatedSlot */\r\n\r\n/** @typedef {{\r\n * pos: Vector,\r\n * directions: enumDirection[],\r\n * layer?: enumLayer,\r\n * filter?: enumItemType\r\n * }} ItemAcceptorSlotConfig */\r\n\r\nexport class ItemAcceptorComponent extends Component {\r\n    static getId() {\r\n        return \"ItemAcceptor\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            slots: types.array(\r\n                types.structured({\r\n                    pos: types.vector,\r\n                    directions: types.array(types.enum(enumDirection)),\r\n                    filter: types.nullable(types.enum(enumItemType)),\r\n\r\n                    // TODO: MIGRATE\r\n                    layer: types.enum(enumLayer),\r\n                })\r\n            ),\r\n            animated: types.bool,\r\n            beltUnderlays: types.array(\r\n                types.structured({\r\n                    pos: types.vector,\r\n                    direction: types.enum(enumDirection),\r\n\r\n                    // TODO: MIGRATE\r\n                    layer: types.enum(enumLayer),\r\n                })\r\n            ),\r\n        };\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        const slotsCopy = [];\r\n        for (let i = 0; i < this.slots.length; ++i) {\r\n            const slot = this.slots[i];\r\n            slotsCopy.push({\r\n                pos: slot.pos.copy(),\r\n                directions: slot.directions.slice(),\r\n                filter: slot.filter,\r\n                layer: slot.layer,\r\n            });\r\n        }\r\n\r\n        const beltUnderlaysCopy = [];\r\n        for (let i = 0; i < this.beltUnderlays.length; ++i) {\r\n            const underlay = this.beltUnderlays[i];\r\n            beltUnderlaysCopy.push({\r\n                pos: underlay.pos.copy(),\r\n                direction: underlay.direction,\r\n                layer: underlay.layer,\r\n            });\r\n        }\r\n\r\n        return new ItemAcceptorComponent({\r\n            slots: slotsCopy,\r\n            beltUnderlays: beltUnderlaysCopy,\r\n            animated: this.animated,\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Array<ItemAcceptorSlotConfig>} param0.slots The slots from which we accept items\r\n     * @param {boolean=} param0.animated Whether to animate item consumption\r\n     * @param {Array<{pos: Vector, direction: enumDirection, layer: enumLayer}>=} param0.beltUnderlays Where to render belt underlays\r\n     */\r\n    constructor({ slots = [], beltUnderlays = [], animated = true }) {\r\n        super();\r\n\r\n        this.animated = animated;\r\n\r\n        /**\r\n         * Fixes belt animations\r\n         * @type {Array<{ item: BaseItem, slotIndex: number, animProgress: number, direction: enumDirection }>}\r\n         */\r\n        this.itemConsumptionAnimations = [];\r\n\r\n        /* Which belt underlays to render */\r\n        this.beltUnderlays = beltUnderlays;\r\n\r\n        this.setSlots(slots);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Array<ItemAcceptorSlotConfig>} slots\r\n     */\r\n    setSlots(slots) {\r\n        /** @type {Array<ItemAcceptorSlot>} */\r\n        this.slots = [];\r\n        for (let i = 0; i < slots.length; ++i) {\r\n            const slot = slots[i];\r\n            this.slots.push({\r\n                pos: slot.pos,\r\n                directions: slot.directions,\r\n                layer: slot.layer || enumLayer.regular,\r\n\r\n                // Which type of item to accept (shape | color | all) @see enumItemType\r\n                filter: slot.filter,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns if this acceptor can accept a new item at slot N\r\n     * @param {number} slotIndex\r\n     * @param {BaseItem=} item\r\n     */\r\n    canAcceptItem(slotIndex, item) {\r\n        const slot = this.slots[slotIndex];\r\n        return this.filterMatches(slot.filter, item);\r\n    }\r\n\r\n    /**\r\n     * Returns if the given filter matches\r\n     * @param {enumItemType|null} filter\r\n     * @param {BaseItem} item\r\n     */\r\n    filterMatches(filter, item) {\r\n        if (!filter) {\r\n            return true;\r\n        }\r\n\r\n        const itemType = item.getItemType();\r\n        if (filter === enumItemType.genericEnergy) {\r\n            return itemType === enumItemType.positiveEnergy || itemType === enumItemType.negativeEnergy;\r\n        }\r\n\r\n        return itemType === filter;\r\n    }\r\n\r\n    /**\r\n     * Called when an item has been accepted so that\r\n     * @param {number} slotIndex\r\n     * @param {enumDirection} direction\r\n     * @param {BaseItem} item\r\n     */\r\n    onItemAccepted(slotIndex, direction, item) {\r\n        if (this.animated) {\r\n            this.itemConsumptionAnimations.push({\r\n                item,\r\n                slotIndex,\r\n                direction,\r\n                animProgress: 0.0,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tries to find a slot which accepts the current item\r\n     * @param {Vector} targetLocalTile\r\n     * @param {enumDirection} fromLocalDirection\r\n     * @param {enumLayer} layer\r\n     * @returns {ItemAcceptorLocatedSlot|null}\r\n     */\r\n    findMatchingSlot(targetLocalTile, fromLocalDirection, layer) {\r\n        // We need to invert our direction since the acceptor specifies *from* which direction\r\n        // it accepts items, but the ejector specifies *into* which direction it ejects items.\r\n        // E.g.: Ejector ejects into \"right\" direction but acceptor accepts from \"left\" direction.\r\n        const desiredDirection = enumInvertedDirections[fromLocalDirection];\r\n\r\n        // Go over all slots and try to find a target slot\r\n        for (let slotIndex = 0; slotIndex < this.slots.length; ++slotIndex) {\r\n            const slot = this.slots[slotIndex];\r\n\r\n            // Make sure the acceptor slot is on the right position\r\n            if (!slot.pos.equals(targetLocalTile)) {\r\n                continue;\r\n            }\r\n\r\n            // Make sure the layer matches\r\n            if (slot.layer !== layer) {\r\n                continue;\r\n            }\r\n\r\n            // Check if the acceptor slot accepts items from our direction\r\n            for (let i = 0; i < slot.directions.length; ++i) {\r\n                // const localDirection = targetStaticComp.localDirectionToWorld(slot.directions[l]);\r\n                if (desiredDirection === slot.directions[i]) {\r\n                    return {\r\n                        slot,\r\n                        index: slotIndex,\r\n                        acceptedDirection: desiredDirection,\r\n                    };\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import { Vector, enumDirection, enumDirectionToVector } from \"../../core/vector\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { gItemRegistry } from \"../../core/global_registries\";\r\nimport { Entity } from \"../entity\";\r\nimport { enumLayer } from \"../root\";\r\n\r\n/**\r\n * @typedef {{\r\n *    pos: Vector,\r\n *    direction: enumDirection,\r\n *    item: BaseItem,\r\n *    layer: enumLayer,\r\n *    progress: number?,\r\n *    cachedDestSlot?: import(\"./item_acceptor\").ItemAcceptorLocatedSlot,\r\n *    cachedTargetEntity?: Entity\r\n * }} ItemEjectorSlot\r\n */\r\n\r\nexport class ItemEjectorComponent extends Component {\r\n    static getId() {\r\n        return \"ItemEjector\";\r\n    }\r\n\r\n    static getSchema() {\r\n        // The cachedDestSlot, cachedTargetEntity, and cachedConnectedSlots fields\r\n        // are not serialized.\r\n        return {\r\n            instantEject: types.bool,\r\n            slots: types.array(\r\n                types.structured({\r\n                    pos: types.vector,\r\n                    direction: types.enum(enumDirection),\r\n                    item: types.nullable(types.obj(gItemRegistry)),\r\n                    progress: types.float,\r\n\r\n                    // TODO: Migrate\r\n                    layer: types.enum(enumLayer),\r\n                })\r\n            ),\r\n        };\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        const slotsCopy = [];\r\n        for (let i = 0; i < this.slots.length; ++i) {\r\n            const slot = this.slots[i];\r\n            slotsCopy.push({\r\n                pos: slot.pos.copy(),\r\n                direction: slot.direction,\r\n                layer: slot.layer,\r\n            });\r\n        }\r\n\r\n        return new ItemEjectorComponent({\r\n            slots: slotsCopy,\r\n            instantEject: this.instantEject,\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Array<{pos: Vector, direction: enumDirection, layer?: enumLayer}>=} param0.slots The slots to eject on\r\n     * @param {boolean=} param0.instantEject If the ejection is instant\r\n     */\r\n    constructor({ slots = [], instantEject = false }) {\r\n        super();\r\n\r\n        // How long items take to eject\r\n        this.instantEject = instantEject;\r\n\r\n        this.setSlots(slots);\r\n\r\n        /** @type {ItemEjectorSlot[]} */\r\n        this.cachedConnectedSlots = null;\r\n\r\n        /**\r\n         * Whether this ejector slot is enabled\r\n         */\r\n        this.enabled = true;\r\n    }\r\n\r\n    /**\r\n     * @param {Array<{pos: Vector, direction: enumDirection, layer?: enumLayer}>} slots The slots to eject on\r\n     */\r\n    setSlots(slots) {\r\n        /** @type {Array<ItemEjectorSlot>} */\r\n        this.slots = [];\r\n        for (let i = 0; i < slots.length; ++i) {\r\n            const slot = slots[i];\r\n            this.slots.push({\r\n                pos: slot.pos,\r\n                direction: slot.direction,\r\n                item: null,\r\n                progress: 0,\r\n                layer: slot.layer || enumLayer.regular,\r\n                cachedDestSlot: null,\r\n                cachedTargetEntity: null,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns where this slot ejects to\r\n     * @param {number} index\r\n     * @returns {Vector}\r\n     */\r\n    getSlotTargetLocalTile(index) {\r\n        const slot = this.slots[index];\r\n        const directionVector = enumDirectionToVector[slot.direction];\r\n        return slot.pos.add(directionVector);\r\n    }\r\n\r\n    /**\r\n     * Returns whether any slot ejects to the given local tile\r\n     * @param {Vector} tile\r\n     * @param {enumLayer} layer\r\n     */\r\n    anySlotEjectsToLocalTile(tile, layer) {\r\n        for (let i = 0; i < this.slots.length; ++i) {\r\n            if (this.getSlotTargetLocalTile(i).equals(tile) && this.slots[i].layer === layer) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns if we can eject on a given slot\r\n     * @param {number} slotIndex\r\n     * @returns {boolean}\r\n     */\r\n    canEjectOnSlot(slotIndex) {\r\n        assert(slotIndex >= 0 && slotIndex < this.slots.length, \"Invalid ejector slot: \" + slotIndex);\r\n        return !this.slots[slotIndex].item;\r\n    }\r\n\r\n    /**\r\n     * Returns the first free slot on this ejector or null if there is none\r\n     * @param {enumLayer} layer\r\n     * @returns {number?}\r\n     */\r\n    getFirstFreeSlot(layer) {\r\n        for (let i = 0; i < this.slots.length; ++i) {\r\n            if (this.canEjectOnSlot(i) && this.slots[i].layer === layer) {\r\n                return i;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Tries to eject a given item\r\n     * @param {number} slotIndex\r\n     * @param {BaseItem} item\r\n     * @returns {boolean}\r\n     */\r\n    tryEject(slotIndex, item) {\r\n        if (!this.canEjectOnSlot(slotIndex)) {\r\n            return false;\r\n        }\r\n        this.slots[slotIndex].item = item;\r\n        this.slots[slotIndex].progress = this.instantEject ? 1 : 0;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Clears the given slot and returns the item it had\r\n     * @param {number} slotIndex\r\n     * @returns {BaseItem|null}\r\n     */\r\n    takeSlotItem(slotIndex) {\r\n        const slot = this.slots[slotIndex];\r\n        const item = slot.item;\r\n        slot.item = null;\r\n        slot.progress = 0.0;\r\n        return item;\r\n    }\r\n}\r\n","import { gItemRegistry } from \"../../core/global_registries\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\n\r\n/** @enum {string} */\r\nexport const enumItemProcessorTypes = {\r\n    splitter: \"splitter\",\r\n    splitterWires: \"splitterWires\",\r\n    cutter: \"cutter\",\r\n    cutterQuad: \"cutterQuad\",\r\n    rotater: \"rotater\",\r\n    rotaterCCW: \"rotaterCCW\",\r\n    rotaterFL: \"rotaterFL\",\r\n    stacker: \"stacker\",\r\n    trash: \"trash\",\r\n    mixer: \"mixer\",\r\n    painter: \"painter\",\r\n    painterDouble: \"painterDouble\",\r\n    painterQuad: \"painterQuad\",\r\n    advancedProcessor: \"advancedProcessor\",\r\n    hub: \"hub\",\r\n};\r\n\r\nexport class ItemProcessorComponent extends Component {\r\n    static getId() {\r\n        return \"ItemProcessor\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            nextOutputSlot: types.uint,\r\n            type: types.enum(enumItemProcessorTypes),\r\n            inputsPerCharge: types.uint,\r\n\r\n            inputSlots: types.array(\r\n                types.structured({\r\n                    item: types.obj(gItemRegistry),\r\n                    sourceSlot: types.uint,\r\n                })\r\n            ),\r\n            itemsToEject: types.array(\r\n                types.structured({\r\n                    item: types.obj(gItemRegistry),\r\n                    requiredSlot: types.nullable(types.uint),\r\n                    preferredSlot: types.nullable(types.uint),\r\n                })\r\n            ),\r\n            secondsUntilEject: types.float,\r\n        };\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new ItemProcessorComponent({\r\n            processorType: this.type,\r\n            inputsPerCharge: this.inputsPerCharge,\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {enumItemProcessorTypes=} param0.processorType Which type of processor this is\r\n     * @param {number=} param0.inputsPerCharge How many items this machine needs until it can start working\r\n     *\r\n     */\r\n    constructor({ processorType = enumItemProcessorTypes.splitter, inputsPerCharge = 1 }) {\r\n        super();\r\n\r\n        // Which slot to emit next, this is only a preference and if it can't emit\r\n        // it will take the other one. Some machines ignore this (e.g. the splitter) to make\r\n        // sure the outputs always match\r\n        this.nextOutputSlot = 0;\r\n\r\n        // Type of the processor\r\n        this.type = processorType;\r\n\r\n        // How many inputs we need for one charge\r\n        this.inputsPerCharge = inputsPerCharge;\r\n\r\n        /**\r\n         * Our current inputs\r\n         * @type {Array<{ item: BaseItem, sourceSlot: number }>}\r\n         */\r\n        this.inputSlots = [];\r\n\r\n        /**\r\n         * What we are currently processing, empty if we don't produce anything rn\r\n         * requiredSlot: Item *must* be ejected on this slot\r\n         * preferredSlot: Item *can* be ejected on this slot, but others are fine too if the one is not usable\r\n         * @type {Array<{item: BaseItem, requiredSlot?: number, preferredSlot?: number}>}\r\n         */\r\n        this.itemsToEject = [];\r\n\r\n        /**\r\n         * How long it takes until we are done with the current items\r\n         */\r\n        this.secondsUntilEject = 0;\r\n    }\r\n\r\n    /**\r\n     * Tries to take the item\r\n     * @param {BaseItem} item\r\n     * @param {number} sourceSlot\r\n     */\r\n    tryTakeItem(item, sourceSlot) {\r\n        if (this.type === enumItemProcessorTypes.hub || this.type === enumItemProcessorTypes.trash) {\r\n            // Hub has special logic .. not really nice but efficient.\r\n            this.inputSlots.push({ item, sourceSlot });\r\n            return true;\r\n        }\r\n\r\n        // Check that we only take one item per slot\r\n        for (let i = 0; i < this.inputSlots.length; ++i) {\r\n            const slot = this.inputSlots[i];\r\n            if (slot.sourceSlot === sourceSlot) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.inputSlots.push({ item, sourceSlot });\r\n        return true;\r\n    }\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { Component } from \"../component\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { gItemRegistry } from \"../../core/global_registries\";\r\n\r\nconst chainBufferSize = 3;\r\n\r\nexport class MinerComponent extends Component {\r\n    static getId() {\r\n        return \"Miner\";\r\n    }\r\n\r\n    static getSchema() {\r\n        // cachedMinedItem is not serialized.\r\n        return {\r\n            lastMiningTime: types.ufloat,\r\n            chainable: types.bool,\r\n            itemChainBuffer: types.array(types.obj(gItemRegistry)),\r\n        };\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new MinerComponent({\r\n            chainable: this.chainable,\r\n        });\r\n    }\r\n\r\n    constructor({ chainable = false }) {\r\n        super();\r\n        this.lastMiningTime = 0;\r\n        this.chainable = chainable;\r\n\r\n        /**\r\n         * Stores items from other miners which were chained to this\r\n         * miner.\r\n         * @type {Array<BaseItem>}\r\n         */\r\n        this.itemChainBuffer = [];\r\n\r\n        /**\r\n         * @type {BaseItem}\r\n         */\r\n        this.cachedMinedItem = null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {BaseItem} item\r\n     */\r\n    tryAcceptChainedItem(item) {\r\n        if (this.itemChainBuffer.length > chainBufferSize) {\r\n            // Well, this one is full\r\n            return false;\r\n        }\r\n\r\n        this.itemChainBuffer.push(item);\r\n        return true;\r\n    }\r\n}\r\n","import { Component } from \"../component\";\r\n\r\n/**\r\n * Marks an entity as replaceable, so that when other buildings are placed above him it\r\n * simply gets deleted\r\n */\r\nexport class ReplaceableMapEntityComponent extends Component {\r\n    static getId() {\r\n        return \"ReplaceableMapEntity\";\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new ReplaceableMapEntityComponent();\r\n    }\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Rectangle } from \"../../core/rectangle\";\r\nimport { AtlasSprite } from \"../../core/sprites\";\r\nimport { enumDirection, Vector } from \"../../core/vector\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { Component } from \"../component\";\r\nimport { getBuildingDataFromCode } from \"../building_codes\";\r\n\r\nexport class StaticMapEntityComponent extends Component {\r\n    static getId() {\r\n        return \"StaticMapEntity\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            origin: types.tileVector,\r\n            tileSize: types.tileVector,\r\n            rotation: types.float,\r\n            originalRotation: types.float,\r\n\r\n            // See building_codes.js\r\n            code: types.uint,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns the sprite\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getSprite() {\r\n        return getBuildingDataFromCode(this.code).sprite;\r\n    }\r\n\r\n    /**\r\n     * Returns the blueprint sprite\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getBlueprintSprite() {\r\n        return getBuildingDataFromCode(this.code).blueprintSprite;\r\n    }\r\n\r\n    /**\r\n     * Returns the silhouette color\r\n     * @returns {string}\r\n     */\r\n    getSilhouetteColor() {\r\n        return getBuildingDataFromCode(this.code).silhouetteColor;\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new StaticMapEntityComponent({\r\n            origin: this.origin.copy(),\r\n            tileSize: this.tileSize.copy(),\r\n            rotation: this.rotation,\r\n            originalRotation: this.originalRotation,\r\n            code: this.code,\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Vector=} param0.origin Origin (Top Left corner) of the entity\r\n     * @param {Vector=} param0.tileSize Size of the entity in tiles\r\n     * @param {number=} param0.rotation Rotation in degrees. Must be multiple of 90\r\n     * @param {number=} param0.originalRotation Original Rotation in degrees. Must be multiple of 90\r\n     * @param {number=} param0.code Building code\r\n     */\r\n    constructor({\r\n        origin = new Vector(),\r\n        tileSize = new Vector(1, 1),\r\n        rotation = 0,\r\n        originalRotation = 0,\r\n        code = 0,\r\n    }) {\r\n        super();\r\n        assert(\r\n            rotation % 90 === 0,\r\n            \"Rotation of static map entity must be multiple of 90 (was \" + rotation + \")\"\r\n        );\r\n\r\n        this.origin = origin;\r\n        this.tileSize = tileSize;\r\n        this.rotation = rotation;\r\n        this.code = code;\r\n        this.originalRotation = originalRotation;\r\n    }\r\n\r\n    /**\r\n     * Returns the effective rectangle of this entity in tile space\r\n     * @returns {Rectangle}\r\n     */\r\n    getTileSpaceBounds() {\r\n        switch (this.rotation) {\r\n            case 0:\r\n                return new Rectangle(this.origin.x, this.origin.y, this.tileSize.x, this.tileSize.y);\r\n            case 90:\r\n                return new Rectangle(\r\n                    this.origin.x - this.tileSize.y + 1,\r\n                    this.origin.y,\r\n                    this.tileSize.y,\r\n                    this.tileSize.x\r\n                );\r\n            case 180:\r\n                return new Rectangle(\r\n                    this.origin.x - this.tileSize.x + 1,\r\n                    this.origin.y - this.tileSize.y + 1,\r\n                    this.tileSize.x,\r\n                    this.tileSize.y\r\n                );\r\n            case 270:\r\n                return new Rectangle(\r\n                    this.origin.x,\r\n                    this.origin.y - this.tileSize.x + 1,\r\n                    this.tileSize.y,\r\n                    this.tileSize.x\r\n                );\r\n            default:\r\n                assert(false, \"Invalid rotation\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Transforms the given vector/rotation from local space to world space\r\n     * @param {Vector} vector\r\n     * @returns {Vector}\r\n     */\r\n    applyRotationToVector(vector) {\r\n        return vector.rotateFastMultipleOf90(this.rotation);\r\n    }\r\n\r\n    /**\r\n     * Transforms the given vector/rotation from world space to local space\r\n     * @param {Vector} vector\r\n     * @returns {Vector}\r\n     */\r\n    unapplyRotationToVector(vector) {\r\n        return vector.rotateFastMultipleOf90(360 - this.rotation);\r\n    }\r\n\r\n    /**\r\n     * Transforms the given direction from local space\r\n     * @param {enumDirection} direction\r\n     * @returns {enumDirection}\r\n     */\r\n    localDirectionToWorld(direction) {\r\n        return Vector.transformDirectionFromMultipleOf90(direction, this.rotation);\r\n    }\r\n\r\n    /**\r\n     * Transforms the given direction from world to local space\r\n     * @param {enumDirection} direction\r\n     * @returns {enumDirection}\r\n     */\r\n    worldDirectionToLocal(direction) {\r\n        return Vector.transformDirectionFromMultipleOf90(direction, 360 - this.rotation);\r\n    }\r\n\r\n    /**\r\n     * Transforms from local tile space to global tile space\r\n     * @param {Vector} localTile\r\n     * @returns {Vector}\r\n     */\r\n    localTileToWorld(localTile) {\r\n        const result = this.applyRotationToVector(localTile);\r\n        result.addInplace(this.origin);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Transforms from world space to local space\r\n     * @param {Vector} worldTile\r\n     */\r\n    worldToLocalTile(worldTile) {\r\n        const localUnrotated = worldTile.sub(this.origin);\r\n        return this.unapplyRotationToVector(localUnrotated);\r\n    }\r\n\r\n    /**\r\n     * Returns whether the entity should be drawn for the given parameters\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    shouldBeDrawn(parameters) {\r\n        let x = 0;\r\n        let y = 0;\r\n        let w = 0;\r\n        let h = 0;\r\n\r\n        switch (this.rotation) {\r\n            case 0: {\r\n                x = this.origin.x;\r\n                y = this.origin.y;\r\n                w = this.tileSize.x;\r\n                h = this.tileSize.y;\r\n                break;\r\n            }\r\n            case 90: {\r\n                x = this.origin.x - this.tileSize.y + 1;\r\n                y = this.origin.y;\r\n                w = this.tileSize.y;\r\n                h = this.tileSize.x;\r\n                break;\r\n            }\r\n            case 180: {\r\n                x = this.origin.x - this.tileSize.x + 1;\r\n                y = this.origin.y - this.tileSize.y + 1;\r\n                w = this.tileSize.x;\r\n                h = this.tileSize.y;\r\n                break;\r\n            }\r\n            case 270: {\r\n                x = this.origin.x;\r\n                y = this.origin.y - this.tileSize.x + 1;\r\n                w = this.tileSize.y;\r\n                h = this.tileSize.x;\r\n                break;\r\n            }\r\n            default:\r\n                assert(false, \"Invalid rotation\");\r\n        }\r\n\r\n        return parameters.visibleRect.containsRect4Params(\r\n            x * globalConfig.tileSize,\r\n            y * globalConfig.tileSize,\r\n            w * globalConfig.tileSize,\r\n            h * globalConfig.tileSize\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draws a sprite over the whole space of the entity\r\n     * @param {DrawParameters} parameters\r\n     * @param {AtlasSprite} sprite\r\n     * @param {number=} extrudePixels How many pixels to extrude the sprite\r\n     * @param {boolean=} clipping Whether to clip\r\n     * @param {Vector=} overridePosition Whether to drwa the entity at a different location\r\n     */\r\n    drawSpriteOnFullEntityBounds(\r\n        parameters,\r\n        sprite,\r\n        extrudePixels = 0,\r\n        clipping = true,\r\n        overridePosition = null\r\n    ) {\r\n        if (!this.shouldBeDrawn(parameters) && !overridePosition) {\r\n            return;\r\n        }\r\n        let worldX = this.origin.x * globalConfig.tileSize;\r\n        let worldY = this.origin.y * globalConfig.tileSize;\r\n\r\n        if (overridePosition) {\r\n            worldX = overridePosition.x * globalConfig.tileSize;\r\n            worldY = overridePosition.y * globalConfig.tileSize;\r\n        }\r\n\r\n        if (this.rotation === 0) {\r\n            // Early out, is faster\r\n            sprite.drawCached(\r\n                parameters,\r\n                worldX - extrudePixels * this.tileSize.x,\r\n                worldY - extrudePixels * this.tileSize.y,\r\n                globalConfig.tileSize * this.tileSize.x + 2 * extrudePixels * this.tileSize.x,\r\n                globalConfig.tileSize * this.tileSize.y + 2 * extrudePixels * this.tileSize.y,\r\n                false\r\n            );\r\n        } else {\r\n            const rotationCenterX = worldX + globalConfig.halfTileSize;\r\n            const rotationCenterY = worldY + globalConfig.halfTileSize;\r\n\r\n            parameters.context.translate(rotationCenterX, rotationCenterY);\r\n            parameters.context.rotate(Math.radians(this.rotation));\r\n\r\n            sprite.drawCached(\r\n                parameters,\r\n                -globalConfig.halfTileSize - extrudePixels * this.tileSize.x,\r\n                -globalConfig.halfTileSize - extrudePixels * this.tileSize.y,\r\n                globalConfig.tileSize * this.tileSize.x + 2 * extrudePixels * this.tileSize.x,\r\n                globalConfig.tileSize * this.tileSize.y + 2 * extrudePixels * this.tileSize.y,\r\n                false\r\n            );\r\n\r\n            parameters.context.rotate(-Math.radians(this.rotation));\r\n            parameters.context.translate(-rotationCenterX, -rotationCenterY);\r\n        }\r\n    }\r\n}\r\n","import { Component } from \"../component\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { gItemRegistry } from \"../../core/global_registries\";\r\nimport { BaseItem, enumItemType } from \"../base_item\";\r\nimport { ColorItem } from \"../items/color_item\";\r\nimport { ShapeItem } from \"../items/shape_item\";\r\n\r\nexport class StorageComponent extends Component {\r\n    static getId() {\r\n        return \"Storage\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            maximumStorage: types.uint,\r\n            storedCount: types.uint,\r\n            storedItem: types.nullable(types.obj(gItemRegistry)),\r\n            overlayOpacity: types.ufloat,\r\n        };\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new StorageComponent({ maximumStorage: this.maximumStorage });\r\n    }\r\n\r\n    /**\r\n     * @param {object} param0\r\n     * @param {number=} param0.maximumStorage How much this storage can hold\r\n     */\r\n    constructor({ maximumStorage = 1e20 }) {\r\n        super();\r\n        this.maximumStorage = maximumStorage;\r\n\r\n        /**\r\n         * Currently stored item\r\n         * @type {BaseItem}\r\n         */\r\n        this.storedItem = null;\r\n\r\n        /**\r\n         * How many of this item we have stored\r\n         */\r\n        this.storedCount = 0;\r\n\r\n        /**\r\n         * We compute an opacity to make sure it doesn't flicker\r\n         */\r\n        this.overlayOpacity = 0;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this storage can accept the item\r\n     * @param {BaseItem} item\r\n     */\r\n    canAcceptItem(item) {\r\n        if (this.storedCount >= this.maximumStorage) {\r\n            return false;\r\n        }\r\n        if (!this.storedItem || this.storedCount === 0) {\r\n            return true;\r\n        }\r\n\r\n        const itemType = item.getItemType();\r\n\r\n        // Check type matches\r\n        if (itemType !== this.storedItem.getItemType()) {\r\n            return false;\r\n        }\r\n\r\n        if (itemType === enumItemType.color) {\r\n            return /** @type {ColorItem} */ (this.storedItem).color === /** @type {ColorItem} */ (item).color;\r\n        }\r\n\r\n        if (itemType === enumItemType.shape) {\r\n            return (\r\n                /** @type {ShapeItem} */ (this.storedItem).definition.getHash() ===\r\n                /** @type {ShapeItem} */ (item).definition.getHash()\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @param {BaseItem} item\r\n     */\r\n    takeItem(item) {\r\n        this.storedItem = item;\r\n        this.storedCount++;\r\n    }\r\n}\r\n","import { BaseItem } from \"../base_item\";\r\nimport { Component } from \"../component\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { gItemRegistry } from \"../../core/global_registries\";\r\nimport { Entity } from \"../entity\";\r\nimport { enumLayer } from \"../root\";\r\n\r\n/** @enum {string} */\r\nexport const enumUndergroundBeltMode = {\r\n    sender: \"sender\",\r\n    receiver: \"receiver\",\r\n};\r\n\r\n/**\r\n * @typedef {{\r\n *   entity: Entity,\r\n *   distance: number\r\n * }} LinkedUndergroundBelt\r\n */\r\n\r\nexport class UndergroundBeltComponent extends Component {\r\n    static getId() {\r\n        return \"UndergroundBelt\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            mode: types.enum(enumUndergroundBeltMode),\r\n            pendingItems: types.array(types.pair(types.obj(gItemRegistry), types.float)),\r\n            tier: types.uint,\r\n        };\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new UndergroundBeltComponent({\r\n            mode: this.mode,\r\n            tier: this.tier,\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {enumUndergroundBeltMode=} param0.mode As which type of belt the entity acts\r\n     * @param {number=} param0.tier\r\n     */\r\n    constructor({ mode = enumUndergroundBeltMode.sender, tier = 0 }) {\r\n        super();\r\n\r\n        this.mode = mode;\r\n        this.tier = tier;\r\n\r\n        /** @type {Array<{ item: BaseItem, progress: number }>} */\r\n        this.consumptionAnimations = [];\r\n\r\n        /**\r\n         * Used on both receiver and sender.\r\n         * Reciever: Used to store the next item to transfer, and to block input while doing this\r\n         * Sender: Used to store which items are currently \"travelling\"\r\n         * @type {Array<[BaseItem, number]>} Format is [Item, remaining seconds until transfer/ejection]\r\n         */\r\n        this.pendingItems = [];\r\n\r\n        /**\r\n         * The linked entity, used to speed up performance. This contains either\r\n         * the entrance or exit depending on the tunnel type\r\n         * @type {LinkedUndergroundBelt}\r\n         */\r\n        this.cachedLinkedEntity = null;\r\n    }\r\n\r\n    /**\r\n     * Tries to accept an item from an external source like a regular belt or building\r\n     * @param {BaseItem} item\r\n     * @param {number} beltSpeed How fast this item travels\r\n     */\r\n    tryAcceptExternalItem(item, beltSpeed) {\r\n        if (this.mode !== enumUndergroundBeltMode.sender) {\r\n            // Only senders accept external items\r\n            return false;\r\n        }\r\n\r\n        if (this.pendingItems.length > 0) {\r\n            // We currently have a pending item\r\n            return false;\r\n        }\r\n\r\n        this.pendingItems.push([item, 0]);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Tries to accept a tunneled item\r\n     * @param {BaseItem} item\r\n     * @param {number} travelDistance How many tiles this item has to travel\r\n     * @param {number} beltSpeed How fast this item travels\r\n     */\r\n    tryAcceptTunneledItem(item, travelDistance, beltSpeed) {\r\n        if (this.mode !== enumUndergroundBeltMode.receiver) {\r\n            // Only receivers can accept tunneled items\r\n            return false;\r\n        }\r\n\r\n        // Notice: We assume that for all items the travel distance is the same\r\n        const maxItemsInTunnel =\r\n            (2 + travelDistance) / globalConfig.beltItemSpacingByLayer[enumLayer.regular];\r\n        if (this.pendingItems.length >= maxItemsInTunnel) {\r\n            // Simulate a real belt which gets full at some point\r\n            return false;\r\n        }\r\n\r\n        // NOTICE:\r\n        // This corresponds to the item ejector - it needs 0.5 additional tiles to eject the item.\r\n        // So instead of adding 1 we add 0.5 only.\r\n        // Additionally it takes 1 tile for the acceptor which we just add on top.\r\n        const travelDuration =\r\n            (travelDistance + 1.5) / beltSpeed / globalConfig.beltItemSpacingByLayer[enumLayer.regular];\r\n\r\n        this.pendingItems.push([item, travelDuration]);\r\n\r\n        // Sort so we can only look at the first ones\r\n        this.pendingItems.sort((a, b) => a[1] - b[1]);\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Component } from \"../component\";\r\n\r\nexport class UnremovableComponent extends Component {\r\n    static getId() {\r\n        return \"Unremovable\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new UnremovableComponent();\r\n    }\r\n}\r\n","import { Component } from \"../component\";\r\nimport { Vector, enumDirection } from \"../../core/vector\";\r\nimport { types } from \"../../savegame/serialization\";\r\n\r\n/** @enum {string} */\r\nexport const enumPinSlotType = {\r\n    positiveEnergyEjector: \"positiveEnergyEjector\",\r\n    negativeEnergyEjector: \"negativeEnergyEjector\",\r\n    positiveEnergyAcceptor: \"positiveEnergyAcceptor\",\r\n    negativeEnergyAcceptor: \"negativeEnergyAcceptor\",\r\n};\r\n\r\n/** @typedef {{\r\n *   pos: Vector,\r\n *   type: enumPinSlotType,\r\n *   direction: enumDirection\r\n * }} WirePinSlotDefinition */\r\n\r\n/** @typedef {{\r\n *   pos: Vector,\r\n *   type: enumPinSlotType,\r\n *   direction: enumDirection\r\n * }} WirePinSlot */\r\n\r\nexport class WiredPinsComponent extends Component {\r\n    static getId() {\r\n        return \"WiredPins\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            slots: types.array(\r\n                types.structured({\r\n                    pos: types.vector,\r\n                    type: types.enum(enumPinSlotType),\r\n                })\r\n            ),\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Array<WirePinSlotDefinition>} param0.slots\r\n     */\r\n    constructor({ slots = [] }) {\r\n        super();\r\n        this.setSlots(slots);\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        const slots = [];\r\n        for (let i = 0; i < this.slots.length; ++i) {\r\n            const slot = this.slots[i];\r\n            slots.push({\r\n                pos: slot.pos.copy(),\r\n                type: slot.type,\r\n                direction: slot.direction,\r\n            });\r\n        }\r\n\r\n        return new WiredPinsComponent({ slots });\r\n    }\r\n\r\n    /**\r\n     * Sets the slots of this building\r\n     * @param {Array<WirePinSlotDefinition>} slots\r\n     */\r\n    setSlots(slots) {\r\n        /** @type {Array<WirePinSlot>} */\r\n        this.slots = [];\r\n\r\n        for (let i = 0; i < slots.length; ++i) {\r\n            const slotData = slots[i];\r\n            this.slots.push({\r\n                pos: slotData.pos,\r\n                type: slotData.type,\r\n                direction: slotData.direction,\r\n            });\r\n        }\r\n    }\r\n}\r\n","\r\n\r\nimport { BufferMaintainer } from \"../core/buffer_maintainer\";\r\nimport { disableImageSmoothing, enableImageSmoothing, registerCanvas } from \"../core/buffer_utils\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { getDeviceDPI, resizeHighDPICanvas } from \"../core/dpi_manager\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { gMetaBuildingRegistry } from \"../core/global_registries\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { Savegame } from \"../savegame/savegame\";\r\nimport { SavegameSerializer } from \"../savegame/savegame_serializer\";\r\nimport { AutomaticSave } from \"./automatic_save\";\r\nimport { MetaHubBuilding } from \"./buildings/hub\";\r\nimport { Camera } from \"./camera\";\r\nimport { EntityManager } from \"./entity_manager\";\r\nimport { GameSystemManager } from \"./game_system_manager\";\r\nimport { HubGoals } from \"./hub_goals\";\r\nimport { GameHUD } from \"./hud/hud\";\r\nimport { KeyActionMapper } from \"./key_action_mapper\";\r\nimport { GameLogic } from \"./logic\";\r\nimport { MapView } from \"./map_view\";\r\nimport { GameRoot, enumLayer } from \"./root\";\r\nimport { ShapeDefinitionManager } from \"./shape_definition_manager\";\r\nimport { SoundProxy } from \"./sound_proxy\";\r\nimport { GameTime } from \"./time/game_time\";\r\nimport { ProductionAnalytics } from \"./production_analytics\";\r\nimport { randomInt } from \"../core/utils\";\r\nimport { defaultBuildingVariant } from \"./meta_building\";\r\nimport { DynamicTickrate } from \"./dynamic_tickrate\";\r\nimport { allCustomBuildingData } from \"./custom/modBuildings\";\r\n\r\nconst logger = createLogger(\"ingame/core\");\r\n\r\n// Store the canvas so we can reuse it later\r\n/** @type {HTMLCanvasElement} */\r\nlet lastCanvas = null;\r\n/** @type {CanvasRenderingContext2D} */\r\nlet lastContext = null;\r\n\r\n/**\r\n * The core manages the root and represents the whole game. It wraps the root, since\r\n * the root class is just a data holder.\r\n */\r\nexport class GameCore {\r\n    /** @param {Application} app */\r\n    constructor(app) {\r\n        this.app = app;\r\n\r\n        /** @type {GameRoot} */\r\n        this.root = null;\r\n\r\n        /**\r\n         * Set to true at the beginning of a logic update and cleared when its finished.\r\n         * This is to prevent doing a recursive logic update which can lead to unexpected\r\n         * behaviour.\r\n         */\r\n        this.duringLogicUpdate = false;\r\n\r\n        // Cached\r\n        this.boundInternalTick = this.updateLogic.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Initializes the root object which stores all game related data. The state\r\n     * is required as a back reference (used sometimes)\r\n     * @param {InGameState} parentState\r\n     * @param {Savegame} savegame\r\n     */\r\n    initializeRoot(parentState, savegame) {\r\n        // Construct the root element, this is the data representation of the game\r\n        this.root = new GameRoot(this.app);\r\n        this.root.gameState = parentState;\r\n        this.root.keyMapper = parentState.keyActionMapper;\r\n        this.root.savegame = savegame;\r\n        this.root.gameWidth = this.app.screenWidth;\r\n        this.root.gameHeight = this.app.screenHeight;\r\n\r\n        // Initialize canvas element & context\r\n        this.internalInitCanvas();\r\n\r\n        // Members\r\n        const root = this.root;\r\n\r\n        // This isn't nice, but we need it right here\r\n        root.keyMapper = new KeyActionMapper(root, this.root.gameState.inputReciever);\r\n\r\n        // Needs to come first\r\n        root.dynamicTickrate = new DynamicTickrate(root);\r\n\r\n        // Init classes\r\n        root.camera = new Camera(root);\r\n        root.map = new MapView(root);\r\n        root.logic = new GameLogic(root);\r\n        root.hud = new GameHUD(root);\r\n        root.time = new GameTime(root);\r\n        root.automaticSave = new AutomaticSave(root);\r\n        root.soundProxy = new SoundProxy(root);\r\n\r\n        // Init managers\r\n        root.entityMgr = new EntityManager(root);\r\n        root.systemMgr = new GameSystemManager(root);\r\n        root.shapeDefinitionMgr = new ShapeDefinitionManager(root);\r\n        root.hubGoals = new HubGoals(root);\r\n        root.productionAnalytics = new ProductionAnalytics(root);\r\n        root.buffers = new BufferMaintainer(root);\r\n\r\n        // Initialize the hud once everything is loaded\r\n        this.root.hud.initialize();\r\n\r\n        // Initial resize event, it might be possible that the screen\r\n        // resized later during init tho, which is why will emit it later\r\n        // again anyways\r\n        this.resize(this.app.screenWidth, this.app.screenHeight);\r\n\r\n        if (G_IS_DEV) {\r\n            // @ts-ignore\r\n            window.globalRoot = root;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes a new game, this means creating a new map and centering on the\r\n     * playerbase\r\n     * */\r\n    initNewGame() {\r\n        logger.log(\"Initializing new game\");\r\n        this.root.gameIsFresh = true;\r\n        this.root.map.seed = randomInt(0, 100000);\r\n\r\n        // Place the hub\r\n        const hub = gMetaBuildingRegistry.findByClass(MetaHubBuilding).createEntity({\r\n            root: this.root,\r\n            origin: new Vector(-2, -2),\r\n            rotation: 0,\r\n            originalRotation: 0,\r\n            rotationVariant: 0,\r\n            variant: defaultBuildingVariant,\r\n        });\r\n        this.root.map.placeStaticEntity(hub);\r\n        this.root.entityMgr.registerEntity(hub);\r\n    }\r\n\r\n    /**\r\n     * Inits an existing game by loading the raw savegame data and deserializing it.\r\n     * Also runs basic validity checks.\r\n     */\r\n    initExistingGame() {\r\n        logger.log(\"Initializing existing game\");\r\n        const serializer = new SavegameSerializer();\r\n\r\n        try {\r\n            const status = serializer.deserialize(this.root.savegame.getCurrentDump(), this.root);\r\n            if (!status.isGood()) {\r\n                logger.error(\"savegame-deserialize-failed:\" + status.reason);\r\n                return false;\r\n            }\r\n        } catch (ex) {\r\n            logger.error(\"Exception during deserialization:\", ex);\r\n            return false;\r\n        }\r\n        this.root.gameIsFresh = false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Initializes the render canvas\r\n     */\r\n    internalInitCanvas() {\r\n        let canvas, context;\r\n        if (!lastCanvas) {\r\n            logger.log(\"Creating new canvas\");\r\n            canvas = document.createElement(\"canvas\");\r\n            canvas.id = \"ingame_Canvas\";\r\n            canvas.setAttribute(\"opaque\", \"true\");\r\n            canvas.setAttribute(\"webkitOpaque\", \"true\");\r\n            canvas.setAttribute(\"mozOpaque\", \"true\");\r\n            this.root.gameState.getDivElement().appendChild(canvas);\r\n            context = canvas.getContext(\"2d\", { alpha: false });\r\n\r\n            lastCanvas = canvas;\r\n            lastContext = context;\r\n        } else {\r\n            logger.log(\"Reusing canvas\");\r\n            if (lastCanvas.parentElement) {\r\n                lastCanvas.parentElement.removeChild(lastCanvas);\r\n            }\r\n            this.root.gameState.getDivElement().appendChild(lastCanvas);\r\n\r\n            canvas = lastCanvas;\r\n            context = lastContext;\r\n\r\n            lastContext.clearRect(0, 0, lastCanvas.width, lastCanvas.height);\r\n        }\r\n\r\n        // globalConfig.smoothing.smoothMainCanvas = getDeviceDPI() < 1.5;\r\n        // globalConfig.smoothing.smoothMainCanvas = true;\r\n\r\n        canvas.classList.toggle(\"smoothed\", globalConfig.smoothing.smoothMainCanvas);\r\n\r\n        // Oof, use :not() instead\r\n        canvas.classList.toggle(\"unsmoothed\", !globalConfig.smoothing.smoothMainCanvas);\r\n\r\n        if (globalConfig.smoothing.smoothMainCanvas) {\r\n            enableImageSmoothing(context);\r\n        } else {\r\n            disableImageSmoothing(context);\r\n        }\r\n\r\n        this.root.canvas = canvas;\r\n        this.root.context = context;\r\n\r\n        registerCanvas(canvas, context);\r\n    }\r\n\r\n    /**\r\n     * Destructs the root, freeing all resources\r\n     */\r\n    destruct() {\r\n        if (lastCanvas && lastCanvas.parentElement) {\r\n            lastCanvas.parentElement.removeChild(lastCanvas);\r\n        }\r\n\r\n        this.root.destruct();\r\n        delete this.root;\r\n        this.root = null;\r\n        this.app = null;\r\n    }\r\n\r\n    tick(deltaMs) {\r\n        const root = this.root;\r\n\r\n        if (root.hud.parts.processingOverlay.hasTasks() || root.hud.parts.processingOverlay.isRunning()) {\r\n            return true;\r\n        }\r\n\r\n        // Extract current real time\r\n        root.time.updateRealtimeNow();\r\n\r\n        // Camera is always updated, no matter what\r\n        root.camera.update(deltaMs);\r\n\r\n        // Perform logic ticks\r\n        this.root.time.performTicks(deltaMs, this.boundInternalTick);\r\n\r\n        // Update analytics\r\n        root.productionAnalytics.update();\r\n\r\n        // Update automatic save after everything finished\r\n        root.automaticSave.update();\r\n\r\n        return true;\r\n    }\r\n\r\n    shouldRender() {\r\n        if (this.root.queue.requireRedraw) {\r\n            return true;\r\n        }\r\n        if (this.root.hud.shouldPauseRendering()) {\r\n            return false;\r\n        }\r\n\r\n        // Do not render\r\n        if (!this.app.isRenderable()) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    updateLogic() {\r\n        const root = this.root;\r\n\r\n        root.dynamicTickrate.beginTick();\r\n\r\n        if (G_IS_DEV && globalConfig.debug.disableLogicTicks) {\r\n            root.dynamicTickrate.endTick();\r\n            return true;\r\n        }\r\n\r\n        this.duringLogicUpdate = true;\r\n\r\n        // Update entities, this removes destroyed entities\r\n        root.entityMgr.update();\r\n\r\n        // IMPORTANT: At this point, the game might be game over. Stop if this is the case\r\n        if (!this.root) {\r\n            logger.log(\"Root destructed, returning false\");\r\n            root.dynamicTickrate.endTick();\r\n\r\n            return false;\r\n        }\r\n\r\n        root.systemMgr.update();\r\n        // root.particleMgr.update();\r\n\r\n        this.duringLogicUpdate = false;\r\n        root.dynamicTickrate.endTick();\r\n        return true;\r\n    }\r\n\r\n    resize(w, h) {\r\n        this.root.gameWidth = w;\r\n        this.root.gameHeight = h;\r\n        resizeHighDPICanvas(this.root.canvas, w, h, globalConfig.smoothing.smoothMainCanvas);\r\n        this.root.signals.resized.dispatch(w, h);\r\n        this.root.queue.requireRedraw = true;\r\n    }\r\n\r\n    postLoadHook() {\r\n        logger.log(\"Dispatching post load hook\");\r\n        this.root.signals.postLoadHook.dispatch();\r\n\r\n        if (!this.root.gameIsFresh) {\r\n            // Also dispatch game restored hook on restored savegames\r\n            this.root.signals.gameRestored.dispatch();\r\n        }\r\n\r\n        this.root.gameInitialized = true;\r\n    }\r\n\r\n    draw() {\r\n        const root = this.root;\r\n        const systems = root.systemMgr.systems;\r\n\r\n        const taskRunner = root.hud.parts.processingOverlay;\r\n        if (taskRunner.hasTasks()) {\r\n            if (!taskRunner.isRunning()) {\r\n                taskRunner.process();\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.root.dynamicTickrate.onFrameRendered();\r\n\r\n        if (!this.shouldRender()) {\r\n            // Always update hud tho\r\n            root.hud.update();\r\n            return;\r\n        }\r\n\r\n        // Update buffers as the very first\r\n        root.buffers.update();\r\n\r\n        root.queue.requireRedraw = false;\r\n\r\n        // Gather context and save all state\r\n        const context = root.context;\r\n        context.save();\r\n        if (G_IS_DEV && globalConfig.debug.testClipping) {\r\n            context.clearRect(0, 0, window.innerWidth * 3, window.innerHeight * 3);\r\n        }\r\n\r\n        // Compute optimal zoom level and atlas scale\r\n        const zoomLevel = root.camera.zoomLevel;\r\n        const effectiveZoomLevel =\r\n            (zoomLevel / globalConfig.assetsDpi) * getDeviceDPI() * globalConfig.assetsSharpness;\r\n\r\n        let desiredAtlasScale = \"0.1\";\r\n        if (effectiveZoomLevel > 0.75) {\r\n            desiredAtlasScale = \"1\";\r\n        } else if (effectiveZoomLevel > 0.5) {\r\n            desiredAtlasScale = \"0.75\";\r\n        } else if (effectiveZoomLevel > 0.25) {\r\n            desiredAtlasScale = \"0.5\";\r\n        } else if (effectiveZoomLevel > 0.1) {\r\n            desiredAtlasScale = \"0.25\";\r\n        }\r\n\r\n        // Construct parameters required for drawing\r\n        const params = new DrawParameters({\r\n            context: context,\r\n            visibleRect: root.camera.getVisibleRect(),\r\n            desiredAtlasScale,\r\n            zoomLevel,\r\n            root: root,\r\n        });\r\n\r\n        if (G_IS_DEV && (globalConfig.debug.testCulling || globalConfig.debug.hideFog)) {\r\n            context.clearRect(0, 0, root.gameWidth, root.gameHeight);\r\n        }\r\n\r\n        // Transform to world space\r\n        root.camera.transform(context);\r\n\r\n        assert(context.globalAlpha === 1.0, \"Global alpha not 1 on frame start\");\r\n\r\n        // Update hud\r\n        root.hud.update();\r\n\r\n        // Main rendering order\r\n        // -----\r\n\r\n        // BG / Map Resources / Belt Backgrounds\r\n        root.map.drawBackground(params);\r\n\r\n        if (!this.root.camera.getIsMapOverlayActive()) {\r\n            // Underlays for splitters / balancers\r\n            systems.itemAcceptor.drawUnderlays(params, enumLayer.regular);\r\n\r\n            // Belt items\r\n            systems.belt.drawLayerBeltItems(params, enumLayer.regular);\r\n\r\n            // Items being ejected / accepted currently (animations)\r\n            systems.itemEjector.drawLayer(params, enumLayer.regular);\r\n            systems.itemAcceptor.drawLayer(params, enumLayer.regular);\r\n        }\r\n\r\n        // Miner & Static map entities\r\n        root.map.drawForeground(params);\r\n\r\n        if (!this.root.camera.getIsMapOverlayActive()) {\r\n            // HUB Overlay\r\n            systems.hub.draw(params);\r\n\r\n            // Energy generator overlay\r\n            systems.energyGenerator.draw(params);\r\n\r\n            // Storage items\r\n            systems.storage.draw(params);\r\n\r\n            // Energy consumer (Battery icons)\r\n            systems.energyConsumer.draw(params);\r\n\r\n            for (let custom of allCustomBuildingData) {\r\n                if (custom.system) {\r\n                    systems[custom.id].draw(params);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Green wires overlay (not within the if because it can fade)\r\n        root.hud.parts.wiresOverlay.draw(params);\r\n\r\n        if (this.root.currentLayer === enumLayer.wires && !this.root.camera.getIsMapOverlayActive()) {\r\n            // Belt sprites & Static map entities\r\n            root.map.drawWiresLayer(params);\r\n\r\n            // Belt items as well as accepted / ejected items\r\n            systems.belt.drawLayerBeltItems(params, enumLayer.wires);\r\n            systems.itemEjector.drawLayer(params, enumLayer.wires);\r\n            systems.itemAcceptor.drawLayer(params, enumLayer.wires);\r\n\r\n            root.map.drawWiresForegroundLayer(params);\r\n\r\n            // pins\r\n            systems.wiredPins.draw(params);\r\n        }\r\n\r\n        if (G_IS_DEV) {\r\n            root.map.drawStaticEntityDebugOverlays(params);\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.renderBeltPaths) {\r\n            systems.belt.drawBeltPathDebug(params);\r\n        }\r\n\r\n        // END OF GAME CONTENT\r\n        // -----\r\n\r\n        // Finally, draw the hud. Nothing should come after that\r\n        root.hud.draw(params);\r\n\r\n        assert(context.globalAlpha === 1.0, \"Global alpha not 1 on frame end before restore\");\r\n\r\n        // Restore to screen space\r\n        context.restore();\r\n\r\n        // Draw overlays, those are screen space\r\n        root.hud.drawOverlays(params);\r\n\r\n        assert(context.globalAlpha === 1.0, \"context.globalAlpha not 1 on frame end\");\r\n\r\n        if (G_IS_DEV && globalConfig.debug.simulateSlowRendering) {\r\n            let sum = 0;\r\n            for (let i = 0; i < 1e8; ++i) {\r\n                sum += i;\r\n            }\r\n            if (Math.random() > 0.95) {\r\n                console.log(sum);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Component } from \"../../component\";\r\nimport { types } from \"../../../savegame/serialization\";\r\nimport { gItemRegistry } from \"../../../core/global_registries\";\r\nimport { BaseItem } from \"../../base_item\";\r\nimport { Vector, enumDirection } from \"../../../core/vector\";\r\nimport { globalConfig } from \"../../../core/config\";\r\n\r\nimport { ItemAcceptorComponent } from \"../../components/item_acceptor\";\r\nimport { ItemEjectorComponent } from \"../../components/item_ejector\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../../components/item_processor\";\r\nimport { Entity } from \"../../entity\";\r\nimport { MetaBuilding } from \"../../meta_building\";\r\nimport { GameRoot } from \"../../root\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\nimport { T } from \"../../../translations\";\r\nimport { formatItemsPerSecond } from \"../../../core/utils\";\r\n\r\nimport { GameSystemWithFilter } from \"../../game_system_with_filter\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { formatBigNumber, lerp } from \"../../../core/utils\";\r\nimport { Loader } from \"../../../core/loader\";\r\n\r\nimport { ShapeItem } from \"../../items/shape_item\";\r\nimport { ShapeDefinition } from \"../../shape_definition\";\r\n\r\nconst id = \"checker\";\r\nconst color = \"#ff6000\";\r\n\r\nexport class TargetShapeCheckerComponent extends Component {\r\n    static getId() {\r\n        return id;\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            filter: types.string,\r\n            filterIndex: types.int,\r\n            filterType: types.string,\r\n            isfil: types.bool,\r\n            storedItem: types.nullable(types.obj(gItemRegistry)),\r\n        };\r\n    }\r\n    constructor({\r\n        filter = \"unset\",\r\n        filterIndex = 0,\r\n        filterType = \"unset\",\r\n        isfil = false,\r\n        storedItem = null,\r\n    }) {\r\n        super();\r\n\r\n        this.filter = filter;\r\n        this.filterIndex = filterIndex;\r\n        this.filterType = filterType;\r\n        this.isfil = isfil;\r\n        /**\r\n         * Currently stored item\r\n         * @type {BaseItem}\r\n         */\r\n        this.storedItem = storedItem;\r\n    }\r\n\r\n    duplicateWithoutContents() {\r\n        return new TargetShapeCheckerComponent(this);\r\n    }\r\n}\r\n\r\nexport class MetaTargetShapeCheckerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(id);\r\n    }\r\n\r\n    getDimensions() {\r\n        return new Vector(1, 1);\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(`reward_${ id }`);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        const speed = root.hubGoals.getProcessorBaseSpeed(enumItemProcessorTypes[id]);\r\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new ItemProcessorComponent({\r\n                inputsPerCharge: 1,\r\n                processorType: enumItemProcessorTypes[id],\r\n            })\r\n        );\r\n        entity.addComponent(new TargetShapeCheckerComponent({}));\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        direction: enumDirection.top,\r\n                    },\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        direction: enumDirection.right,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        directions: [enumDirection.bottom],\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport class TargetShapeCheckerSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [TargetShapeCheckerComponent]);\r\n\r\n        this.storageOverlaySprite = Loader.getSprite(\"sprites/misc/storage_overlay.png\");\r\n        this.goal = \"\";\r\n    }\r\n\r\n    update() {\r\n        let newGoal = this.root.hubGoals.currentGoal.definition.getHash();\r\n        if (newGoal != this.goal) {\r\n            for (let i = 0; i < this.allEntities.length; ++i) {\r\n                const entity = this.allEntities[i];\r\n                let ejectorComp = entity.components.ItemEjector;\r\n                for (let slot of ejectorComp.slots) {\r\n                    slot.item = null;\r\n                }\r\n            }\r\n            this.goal = newGoal;\r\n        }\r\n    }\r\n\r\n    draw(parameters) {\r\n        this.forEachMatchingEntityOnScreen(parameters, this.drawEntity.bind(this));\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawEntity(parameters, entity) {\r\n        const context = parameters.context;\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        if (!staticComp.shouldBeDrawn(parameters)) {\r\n            return;\r\n        }\r\n\r\n        const tscComp = entity.components[id];\r\n        const storedItem = tscComp.storedItem;\r\n        const center = staticComp.getTileSpaceBounds().getCenter().toWorldSpace();\r\n        if (storedItem !== null) {\r\n            storedItem.draw(center.x, center.y, parameters, 30);\r\n        }\r\n        this.storageOverlaySprite.drawCached(parameters, center.x - 15, center.y + 15, 30, 15);\r\n\r\n        context.font = \"bold 10px GameFont\";\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"#64666e\";\r\n        context.fillText(tscComp.filterType, center.x, center.y + 25.5);\r\n\r\n        context.textAlign = \"left\";\r\n    }\r\n}\r\n\r\n// returns trackProduction\r\nexport function targetShapeCheckerProcess({ items, trackProduction, entity, outItems, self }) {\r\n    // console.log(\"targetShapeChecker PROCESSES\");\r\n\r\n    const inputItem = /** @type {ShapeItem} */ (items[0].item);\r\n    trackProduction = false;\r\n\r\n    const tscComponent = entity.components[id];\r\n    if (!tscComponent.isfil && inputItem instanceof ShapeItem) {\r\n        // setting filter type:\r\n        let item = inputItem.definition.getHash();\r\n        //shape:\r\n        if (item.match(/([^-][^-]------|--[^-][^-]----|----[^-][^-]--|------[^-][^-])$/)) {\r\n            let m = item.match(/([^-][^-])(--)*$/);\r\n            tscComponent.filterType = \"shape\";\r\n            tscComponent.filterIndex = m.index;\r\n            tscComponent.filter = m[0].slice(0, 1);\r\n            tscComponent.isfil = true;\r\n            let layer = item.split(\":\").length;\r\n            let index = (m.index % 9) / 2;\r\n            let topKey = `${\"--\".repeat(index)}${tscComponent.filter}u${\"--\".repeat(3 - index)}`;\r\n            let key = (topKey + \":\").repeat(layer - 1) + topKey;\r\n            tscComponent.storedItem = new ShapeItem(ShapeDefinition.fromShortKey(key));\r\n        }\r\n        // hole:\r\n        else if (\r\n            item.match(\r\n                /(--[^-][^-][^-][^-][^-][^-]|[^-][^-]--[^-][^-][^-][^-]|[^-][^-][^-][^-]--[^-][^-]|[^-][^-][^-][^-][^-][^-]--)$/\r\n            )\r\n        ) {\r\n            let m = item.match(/(--)([^-][^-])*$/);\r\n            tscComponent.filterType = \"hole\";\r\n            tscComponent.filterIndex = m.index;\r\n            tscComponent.filter = m[0].slice(0, 1);\r\n            tscComponent.isfil = true;\r\n            let layer = item.split(\":\").length;\r\n            let index = (m.index % 9) / 2;\r\n            let topKey = `${\"Cu\".repeat(index)}--${\"Cu\".repeat(3 - index)}`;\r\n            let key = (topKey + \":\").repeat(layer - 1) + topKey;\r\n            tscComponent.storedItem = new ShapeItem(ShapeDefinition.fromShortKey(key));\r\n        }\r\n        // color:\r\n        else if (item.match(/(.[^u].u.u.u|.u.[^u].u.u|.u.u.[^u].u|.u.u.u.[^u])$/)) {\r\n            let m = item.match(/([^u])(.u)*$/);\r\n            tscComponent.filterType = \"color\";\r\n            tscComponent.filterIndex = m.index;\r\n            tscComponent.filter = m[0].slice(0, 1);\r\n            tscComponent.isfil = true;\r\n            let layer = item.split(\":\").length;\r\n            let index = ((m.index % 9) - 1) / 2;\r\n            let topKey = `${\"--\".repeat(index)}C${tscComponent.filter}${\"--\".repeat(3 - index)}`;\r\n            let key = (topKey + \":\").repeat(layer - 1) + topKey;\r\n            tscComponent.storedItem = new ShapeItem(ShapeDefinition.fromShortKey(key));\r\n        }\r\n        // uncolored:\r\n        else if (\r\n            item.match(\r\n                /(.u.[^u-].[^u-].[^u-]|.[^u-].u.[^u-].[^u-]|.[^u-].[^u-].u.[^u-]|.[^u-].[^u-].[^u-].u)$/\r\n            )\r\n        ) {\r\n            let m = item.match(/(u)(.[^u])*$/);\r\n            tscComponent.filterType = \"uncolored\";\r\n            tscComponent.filterIndex = m.index;\r\n            tscComponent.filter = m[0].slice(0, 1);\r\n            tscComponent.isfil = true;\r\n            let layer = item.split(\":\").length;\r\n            let index = ((m.index % 9) - 1) / 2;\r\n            let topKey = `${\"--\".repeat(index)}C${tscComponent.filter}${\"--\".repeat(3 - index)}`;\r\n            let key = (topKey + \":\").repeat(layer - 1) + topKey;\r\n            tscComponent.storedItem = new ShapeItem(ShapeDefinition.fromShortKey(key));\r\n        }\r\n        return false;\r\n    }\r\n\r\n    if (tscComponent.isfil) {\r\n        let goal = self.root.hubGoals.currentGoal.definition.getHash();\r\n\r\n        let matches = true;\r\n\r\n        if (tscComponent.filterType == \"color\") {\r\n            matches = goal[tscComponent.filterIndex] == tscComponent.filter;\r\n        } else if (tscComponent.filterType == \"uncolored\") {\r\n            matches =\r\n                !goal[tscComponent.filterIndex] || goal[tscComponent.filterIndex] == tscComponent.filter;\r\n        } else if (tscComponent.filterType == \"shape\") {\r\n            matches = goal[tscComponent.filterIndex] == tscComponent.filter;\r\n        } else if (tscComponent.filterType == \"hole\") {\r\n            matches =\r\n                !goal[tscComponent.filterIndex] || goal[tscComponent.filterIndex] == tscComponent.filter;\r\n        }\r\n        outItems.push({\r\n            item: inputItem,\r\n            requiredSlot: matches ? 0 : 1,\r\n        });\r\n    }\r\n\r\n    return trackProduction;\r\n}\r\n\r\nexport const tscSprite = [\r\n    {\r\n        // data:\r\n        sprite: \"sprites/buildings/targetShapeChecker.png\",\r\n        w: 192,\r\n        h: 192,\r\n    },\r\n    {\r\n        // base:\r\n        path: \"M 11,31 v 130 l 20,20 h 130 l 20,-20 v -130 l -20,-20 h -130 z\",\r\n    },\r\n    {\r\n        // red cross:\r\n        path: \"M 175,40 l 12,12 -12,12 12,12 -12,12 -12,-12 -12,12 -12,-12 12,-12 -12,-12 12,-12 12,12 z\",\r\n        fill: \"red\",\r\n    },\r\n    {\r\n        // green arrow:\r\n        path: \"M 40,35 l 30,-30 30,30 z\",\r\n        fill: \"lightgreen\",\r\n    },\r\n];\r\nexport const tscSpriteBp = [\r\n    {\r\n        // data:\r\n        sprite: \"sprites/blueprints/targetShapeChecker.png\",\r\n        w: 192,\r\n        h: 192,\r\n        transparent: true,\r\n    },\r\n    {\r\n        // base:\r\n        path: \"M 11,31 v 130 l 20,20 h 130 l 20,-20 v -130 l -20,-20 h -130 z\",\r\n        fill: \"#6CD1FF\",\r\n        stroke: \"#56A7D8\",\r\n    },\r\n    {\r\n        // red cross:\r\n        path: \"M 175,40 l 12,12 -12,12 12,12 -12,12 -12,-12 -12,12 -12,-12 12,-12 -12,-12 12,-12 12,12 z\",\r\n        fill: \"#5EB7ED\",\r\n        stroke: \"#56A7D8\",\r\n    },\r\n    {\r\n        // green arrow:\r\n        path: \"M 40,35 l 30,-30 30,30 z\",\r\n        fill: \"#5EB7ED\",\r\n        stroke: \"#56A7D8\",\r\n    },\r\n];\r\n\r\nexport const checker = {\r\n    id: \"checker\",\r\n    component: TargetShapeCheckerComponent,\r\n    building: MetaTargetShapeCheckerBuilding,\r\n    toolbar: 1,\r\n    system: TargetShapeCheckerSystem,\r\n    sysOrder: 4.5,\r\n    process: targetShapeCheckerProcess,\r\n    speed: 100,\r\n    draw: true,\r\n    sprite: tscSprite,\r\n    spriteBp: tscSpriteBp,\r\n\r\n    variantId: 500,\r\n    meta: MetaTargetShapeCheckerBuilding,\r\n    speed: 2,\r\n};\r\n\r\nexport default checker;\r\n","import { MetaBuilding,\r\n\tenumDirection,\r\n\tenumItemProcessorTypes,\r\n\tT,\r\n\tItemProcessorComponent,\r\n\tItemEjectorComponent,\r\n\tItemAcceptorComponent,\r\n\tVector,\r\n\tformatItemsPerSecond,\r\n\tShapeItem,\r\n\tShapeDefinition,\r\n    enumItemType,\r\n} from \"../gameData\";\r\n\r\n\r\nconst id = \"combiner\";\r\nconst color = \"blue\";\r\n\r\n\r\n\r\nexport class MetaCombinerBuilding extends MetaBuilding {\r\n    constructor() {\r\n        super(id);\r\n    }\r\n\r\n    getDimensions() {\r\n        return new Vector(2, 2);\r\n    }\r\n\r\n    getSilhouetteColor() {\r\n        return color;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return root.hubGoals.isRewardUnlocked(`reward_${ id }`);\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        const speed = root.hubGoals.getProcessorBaseSpeed(id);\r\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\r\n    }\r\n\r\n    /**\r\n     * Creates the entity at the given location\r\n     * @param {Entity} entity\r\n     */\r\n    setupEntityComponents(entity) {\r\n        entity.addComponent(\r\n            new ItemProcessorComponent({\r\n                inputsPerCharge: 2,\r\n                processorType: id,\r\n            })\r\n        );\r\n        entity.addComponent(\r\n            new ItemEjectorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 0),\r\n                        direction: enumDirection.top,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n        entity.addComponent(\r\n            new ItemAcceptorComponent({\r\n                slots: [\r\n                    {\r\n                        pos: new Vector(0, 1),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                    {\r\n                        pos: new Vector(1, 1),\r\n                        directions: [enumDirection.bottom],\r\n                        filter: enumItemType.shape,\r\n                    },\r\n                ],\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// returns trackProduction\r\nexport function CombinerProcess({ items, trackProduction, entity, outItems, self }) {\r\n    // console.log(\"Combiner PROCESSES\");\r\n\r\n    const inputItem = items[0].item;\r\n    trackProduction = true;\r\n\r\n//     debugger;\r\n    let input = items.map(e => e.item.definition.getHash());\r\n\r\n\r\n    let [it1, it2] = input;\r\n    let out = [];\r\n    const recipes = {\r\n        \"CC\": \"L\",\r\n        \"RR\": \"P\",\r\n        \"SS\": \"T\",\r\n        \"WW\": \"Z\",\r\n        \"CR\" : \"B\", \"RC\" : \"B\",\r\n        \"CS\" : \"U\", \"SC\" : \"U\",\r\n    };\r\n    let a = \"\"; \r\n    for (let i = 0; i < 4; i++) {\r\n        let empty = it1[i*2] == \"-\" || it2[i*2] == \"-\";\r\n        let r = recipes[it1[i*2] + it2[i*2]] || \"C\";\r\n        a += empty ? \"--\" : r + \"u\";\r\n    }\r\n\r\n    if (a != \"--------\") {\r\n        outItems.push({\r\n            item: new ShapeItem(ShapeDefinition.fromShortKey(a)),\r\n        })\r\n    }\r\n\r\n    // for (let i = 0; i < out.length; ++i) {\r\n    // \tif (!out[i]) continue;\r\n    // \toutItems.push({\r\n    // \t\titem: new ShapeItem(ShapeDefinition.fromShortKey(out[i])),\r\n    // \t\trequiredSlot: i,\r\n    // \t})\r\n    // }\r\n\r\n    return trackProduction;\r\n}\r\n\r\n\r\nexport const Sprite = {\r\n    sprite: `sprites/buildings/${ id }.png`,\r\n    url: `./res/${ id }.png`,\r\n    w: 192 * 2,\r\n    h: 192 * 2,\r\n};\r\nexport const SpriteBp = {\r\n    sprite: `sprites/blueprints/${ id }.png`,\r\n    url: `./res/${ id }-bp.png`,\r\n    w: 192 * 2,\r\n    h: 192 * 2,\r\n};\r\n\r\nexport const unstackerBuildingData = {\r\n    id: id,\r\n    building: MetaCombinerBuilding,\r\n    toolbar: 1,\r\n    sprite: Sprite,\r\n    spriteBp: SpriteBp,\r\n    process: CombinerProcess,\r\n    // TODO: keybinding in KEYMAPPINGS\r\n    // TODO: T\r\n    Tname: id,\r\n    Tdesc: \"Whatever...\",\r\n    speed: 1 / 5,\r\n    speedClass: \"processors\",\r\n    meta: MetaCombinerBuilding,\r\n    variantId: 540,\r\n};\r\n\r\nexport default unstackerBuildingData;","import { types } from \"../../../savegame/serialization\";\nimport { Component } from \"../../component\";\nimport { BaseItem } from \"../../base_item\";\nimport { gItemRegistry } from \"../../../core/global_registries\";\nimport { GameTime } from \"../../time/game_time\";\n\nimport { DrawParameters } from \"../../../core/draw_parameters\";\nimport { Entity } from \"../../entity\";\nimport { GameSystemWithFilter } from \"../../game_system_with_filter\";\nimport { ShapeItem } from \"../../items/shape_item\";\nimport { ColorItem } from \"../../items/color_item\";\n\nimport { formatItemsPerSecond } from \"../../../core/utils\";\nimport { enumDirection, Vector } from \"../../../core/vector\";\nimport { T } from \"../../../translations\";\nimport { ItemAcceptorComponent } from \"../../components/item_acceptor\";\nimport { ItemEjectorComponent } from \"../../components/item_ejector\";\nimport { MetaBuilding } from \"../../meta_building\";\nimport { GameRoot } from \"../../root\";\nimport { enumItemType } from \"../../base_item\";\n\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../../components/item_processor\";\n\nconst id = \"counter\";\n\nexport class ItemCounterComponent extends Component {\n    static getId() {\n        return id;\n    }\n\n    static getSchema() {\n        return {\n            // inputSlots: types.array(\n            //     types.structured({\n            //         item: types.obj(gItemRegistry),\n            //         sourceSlot: types.uint,\n            //     })\n            // ),\n            itemTickHistory: types.array(types.float),\n        };\n    }\n\n    duplicateWithoutContents() {\n        return new ItemCounterComponent();\n    }\n\n    constructor() {\n        super();\n\n        /**\n         * Maintained every TODO game tick, this aray contains the item counts for every tick in the past 1 second.\n         * @type {number[]}\n         */\n        this.itemTickHistory = Array(24).fill(0);\n\n        /** @type {number} Calculated and set every second. This is a read only property. */\n        this.averageItemsPerSecond = 0;\n\n        /** @type {number} - Last time the averageItemsPerSecond property was reset. */\n        this.lastResetTime = 0;\n    }\n\n    getCurrentTime() {}\n}\n\nexport class CounterSystem extends GameSystemWithFilter {\n    constructor(root) {\n        super(root, [ItemCounterComponent]);\n    }\n\n    update() {\n        // for (let i = 0; i < this.allEntities.length; ++i) {\n        //     const entity = this.allEntities[i];\n        //     const counterComp = entity.components.Counter;\n        // }\n    }\n\n    // Only render the items/s overlay if the entity is on screen\n    draw(parameters) {\n        this.forEachMatchingEntityOnScreen(parameters, this.drawEntity.bind(this));\n    }\n\n    /**\n     * @param {DrawParameters} parameters\n     * @param {Entity} entity\n     */\n    drawEntity(parameters, entity) {\n        const context = parameters.context;\n        const staticComp = entity.components.StaticMapEntity;\n\n        if (!staticComp.shouldBeDrawn(parameters)) {\n            return;\n        }\n\n        /** @type {ItemCounterComponent} */\n        const counterComp = entity.components[id];\n\n        // cal avg: //\n\n        const analyzedTime = 5;\n        let now = this.root.time.timeSeconds;\n        // now = performance.now() / 1e3;\n        const filtered = counterComp.itemTickHistory.map(e => now - e).filter(e => e < analyzedTime);\n        const min = Math.min(analyzedTime / 2, ...filtered),\n            max = Math.max(analyzedTime / 10, ...filtered);\n        const avg = !filtered.length ? 0 : (filtered.length - 1) / (max - min);\n        counterComp.averageItemsPerSecond = avg;\n\n        // // // // //\n\n        context.save();\n        context.globalAlpha = 1;\n        const center = staticComp.getTileSpaceBounds().getCenter().toWorldSpace();\n        context.translate(center.x, center.y + 0.15);\n        context.scale(0.8, 1);\n\n        const size = counterComp.averageItemsPerSecond >= 10 ? 7 : 9;\n        context.font = `bold ${size}px GameFont`; // GameFont does not work\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        context.fillStyle = \"#64666e\";\n        context.fillStyle = \"red\";\n        context.fillText(counterComp.averageItemsPerSecond.toFixed(1), 0, 0);\n\n        context.restore();\n    }\n}\n\nexport class MetaCounterBuilding extends MetaBuilding {\n    constructor() {\n        super(id);\n    }\n\n    /**\n     * @returns {string} Colour used to represent this building when zoomed out.\n     */\n    getSilhouetteColor() {\n        return \"#444e81\"; // Dark Blue\n    }\n\n    /**\n     * @param {GameRoot} root\n     * @param {string} variant\n     * @returns {Array<[string, string]>}\n     */\n    getAdditionalStatistics(root, variant) {\n        const speed = root.hubGoals.getBeltBaseSpeed(\"regular\");\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\n    }\n\n    /**\n     * The counter is unlocked once the belt speed reaches 20 (items/s). This is around the time when items on\n     * a belt begin to blurr. It is also late enough in the game that a player would understand and appreciate\n     * this building.\n     * @param {GameRoot} root\n     */\n    getIsUnlocked(root) {\n        return root.hubGoals.isRewardUnlocked(`reward_${ id }`);\n    }\n\n    /**\n     * Creates the entity at the given location\n     * @param {Entity} entity\n     */\n    setupEntityComponents(entity) {\n        entity.addComponent(\n            new ItemProcessorComponent({\n                inputsPerCharge: 1,\n                processorType: enumItemProcessorTypes[id],\n            })\n        );\n        entity.addComponent(new ItemCounterComponent());\n\n        entity.addComponent(\n            new ItemEjectorComponent({\n                slots: [{ pos: new Vector(0, 0), direction: enumDirection.top }],\n            })\n        );\n        entity.addComponent(\n            new ItemAcceptorComponent({\n                slots: [\n                    {\n                        pos: new Vector(0, 0),\n                        directions: [enumDirection.bottom],\n                    },\n                ],\n            })\n        );\n    }\n}\n\n// returns trackProduction\nexport function counterProcess({ items, trackProduction, entity, outItems, self }) {\n    // console.log(\"counter PROCESSES\");\n\n    const inputItem = items[0].item;\n    trackProduction = false;\n\n    /** @type {ItemCounterComponent} */\n    const counterComp = entity.components.Counter;\n    counterComp.itemTickHistory.shift();\n    let now = self.root.time.timeSeconds;\n    // now = performance.now() / 1e3;\n    counterComp.itemTickHistory.push(now);\n\n    outItems.push({\n        item: inputItem,\n    });\n\n    return trackProduction;\n}\n\nexport const counterSprite = {\n    sprite: \"sprites/buildings/counter.png\",\n    url: \"./res/counter.png\",\n    w: 192,\n    h: 192,\n};\nexport const counterSpriteBp = {\n    sprite: \"sprites/blueprints/counter.png\",\n    url: \"./res/counter-bp.png\",\n    w: 192,\n    h: 192,\n};\n\nexport const counterBuildingData = {\n    id,\n    component: ItemCounterComponent,\n    building: MetaCounterBuilding,\n    toolbar: 1,\n    system: CounterSystem,\n    sprite: counterSprite,\n    spriteBp: counterSpriteBp,\n    process: counterProcess,\n    // TODO: keybinding in KEYMAPPINGS\n    // TODO: T\n    Tname: \"Counter\",\n    Tdesc: \"Whatever...\",\n    variantId: 510,\n    meta: MetaCounterBuilding,\n    speed: 2,\n};\n\nexport default counterBuildingData;\n","\r\n\r\n\r\n\r\nconst painter = {\r\n    id: \"painter4\",\r\n    goal: {\r\n        shape: \"CuCuCuCu\",\r\n        required: 5000,\r\n        reward: \"painter_quad\",\r\n    }\r\n};\r\nconst inverter = {\r\n    id: \"inverter\",\r\n    goal: {\r\n        shape: \"CuCuCuCu\",\r\n        required: 5000,\r\n        reward: \"inverter\",\r\n    }\r\n};\r\nconst counter = {\r\n    id: \"counter\",\r\n    goal: {\r\n        shape: \"CuCuCuCu\",\r\n        required: 5000,\r\n        reward: \"counter\",\r\n    }\r\n};\r\nconst checker = {\r\n    id: \"counter\",\r\n    goal: {\r\n        shape: \"CuCuCuCu\",\r\n        required: 5000,\r\n        reward: \"counter\",\r\n    }\r\n};\r\nconst combiner = {\r\n    id: \"combiner\",\r\n    goal: {\r\n        shape: \"CuCuCuCu\",\r\n        required: 5000,\r\n        reward: \"combiner\",\r\n    }\r\n};\r\n\r\nconst unstacker = {\r\n    id: \"unstacker\",\r\n    goal: {\r\n        shape: \"CuCuCuCu\",\r\n        required: 5000,\r\n        reward: \"unstacker\",\r\n    }\r\n};\r\n\r\n\r\nconst levels = [\r\n    inverter,\r\n    counter,\r\n    checker,\r\n    combiner,\r\n    unstacker,\r\n]\r\n\r\n\r\n\r\nexport default levels;","import { MetaBuilding,\r\n\tenumDirection,\r\n\tenumItemProcessorTypes,\r\n\tT,\r\n\tItemProcessorComponent,\r\n\tItemEjectorComponent,\r\n\tItemAcceptorComponent,\r\n\tVector,\r\n\tformatItemsPerSecond,\r\n\tShapeItem,\r\n\tShapeDefinition,\r\n    ColorItem,\r\n    enumItemType,\r\n} from \"../gameData\";\r\n\r\n\r\nconst id = \"painter\";\r\n\r\nconst cache = {};\r\n\r\nfunction colorShape(shape, color) {\r\n    const recipeId = shape + \"+\" + color;\r\n    let out = cache[recipeId];\r\n    if (out) return out;\r\n\r\n    debugger;\r\n\r\n    let layers = shape.split(':').map(e=>e.split(''));\r\n    for (let i = 0; i < 4; i++) {\r\n        let charges = 2;\r\n        for (let j = layers.length - 1; j >= 0; --j) {\r\n            if (layers[j][2*i] != \"-\") {\r\n                layers[j][2*i+1] = color;\r\n                charges--;\r\n                if (!charges) break;\r\n            }\r\n        }\r\n    }\r\n    let result = layers.map(e=>e.join('')).join(':');\r\n    return cache[recipeId] = ShapeDefinition.fromShortKey(result);\r\n}\r\n\r\n// returns trackProduction\r\nexport function Painter1Process({ items, trackProduction, entity, outItems, self }) {\r\n    const shape = items[0].item.getHash();\r\n    const color = items[1].item.getHash();\r\n\r\n    outItems.push({\r\n        item: new ShapeItem(colorShape(shape, color)),\r\n    });\r\n\r\n    return true;\r\n}\r\n\r\n\r\nexport const BuildingData = {\r\n    id: id,\r\n    process: Painter1Process,\r\n};\r\n\r\nexport default BuildingData;","import { MetaBuilding,\r\n\tenumDirection,\r\n\tenumItemProcessorTypes,\r\n\tT,\r\n\tItemProcessorComponent,\r\n\tItemEjectorComponent,\r\n\tItemAcceptorComponent,\r\n\tVector,\r\n\tformatItemsPerSecond,\r\n\tShapeItem,\r\n\tShapeDefinition,\r\n    ColorItem,\r\n    enumItemType,\r\n} from \"../gameData\";\r\n\r\n\r\nconst id = \"painterDouble\";\r\n\r\nconst cache = {};\r\n\r\nfunction colorShape(shape, color) {\r\n    const recipeId = shape + \"+\" + color;\r\n    let out = cache[recipeId];\r\n    if (out) return out;\r\n\r\n    debugger;\r\n\r\n    let layers = shape.split(':').map(e=>e.split(''));\r\n    for (let i = 0; i < 4; i++) {\r\n        for (let j = layers.length - 1; j >= 0; --j) {\r\n            if (layers[j][2*i] != \"-\") {\r\n                layers[j][2*i+1] = color;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    let result = layers.map(e=>e.join('')).join(':');\r\n    return cache[recipeId] = ShapeDefinition.fromShortKey(result);\r\n}\r\n\r\n// returns trackProduction\r\nexport function Painter2Process({ items, trackProduction, entity, outItems, self }) {\r\n    const shape1 = items[0].item.getHash();\r\n    const shape2 = items[1].item.getHash();\r\n    const color = items[2].item.getHash();\r\n\r\n    outItems.push({\r\n        item: new ShapeItem(colorShape(shape1, color)),\r\n    });\r\n    outItems.push({\r\n        item: new ShapeItem(colorShape(shape2, color)),\r\n    });\r\n\r\n    return true;\r\n}\r\n\r\n\r\nexport const BuildingData = {\r\n    id: id,\r\n    process: Painter2Process,\r\n};\r\n\r\nexport default BuildingData;","import { MetaBuilding,\n\tenumDirection,\n\tenumItemProcessorTypes,\n\tT,\n\tItemProcessorComponent,\n\tItemEjectorComponent,\n\tItemAcceptorComponent,\n\tVector,\n\tformatItemsPerSecond,\n\tShapeItem,\n\tShapeDefinition,\n    enumItemType,\n} from \"../gameData\";\n\n\nconst id = \"unstacker\";\n\n\nexport class MetaUnstackerBuilding extends MetaBuilding {\n    constructor() {\n        super(id);\n    }\n\n    getDimensions() {\n        return new Vector(2, 1);\n    }\n\n    getSilhouetteColor() {\n        return \"#ff6000\";\n    }\n\n    /**\n     * @param {GameRoot} root\n     */\n    getIsUnlocked(root) {\n        return root.hubGoals.isRewardUnlocked(`reward_${ id }`);\n    }\n\n    /**\n     * @param {GameRoot} root\n     * @param {string} variant\n     * @returns {Array<[string, string]>}\n     */\n    getAdditionalStatistics(root, variant) {\n        const speed = root.hubGoals.getProcessorBaseSpeed(id);\n        return [[T.ingame.buildingPlacement.infoTexts.speed, formatItemsPerSecond(speed)]];\n    }\n\n    /**\n     * Creates the entity at the given location\n     * @param {Entity} entity\n     */\n    setupEntityComponents(entity) {\n        entity.addComponent(\n            new ItemProcessorComponent({\n                inputsPerCharge: 1,\n                processorType: id,\n            })\n        );\n        entity.addComponent(\n            new ItemEjectorComponent({\n                slots: [\n                    {\n                        pos: new Vector(0, 0),\n                        direction: enumDirection.top,\n                    },\n                    {\n                        pos: new Vector(1, 0),\n                        direction: enumDirection.top,\n                    },\n                ],\n            })\n        );\n        entity.addComponent(\n            new ItemAcceptorComponent({\n                slots: [\n                    {\n                        pos: new Vector(0, 0),\n                        directions: [enumDirection.bottom],\n                        filter: enumItemType.shape,\n                    },\n                ],\n            })\n        );\n    }\n}\n\n\n\n\n// returns trackProduction\nexport function UnstackerProcess({ items, trackProduction, entity, outItems, self }) {\n    // console.log(\"Unstacker PROCESSES\");\n\n    const inputItem = items[0].item;\n    trackProduction = true;\n\n//     debugger;\n    let input = items.map(e => e.item.definition.getHash());\n\n\n\n    let [it] = input;\n    let out = [];\n    let a = it.split(':');\n    let top = a.shift();\n    let right = a.join(':');\n    out = [top, right]\n\n\n\n\n\n    for (let i = 0; i < out.length; ++i) {\n    \tif (!out[i]) continue;\n    \toutItems.push({\n    \t\titem: new ShapeItem(ShapeDefinition.fromShortKey(out[i])),\n    \t\trequiredSlot: i,\n    \t})\n    }\n\n    return trackProduction;\n}\n\n\nexport const Sprite = {\n    sprite: \"sprites/buildings/unstacker.png\",\n    url: \"./res/unstacker.png\",\n    w: 192 * 2,\n    h: 192,\n};\nexport const SpriteBp = {\n    sprite: \"sprites/blueprints/unstacker.png\",\n    url: \"./res/unstacker-bp.png\",\n    w: 192 * 2,\n    h: 192,\n};\n\nexport const unstackerBuildingData = {\n    id,\n    building: MetaUnstackerBuilding,\n    toolbar: 1,\n    sprite: Sprite,\n    spriteBp: SpriteBp,\n    process: UnstackerProcess,\n    // TODO: keybinding in KEYMAPPINGS\n    // TODO: T\n    Tname: \"Unstacker\",\n    Tdesc: \"Whatever...\",\n    speed: 1 / 5,\n    speedClass: \"processors\",\n    meta: MetaUnstackerBuilding,\n    variantId: 530,\n};\n\nexport default unstackerBuildingData;","/** @enum {string} */\r\nexport const customColors = [];\r\n\r\n/**\r\n * @param {Object} colorData\r\n * @param {string} colorData.id\r\n * @param {string} colorData.code\r\n * @param {string} colorData.hex\r\n * @param {string[][] | string[]} [colorData.mixingFrom]\r\n * @param {Object.<string, string>} [colorData.mixing]\r\n * @param {boolean} [colorData.spawnable]\r\n * @param {number} [colorData.minDistance]\r\n */\r\nexport function registerCustomColor(colorData) {\r\n    customColors.push(colorData);\r\n}\r\n\r\n// registerCustomColor({\r\n//     id: \"black\",\r\n//     code: \"k\",\r\n//     hex: \"#333333\",\r\n//     mixing: {\r\n//         white: \"uncolored\",\r\n//         uncolored: \"uncolored\",\r\n//         any: \"black\",\r\n//     },\r\n//     spawnable: true,\r\n//     minDistance: 5,\r\n// });\r\n","export { Component } from \"../component\";\nexport { types } from \"../../savegame/serialization\";\nexport { gItemRegistry } from \"../../core/global_registries\";\nexport { BaseItem } from \"../base_item\";\nexport { Vector, enumDirection } from \"../../core/vector\";\nexport { globalConfig } from \"../../core/config\";\n\nexport { ItemAcceptorComponent } from \"../components/item_acceptor\";\nexport { ItemEjectorComponent } from \"../components/item_ejector\";\nexport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\nexport { Entity } from \"../entity\";\nexport { MetaBuilding } from \"../meta_building\";\nexport { GameRoot } from \"../root\";\nexport { enumHubGoalRewards } from \"../tutorial_goals\";\nexport { T } from \"../../translations\";\nexport { formatItemsPerSecond } from \"../../core/utils\";\n\nexport { GameSystemWithFilter } from \"../game_system_with_filter\";\nexport { DrawParameters } from \"../../core/draw_parameters\";\nexport { formatBigNumber, lerp } from \"../../core/utils\";\nexport { Loader } from \"../../core/loader\";\n\n\nexport { GameTime } from \"../time/game_time\";\n\nexport { ShapeItem } from \"../items/shape_item\";\nexport { ColorItem } from \"../items/color_item\";\nexport { ShapeDefinition } from \"../shape_definition\";\n\nexport { enumItemType } from \"../base_item\";\n","import { supportedBuildings as toolbar } from \"../hud/parts/buildings_toolbar\";\r\nimport { enumItemProcessorTypes } from \"../components/item_processor\";\r\nimport { T } from \"../../translations\";\r\nimport { addSprite } from \"./modSpriteDrawer\";\r\nimport { enumHubGoalRewards, tutorialGoals } from \"../tutorial_goals\";\r\n\r\nexport let allCustomBuildingData = [];\r\nexport const customBuildingData = {};\r\n\r\nconst localMods = require.context(\"./buildings\", false, /.*\\.js/i);\r\nfor (let key of localMods.keys()) {\r\n    let mod = localMods(key).default;\r\n    if (!Array.isArray(mod)) {\r\n        mod = [mod];\r\n    }\r\n    for (let entry of mod) {\r\n        allCustomBuildingData.push(entry);\r\n    }\r\n}\r\n\r\nfor (let custom of allCustomBuildingData) {\r\n    if (!customBuildingData[custom.id]) {\r\n        customBuildingData[custom.id] = custom;\r\n    } else {\r\n        customBuildingData[custom.id] = Object.assign({}, customBuildingData[custom.id], custom);\r\n    }\r\n}\r\nallCustomBuildingData = Object.values(customBuildingData);\r\nallCustomBuildingData.sort((a, b) => (a.variantId || 1e4) - (b.variantId || 1e4));\r\n\r\nfor (let custom of allCustomBuildingData) {\r\n\r\n    if (custom.goal) {\r\n        if (tutorialGoals.find(e=>e.reward == custom.goal.reward)) {\r\n            let index = tutorialGoals.findIndex(e=>e.reward == custom.goal.reward);\r\n            tutorialGoals.splice(index, 1);\r\n        }\r\n        tutorialGoals.push(custom.goal);\r\n        tutorialGoals.sort((a,b)=>a.required-b.required);\r\n        if (custom.goal.reward) {\r\n            if (!custom.goal.reward.startsWith(\"reward_\")) {\r\n                custom.goal.reward = \"reward_\" + custom.goal.reward;\r\n            }\r\n            enumHubGoalRewards[custom.goal.reward] = custom.goal.reward;\r\n            if (!T.storyRewards[custom.goal.reward]) {\r\n                T.storyRewards[custom.goal.reward] = { title: custom.goal.Tname || custom.Tname || custom.id };\r\n            }\r\n        }\r\n    }\r\n\r\n    if (custom.building) {\r\n        if (!custom.variant) {\r\n            custom.variant = \"default\";\r\n        }\r\n\r\n        if (custom.process) {\r\n            enumItemProcessorTypes[custom.id] = custom.id;\r\n        }\r\n\r\n        if (!custom.Tname) {\r\n            custom.Tname = custom.id;\r\n        }\r\n        if (!custom.Tdesc) {\r\n            custom.Tdesc = \"\";\r\n        }\r\n        if (!T.buildings[custom.id]) {\r\n            T.buildings[custom.id] = {};\r\n        }\r\n        T.buildings[custom.id][custom.variant] = {\r\n            name: custom.Tname,\r\n            description: custom.Tdesc,\r\n        };\r\n\r\n        if (!custom.speed) {\r\n            custom.speed = 1;\r\n        }\r\n        if (!custom.speedClass) {\r\n            custom.speedClass = \"belt\";\r\n        }\r\n\r\n        if (custom.meta && custom.toolbar == 1) {\r\n            toolbar.push(custom.meta);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (custom.sprite) {\r\n        (custom.sprite[0] || custom.sprite).sprite = `sprites/buildings/${custom.id}${\r\n            custom.variant == \"default\" ? \"\" : \"-\" + custom.variant\r\n        }.png`;\r\n        addSprite(custom.sprite);\r\n        (custom.spriteBp[0] || custom.spriteBp).sprite = `sprites/blueprints/${custom.id}${\r\n            custom.variant == \"default\" ? \"\" : \"-\" + custom.variant\r\n        }.png`;\r\n        custom.spriteBp.transparent = true;\r\n        addSprite(custom.spriteBp);\r\n    }\r\n}\r\n\r\nexport function getCustomBuildingSystemsNulled() {\r\n    let r = {};\r\n    for (let k in allCustomBuildingData) {\r\n        let data = allCustomBuildingData[k];\r\n        if (!data.system) {\r\n            continue;\r\n        }\r\n        r[data.id] = null;\r\n    }\r\n    return r;\r\n}\r\n\r\n/**\r\n * @param {number} order\r\n */\r\nexport function internalInitSystemsAddAt(order, add) {\r\n    let systems = Object.values(allCustomBuildingData).filter(data => {\r\n        if (!data.system) return false;\r\n        if (order <= 0) return data.sysOrder && data.sysOrder < order;\r\n        if (order) return data.sysOrder && order <= data.sysOrder && data.sysOrder < order + 1;\r\n        // NaN/undefined goes here\r\n        return !data.sysOrder;\r\n    });\r\n    systems.sort((a, b) => a.sysOrder - b.sysOrder);\r\n    for (let data of systems) {\r\n        add(data.id, data.system);\r\n    }\r\n}\r\n","import { Loader } from \"../../core/loader\";\n\n/**\n * draws building base on 192m*192n cells context\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} path\n */\nfunction drawBaseLayer(ctx, path, bp) {\n    let p = new Path2D(path);\n    ctx.save();\n    // shadow:\n    ctx.save();\n    ctx.fillStyle = \"#91949e\";\n    ctx.globalAlpha = 0.2;\n    ctx.translate(6, 8);\n    ctx.fill(p);\n    ctx.restore();\n    // base:\n    ctx.fillStyle = !bp ? \"#dee1ea\" : \"#6CD1FF\";\n    ctx.strokeStyle = !bp ? \"#64666e\" : \"#56A7D8\";\n    ctx.lineWidth = 6;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.miterLimit = 4;\n    ctx.fill(p);\n    ctx.stroke(p);\n    ctx.restore();\n}\n/**\n * draws a color-filled path on 192m*192n cells context\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} path\n */\nfunction drawfillShape(ctx, path, color) {\n    let p = new Path2D(path);\n    ctx.save();\n    // shadow:\n    ctx.save();\n    ctx.fillStyle = \"#91949e\";\n    ctx.globalAlpha = 0.2;\n    ctx.translate(6, 8);\n    ctx.fill(p);\n    ctx.restore();\n    // base:\n    ctx.fillStyle = color;\n    ctx.strokeStyle = \"#64666e\";\n    ctx.lineWidth = 10;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.miterLimit = 4;\n    ctx.stroke(p);\n    ctx.fill(p);\n    ctx.restore();\n}\nfunction drawShape(ctx, path, color1, color2) {\n    let p = new Path2D(path);\n    ctx.save();\n    // base:\n    ctx.fillStyle = color1;\n    ctx.strokeStyle = color2;\n    ctx.lineWidth = 10;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.miterLimit = 4;\n    ctx.stroke(p);\n    ctx.fill(p);\n    ctx.restore();\n}\n\nexport function addSprite(data) {\n    let info = data[0] || data;\n    if (info.url) {\n        drawSpriteFromImage(info.sprite, info.url, info);\n        return;\n    }\n    let layers = data.layers || data.slice(1);\n    drawSpriteFromJson(info.sprite, layers, info);\n}\n\nfunction drawSpriteFromJson(sprite, layers, info) {\n    function draw({ context, canvas2, context2 }) {\n        if (info.transparent) {\n            for (let layer of layers) {\n                if (layer.fill && layer.stroke) {\n                    drawShape(context2, layer.path, layer.fill, layer.stroke);\n                } else if (layer.fill) {\n                    drawfillShape(context, layer.path, layer.fill);\n                } else if (layer.stroke) {\n                    throw \"not implemented\";\n                } else {\n                    drawBaseLayer(context, layer.path, true);\n                }\n            }\n            context.save();\n            context.globalAlpha = 0x99 / 0xff;\n            context.drawImage(canvas2, 0, 0);\n            context.restore();\n\n            return;\n        }\n\n        for (let layer of layers) {\n            if (layer.fill && layer.stroke) {\n                drawShape(context, layer.path, layer.fill, layer.stroke);\n            } else if (layer.fill) {\n                drawfillShape(context, layer.path, layer.fill);\n            } else if (layer.stroke) {\n                throw \"not implemented\";\n            } else {\n                drawBaseLayer(context, layer.path);\n            }\n        }\n    }\n    Loader.drawSprite(sprite, draw, { w: info.w, h: info.h });\n}\n\nfunction drawSpriteFromImage(sprite, url, { w, h }) {\n    function draw({ context }) {\n        let img = new Image();\n        img.onload = function () {\n            context.drawImage(img, 0, 0);\n        };\n        img.src = url;\n    }\n    Loader.drawSprite(sprite, draw, { w, h });\n}\n","/** @enum {string} */\r\nexport const customShapes = [];\r\n\r\n/**\r\n * @callback DrawShape\r\n * @param {Object} args\r\n */\r\n\r\n/**\r\n * @typedef {Object} ShapeData\r\n * @property {string} id\r\n * @property {string} code\r\n * @property {boolean} [spawnable]\r\n * @property {string} [spawnColor]\r\n * @property {number} [maxQuarters]\r\n * @property {number} [minDistance]\r\n * @property {number} [minChance]\r\n * @property {number} [distChance]\r\n * @property {number} [maxChance]\r\n * @property {DrawShape|string} draw\r\n * @property {number} tier\r\n */\r\n\r\n/**\r\n * @param {ShapeData} shapeData\r\n */\r\nexport function registerCustomShape(shapeData) {\r\n    customShapes.push(shapeData);\r\n}\r\n\r\nlet customDefaults = {\r\n    spawnable: false,\r\n    spawnColor: \"uncolored\",\r\n    maxQuarters: 4,\r\n    minDistance: 6,\r\n    minChance: 4,\r\n    distChance: 1 / 3,\r\n    maxChance: 12,\r\n    tier: 3,\r\n};\r\n\r\nregisterCustomShape({\r\n    id: \"clover\",\r\n    code: \"L\",\r\n    ...customDefaults,\r\n    spawnColor: \"green\",\r\n    draw({ dims, innerDims, layer, quad, context, color, begin }) {\r\n        begin({ size: 1.3, path: true, zero: true });\r\n        const inner = 0.5;\r\n        const inner_center = 0.45;\r\n        context.lineTo(0, inner);\r\n        context.bezierCurveTo(0, 1, inner, 1, inner_center, inner_center);\r\n        context.bezierCurveTo(1, inner, 1, 0, inner, 0);\r\n    },\r\n    tier: 3,\r\n});\r\n\r\nregisterCustomShape({\r\n    id: \"star8\",\r\n    code: \"T\",\r\n    ...customDefaults,\r\n    draw({ dims, innerDims, layer, quad, context, color, begin }) {\r\n        begin({ size: 1.22, path: true, zero: true });\r\n        const inner = 0.5;\r\n        context.lineTo(0, inner);\r\n        context.lineTo(Math.sin(Math.PI / 8), Math.cos(Math.PI / 8));\r\n        context.lineTo(inner * Math.sin(Math.PI / 4), inner * Math.cos(Math.PI / 4));\r\n        context.lineTo(Math.sin((Math.PI * 3) / 8), Math.cos((Math.PI * 3) / 8));\r\n        context.lineTo(inner, 0);\r\n    },\r\n    tier: 3,\r\n});\r\n\r\nregisterCustomShape({\r\n    id: \"rhombus\",\r\n    code: \"B\",\r\n    ...customDefaults,\r\n    draw({ dims, innerDims, layer, quad, context, color, begin }) {\r\n        begin({ size: 1.2, path: true, zero: true });\r\n        const rad = 0.001;\r\n        // with rounded borders\r\n        context.arcTo(0, 1, 1, 0, rad);\r\n        context.arcTo(1, 0, 0, 0, rad);\r\n    },\r\n    tier: 4,\r\n});\r\n\r\nregisterCustomShape({\r\n    id: \"plus\",\r\n    code: \"P\",\r\n    ...customDefaults,\r\n    draw: \"M 0 0 L 1.1 0 1.1 0.5 0.5 0.5 0.5 1.1 0 1.1 z\",\r\n    tier: 3,\r\n});\r\n\r\nregisterCustomShape({\r\n    id: \"razor\",\r\n    code: \"Z\",\r\n    ...customDefaults,\r\n    draw({ dims, innerDims, layer, quad, context, color, begin }) {\r\n        begin({ size: 1.1, path: true, zero: true });\r\n        const inner = 0.5;\r\n        context.lineTo(inner, 0);\r\n        context.bezierCurveTo(inner, 0.3, 1, 0.3, 1, 0);\r\n        context.bezierCurveTo(\r\n            1,\r\n            inner,\r\n            inner * Math.SQRT2 * 0.9,\r\n            inner * Math.SQRT2 * 0.9,\r\n            inner * Math.SQRT1_2,\r\n            inner * Math.SQRT1_2\r\n        );\r\n        context.rotate(Math.PI / 4);\r\n        context.bezierCurveTo(inner, 0.3, 1, 0.3, 1, 0);\r\n        context.bezierCurveTo(\r\n            1,\r\n            inner,\r\n            inner * Math.SQRT2 * 0.9,\r\n            inner * Math.SQRT2 * 0.9,\r\n            inner * Math.SQRT1_2,\r\n            inner * Math.SQRT1_2\r\n        );\r\n    },\r\n    tier: 3,\r\n});\r\n\r\nregisterCustomShape({\r\n    id: \"sun\",\r\n    code: \"U\",\r\n    ...customDefaults,\r\n    spawnColor: \"yellow\",\r\n    draw({ dims, innerDims, layer, quad, context, color, begin }) {\r\n        begin({ size: 1.3, path: true, zero: true });\r\n        const PI = Math.PI;\r\n        const PI3 = ((PI * 3) / 8) * 0.75;\r\n        const c = 1 / Math.cos(Math.PI / 8);\r\n        const b = c * Math.sin(Math.PI / 8);\r\n\r\n        context.moveTo(0, 0);\r\n        context.rotate(Math.PI / 2);\r\n        context.arc(c, 0, b, -PI, -PI + PI3);\r\n        context.rotate(-Math.PI / 4);\r\n        context.arc(c, 0, b, -PI - PI3, -PI + PI3);\r\n        context.rotate(-Math.PI / 4);\r\n        context.arc(c, 0, b, PI - PI3, PI);\r\n    },\r\n    tier: 4,\r\n});\r\n","import { GameRoot } from \"./root\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { round3Digits } from \"../core/utils\";\r\n\r\nconst logger = createLogger(\"dynamic_tickrate\");\r\n\r\nconst fpsAccumulationTime = 1000;\r\n\r\nexport class DynamicTickrate {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        this.currentTickStart = null;\r\n        this.capturedTicks = [];\r\n        this.averageTickDuration = 0;\r\n\r\n        this.accumulatedFps = 0;\r\n        this.accumulatedFpsLastUpdate = 0;\r\n\r\n        this.averageFps = 60;\r\n\r\n        this.setTickRate(60);\r\n\r\n        if (G_IS_DEV && globalConfig.debug.renderForTrailer) {\r\n            this.setTickRate(300);\r\n        }\r\n    }\r\n\r\n    onFrameRendered() {\r\n        ++this.accumulatedFps;\r\n\r\n        const now = performance.now();\r\n        const timeDuration = now - this.accumulatedFpsLastUpdate;\r\n        if (timeDuration > fpsAccumulationTime) {\r\n            const avgFps = (this.accumulatedFps / fpsAccumulationTime) * 1000;\r\n            this.averageFps = avgFps;\r\n            this.accumulatedFps = 0;\r\n            this.accumulatedFpsLastUpdate = now;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the tick rate to N updates per second\r\n     * @param {number} rate\r\n     */\r\n    setTickRate(rate) {\r\n        logger.log(\"Applying tick-rate of\", rate);\r\n        this.currentTickRate = rate;\r\n        this.deltaMs = 1000.0 / this.currentTickRate;\r\n        this.deltaSeconds = 1.0 / this.currentTickRate;\r\n    }\r\n\r\n    /**\r\n     * Increases the tick rate marginally\r\n     */\r\n    increaseTickRate() {\r\n        if (G_IS_DEV && globalConfig.debug.renderForTrailer) {\r\n            return;\r\n        }\r\n\r\n        const desiredFps = this.root.app.settings.getDesiredFps();\r\n        this.setTickRate(Math.round(Math.min(desiredFps, this.currentTickRate * 1.2)));\r\n    }\r\n\r\n    /**\r\n     * Decreases the tick rate marginally\r\n     */\r\n    decreaseTickRate() {\r\n        if (G_IS_DEV && globalConfig.debug.renderForTrailer) {\r\n            return;\r\n        }\r\n\r\n        const desiredFps = this.root.app.settings.getDesiredFps();\r\n        this.setTickRate(Math.round(Math.max(desiredFps / 3, this.currentTickRate * 0.8)));\r\n    }\r\n\r\n    /**\r\n     * Call whenever a tick began\r\n     */\r\n    beginTick() {\r\n        assert(this.currentTickStart === null, \"BeginTick called twice\");\r\n        this.currentTickStart = performance.now();\r\n\r\n        if (this.capturedTicks.length > this.currentTickRate * 2) {\r\n            // Take only a portion of the ticks\r\n            this.capturedTicks.sort();\r\n            this.capturedTicks.splice(0, 10);\r\n            this.capturedTicks.splice(this.capturedTicks.length - 11, 10);\r\n\r\n            let average = 0;\r\n            for (let i = 0; i < this.capturedTicks.length; ++i) {\r\n                average += this.capturedTicks[i];\r\n            }\r\n            average /= this.capturedTicks.length;\r\n\r\n            this.averageTickDuration = average;\r\n\r\n            const desiredFps = this.root.app.settings.getDesiredFps();\r\n\r\n            if (this.averageFps > desiredFps * 0.9) {\r\n                // if (average < maxTickDuration) {\r\n                this.increaseTickRate();\r\n            } else if (this.averageFps < desiredFps * 0.7) {\r\n                this.decreaseTickRate();\r\n            }\r\n\r\n            this.capturedTicks = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Call whenever a tick ended\r\n     */\r\n    endTick() {\r\n        assert(this.currentTickStart !== null, \"EndTick called without BeginTick\");\r\n        const duration = performance.now() - this.currentTickStart;\r\n        this.capturedTicks.push(duration);\r\n        this.currentTickStart = null;\r\n    }\r\n}\r\n","\r\n\r\nimport { GameRoot, enumLayer } from \"./root\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { enumDirectionToVector, enumDirectionToAngle } from \"../core/vector\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { EntityComponentStorage } from \"./entity_components\";\r\nimport { Loader } from \"../core/loader\";\r\nimport { drawRotatedSprite } from \"../core/draw_utils\";\r\nimport { gComponentRegistry } from \"../core/global_registries\";\r\n\r\nexport class Entity extends BasicSerializableObject {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n\r\n        /**\r\n         * Handle to the global game root\r\n         */\r\n        this.root = root;\r\n\r\n        /**\r\n         * The components of the entity\r\n         */\r\n        this.components = new EntityComponentStorage();\r\n\r\n        /**\r\n         * Whether this entity was registered on the @see EntityManager so far\r\n         */\r\n        this.registered = false;\r\n\r\n        /**\r\n         * On which layer this entity is\r\n         */\r\n        this.layer = enumLayer.regular;\r\n\r\n        /**\r\n         * Internal entity unique id, set by the @see EntityManager\r\n         */\r\n        this.uid = 0;\r\n\r\n\r\n    }\r\n\r\n    static getId() {\r\n        return \"Entity\";\r\n    }\r\n\r\n    /**\r\n     * @see BasicSerializableObject.getSchema\r\n     * @returns {import(\"../savegame/serialization\").Schema}\r\n     */\r\n    static getSchema() {\r\n        return {\r\n            uid: types.uint,\r\n            components: types.keyValueMap(types.objData(gComponentRegistry)),\r\n            layer: types.enum(enumLayer),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns a clone of this entity without contents\r\n     */\r\n    duplicateWithoutContents() {\r\n        const clone = new Entity(this.root);\r\n        for (const key in this.components) {\r\n            clone.components[key] = this.components[key].duplicateWithoutContents();\r\n        }\r\n        clone.layer = this.layer;\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Internal destroy callback\r\n     */\r\n    internalDestroyCallback() {\r\n        assert(!this.destroyed, \"Can not destroy entity twice\");\r\n        this.destroyed = true;\r\n    }\r\n\r\n    /**\r\n     * Adds a new component, only possible until the entity is registered on the entity manager,\r\n     * after that use @see EntityManager.addDynamicComponent\r\n     * @param {Component} componentInstance\r\n     * @param {boolean} force Used by the entity manager. Internal parameter, do not change\r\n     */\r\n    addComponent(componentInstance, force = false) {\r\n        if (!force && this.registered) {\r\n            this.root.entityMgr.attachDynamicComponent(this, componentInstance);\r\n            return;\r\n        }\r\n        assert(force || !this.registered, \"Entity already registered, use EntityManager.addDynamicComponent\");\r\n        const id = /** @type {typeof Component} */ (componentInstance.constructor).getId();\r\n        assert(!this.components[id], \"Component already present\");\r\n        this.components[id] = componentInstance;\r\n    }\r\n\r\n    /**\r\n     * Removes a given component, only possible until the entity is registered on the entity manager,\r\n     * after that use @see EntityManager.removeDynamicComponent\r\n     * @param {typeof Component} componentClass\r\n     * @param {boolean} force\r\n     */\r\n    removeComponent(componentClass, force = false) {\r\n        if (!force && this.registered) {\r\n            this.root.entityMgr.removeDynamicComponent(this, componentClass);\r\n            return;\r\n        }\r\n        assert(\r\n            force || !this.registered,\r\n            \"Entity already registered, use EntityManager.removeDynamicComponent\"\r\n        );\r\n        const id = componentClass.getId();\r\n        assert(this.components[id], \"Component does not exist on entity\");\r\n        delete this.components[id];\r\n    }\r\n\r\n    /**\r\n     * Draws the entity, to override use @see Entity.drawImpl\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawDebugOverlays(parameters) {\r\n        const context = parameters.context;\r\n        const staticComp = this.components.StaticMapEntity;\r\n\r\n        if (G_IS_DEV && staticComp && globalConfig.debug.showEntityBounds) {\r\n            if (staticComp) {\r\n                const transformed = staticComp.getTileSpaceBounds();\r\n                context.strokeStyle = \"rgba(255, 0, 0, 0.5)\";\r\n                context.lineWidth = 2;\r\n                // const boundsSize = 20;\r\n                context.beginPath();\r\n                context.rect(\r\n                    transformed.x * globalConfig.tileSize,\r\n                    transformed.y * globalConfig.tileSize,\r\n                    transformed.w * globalConfig.tileSize,\r\n                    transformed.h * globalConfig.tileSize\r\n                );\r\n                context.stroke();\r\n            }\r\n        }\r\n        if (G_IS_DEV && staticComp && globalConfig.debug.showAcceptorEjectors) {\r\n            const ejectorComp = this.components.ItemEjector;\r\n\r\n            if (ejectorComp) {\r\n                const ejectorSprite = Loader.getSprite(\"sprites/debug/ejector_slot.png\");\r\n                for (let i = 0; i < ejectorComp.slots.length; ++i) {\r\n                    const slot = ejectorComp.slots[i];\r\n                    if (slot.layer !== this.root.currentLayer) {\r\n                        continue;\r\n                    }\r\n                    const slotTile = staticComp.localTileToWorld(slot.pos);\r\n                    const direction = staticComp.localDirectionToWorld(slot.direction);\r\n                    const directionVector = enumDirectionToVector[direction];\r\n                    const angle = Math.radians(enumDirectionToAngle[direction]);\r\n\r\n                    context.globalAlpha = slot.item ? 1 : 0.2;\r\n                    drawRotatedSprite({\r\n                        parameters,\r\n                        sprite: ejectorSprite,\r\n                        x: (slotTile.x + 0.5 + directionVector.x * 0.37) * globalConfig.tileSize,\r\n                        y: (slotTile.y + 0.5 + directionVector.y * 0.37) * globalConfig.tileSize,\r\n                        angle,\r\n                        size: globalConfig.tileSize * 0.25,\r\n                    });\r\n                }\r\n            }\r\n            const acceptorComp = this.components.ItemAcceptor;\r\n\r\n            if (acceptorComp) {\r\n                const acceptorSprite = Loader.getSprite(\"sprites/debug/acceptor_slot.png\");\r\n                for (let i = 0; i < acceptorComp.slots.length; ++i) {\r\n                    const slot = acceptorComp.slots[i];\r\n                    if (slot.layer !== this.root.currentLayer) {\r\n                        continue;\r\n                    }\r\n                    const slotTile = staticComp.localTileToWorld(slot.pos);\r\n                    for (let k = 0; k < slot.directions.length; ++k) {\r\n                        const direction = staticComp.localDirectionToWorld(slot.directions[k]);\r\n                        const directionVector = enumDirectionToVector[direction];\r\n                        const angle = Math.radians(enumDirectionToAngle[direction] + 180);\r\n                        context.globalAlpha = 0.4;\r\n                        drawRotatedSprite({\r\n                            parameters,\r\n                            sprite: acceptorSprite,\r\n                            x: (slotTile.x + 0.5 + directionVector.x * 0.37) * globalConfig.tileSize,\r\n                            y: (slotTile.y + 0.5 + directionVector.y * 0.37) * globalConfig.tileSize,\r\n                            angle,\r\n                            size: globalConfig.tileSize * 0.25,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            context.globalAlpha = 1;\r\n        }\r\n        // this.drawImpl(parameters);\r\n    }\r\n\r\n    ///// Helper interfaces\r\n\r\n    ///// Interface to override by subclasses\r\n\r\n    /**\r\n     * override, should draw the entity\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawImpl(parameters) {\r\n        abstract;\r\n    }\r\n}\r\n","\r\n\r\n/**\r\n * Typedefs for all entity components. These are not actually present on the entity,\r\n * thus they are undefined by default\r\n */\r\nexport class EntityComponentStorage {\r\n    constructor() {\r\n\r\n    }\r\n}\r\n","import { arrayDeleteValue, newEmptyMap, fastArrayDeleteValue } from \"../core/utils\";\r\nimport { Component } from \"./component\";\r\nimport { GameRoot } from \"./root\";\r\nimport { Entity } from \"./entity\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { createLogger } from \"../core/logging\";\r\n\r\nconst logger = createLogger(\"entity_manager\");\r\n\r\n// Manages all entities\r\n\r\n// NOTICE: We use arrayDeleteValue instead of fastArrayDeleteValue since that does not preserve the order\r\n// This is slower but we need it for the street path generation\r\n\r\nexport class EntityManager extends BasicSerializableObject {\r\n    constructor(root) {\r\n        super();\r\n\r\n        /** @type {GameRoot} */\r\n        this.root = root;\r\n\r\n        /** @type {Array<Entity>} */\r\n        this.entities = [];\r\n\r\n        // We store a seperate list with entities to destroy, since we don't destroy\r\n        // them instantly\r\n        /** @type {Array<Entity>} */\r\n        this.destroyList = [];\r\n\r\n        // Store a map from componentid to entities - This is used by the game system\r\n        // for faster processing\r\n        /** @type {Object.<string, Array<Entity>>} */\r\n        this.componentToEntity = newEmptyMap();\r\n\r\n        // Store the next uid to use\r\n        this.nextUid = 10000;\r\n    }\r\n\r\n    static getId() {\r\n        return \"EntityManager\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            nextUid: types.uint,\r\n        };\r\n    }\r\n\r\n    getStatsText() {\r\n        return this.entities.length + \" entities [\" + this.destroyList.length + \" to kill]\";\r\n    }\r\n\r\n    // Main update\r\n    update() {\r\n        this.processDestroyList();\r\n    }\r\n\r\n    /**\r\n     * Registers a new entity\r\n     * @param {Entity} entity\r\n     * @param {number=} uid Optional predefined uid\r\n     */\r\n    registerEntity(entity, uid = null) {\r\n        assert(this.entities.indexOf(entity) < 0, `RegisterEntity() called twice for entity ${entity}`);\r\n        assert(!entity.destroyed, `Attempting to register destroyed entity ${entity}`);\r\n\r\n        if (G_IS_DEV && uid !== null) {\r\n            assert(!this.findByUid(uid, false), \"Entity uid already taken: \" + uid);\r\n        }\r\n\r\n        if (uid !== null) {\r\n            assert(uid >= 0 && uid < Number.MAX_SAFE_INTEGER, \"Invalid uid passed: \" + uid);\r\n        }\r\n\r\n        this.entities.push(entity);\r\n\r\n        // Register into the componentToEntity map\r\n        for (const componentId in entity.components) {\r\n            if (entity.components[componentId]) {\r\n                if (this.componentToEntity[componentId]) {\r\n                    this.componentToEntity[componentId].push(entity);\r\n                } else {\r\n                    this.componentToEntity[componentId] = [entity];\r\n                }\r\n            }\r\n        }\r\n\r\n        // Give each entity a unique id\r\n        entity.uid = uid ? uid : this.generateUid();\r\n        entity.registered = true;\r\n\r\n        this.root.signals.entityAdded.dispatch(entity);\r\n    }\r\n\r\n    /**\r\n     * Sorts all entitiy lists after a resync\r\n     */\r\n    sortEntityLists() {\r\n        this.entities.sort((a, b) => a.uid - b.uid);\r\n        this.destroyList.sort((a, b) => a.uid - b.uid);\r\n\r\n        for (const key in this.componentToEntity) {\r\n            this.componentToEntity[key].sort((a, b) => a.uid - b.uid);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates a new uid\r\n     * @returns {number}\r\n     */\r\n    generateUid() {\r\n        return this.nextUid++;\r\n    }\r\n\r\n    /**\r\n     * Call to attach a new component after the creation of the entity\r\n     * @param {Entity} entity\r\n     * @param {Component} component\r\n     */\r\n    attachDynamicComponent(entity, component) {\r\n        entity.addComponent(component, true);\r\n        const componentId = /** @type {typeof Component} */ (component.constructor).getId();\r\n        if (this.componentToEntity[componentId]) {\r\n            this.componentToEntity[componentId].push(entity);\r\n        } else {\r\n            this.componentToEntity[componentId] = [entity];\r\n        }\r\n        this.root.signals.entityGotNewComponent.dispatch(entity);\r\n    }\r\n\r\n    /**\r\n     * Call to remove a component after the creation of the entity\r\n     * @param {Entity} entity\r\n     * @param {typeof Component} component\r\n     */\r\n    removeDynamicComponent(entity, component) {\r\n        entity.removeComponent(component, true);\r\n        const componentId = /** @type {typeof Component} */ (component.constructor).getId();\r\n\r\n        fastArrayDeleteValue(this.componentToEntity[componentId], entity);\r\n        this.root.signals.entityComponentRemoved.dispatch(entity);\r\n    }\r\n\r\n    /**\r\n     * Finds an entity buy its uid, kinda slow since it loops over all entities\r\n     * @param {number} uid\r\n     * @param {boolean=} errorWhenNotFound\r\n     * @returns {Entity}\r\n     */\r\n    findByUid(uid, errorWhenNotFound = true) {\r\n        const arr = this.entities;\r\n        for (let i = 0, len = arr.length; i < len; ++i) {\r\n            const entity = arr[i];\r\n            if (entity.uid === uid) {\r\n                if (entity.queuedForDestroy || entity.destroyed) {\r\n                    if (errorWhenNotFound) {\r\n                        logger.warn(\"Entity with UID\", uid, \"not found (destroyed)\");\r\n                    }\r\n                    return null;\r\n                }\r\n                return entity;\r\n            }\r\n        }\r\n        if (errorWhenNotFound) {\r\n            logger.warn(\"Entity with UID\", uid, \"not found\");\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Returns all entities having the given component\r\n     * @param {typeof Component} componentHandle\r\n     * @returns {Array<Entity>} entities\r\n     */\r\n    getAllWithComponent(componentHandle) {\r\n        return this.componentToEntity[componentHandle.getId()] || [];\r\n    }\r\n\r\n    /**\r\n     * Return all of a given class. This is SLOW!\r\n     * @param {object} entityClass\r\n     * @returns {Array<Entity>} entities\r\n     */\r\n    getAllOfClass(entityClass) {\r\n        // FIXME: Slow\r\n        const result = [];\r\n        for (let i = 0; i < this.entities.length; ++i) {\r\n            const entity = this.entities[i];\r\n            if (entity instanceof entityClass) {\r\n                result.push(entity);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Unregisters all components of an entity from the component to entity mapping\r\n     * @param {Entity} entity\r\n     */\r\n    unregisterEntityComponents(entity) {\r\n        for (const componentId in entity.components) {\r\n            if (entity.components[componentId]) {\r\n                arrayDeleteValue(this.componentToEntity[componentId], entity);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Processes the entities to destroy and actually destroys them\r\n    /* eslint-disable max-statements */\r\n    processDestroyList() {\r\n        for (let i = 0; i < this.destroyList.length; ++i) {\r\n            const entity = this.destroyList[i];\r\n\r\n            // Remove from entities list\r\n            arrayDeleteValue(this.entities, entity);\r\n\r\n            // Remove from componentToEntity list\r\n            this.unregisterEntityComponents(entity);\r\n\r\n            entity.registered = false;\r\n            entity.internalDestroyCallback();\r\n\r\n            this.root.signals.entityDestroyed.dispatch(entity);\r\n        }\r\n\r\n        this.destroyList = [];\r\n    }\r\n\r\n    /**\r\n     * Queues an entity for destruction\r\n     * @param {Entity} entity\r\n     */\r\n    destroyEntity(entity) {\r\n        if (entity.destroyed) {\r\n            logger.error(\"Tried to destroy already destroyed entity:\", entity.uid);\r\n            return;\r\n        }\r\n\r\n        if (entity.queuedForDestroy) {\r\n            logger.error(\"Trying to destroy entity which is already queued for destroy!\", entity.uid);\r\n            return;\r\n        }\r\n\r\n        if (this.destroyList.indexOf(entity) < 0) {\r\n            this.destroyList.push(entity);\r\n            entity.queuedForDestroy = true;\r\n            this.root.signals.entityQueuedForDestroy.dispatch(entity);\r\n        } else {\r\n            assert(false, \"Trying to destroy entity twice\");\r\n        }\r\n    }\r\n}\r\n","\r\nimport { T } from \"../translations\";\r\n\r\nexport class GameLoadingOverlay {\r\n    /**\r\n     *\r\n     * @param {Application} app\r\n     * @param {HTMLElement} parent\r\n     */\r\n    constructor(app, parent) {\r\n        this.app = app;\r\n        this.parent = parent;\r\n\r\n        /** @type {HTMLElement} */\r\n        this.element = null;\r\n    }\r\n\r\n    /**\r\n     * Removes the overlay if its currently visible\r\n     */\r\n    removeIfAttached() {\r\n        if (this.element) {\r\n            this.element.remove();\r\n            this.element = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns if the loading overlay is attached\r\n     */\r\n    isAttached() {\r\n        return this.element;\r\n    }\r\n\r\n    /**\r\n     * Shows a super basic overlay\r\n     */\r\n    showBasic() {\r\n        assert(!this.element, \"Loading overlay already visible, cant show again\");\r\n        this.element = document.createElement(\"div\");\r\n        this.element.classList.add(\"gameLoadingOverlay\");\r\n        this.parent.appendChild(this.element);\r\n        this.internalAddSpinnerAndText(this.element);\r\n    }\r\n\r\n    /**\r\n     * Adds a text with 'loading' and a spinner\r\n     * @param {HTMLElement} element\r\n     */\r\n    internalAddSpinnerAndText(element) {\r\n        const inner = document.createElement(\"span\");\r\n        inner.classList.add(\"prefab_LoadingTextWithAnim\");\r\n        inner.innerText = T.global.loading;\r\n        element.appendChild(inner);\r\n    }\r\n}\r\n","import { RegularGameSpeed } from \"./time/regular_game_speed\";\r\nimport { gGameSpeedRegistry } from \"../core/global_registries\";\r\n\r\nexport function initGameSpeedRegistry() {\r\n    gGameSpeedRegistry.register(RegularGameSpeed);\r\n\r\n    // Others are disabled for now\r\n}\r\n","\r\n\r\n/**\r\n * A game system processes all entities which match a given schema, usually a list of\r\n * required components. This is the core of the game logic.\r\n */\r\nexport class GameSystem {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n    }\r\n\r\n    ///// PUBLIC API /////\r\n\r\n    /**\r\n     * Updates the game system, override to perform logic\r\n     */\r\n    update() {}\r\n\r\n    /**\r\n     * Override, do not call this directly, use startDraw()\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {}\r\n\r\n    /**\r\n     * Should refresh all caches\r\n     */\r\n    refreshCaches() {}\r\n\r\n    /**\r\n     * @see GameSystem.draw Wrapper arround the draw method\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    startDraw(parameters) {\r\n        this.draw(parameters);\r\n    }\r\n}\r\n","\r\n\r\nimport { createLogger } from \"../core/logging\";\r\nimport { BeltSystem } from \"./systems/belt\";\r\nimport { ItemEjectorSystem } from \"./systems/item_ejector\";\r\nimport { MapResourcesSystem } from \"./systems/map_resources\";\r\nimport { MinerSystem } from \"./systems/miner\";\r\nimport { ItemProcessorSystem } from \"./systems/item_processor\";\r\nimport { UndergroundBeltSystem } from \"./systems/underground_belt\";\r\nimport { HubSystem } from \"./systems/hub\";\r\nimport { StaticMapEntitySystem } from \"./systems/static_map_entity\";\r\nimport { ItemAcceptorSystem } from \"./systems/item_acceptor\";\r\nimport { StorageSystem } from \"./systems/storage\";\r\nimport { EnergyGeneratorSystem } from \"./systems/energy_generator\";\r\nimport { WiredPinsSystem } from \"./systems/wired_pins\";\r\nimport { EnergyConsumerSystem } from \"./systems/energy_consumer\";\r\nimport { allCustomBuildingData } from \"./custom/modBuildings\";\r\n\r\nconst logger = createLogger(\"game_system_manager\");\r\n\r\nexport class GameSystemManager {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        this.systems = {\r\n\r\n        };\r\n        for (let custom of allCustomBuildingData) {\r\n            if (custom.system) {\r\n                this.systems[custom.id] = null;\r\n            }\r\n        }\r\n        this.systemUpdateOrder = [];\r\n\r\n        this.internalInitSystems();\r\n    }\r\n\r\n    /**\r\n     * Initializes all systems\r\n     */\r\n    internalInitSystems() {\r\n        const add = (id, systemClass) => {\r\n            this.systems[id] = new systemClass(this.root);\r\n            this.systemUpdateOrder.push(id);\r\n        };\r\n\r\n        // Order is important!\r\n\r\n        add(\"belt\", BeltSystem);\r\n\r\n        add(\"undergroundBelt\", UndergroundBeltSystem);\r\n\r\n        add(\"miner\", MinerSystem);\r\n\r\n        add(\"storage\", StorageSystem);\r\n\r\n        add(\"itemProcessor\", ItemProcessorSystem);\r\n\r\n        add(\"itemEjector\", ItemEjectorSystem);\r\n\r\n        add(\"mapResources\", MapResourcesSystem);\r\n\r\n        add(\"hub\", HubSystem);\r\n\r\n        add(\"energyGenerator\", EnergyGeneratorSystem);\r\n\r\n        add(\"staticMapEntities\", StaticMapEntitySystem);\r\n\r\n        add(\"wiredPins\", WiredPinsSystem);\r\n\r\n        add(\"energyConsumer\", EnergyConsumerSystem);\r\n\r\n        for (let custom of allCustomBuildingData) {\r\n            if (custom.system) {\r\n                add(custom.id, custom.system);\r\n            }\r\n        }\r\n\r\n        // IMPORTANT: Must be after belt system since belt system can change the\r\n        // orientation of an entity after it is placed -> the item acceptor cache\r\n        // then would be invalid\r\n        add(\"itemAcceptor\", ItemAcceptorSystem);\r\n\r\n        logger.log(\"📦 There are\", this.systemUpdateOrder.length, \"game systems\");\r\n    }\r\n\r\n    /**\r\n     * Updates all systems\r\n     */\r\n    update() {\r\n        for (let i = 0; i < this.systemUpdateOrder.length; ++i) {\r\n            const system = this.systems[this.systemUpdateOrder[i]];\r\n            system.update();\r\n        }\r\n    }\r\n\r\n    refreshCaches() {\r\n        for (let i = 0; i < this.systemUpdateOrder.length; ++i) {\r\n            const system = this.systems[this.systemUpdateOrder[i]];\r\n            system.refreshCaches();\r\n        }\r\n    }\r\n}\r\n","\r\n\r\nimport { GameRoot, enumLayer } from \"./root\";\r\nimport { GameSystem } from \"./game_system\";\r\nimport { arrayDelete, arrayDeleteValue } from \"../core/utils\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { globalConfig } from \"../core/config\";\r\nexport class GameSystemWithFilter extends GameSystem {\r\n    /**\r\n     * Constructs a new game system with the given component filter. It will process\r\n     * all entities which have *all* of the passed components\r\n     * @param {GameRoot} root\r\n     * @param {Array<typeof Component>} requiredComponents\r\n     */\r\n    constructor(root, requiredComponents) {\r\n        super(root);\r\n        this.requiredComponents = requiredComponents;\r\n        this.requiredComponentIds = requiredComponents.map(component => component.getId());\r\n\r\n        /**\r\n         * All entities which match the current components\r\n         * @type {Array<Entity>}\r\n         */\r\n        this.allEntities = [];\r\n\r\n        this.root.signals.entityAdded.add(this.internalPushEntityIfMatching, this);\r\n        this.root.signals.entityGotNewComponent.add(this.internalReconsiderEntityToAdd, this);\r\n        this.root.signals.entityComponentRemoved.add(this.internalCheckEntityAfterComponentRemoval, this);\r\n        this.root.signals.entityQueuedForDestroy.add(this.internalPopEntityIfMatching, this);\r\n\r\n        this.root.signals.postLoadHook.add(this.internalPostLoadHook, this);\r\n        this.root.signals.bulkOperationFinished.add(this.refreshCaches, this);\r\n    }\r\n\r\n    /**\r\n     * Calls a function for each matching entity on the screen, useful for drawing them\r\n     * @param {DrawParameters} parameters\r\n     * @param {function} callback\r\n     * @param {enumLayer=} layerFilter Can be null for no filter\r\n     */\r\n    forEachMatchingEntityOnScreen(parameters, callback, layerFilter = null) {\r\n        const cullRange = parameters.visibleRect.toTileCullRectangle();\r\n        if (this.allEntities.length < 100) {\r\n            // So, its much quicker to simply perform per-entity checking\r\n\r\n            for (let i = 0; i < this.allEntities.length; ++i) {\r\n                const entity = this.allEntities[i];\r\n                if (cullRange.containsRect(entity.components.StaticMapEntity.getTileSpaceBounds())) {\r\n                    if (!layerFilter || entity.layer === layerFilter) {\r\n                        callback(parameters, entity);\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        const top = cullRange.top();\r\n        const right = cullRange.right();\r\n        const bottom = cullRange.bottom();\r\n        const left = cullRange.left();\r\n\r\n        const border = 1;\r\n        const minY = top - border;\r\n        const maxY = bottom + border;\r\n        const minX = left - border;\r\n        const maxX = right + border - 1;\r\n\r\n        const map = this.root.map;\r\n\r\n        let seenUids = new Set();\r\n\r\n        const chunkStartX = Math.floor(minX / globalConfig.mapChunkSize);\r\n        const chunkStartY = Math.floor(minY / globalConfig.mapChunkSize);\r\n\r\n        const chunkEndX = Math.ceil(maxX / globalConfig.mapChunkSize);\r\n        const chunkEndY = Math.ceil(maxY / globalConfig.mapChunkSize);\r\n\r\n        const requiredComponents = this.requiredComponentIds;\r\n\r\n        // Render y from top down for proper blending\r\n        for (let chunkX = chunkStartX; chunkX <= chunkEndX; ++chunkX) {\r\n            for (let chunkY = chunkStartY; chunkY <= chunkEndY; ++chunkY) {\r\n                const chunk = map.getChunk(chunkX, chunkY, false);\r\n                if (!chunk) {\r\n                    continue;\r\n                }\r\n\r\n                // BIG TODO: CULLING ON AN ENTITY BASIS\r\n\r\n                const entities = chunk.containedEntities;\r\n                entityLoop: for (let i = 0; i < entities.length; ++i) {\r\n                    const entity = entities[i];\r\n\r\n                    // Avoid drawing non-layer contents\r\n                    if (layerFilter && entity.layer !== layerFilter) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Avoid drawing twice\r\n                    if (seenUids.has(entity.uid)) {\r\n                        continue;\r\n                    }\r\n\r\n                    seenUids.add(entity.uid);\r\n\r\n                    for (let i = 0; i < requiredComponents.length; ++i) {\r\n                        if (!entity.components[requiredComponents[i]]) {\r\n                            continue entityLoop;\r\n                        }\r\n                    }\r\n                    callback(parameters, entity);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     */\r\n    internalPushEntityIfMatching(entity) {\r\n        for (let i = 0; i < this.requiredComponentIds.length; ++i) {\r\n            if (!entity.components[this.requiredComponentIds[i]]) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        assert(this.allEntities.indexOf(entity) < 0, \"entity already in list: \" + entity);\r\n        this.internalRegisterEntity(entity);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    internalCheckEntityAfterComponentRemoval(entity) {\r\n        if (this.allEntities.indexOf(entity) < 0) {\r\n            // Entity wasn't interesting anyways\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.requiredComponentIds.length; ++i) {\r\n            if (!entity.components[this.requiredComponentIds[i]]) {\r\n                // Entity is not interesting anymore\r\n                arrayDeleteValue(this.allEntities, entity);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    internalReconsiderEntityToAdd(entity) {\r\n        for (let i = 0; i < this.requiredComponentIds.length; ++i) {\r\n            if (!entity.components[this.requiredComponentIds[i]]) {\r\n                return;\r\n            }\r\n        }\r\n        if (this.allEntities.indexOf(entity) >= 0) {\r\n            return;\r\n        }\r\n        this.internalRegisterEntity(entity);\r\n    }\r\n\r\n    refreshCaches() {\r\n        this.allEntities.sort((a, b) => a.uid - b.uid);\r\n\r\n        // Remove all entities which are queued for destroy\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            if (entity.queuedForDestroy || entity.destroyed) {\r\n                this.allEntities.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recomputes all target entities after the game has loaded\r\n     */\r\n    internalPostLoadHook() {\r\n        this.refreshCaches();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    internalRegisterEntity(entity) {\r\n        this.allEntities.push(entity);\r\n\r\n        if (this.root.gameInitialized && !this.root.bulkOperationRunning) {\r\n            // Sort entities by uid so behaviour is predictable\r\n            this.allEntities.sort((a, b) => a.uid - b.uid);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    internalPopEntityIfMatching(entity) {\r\n        if (this.root.bulkOperationRunning) {\r\n            // We do this in refreshCaches afterwards\r\n            return;\r\n        }\r\n        const index = this.allEntities.indexOf(entity);\r\n        if (index >= 0) {\r\n            arrayDelete(this.allEntities, index);\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../core/config\";\r\nimport { queryParamOptions } from \"../core/query_parameters\";\r\nimport { clamp, findNiceIntegerValue, randomChoice, randomInt } from \"../core/utils\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport { enumColors, allColorData } from \"./colors\";\r\nimport { allShapeData } from \"./shapes\";\r\nimport { enumItemProcessorTypes } from \"./components/item_processor\";\r\nimport { GameRoot, enumLayer } from \"./root\";\r\nimport { enumSubShape, ShapeDefinition } from \"./shape_definition\";\r\nimport { enumHubGoalRewards, tutorialGoals } from \"./tutorial_goals\";\r\nimport { UPGRADES, blueprintShape } from \"./upgrades\";\r\nimport { customBuildingData } from \"./custom/modBuildings\";\r\nimport { RandomNumberGenerator } from \"../core/rng\";\r\n\r\nexport class HubGoals extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"HubGoals\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            level: types.uint,\r\n            storedShapes: types.keyValueMap(types.uint),\r\n            upgradeLevels: types.keyValueMap(types.uint),\r\n\r\n            currentGoal: types.structured({\r\n                definition: types.knownType(ShapeDefinition),\r\n                required: types.uint,\r\n                reward: types.nullable(types.enum(enumHubGoalRewards)),\r\n            }),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        const errorCode = super.deserialize(data);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n\r\n        // Compute gained rewards\r\n        for (let i = 0; i < this.level - 1; ++i) {\r\n            if (i < tutorialGoals.length) {\r\n                const reward = tutorialGoals[i].reward;\r\n                this.gainedRewards[reward] = (this.gainedRewards[reward] || 0) + 1;\r\n            }\r\n        }\r\n\r\n        // Compute upgrade improvements\r\n        for (const upgradeId in UPGRADES) {\r\n            const upgradeHandle = UPGRADES[upgradeId];\r\n            const level = this.upgradeLevels[upgradeId] || 0;\r\n            let totalImprovement = upgradeHandle.baseValue || 1;\r\n            for (let i = 0; i < level; ++i) {\r\n                totalImprovement += upgradeHandle.tiers[i].improvement;\r\n            }\r\n            this.upgradeImprovements[upgradeId] = totalImprovement;\r\n        }\r\n\r\n        // Compute current goal\r\n        const goal = tutorialGoals[this.level - 1];\r\n        if (goal) {\r\n            this.currentGoal = {\r\n                /** @type {ShapeDefinition} */\r\n                definition: this.root.shapeDefinitionMgr.getShapeFromShortKey(goal.shape),\r\n                required: goal.required,\r\n                reward: goal.reward,\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n\r\n        this.root = root;\r\n\r\n        this.level = 1;\r\n\r\n        /**\r\n         * Which story rewards we already gained\r\n         * @type {Object.<string, number>}\r\n         */\r\n        this.gainedRewards = {};\r\n\r\n        /**\r\n         * Mapping from shape hash -> amount\r\n         * @type {Object<string, number>}\r\n         */\r\n        this.storedShapes = {};\r\n\r\n        /**\r\n         * Stores the levels for all upgrades\r\n         * @type {Object<string, number>}\r\n         */\r\n        this.upgradeLevels = {};\r\n\r\n        /**\r\n         * Stores the improvements for all upgrades\r\n         * @type {Object<string, number>}\r\n         */\r\n        this.upgradeImprovements = {};\r\n        for (const key in UPGRADES) {\r\n            this.upgradeImprovements[key] = UPGRADES[key].baseValue || 1;\r\n        }\r\n\r\n        this.createNextGoal();\r\n\r\n        // Allow quickly switching goals in dev mode\r\n        if (G_IS_DEV) {\r\n            window.addEventListener(\"keydown\", ev => {\r\n                if (ev.key === \"b\") {\r\n                    // root is not guaranteed to exist within ~0.5s after loading in\r\n                    if (this.root && this.root.app && this.root.app.gameAnalytics) {\r\n                        this.onGoalCompleted();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns how much of the current shape is stored\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {number}\r\n     */\r\n    getShapesStored(definition) {\r\n        return this.storedShapes[definition.getHash()] || 0;\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @param {number} amount\r\n     */\r\n    takeShapeByKey(key, amount) {\r\n        assert(this.getShapesStoredByKey(key) >= amount, \"Can not afford: \" + key + \" x \" + amount);\r\n        assert(amount >= 0, \"Amount < 0 for \" + key);\r\n        assert(Number.isInteger(amount), \"Invalid amount: \" + amount);\r\n        this.storedShapes[key] = (this.storedShapes[key] || 0) - amount;\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @param {number} amount\r\n     */\r\n    putShapeByKey(key, amount) {\r\n        assert(amount >= 0, \"Amount < 0 for \" + key);\r\n        assert(Number.isInteger(amount), \"Invalid amount: \" + amount);\r\n        this.storedShapes[key] = (this.storedShapes[key] || 0) + amount;\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Returns how much of the current shape is stored\r\n     * @param {string} key\r\n     * @returns {number}\r\n     */\r\n    getShapesStoredByKey(key) {\r\n        return this.storedShapes[key] || 0;\r\n    }\r\n\r\n    /**\r\n     * Returns how much of the current goal was already delivered\r\n     */\r\n    getCurrentGoalDelivered() {\r\n        return this.getShapesStored(this.currentGoal.definition);\r\n    }\r\n\r\n    /**\r\n     * Returns the current level of a given upgrade\r\n     * @param {string} upgradeId\r\n     */\r\n    getUpgradeLevel(upgradeId) {\r\n        return this.upgradeLevels[upgradeId] || 0;\r\n    }\r\n\r\n    /**\r\n     * Returns whether the given reward is already unlocked\r\n     * @param {enumHubGoalRewards} reward\r\n     */\r\n    isRewardUnlocked(reward) {\r\n        if (G_IS_DEV && globalConfig.debug.allBuildingsUnlocked) {\r\n            return true;\r\n        }\r\n        return !!this.gainedRewards[reward];\r\n    }\r\n\r\n    /**\r\n     * Handles the given definition, by either accounting it towards the\r\n     * goal or otherwise granting some points\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    handleDefinitionDelivered(definition) {\r\n        const hash = definition.getHash();\r\n        this.storedShapes[hash] = (this.storedShapes[hash] || 0) + 1;\r\n\r\n        this.root.signals.shapeDelivered.dispatch(definition);\r\n\r\n        // Check if we have enough for the next level\r\n        const targetHash = this.currentGoal.definition.getHash();\r\n        if (\r\n            this.storedShapes[targetHash] >= this.currentGoal.required ||\r\n            (G_IS_DEV && globalConfig.debug.rewardsInstant)\r\n        ) {\r\n            this.onGoalCompleted();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the next goal\r\n     */\r\n    createNextGoal() {\r\n        const storyIndex = this.level - 1;\r\n        if (storyIndex < tutorialGoals.length) {\r\n            const { shape, required, reward } = tutorialGoals[storyIndex];\r\n            this.currentGoal = {\r\n                /** @type {ShapeDefinition} */\r\n                definition: this.root.shapeDefinitionMgr.getShapeFromShortKey(shape),\r\n                required,\r\n                reward,\r\n            };\r\n            return;\r\n        }\r\n\r\n        this.currentGoal = {\r\n            /** @type {ShapeDefinition} */\r\n            definition: this.createRandomShape(),\r\n            required: 10000 + findNiceIntegerValue(this.level * 2000),\r\n            reward: enumHubGoalRewards.no_reward_freeplay,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Called when the level was completed\r\n     */\r\n    onGoalCompleted() {\r\n        const reward = this.currentGoal.reward;\r\n        this.gainedRewards[reward] = (this.gainedRewards[reward] || 0) + 1;\r\n\r\n        this.root.app.gameAnalytics.handleLevelCompleted(this.level);\r\n        ++this.level;\r\n        this.createNextGoal();\r\n\r\n        this.root.signals.storyGoalCompleted.dispatch(this.level - 1, reward);\r\n    }\r\n\r\n    /**\r\n     * Returns whether we are playing in free-play\r\n     */\r\n    isFreePlay() {\r\n        return this.level >= tutorialGoals.length;\r\n    }\r\n\r\n    /**\r\n     * Returns whether a given upgrade can be unlocked\r\n     * @param {string} upgradeId\r\n     */\r\n    canUnlockUpgrade(upgradeId) {\r\n        const handle = UPGRADES[upgradeId];\r\n        const currentLevel = this.getUpgradeLevel(upgradeId);\r\n\r\n        if (currentLevel >= handle.tiers.length) {\r\n            // Max level\r\n            return false;\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.upgradesNoCost) {\r\n            return true;\r\n        }\r\n\r\n        const tierData = handle.tiers[currentLevel];\r\n\r\n        for (let i = 0; i < tierData.required.length; ++i) {\r\n            const requirement = tierData.required[i];\r\n            if ((this.storedShapes[requirement.shape] || 0) < requirement.amount) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of available upgrades\r\n     * @returns {number}\r\n     */\r\n    getAvailableUpgradeCount() {\r\n        let count = 0;\r\n        for (const upgradeId in UPGRADES) {\r\n            if (this.canUnlockUpgrade(upgradeId)) {\r\n                ++count;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * Tries to unlock the given upgrade\r\n     * @param {string} upgradeId\r\n     * @returns {boolean}\r\n     */\r\n    tryUnlockUpgrade(upgradeId) {\r\n        if (!this.canUnlockUpgrade(upgradeId)) {\r\n            return false;\r\n        }\r\n\r\n        const handle = UPGRADES[upgradeId];\r\n        const currentLevel = this.getUpgradeLevel(upgradeId);\r\n\r\n        const tierData = handle.tiers[currentLevel];\r\n        if (!tierData) {\r\n            return false;\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.upgradesNoCost) {\r\n            // Dont take resources\r\n        } else {\r\n            for (let i = 0; i < tierData.required.length; ++i) {\r\n                const requirement = tierData.required[i];\r\n\r\n                // Notice: Don't have to check for hash here\r\n                this.storedShapes[requirement.shape] -= requirement.amount;\r\n            }\r\n        }\r\n\r\n        this.upgradeLevels[upgradeId] = (this.upgradeLevels[upgradeId] || 0) + 1;\r\n        this.upgradeImprovements[upgradeId] += tierData.improvement;\r\n\r\n        this.root.signals.upgradePurchased.dispatch(upgradeId);\r\n\r\n        this.root.app.gameAnalytics.handleUpgradeUnlocked(upgradeId, currentLevel);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    createRandomShape() {\r\n        const layerCount = clamp(this.level / 25, 2, 4);\r\n        /** @type {Array<import(\"./shape_definition\").ShapeLayer>} */\r\n        let layers = [];\r\n\r\n        const rng = new RandomNumberGenerator(this.level + \"|\" + this.root.map.seed);\r\n\r\n        const colorTier = 3; // white\r\n        const shapeTier = 2; // windmill\r\n        const holeTier = 3; // max 2\r\n\r\n        // @ts-ignore\r\n        const availableColors = Object.values(allColorData).filter(e => e.tier <= colorTier).map(e=>e.id);\r\n        // @ts-ignore\r\n        const availableShapes = Object.values(allShapeData).filter(e => e.tier <= shapeTier).map(e=>e.id);\r\n\r\n\r\n        const randomColor = () => rng.choice(availableColors);\r\n        const randomShape = () => rng.choice(availableShapes);\r\n\r\n        let anyIsMissingTwo = false;\r\n\r\n        for (let i = 0; i < layerCount; ++i) {\r\n            /** @type {import(\"./shape_definition\").ShapeLayer} */\r\n            const layer = [null, null, null, null];\r\n\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                layer[quad] = {\r\n                    subShape: randomShape(),\r\n                    color: randomColor(),\r\n                };\r\n            }\r\n\r\n            // Sometimes shapes are missing\r\n            if (rng.next() > 0.85) {\r\n                layer[randomInt(0, 3)] = null;\r\n            }\r\n\r\n            // Sometimes they actually are missing *two* ones!\r\n            // Make sure at max only one layer is missing it though, otherwise we could\r\n            // create an uncreateable shape\r\n            if (rng.next() > 0.95 && !anyIsMissingTwo) {\r\n                layer[randomInt(0, 3)] = null;\r\n                anyIsMissingTwo = true;\r\n            }\r\n\r\n            layers.push(layer);\r\n        }\r\n\r\n        const definition = new ShapeDefinition({ layers });\r\n        return this.root.shapeDefinitionMgr.registerOrReturnHandle(definition);\r\n    }\r\n\r\n    ////////////// HELPERS\r\n\r\n    /**\r\n     * Belt speed\r\n     * @param {enumLayer} layer\r\n     * @returns {number} items / sec\r\n     */\r\n    getBeltBaseSpeed(layer) {\r\n        if (layer === enumLayer.wires) {\r\n            return globalConfig.wiresSpeedItemsPerSecond;\r\n        }\r\n        return globalConfig.beltSpeedItemsPerSecond * this.upgradeImprovements.belt;\r\n    }\r\n\r\n    /**\r\n     * Underground belt speed\r\n     * @returns {number} items / sec\r\n     */\r\n    getUndergroundBeltBaseSpeed() {\r\n        return globalConfig.beltSpeedItemsPerSecond * this.upgradeImprovements.belt;\r\n    }\r\n\r\n    /**\r\n     * Miner speed\r\n     * @returns {number} items / sec\r\n     */\r\n    getMinerBaseSpeed() {\r\n        return globalConfig.minerSpeedItemsPerSecond * this.upgradeImprovements.miner;\r\n    }\r\n\r\n    /**\r\n     * Processor speed\r\n     * @param {enumItemProcessorTypes} processorType\r\n     * @returns {number} items / sec\r\n     */\r\n    getProcessorBaseSpeed(processorType) {\r\n        switch (processorType) {\r\n            case enumItemProcessorTypes.splitterWires:\r\n                return globalConfig.wiresSpeedItemsPerSecond * 2;\r\n\r\n            case enumItemProcessorTypes.trash:\r\n            case enumItemProcessorTypes.hub:\r\n                return 1e30;\r\n            case enumItemProcessorTypes.splitter:\r\n                return globalConfig.beltSpeedItemsPerSecond * this.upgradeImprovements.belt * 2;\r\n\r\n            case enumItemProcessorTypes.mixer:\r\n            case enumItemProcessorTypes.painter:\r\n            case enumItemProcessorTypes.painterDouble:\r\n            case enumItemProcessorTypes.painterQuad: {\r\n                assert(\r\n                    globalConfig.buildingSpeeds[processorType],\r\n                    \"Processor type has no speed set in globalConfig.buildingSpeeds: \" + processorType\r\n                );\r\n                return (\r\n                    globalConfig.beltSpeedItemsPerSecond *\r\n                    this.upgradeImprovements.painting *\r\n                    globalConfig.buildingSpeeds[processorType]\r\n                );\r\n            }\r\n\r\n            case enumItemProcessorTypes.cutter:\r\n            case enumItemProcessorTypes.cutterQuad:\r\n            case enumItemProcessorTypes.rotater:\r\n            case enumItemProcessorTypes.rotaterCCW:\r\n            case enumItemProcessorTypes.rotaterFL:\r\n            case enumItemProcessorTypes.stacker: {\r\n                assert(\r\n                    globalConfig.buildingSpeeds[processorType],\r\n                    \"Processor type has no speed set in globalConfig.buildingSpeeds: \" + processorType\r\n                );\r\n                return (\r\n                    globalConfig.beltSpeedItemsPerSecond *\r\n                    this.upgradeImprovements.processors *\r\n                    globalConfig.buildingSpeeds[processorType]\r\n                );\r\n            }\r\n            case enumItemProcessorTypes.advancedProcessor: {\r\n                return (\r\n                    globalConfig.beltSpeedItemsPerSecond *\r\n                    this.upgradeImprovements.painting *\r\n                    globalConfig.buildingSpeeds[processorType]\r\n                );\r\n            }\r\n            default: {\r\n                if (customBuildingData[processorType]) {\r\n                    let custom = customBuildingData[processorType];\r\n                    globalConfig.buildingSpeeds[processorType] = custom.speed;\r\n                    return (\r\n                        globalConfig.beltSpeedItemsPerSecond *\r\n                        this.upgradeImprovements[custom.speedClass] *\r\n                        globalConfig.buildingSpeeds[processorType]\r\n                    );\r\n                }\r\n\r\n                assertAlways(false, \"invalid processor type: \" + processorType);\r\n            }\r\n        }\r\n\r\n        return 1 / globalConfig.beltSpeedItemsPerSecond;\r\n    }\r\n}\r\n","\r\n\r\nimport { ClickDetector } from \"../../core/click_detector\";\r\nimport { KeyActionMapper } from \"../key_action_mapper\";\r\n\r\nexport class BaseHUDPart {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        /** @type {Array<ClickDetector>} */\r\n        this.clickDetectors = [];\r\n    }\r\n\r\n    /**\r\n     * Should create all require elements\r\n     * @param {HTMLElement} parent\r\n     */\r\n    createElements(parent) {}\r\n\r\n    /**\r\n     * Should initialize the element, called *after* the elements have been created\r\n     */\r\n    initialize() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Should update any required logic\r\n     */\r\n    update() {}\r\n\r\n    /**\r\n     * Should draw the hud\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {}\r\n\r\n    /**\r\n     * Should draw any overlays (screen space)\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawOverlays(parameters) {}\r\n\r\n    /**\r\n     * Should return true if the widget has a modal dialog opened and thus\r\n     * the game does not need to update / redraw\r\n     * @returns {boolean}\r\n     */\r\n    shouldPauseRendering() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Should return false if the game should be paused\r\n     * @returns {boolean}\r\n     */\r\n    shouldPauseGame() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Should return true if this overlay is open and currently blocking any user interaction\r\n     */\r\n    isBlockingOverlay() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Cleans up the hud element, if overridden make sure to call super.cleanup\r\n     */\r\n    cleanup() {\r\n        this.cleanupClickDetectors();\r\n    }\r\n\r\n    /**\r\n     * Cleans up all click detectors\r\n     */\r\n    cleanupClickDetectors() {\r\n        if (this.clickDetectors) {\r\n            for (let i = 0; i < this.clickDetectors.length; ++i) {\r\n                this.clickDetectors[i].cleanup();\r\n            }\r\n            this.clickDetectors = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Should close the element, in case its supported\r\n     */\r\n    close() {}\r\n\r\n    // Helpers\r\n\r\n    /**\r\n     * Helper method to construct a new click detector\r\n     * @param {Element} element The element to listen on\r\n     * @param {function} handler The handler to call on this object\r\n     * @param {import(\"../../core/click_detector\").ClickDetectorConstructorArgs=} args Click detector arguments\r\n     *\r\n     */\r\n    trackClicks(element, handler, args = {}) {\r\n        const detector = new ClickDetector(element, args);\r\n        detector.click.add(handler, this);\r\n        this.registerClickDetector(detector);\r\n    }\r\n\r\n    /**\r\n     * Registers a new click detector\r\n     * @param {ClickDetector} detector\r\n     */\r\n    registerClickDetector(detector) {\r\n        this.clickDetectors.push(detector);\r\n        if (G_IS_DEV) {\r\n            // @ts-ignore\r\n            detector._src = \"hud-\" + this.constructor.name;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Closes this element when its background is clicked\r\n     * @param {HTMLElement} element\r\n     * @param {function} closeMethod\r\n     */\r\n    closeOnBackgroundClick(element, closeMethod = null) {\r\n        const bgClickDetector = new ClickDetector(element, {\r\n            preventDefault: true,\r\n            targetOnly: true,\r\n            applyCssClass: null,\r\n            consumeEvents: true,\r\n            clickSound: null,\r\n        });\r\n\r\n        // If the state defines a close method, use that as fallback\r\n        // @ts-ignore\r\n        bgClickDetector.touchend.add(closeMethod || this.close, this);\r\n        this.registerClickDetector(bgClickDetector);\r\n    }\r\n\r\n    /**\r\n     * Forwards the game speed keybindings so you can toggle pause / Fastforward\r\n     * in the building tooltip and such\r\n     * @param {KeyActionMapper} sourceMapper\r\n     */\r\n    forwardGameSpeedKeybindings(sourceMapper) {\r\n        sourceMapper.forward(this.root.keyMapper, [\"gamespeed_pause\", \"gamespeed_fastforward\"]);\r\n    }\r\n\r\n    /**\r\n     * Forwards the map movement keybindings so you can move the map with the\r\n     * arrow keys\r\n     * @param {KeyActionMapper} sourceMapper\r\n     */\r\n    forwardMapMovementKeybindings(sourceMapper) {\r\n        sourceMapper.forward(this.root.keyMapper, [\r\n            \"mapMoveUp\",\r\n            \"mapMoveRight\",\r\n            \"mapMoveDown\",\r\n            \"mapMoveLeft\",\r\n        ]);\r\n    }\r\n}\r\n","import { GameRoot } from \"../root\";\r\n\r\n// Automatically attaches and detaches elements from the dom\r\n// Also supports detaching elements after a given time, useful if there is a\r\n// hide animation like for the tooltips\r\n\r\n// Also attaches a class name if desired\r\n\r\nexport class DynamicDomAttach {\r\n    constructor(root, element, { timeToKeepSeconds = 0, attachClass = null } = {}) {\r\n        /** @type {GameRoot} */\r\n        this.root = root;\r\n\r\n        /** @type {HTMLElement} */\r\n        this.element = element;\r\n        this.parent = this.element.parentElement;\r\n\r\n        this.attachClass = attachClass;\r\n\r\n        this.timeToKeepSeconds = timeToKeepSeconds;\r\n        this.lastVisibleTime = 0;\r\n\r\n        // We start attached, so detach the node first\r\n        this.attached = true;\r\n        this.internalDetach();\r\n\r\n        this.internalIsClassAttached = false;\r\n        this.classAttachTimeout = null;\r\n    }\r\n\r\n    internalAttach() {\r\n        if (!this.attached) {\r\n            this.parent.appendChild(this.element);\r\n            assert(this.element.parentElement === this.parent, \"Invalid parent #1\");\r\n            this.attached = true;\r\n        }\r\n    }\r\n\r\n    internalDetach() {\r\n        if (this.attached) {\r\n            assert(this.element.parentElement === this.parent, \"Invalid parent #2\");\r\n            this.element.parentElement.removeChild(this.element);\r\n            this.attached = false;\r\n        }\r\n    }\r\n\r\n    isAttached() {\r\n        return this.attached;\r\n    }\r\n\r\n    update(isVisible) {\r\n        if (isVisible) {\r\n            this.lastVisibleTime = this.root ? this.root.time.realtimeNow() : 0;\r\n            this.internalAttach();\r\n        } else {\r\n            if (!this.root || this.root.time.realtimeNow() - this.lastVisibleTime >= this.timeToKeepSeconds) {\r\n                this.internalDetach();\r\n            }\r\n        }\r\n\r\n        if (this.attachClass && isVisible !== this.internalIsClassAttached) {\r\n            // State changed\r\n            this.internalIsClassAttached = isVisible;\r\n\r\n            if (this.classAttachTimeout) {\r\n                clearTimeout(this.classAttachTimeout);\r\n                this.classAttachTimeout = null;\r\n            }\r\n\r\n            if (isVisible) {\r\n                this.classAttachTimeout = setTimeout(() => {\r\n                    this.element.classList.add(this.attachClass);\r\n                }, 15);\r\n            } else {\r\n                this.element.classList.remove(this.attachClass);\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\n\r\n/* dev:start */\r\nimport { TrailerMaker } from \"./trailer_maker\";\r\n/* dev:end */\r\n\r\nimport { Signal } from \"../../core/signal\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { HUDProcessingOverlay } from \"./parts/processing_overlay\";\r\nimport { HUDBuildingsToolbar } from \"./parts/buildings_toolbar\";\r\nimport { HUDBuildingPlacer } from \"./parts/building_placer\";\r\nimport { HUDBlueprintPlacer } from \"./parts/blueprint_placer\";\r\nimport { HUDKeybindingOverlay } from \"./parts/keybinding_overlay\";\r\nimport { HUDUnlockNotification } from \"./parts/unlock_notification\";\r\nimport { HUDGameMenu } from \"./parts/game_menu\";\r\nimport { HUDShop } from \"./parts/shop\";\r\nimport { IS_MOBILE, globalConfig, IS_DEMO } from \"../../core/config\";\r\nimport { HUDMassSelector } from \"./parts/mass_selector\";\r\nimport { HUDVignetteOverlay } from \"./parts/vignette_overlay\";\r\nimport { HUDStatistics } from \"./parts/statistics\";\r\nimport { MetaBuilding } from \"../meta_building\";\r\nimport { HUDPinnedShapes } from \"./parts/pinned_shapes\";\r\nimport { ShapeDefinition } from \"../shape_definition\";\r\nimport { HUDNotifications, enumNotificationType } from \"./parts/notifications\";\r\nimport { HUDSettingsMenu } from \"./parts/settings_menu\";\r\nimport { HUDDebugInfo } from \"./parts/debug_info\";\r\nimport { HUDEntityDebugger } from \"./parts/entity_debugger\";\r\nimport { KEYMAPPINGS } from \"../key_action_mapper\";\r\nimport { HUDWatermark } from \"./parts/watermark\";\r\nimport { HUDModalDialogs } from \"./parts/modal_dialogs\";\r\nimport { HUDPartTutorialHints } from \"./parts/tutorial_hints\";\r\nimport { HUDWaypoints } from \"./parts/waypoints\";\r\nimport { HUDInteractiveTutorial } from \"./parts/interactive_tutorial\";\r\nimport { HUDScreenshotExporter } from \"./parts/screenshot_exporter\";\r\nimport { HUDColorBlindHelper } from \"./parts/color_blind_helper\";\r\nimport { HUDShapeViewer } from \"./parts/shape_viewer\";\r\nimport { HUDWiresOverlay } from \"./parts/wires_overlay\";\r\nimport { HUDChangesDebugger } from \"./parts/debug_changes\";\r\nimport { queryParamOptions } from \"../../core/query_parameters\";\r\nimport { HUDSandboxController } from \"./parts/sandbox_controller\";\r\nimport { HUDWiresToolbar } from \"./parts/wires_toolbar\";\r\n\r\nexport class GameHUD {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n    }\r\n\r\n    /**\r\n     * Initializes the hud parts\r\n     */\r\n    initialize() {\r\n        this.parts = {\r\n            processingOverlay: new HUDProcessingOverlay(this.root),\r\n            buildingsToolbar: new HUDBuildingsToolbar(this.root),\r\n            wiresToolbar: new HUDWiresToolbar(this.root),\r\n            blueprintPlacer: new HUDBlueprintPlacer(this.root),\r\n            buildingPlacer: new HUDBuildingPlacer(this.root),\r\n            unlockNotification: new HUDUnlockNotification(this.root),\r\n            gameMenu: new HUDGameMenu(this.root),\r\n            massSelector: new HUDMassSelector(this.root),\r\n            shop: new HUDShop(this.root),\r\n            statistics: new HUDStatistics(this.root),\r\n            waypoints: new HUDWaypoints(this.root),\r\n\r\n            // Must always exist\r\n            pinnedShapes: new HUDPinnedShapes(this.root),\r\n            notifications: new HUDNotifications(this.root),\r\n            settingsMenu: new HUDSettingsMenu(this.root),\r\n            // betaOverlay: new HUDBetaOverlay(this.root),\r\n            debugInfo: new HUDDebugInfo(this.root),\r\n            dialogs: new HUDModalDialogs(this.root),\r\n            screenshotExporter: new HUDScreenshotExporter(this.root),\r\n            shapeViewer: new HUDShapeViewer(this.root),\r\n\r\n            wiresOverlay: new HUDWiresOverlay(this.root),\r\n\r\n            // Typing hints\r\n\r\n        };\r\n\r\n        this.signals = {\r\n            buildingSelectedForPlacement: /** @type {TypedSignal<[MetaBuilding|null]>} */ (new Signal()),\r\n            selectedPlacementBuildingChanged: /** @type {TypedSignal<[MetaBuilding|null]>} */ (new Signal()),\r\n            shapePinRequested: /** @type {TypedSignal<[ShapeDefinition]>} */ (new Signal()),\r\n            shapeUnpinRequested: /** @type {TypedSignal<[string]>} */ (new Signal()),\r\n            notification: /** @type {TypedSignal<[string, enumNotificationType]>} */ (new Signal()),\r\n            buildingsSelectedForCopy: /** @type {TypedSignal<[Array<number>]>} */ (new Signal()),\r\n            pasteBlueprintRequested: /** @type {TypedSignal<[]>} */ (new Signal()),\r\n            viewShapeDetailsRequested: /** @type {TypedSignal<[ShapeDefinition]>} */ (new Signal()),\r\n        };\r\n\r\n        if (!IS_MOBILE) {\r\n            this.parts.keybindingOverlay = new HUDKeybindingOverlay(this.root);\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.enableEntityInspector) {\r\n            this.parts.entityDebugger = new HUDEntityDebugger(this.root);\r\n        }\r\n\r\n        if (IS_DEMO) {\r\n            this.parts.watermark = new HUDWatermark(this.root);\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.renderChanges) {\r\n            this.parts.changesDebugger = new HUDChangesDebugger(this.root);\r\n        }\r\n\r\n        if (this.root.app.settings.getAllSettings().offerHints) {\r\n            this.parts.tutorialHints = new HUDPartTutorialHints(this.root);\r\n            this.parts.interactiveTutorial = new HUDInteractiveTutorial(this.root);\r\n        }\r\n\r\n        if (this.root.app.settings.getAllSettings().vignette) {\r\n            this.parts.vignetteOverlay = new HUDVignetteOverlay(this.root);\r\n        }\r\n\r\n        if (this.root.app.settings.getAllSettings().enableColorBlindHelper) {\r\n            this.parts.colorBlindHelper = new HUDColorBlindHelper(this.root);\r\n        }\r\n\r\n        if (queryParamOptions.sandboxMode || G_IS_DEV) {\r\n            this.parts.sandboxController = new HUDSandboxController(this.root);\r\n        }\r\n\r\n        const frag = document.createDocumentFragment();\r\n        for (const key in this.parts) {\r\n            this.parts[key].createElements(frag);\r\n        }\r\n\r\n        document.body.appendChild(frag);\r\n\r\n        for (const key in this.parts) {\r\n            this.parts[key].initialize();\r\n        }\r\n\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.ingame.toggleHud).add(this.toggleUi, this);\r\n\r\n        /* dev:start */\r\n        if (G_IS_DEV && globalConfig.debug.renderForTrailer) {\r\n            this.trailerMaker = new TrailerMaker(this.root);\r\n        }\r\n        /* dev:end*/\r\n    }\r\n\r\n    /**\r\n     * Attempts to close all overlays\r\n     */\r\n    closeAllOverlays() {\r\n        for (const key in this.parts) {\r\n            this.parts[key].close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the game logic should be paused\r\n     */\r\n    shouldPauseGame() {\r\n        for (const key in this.parts) {\r\n            if (this.parts[key].shouldPauseGame()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the rendering can be paused\r\n     */\r\n    shouldPauseRendering() {\r\n        for (const key in this.parts) {\r\n            if (this.parts[key].shouldPauseRendering()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the rendering can be paused\r\n     */\r\n    hasBlockingOverlayOpen() {\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            return true;\r\n        }\r\n        for (const key in this.parts) {\r\n            if (this.parts[key].isBlockingOverlay()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Toggles the ui\r\n     */\r\n    toggleUi() {\r\n        document.body.classList.toggle(\"uiHidden\");\r\n    }\r\n\r\n    /**\r\n     * Updates all parts\r\n     */\r\n    update() {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n\r\n        for (const key in this.parts) {\r\n            this.parts[key].update();\r\n        }\r\n\r\n        /* dev:start */\r\n        if (this.trailerMaker) {\r\n            this.trailerMaker.update();\r\n        }\r\n        /* dev:end*/\r\n    }\r\n\r\n    /**\r\n     * Draws all parts\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        const partsOrder = [\r\n            \"waypoints\",\r\n            \"massSelector\",\r\n            \"buildingPlacer\",\r\n            \"blueprintPlacer\",\r\n            \"colorBlindHelper\",\r\n            \"changesDebugger\",\r\n        ];\r\n\r\n        for (let i = 0; i < partsOrder.length; ++i) {\r\n            if (this.parts[partsOrder[i]]) {\r\n                this.parts[partsOrder[i]].draw(parameters);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws all part overlays\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawOverlays(parameters) {\r\n        const partsOrder = [\"watermark\"];\r\n\r\n        for (let i = 0; i < partsOrder.length; ++i) {\r\n            if (this.parts[partsOrder[i]]) {\r\n                this.parts[partsOrder[i]].drawOverlays(parameters);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans up everything\r\n     */\r\n    cleanup() {\r\n        for (const key in this.parts) {\r\n            this.parts[key].cleanup();\r\n        }\r\n\r\n        for (const key in this.signals) {\r\n            this.signals[key].removeAll();\r\n        }\r\n    }\r\n}\r\n","import { gMetaBuildingRegistry } from \"../../../core/global_registries\";\r\nimport { Signal, STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { MetaBuilding } from \"../../meta_building\";\r\nimport { GameRoot } from \"../../root\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { globalConfig } from \"../../../core/config\";\r\n\r\nexport class HUDBaseToolbar extends BaseHUDPart {\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {object} param0\r\n     * @param {Array<typeof MetaBuilding>} param0.supportedBuildings\r\n     * @param {function} param0.visibilityCondition\r\n     * @param {string} param0.htmlElementId\r\n     */\r\n    constructor(root, { supportedBuildings, visibilityCondition, htmlElementId }) {\r\n        super(root);\r\n\r\n        this.supportedBuildings = supportedBuildings;\r\n        this.visibilityCondition = visibilityCondition;\r\n        this.htmlElementId = htmlElementId;\r\n\r\n        /** @type {Object.<string, {\r\n         * metaBuilding: MetaBuilding,\r\n         * unlocked: boolean,\r\n         * selected: boolean,\r\n         * element: HTMLElement,\r\n         * index: number\r\n         * }>} */\r\n        this.buildingHandles = {};\r\n    }\r\n\r\n    /**\r\n     * Should create all require elements\r\n     * @param {HTMLElement} parent\r\n     */\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, this.htmlElementId, [\"ingame_buildingsToolbar\"], \"\");\r\n    }\r\n\r\n    initialize() {\r\n        const actionMapper = this.root.keyMapper;\r\n\r\n        const items = makeDiv(this.element, null, [\"buildings\"]);\r\n\r\n        for (let i = 0; i < this.supportedBuildings.length; ++i) {\r\n            const metaBuilding = gMetaBuildingRegistry.findByClass(this.supportedBuildings[i]);\r\n            const mapping = KEYMAPPINGS.buildings[metaBuilding.getId()];\r\n            const binding = mapping && actionMapper.getBinding(mapping);\r\n\r\n            const itemContainer = makeDiv(items, null, [\"building\"]);\r\n            itemContainer.style.backgroundImage = \"url(./res/ui/building_icons/\" + metaBuilding.getId() + \".png)\";\r\n            itemContainer.setAttribute(\"data-icon\", \"building_icons/\" + metaBuilding.getId() + \".png\");\r\n\r\n            if (binding) {\r\n                binding.add(() => this.selectBuildingForPlacement(metaBuilding));\r\n            } else {\r\n                console.warn(`${metaBuilding.getId()} has no keybinding`);\r\n            }\r\n\r\n            this.trackClicks(itemContainer, () => this.selectBuildingForPlacement(metaBuilding), {\r\n                clickSound: null,\r\n            });\r\n\r\n            this.buildingHandles[metaBuilding.id] = {\r\n                metaBuilding,\r\n                element: itemContainer,\r\n                unlocked: false,\r\n                selected: false,\r\n                index: i,\r\n            };\r\n        }\r\n\r\n        this.root.hud.signals.selectedPlacementBuildingChanged.add(\r\n            this.onSelectedPlacementBuildingChanged,\r\n            this\r\n        );\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element, {\r\n            timeToKeepSeconds: 0.12,\r\n            attachClass: \"visible\",\r\n        });\r\n        this.lastSelectedIndex = 0;\r\n        actionMapper.getBinding(KEYMAPPINGS.placement.cycleBuildings).add(this.cycleBuildings, this);\r\n    }\r\n\r\n    /**\r\n     * Updates the toolbar\r\n     */\r\n    update() {\r\n        const visible = this.visibilityCondition();\r\n        this.domAttach.update(visible);\r\n\r\n        if (visible) {\r\n            for (const buildingId in this.buildingHandles) {\r\n                const handle = this.buildingHandles[buildingId];\r\n                let newStatus = handle.metaBuilding.getIsUnlocked(this.root);\r\n                if (G_IS_DEV && globalConfig.debug.allBuildingsUnlocked) {\r\n                    newStatus = true;\r\n                }\r\n                if (handle.unlocked !== newStatus) {\r\n                    handle.unlocked = newStatus;\r\n                    handle.element.classList.toggle(\"unlocked\", newStatus);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cycles through all buildings\r\n     */\r\n    cycleBuildings() {\r\n        const visible = this.visibilityCondition();\r\n        if (!visible) {\r\n            return;\r\n        }\r\n\r\n        let newBuildingFound = false;\r\n        let newIndex = this.lastSelectedIndex;\r\n        for (let i = 0; i < this.supportedBuildings.length; ++i, ++newIndex) {\r\n            newIndex %= this.supportedBuildings.length;\r\n            const metaBuilding = gMetaBuildingRegistry.findByClass(this.supportedBuildings[newIndex]);\r\n            const handle = this.buildingHandles[metaBuilding.id];\r\n            if (!handle.selected && handle.unlocked) {\r\n                newBuildingFound = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!newBuildingFound) {\r\n            return;\r\n        }\r\n        const metaBuildingClass = this.supportedBuildings[newIndex];\r\n        const metaBuilding = gMetaBuildingRegistry.findByClass(metaBuildingClass);\r\n        this.selectBuildingForPlacement(metaBuilding);\r\n    }\r\n\r\n    /**\r\n     * Called when the selected building got changed\r\n     * @param {MetaBuilding} metaBuilding\r\n     */\r\n    onSelectedPlacementBuildingChanged(metaBuilding) {\r\n        for (const buildingId in this.buildingHandles) {\r\n            const handle = this.buildingHandles[buildingId];\r\n            const newStatus = handle.metaBuilding === metaBuilding;\r\n            if (handle.selected !== newStatus) {\r\n                handle.selected = newStatus;\r\n                handle.element.classList.toggle(\"selected\", newStatus);\r\n            }\r\n            if (handle.selected) {\r\n                this.lastSelectedIndex = handle.index;\r\n            }\r\n        }\r\n\r\n        this.element.classList.toggle(\"buildingSelected\", !!metaBuilding);\r\n    }\r\n\r\n    /**\r\n     * @param {MetaBuilding} metaBuilding\r\n     */\r\n    selectBuildingForPlacement(metaBuilding) {\r\n        if (!this.visibilityCondition()) {\r\n            // Not active\r\n            return;\r\n        }\r\n\r\n        if (!metaBuilding.getIsUnlocked(this.root)) {\r\n            if (!G_IS_DEV || !globalConfig.debug.allBuildingsUnlocked) {\r\n                this.root.soundProxy.playUiError();\r\n                return STOP_PROPAGATION;\r\n            }\r\n        }\r\n\r\n        // Allow clicking an item again to deselect it\r\n        for (const buildingId in this.buildingHandles) {\r\n            const handle = this.buildingHandles[buildingId];\r\n            if (handle.selected && handle.metaBuilding === metaBuilding) {\r\n                metaBuilding = null;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.root.soundProxy.playUiClick();\r\n        this.root.hud.signals.buildingSelectedForPlacement.dispatch(metaBuilding);\r\n        this.onSelectedPlacementBuildingChanged(metaBuilding);\r\n    }\r\n}\r\n","import { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { T } from \"../../../translations\";\r\nimport { enumMouseButton } from \"../../camera\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { blueprintShape } from \"../../upgrades\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { Blueprint } from \"../../blueprint\";\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { enumLayer } from \"../../root\";\r\n\r\nexport class HUDBlueprintPlacer extends BaseHUDPart {\r\n    createElements(parent) {\r\n        const blueprintCostShape = this.root.shapeDefinitionMgr.getShapeFromShortKey(blueprintShape);\r\n        const blueprintCostShapeCanvas = blueprintCostShape.generateAsCanvas(80);\r\n\r\n        this.costDisplayParent = makeDiv(parent, \"ingame_HUD_BlueprintPlacer\", [], ``);\r\n\r\n        makeDiv(this.costDisplayParent, null, [\"label\"], T.ingame.blueprintPlacer.cost);\r\n        const costContainer = makeDiv(this.costDisplayParent, null, [\"costContainer\"], \"\");\r\n        this.costDisplayText = makeDiv(costContainer, null, [\"costText\"], \"\");\r\n        costContainer.appendChild(blueprintCostShapeCanvas);\r\n    }\r\n\r\n    initialize() {\r\n        this.root.hud.signals.buildingsSelectedForCopy.add(this.createBlueprintFromBuildings, this);\r\n\r\n        /** @type {TypedTrackedState<Blueprint?>} */\r\n        this.currentBlueprint = new TrackedState(this.onBlueprintChanged, this);\r\n        /** @type {Blueprint?} */\r\n        this.lastBlueprintUsed = null;\r\n\r\n        const keyActionMapper = this.root.keyMapper;\r\n        keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.abortPlacement, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.placement.pipette).add(this.abortPlacement, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.placement.rotateWhilePlacing).add(this.rotateBlueprint, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.massSelect.pasteLastBlueprint).add(this.pasteBlueprint, this);\r\n\r\n        this.root.camera.downPreHandler.add(this.onMouseDown, this);\r\n        this.root.camera.movePreHandler.add(this.onMouseMove, this);\r\n\r\n        this.root.hud.signals.selectedPlacementBuildingChanged.add(this.abortPlacement, this);\r\n        this.root.signals.editModeChanged.add(this.onEditModeChanged, this);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.costDisplayParent);\r\n        this.trackedCanAfford = new TrackedState(this.onCanAffordChanged, this);\r\n    }\r\n\r\n    abortPlacement() {\r\n        if (this.currentBlueprint.get()) {\r\n            this.currentBlueprint.set(null);\r\n\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when the layer was changed\r\n     * @param {enumLayer} layer\r\n     */\r\n    onEditModeChanged(layer) {\r\n        // Check if the layer of the blueprint differs and thus we have to deselect it\r\n        const blueprint = this.currentBlueprint.get();\r\n        if (blueprint) {\r\n            if (blueprint.layer !== layer) {\r\n                this.currentBlueprint.set(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when the blueprint is now affordable or not\r\n     * @param {boolean} canAfford\r\n     */\r\n    onCanAffordChanged(canAfford) {\r\n        this.costDisplayParent.classList.toggle(\"canAfford\", canAfford);\r\n    }\r\n\r\n    update() {\r\n        const currentBlueprint = this.currentBlueprint.get();\r\n        this.domAttach.update(currentBlueprint && currentBlueprint.getCost() > 0);\r\n        this.trackedCanAfford.set(currentBlueprint && currentBlueprint.canAfford(this.root));\r\n    }\r\n\r\n    /**\r\n     * Called when the blueprint was changed\r\n     * @param {Blueprint} blueprint\r\n     */\r\n    onBlueprintChanged(blueprint) {\r\n        if (blueprint) {\r\n            this.lastBlueprintUsed = blueprint;\r\n            this.costDisplayText.innerText = \"\" + blueprint.getCost();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * mouse down pre handler\r\n     * @param {Vector} pos\r\n     * @param {enumMouseButton} button\r\n     */\r\n    onMouseDown(pos, button) {\r\n        if (button === enumMouseButton.right) {\r\n            if (this.currentBlueprint.get()) {\r\n                this.abortPlacement();\r\n                return STOP_PROPAGATION;\r\n            }\r\n        }\r\n\r\n        const blueprint = this.currentBlueprint.get();\r\n        if (!blueprint) {\r\n            return;\r\n        }\r\n\r\n        if (!blueprint.canAfford(this.root)) {\r\n            this.root.soundProxy.playUiError();\r\n            return;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(pos);\r\n        const tile = worldPos.toTileSpace();\r\n        if (blueprint.tryPlace(this.root, tile)) {\r\n            const cost = blueprint.getCost();\r\n            this.root.hubGoals.takeShapeByKey(blueprintShape, cost);\r\n\r\n            const leftover = this.root.hubGoals.getShapesStoredByKey(blueprintShape);\r\n            if (leftover < 50) {\r\n                this.root.hubGoals.putShapeByKey(blueprintShape, 50 - leftover);\r\n            }\r\n\r\n            this.root.soundProxy.playUi(SOUNDS.placeBuilding);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mose move handler\r\n     */\r\n    onMouseMove() {\r\n        // Prevent movement while blueprint is selected\r\n        if (this.currentBlueprint.get()) {\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when an array of bulidings was selected\r\n     * @param {Array<number>} uids\r\n     */\r\n    createBlueprintFromBuildings(uids) {\r\n        if (uids.length === 0) {\r\n            return;\r\n        }\r\n        this.currentBlueprint.set(Blueprint.fromUids(this.root, uids));\r\n    }\r\n\r\n    /**\r\n     * Attempts to rotate the current blueprint\r\n     */\r\n    rotateBlueprint() {\r\n        if (this.currentBlueprint.get()) {\r\n            if (this.root.keyMapper.getBinding(KEYMAPPINGS.placement.rotateInverseModifier).pressed) {\r\n                this.currentBlueprint.get().rotateCcw();\r\n            } else {\r\n                this.currentBlueprint.get().rotateCw();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attempts to paste the last blueprint\r\n     */\r\n    pasteBlueprint() {\r\n        if (this.lastBlueprintUsed !== null) {\r\n            if (this.lastBlueprintUsed.layer !== this.root.currentLayer) {\r\n                // Not compatible\r\n                this.root.soundProxy.playUiError();\r\n                return;\r\n            }\r\n\r\n            this.root.hud.signals.pasteBlueprintRequested.dispatch();\r\n            this.currentBlueprint.set(this.lastBlueprintUsed);\r\n        } else {\r\n            this.root.soundProxy.playUiError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        const blueprint = this.currentBlueprint.get();\r\n        if (!blueprint) {\r\n            return;\r\n        }\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const tile = worldPos.toTileSpace();\r\n        blueprint.draw(parameters, tile);\r\n    }\r\n}\r\n","import { ClickDetector } from \"../../../core/click_detector\";\r\nimport { globalConfig, THIRDPARTY_URLS } from \"../../../core/config\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { drawRotatedSprite, rotateTrapezRightFaced } from \"../../../core/draw_utils\";\r\nimport { Loader } from \"../../../core/loader\";\r\nimport { clamp, makeDiv, removeAllChildren } from \"../../../core/utils\";\r\nimport {\r\n    enumDirectionToAngle,\r\n    enumDirectionToVector,\r\n    enumInvertedDirections,\r\n    Vector,\r\n} from \"../../../core/vector\";\r\nimport { T } from \"../../../translations\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { defaultBuildingVariant } from \"../../meta_building\";\r\nimport { THEME } from \"../../theme\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { HUDBuildingPlacerLogic } from \"./building_placer_logic\";\r\nimport { makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { enumLayer } from \"../../root\";\r\nimport { getCodeFromBuildingData } from \"../../building_codes\";\r\n\r\nexport class HUDBuildingPlacer extends HUDBuildingPlacerLogic {\r\n    /**\r\n     * @param {HTMLElement} parent\r\n     */\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_PlacementHints\", [], ``);\r\n\r\n        this.buildingInfoElements = {};\r\n        this.buildingInfoElements.label = makeDiv(this.element, null, [\"buildingLabel\"], \"Extract\");\r\n        this.buildingInfoElements.desc = makeDiv(this.element, null, [\"description\"], \"\");\r\n        this.buildingInfoElements.descText = makeDiv(this.buildingInfoElements.desc, null, [\"text\"], \"\");\r\n        this.buildingInfoElements.additionalInfo = makeDiv(\r\n            this.buildingInfoElements.desc,\r\n            null,\r\n            [\"additionalInfo\"],\r\n            \"\"\r\n        );\r\n        this.buildingInfoElements.hotkey = makeDiv(this.buildingInfoElements.desc, null, [\"hotkey\"], \"\");\r\n        this.buildingInfoElements.tutorialImage = makeDiv(this.element, null, [\"buildingImage\"]);\r\n\r\n        this.variantsElement = makeDiv(parent, \"ingame_HUD_PlacerVariants\");\r\n\r\n        const compact = this.root.app.settings.getAllSettings().compactBuildingInfo;\r\n        this.element.classList.toggle(\"compact\", compact);\r\n        this.variantsElement.classList.toggle(\"compact\", compact);\r\n    }\r\n\r\n    initialize() {\r\n        super.initialize();\r\n\r\n        // Bind to signals\r\n        this.signals.variantChanged.add(this.rerenderVariants, this);\r\n        this.root.hud.signals.buildingSelectedForPlacement.add(this.startSelection, this);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element, {});\r\n        this.variantsAttach = new DynamicDomAttach(this.root, this.variantsElement, {});\r\n\r\n        this.currentInterpolatedCornerTile = new Vector();\r\n\r\n        this.lockIndicatorSprites = {};\r\n        for (const layerId in enumLayer) {\r\n            this.lockIndicatorSprites[layerId] = this.makeLockIndicatorSprite(layerId);\r\n        }\r\n\r\n        //\r\n\r\n        /**\r\n         * Stores the click detectors for the variants so we can clean them up later\r\n         * @type {Array<ClickDetector>}\r\n         */\r\n        this.variantClickDetectors = [];\r\n    }\r\n\r\n    /**\r\n     * Makes the lock indicator sprite for the given layer\r\n     * @param {enumLayer} layer\r\n     */\r\n    makeLockIndicatorSprite(layer) {\r\n        const dims = 48;\r\n        const [canvas, context] = makeOffscreenBuffer(dims, dims, {\r\n            smooth: true,\r\n            reusable: false,\r\n            label: \"lock-direction-indicator\",\r\n        });\r\n\r\n        context.fillStyle = THEME.map.directionLock[layer].color;\r\n        context.strokeStyle = THEME.map.directionLock[layer].color;\r\n        context.lineWidth = 2;\r\n\r\n        const padding = 5;\r\n        const height = dims * 0.5;\r\n        const bottom = (dims + height) / 2;\r\n\r\n        context.moveTo(padding, bottom);\r\n        context.lineTo(dims / 2, bottom - height);\r\n        context.lineTo(dims - padding, bottom);\r\n        context.closePath();\r\n        context.stroke();\r\n        context.fill();\r\n\r\n        return canvas;\r\n    }\r\n\r\n    /**\r\n     * Rerenders the building info dialog\r\n     */\r\n    rerenderInfoDialog() {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n\r\n        if (!metaBuilding) {\r\n            return;\r\n        }\r\n\r\n        const variant = this.currentVariant.get();\r\n\r\n        this.buildingInfoElements.label.innerHTML = T.buildings[metaBuilding.id][variant].name;\r\n        this.buildingInfoElements.descText.innerHTML = T.buildings[metaBuilding.id][variant].description;\r\n\r\n        const mapping = KEYMAPPINGS.buildings[metaBuilding.getId()];\r\n        if (mapping) {\r\n            const binding = this.root.keyMapper.getBinding(mapping);\r\n            this.buildingInfoElements.hotkey.innerHTML = T.ingame.buildingPlacement.hotkeyLabel.replace(\r\n                \"<key>\",\r\n                \"<code class='keybinding'>\" + binding.getKeyCodeString() + \"</code>\"\r\n            );\r\n        } else {\r\n            this.buildingInfoElements.hotkey.innerHTML = \"\";\r\n        }\r\n\r\n        this.buildingInfoElements.tutorialImage.style.backgroundImage = `url(./res/ui/building_tutorials/${metaBuilding.getId()}${\r\n            variant === defaultBuildingVariant ? \"\" : \"-\" + variant\r\n        }.png)`;\r\n        this.buildingInfoElements.tutorialImage.setAttribute(\r\n            \"data-icon\",\r\n            \"building_tutorials/\" +\r\n                metaBuilding.getId() +\r\n                (variant === defaultBuildingVariant ? \"\" : \"-\" + variant) +\r\n                \".png\"\r\n        );\r\n\r\n        removeAllChildren(this.buildingInfoElements.additionalInfo);\r\n        const additionalInfo = metaBuilding.getAdditionalStatistics(this.root, this.currentVariant.get());\r\n        for (let i = 0; i < additionalInfo.length; ++i) {\r\n            const [label, contents] = additionalInfo[i];\r\n            this.buildingInfoElements.additionalInfo.innerHTML += `\r\n                <label>${label}:</label>\r\n                <span>${contents}</contents>\r\n            `;\r\n        }\r\n    }\r\n\r\n    cleanup() {\r\n        super.cleanup();\r\n        this.cleanupVariantClickDetectors();\r\n    }\r\n\r\n    /**\r\n     * Cleans up all variant click detectors\r\n     */\r\n    cleanupVariantClickDetectors() {\r\n        for (let i = 0; i < this.variantClickDetectors.length; ++i) {\r\n            const detector = this.variantClickDetectors[i];\r\n            detector.cleanup();\r\n        }\r\n        this.variantClickDetectors = [];\r\n    }\r\n\r\n    /**\r\n     * Rerenders the variants displayed\r\n     */\r\n    rerenderVariants() {\r\n        removeAllChildren(this.variantsElement);\r\n        this.rerenderInfoDialog();\r\n\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n\r\n        // First, clear up all click detectors\r\n        this.cleanupVariantClickDetectors();\r\n\r\n        if (!metaBuilding) {\r\n            return;\r\n        }\r\n        const availableVariants = metaBuilding.getAvailableVariants(this.root);\r\n        if (availableVariants.length === 1) {\r\n            return;\r\n        }\r\n\r\n        makeDiv(\r\n            this.variantsElement,\r\n            null,\r\n            [\"explanation\"],\r\n            T.ingame.buildingPlacement.cycleBuildingVariants.replace(\r\n                \"<key>\",\r\n                \"<code class='keybinding'>\" +\r\n                    this.root.keyMapper\r\n                        .getBinding(KEYMAPPINGS.placement.cycleBuildingVariants)\r\n                        .getKeyCodeString() +\r\n                    \"</code>\"\r\n            )\r\n        );\r\n\r\n        const container = makeDiv(this.variantsElement, null, [\"variants\"]);\r\n\r\n        for (let i = 0; i < availableVariants.length; ++i) {\r\n            const variant = availableVariants[i];\r\n\r\n            const element = makeDiv(container, null, [\"variant\"]);\r\n            element.classList.toggle(\"active\", variant === this.currentVariant.get());\r\n            makeDiv(element, null, [\"label\"], variant);\r\n\r\n            const iconSize = 64;\r\n\r\n            const dimensions = metaBuilding.getDimensions(variant);\r\n            const sprite = metaBuilding.getPreviewSprite(0, variant);\r\n            const spriteWrapper = makeDiv(element, null, [\"iconWrap\"]);\r\n            spriteWrapper.setAttribute(\"data-tile-w\", dimensions.x);\r\n            spriteWrapper.setAttribute(\"data-tile-h\", dimensions.y);\r\n\r\n            spriteWrapper.innerHTML = sprite.getAsHTML(iconSize * dimensions.x, iconSize * dimensions.y);\r\n\r\n            const detector = new ClickDetector(element, {\r\n                consumeEvents: true,\r\n                targetOnly: true,\r\n            });\r\n            detector.click.add(() => this.setVariant(variant));\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        if (this.root.camera.zoomLevel < globalConfig.mapChunkOverviewMinZoom) {\r\n            // Dont allow placing in overview mode\r\n            this.domAttach.update(false);\r\n            this.variantsAttach.update(false);\r\n            return;\r\n        }\r\n\r\n        this.domAttach.update(this.currentMetaBuilding.get());\r\n        this.variantsAttach.update(this.currentMetaBuilding.get());\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n\r\n        if (!metaBuilding) {\r\n            return;\r\n        }\r\n\r\n        // Draw direction lock\r\n        if (this.isDirectionLockActive) {\r\n            this.drawDirectionLock(parameters);\r\n        } else {\r\n            this.drawRegularPlacement(parameters);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawRegularPlacement(parameters) {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return;\r\n        }\r\n\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const mouseTile = worldPos.toTileSpace();\r\n\r\n        // Compute best rotation variant\r\n        const {\r\n            rotation,\r\n            rotationVariant,\r\n            connectedEntities,\r\n        } = metaBuilding.computeOptimalDirectionAndRotationVariantAtTile({\r\n            root: this.root,\r\n            tile: mouseTile,\r\n            rotation: this.currentBaseRotation,\r\n            variant: this.currentVariant.get(),\r\n            layer: metaBuilding.getLayer(),\r\n        });\r\n\r\n        // Check if there are connected entities\r\n        if (connectedEntities) {\r\n            for (let i = 0; i < connectedEntities.length; ++i) {\r\n                const connectedEntity = connectedEntities[i];\r\n                const connectedWsPoint = connectedEntity.components.StaticMapEntity.getTileSpaceBounds()\r\n                    .getCenter()\r\n                    .toWorldSpace();\r\n\r\n                const startWsPoint = mouseTile.toWorldSpaceCenterOfTile();\r\n\r\n                const startOffset = connectedWsPoint\r\n                    .sub(startWsPoint)\r\n                    .normalize()\r\n                    .multiplyScalar(globalConfig.tileSize * 0.3);\r\n                const effectiveStartPoint = startWsPoint.add(startOffset);\r\n                const effectiveEndPoint = connectedWsPoint.sub(startOffset);\r\n\r\n                parameters.context.globalAlpha = 0.6;\r\n\r\n                // parameters.context.lineCap = \"round\";\r\n                parameters.context.strokeStyle = \"#7f7\";\r\n                parameters.context.lineWidth = 10;\r\n                parameters.context.beginPath();\r\n                parameters.context.moveTo(effectiveStartPoint.x, effectiveStartPoint.y);\r\n                parameters.context.lineTo(effectiveEndPoint.x, effectiveEndPoint.y);\r\n                parameters.context.stroke();\r\n                parameters.context.globalAlpha = 1;\r\n                // parameters.context.lineCap = \"square\";\r\n            }\r\n        }\r\n\r\n        // Synchronize rotation and origin\r\n        const staticComp = this.fakeEntity.components.StaticMapEntity;\r\n        staticComp.origin = mouseTile;\r\n        staticComp.rotation = rotation;\r\n        staticComp.tileSize = metaBuilding.getDimensions(this.currentVariant.get());\r\n        metaBuilding.updateVariants(this.fakeEntity, rotationVariant, this.currentVariant.get());\r\n        staticComp.code = getCodeFromBuildingData(\r\n            this.currentMetaBuilding.get(),\r\n            this.currentVariant.get(),\r\n            rotationVariant\r\n        );\r\n\r\n        const canBuild = this.root.logic.checkCanPlaceEntity(this.fakeEntity);\r\n\r\n        // Fade in / out\r\n        parameters.context.lineWidth = 1;\r\n        // parameters.context.globalAlpha = 0.3 + pulseAnimation(this.root.time.realtimeNow(), 0.9) * 0.7;\r\n\r\n        // Determine the bounds and visualize them\r\n        const entityBounds = staticComp.getTileSpaceBounds();\r\n        const drawBorder = -3;\r\n        if (canBuild) {\r\n            parameters.context.strokeStyle = \"rgba(56, 235, 111, 0.5)\";\r\n            parameters.context.fillStyle = \"rgba(56, 235, 111, 0.2)\";\r\n        } else {\r\n            parameters.context.strokeStyle = \"rgba(255, 0, 0, 0.2)\";\r\n            parameters.context.fillStyle = \"rgba(255, 0, 0, 0.2)\";\r\n        }\r\n\r\n        parameters.context.beginRoundedRect(\r\n            entityBounds.x * globalConfig.tileSize - drawBorder,\r\n            entityBounds.y * globalConfig.tileSize - drawBorder,\r\n            entityBounds.w * globalConfig.tileSize + 2 * drawBorder,\r\n            entityBounds.h * globalConfig.tileSize + 2 * drawBorder,\r\n            4\r\n        );\r\n        parameters.context.stroke();\r\n        // parameters.context.fill();\r\n        parameters.context.globalAlpha = 1;\r\n\r\n        // HACK to draw the entity sprite\r\n        const previewSprite = metaBuilding.getBlueprintSprite(rotationVariant, this.currentVariant.get());\r\n        staticComp.origin = worldPos.divideScalar(globalConfig.tileSize).subScalars(0.5, 0.5);\r\n        staticComp.drawSpriteOnFullEntityBounds(parameters, previewSprite);\r\n        staticComp.origin = mouseTile;\r\n\r\n        // Draw ejectors\r\n        if (canBuild) {\r\n            this.drawMatchingAcceptorsAndEjectors(parameters);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawDirectionLock(parameters) {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return;\r\n        }\r\n\r\n        const mouseWorld = this.root.camera.screenToWorld(mousePosition);\r\n        const mouseTile = mouseWorld.toTileSpace();\r\n        parameters.context.fillStyle = THEME.map.directionLock[this.root.currentLayer].color;\r\n        parameters.context.strokeStyle = THEME.map.directionLock[this.root.currentLayer].background;\r\n        parameters.context.lineWidth = 10;\r\n\r\n        parameters.context.beginCircle(mouseWorld.x, mouseWorld.y, 4);\r\n        parameters.context.fill();\r\n\r\n        if (this.lastDragTile) {\r\n            const startLine = this.lastDragTile.toWorldSpaceCenterOfTile();\r\n            const endLine = mouseTile.toWorldSpaceCenterOfTile();\r\n            const midLine = this.currentDirectionLockCorner.toWorldSpaceCenterOfTile();\r\n\r\n            parameters.context.beginCircle(startLine.x, startLine.y, 8);\r\n            parameters.context.fill();\r\n\r\n            parameters.context.beginPath();\r\n            parameters.context.moveTo(startLine.x, startLine.y);\r\n            parameters.context.lineTo(midLine.x, midLine.y);\r\n            parameters.context.lineTo(endLine.x, endLine.y);\r\n            parameters.context.stroke();\r\n\r\n            parameters.context.beginCircle(endLine.x, endLine.y, 5);\r\n            parameters.context.fill();\r\n\r\n            // Draw arrow\r\n            const arrowSprite = this.lockIndicatorSprites[this.root.currentLayer];\r\n            const path = this.computeDirectionLockPath();\r\n            for (let i = 0; i < path.length - 1; i += 1) {\r\n                const { rotation, tile } = path[i];\r\n                const worldPos = tile.toWorldSpaceCenterOfTile();\r\n                const angle = Math.radians(rotation);\r\n\r\n                parameters.context.translate(worldPos.x, worldPos.y);\r\n                parameters.context.rotate(angle);\r\n                parameters.context.drawImage(\r\n                    arrowSprite,\r\n                    -6,\r\n                    -globalConfig.halfTileSize -\r\n                        clamp((this.root.time.realtimeNow() * 1.5) % 1.0, 0, 1) * 1 * globalConfig.tileSize +\r\n                        globalConfig.halfTileSize -\r\n                        6,\r\n                    12,\r\n                    12\r\n                );\r\n                parameters.context.rotate(-angle);\r\n                parameters.context.translate(-worldPos.x, -worldPos.y);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawMatchingAcceptorsAndEjectors(parameters) {\r\n        const acceptorComp = this.fakeEntity.components.ItemAcceptor;\r\n        const ejectorComp = this.fakeEntity.components.ItemEjector;\r\n        const staticComp = this.fakeEntity.components.StaticMapEntity;\r\n\r\n        const goodArrowSprite = Loader.getSprite(\"sprites/misc/slot_good_arrow.png\");\r\n        const badArrowSprite = Loader.getSprite(\"sprites/misc/slot_bad_arrow.png\");\r\n\r\n        // Just ignore the following code please ... thanks!\r\n\r\n        const offsetShift = 10;\r\n\r\n        if (acceptorComp) {\r\n            const slots = acceptorComp.slots;\r\n            for (let acceptorSlotIndex = 0; acceptorSlotIndex < slots.length; ++acceptorSlotIndex) {\r\n                const slot = slots[acceptorSlotIndex];\r\n\r\n                // Only draw same layer slots\r\n                if (slot.layer !== this.root.currentLayer) {\r\n                    continue;\r\n                }\r\n\r\n                const acceptorSlotWsTile = staticComp.localTileToWorld(slot.pos);\r\n                const acceptorSlotWsPos = acceptorSlotWsTile.toWorldSpaceCenterOfTile();\r\n\r\n                // Go over all slots\r\n                for (\r\n                    let acceptorDirectionIndex = 0;\r\n                    acceptorDirectionIndex < slot.directions.length;\r\n                    ++acceptorDirectionIndex\r\n                ) {\r\n                    const direction = slot.directions[acceptorDirectionIndex];\r\n                    const worldDirection = staticComp.localDirectionToWorld(direction);\r\n\r\n                    // Figure out which tile ejects to this slot\r\n                    const sourceTile = acceptorSlotWsTile.add(enumDirectionToVector[worldDirection]);\r\n\r\n                    let isBlocked = false;\r\n                    let isConnected = false;\r\n\r\n                    // Find all entities which are on that tile\r\n                    const sourceEntities = this.root.map.getLayersContentsMultipleXY(\r\n                        sourceTile.x,\r\n                        sourceTile.y\r\n                    );\r\n\r\n                    // Check for every entity:\r\n                    for (let i = 0; i < sourceEntities.length; ++i) {\r\n                        const sourceEntity = sourceEntities[i];\r\n                        const sourceEjector = sourceEntity.components.ItemEjector;\r\n                        const sourceStaticComp = sourceEntity.components.StaticMapEntity;\r\n                        const ejectorAcceptLocalTile = sourceStaticComp.worldToLocalTile(acceptorSlotWsTile);\r\n\r\n                        // If this entity is on the same layer as the slot - if so, it can either be\r\n                        // connected, or it can not be connected and thus block the input\r\n                        if (sourceEntity.layer === slot.layer) {\r\n                            if (\r\n                                sourceEjector &&\r\n                                sourceEjector.anySlotEjectsToLocalTile(\r\n                                    ejectorAcceptLocalTile,\r\n                                    this.root.currentLayer\r\n                                )\r\n                            ) {\r\n                                // This one is connected, all good\r\n                                isConnected = true;\r\n                            } else {\r\n                                // This one is blocked\r\n                                isBlocked = true;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const alpha = isConnected || isBlocked ? 1.0 : 0.3;\r\n                    const sprite = isBlocked ? badArrowSprite : goodArrowSprite;\r\n\r\n                    parameters.context.globalAlpha = alpha;\r\n                    drawRotatedSprite({\r\n                        parameters,\r\n                        sprite,\r\n                        x: acceptorSlotWsPos.x,\r\n                        y: acceptorSlotWsPos.y,\r\n                        angle: Math.radians(enumDirectionToAngle[enumInvertedDirections[worldDirection]]),\r\n                        size: 13,\r\n                        offsetY: offsetShift + 13,\r\n                    });\r\n                    parameters.context.globalAlpha = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (ejectorComp) {\r\n            const slots = ejectorComp.slots;\r\n\r\n            // Go over all slots\r\n            for (let ejectorSlotIndex = 0; ejectorSlotIndex < slots.length; ++ejectorSlotIndex) {\r\n                const slot = slots[ejectorSlotIndex];\r\n\r\n                // Only draw same layer slots\r\n                if (slot.layer !== this.root.currentLayer) {\r\n                    continue;\r\n                }\r\n\r\n                const ejectorSlotWsTile = staticComp.localTileToWorld(\r\n                    ejectorComp.getSlotTargetLocalTile(ejectorSlotIndex)\r\n                );\r\n                const ejectorSLotWsPos = ejectorSlotWsTile.toWorldSpaceCenterOfTile();\r\n                const ejectorSlotWsDirection = staticComp.localDirectionToWorld(slot.direction);\r\n\r\n                let isBlocked = false;\r\n                let isConnected = false;\r\n\r\n                // Find all entities which are on that tile\r\n                const destEntities = this.root.map.getLayersContentsMultipleXY(\r\n                    ejectorSlotWsTile.x,\r\n                    ejectorSlotWsTile.y\r\n                );\r\n\r\n                // Check for every entity:\r\n                for (let i = 0; i < destEntities.length; ++i) {\r\n                    const destEntity = destEntities[i];\r\n                    const destAcceptor = destEntity.components.ItemAcceptor;\r\n                    const destStaticComp = destEntity.components.StaticMapEntity;\r\n\r\n                    // If this entity is on the same layer as the slot - if so, it can either be\r\n                    // connected, or it can not be connected and thus block the input\r\n                    if (destEntity.layer === slot.layer) {\r\n                        const destLocalTile = destStaticComp.worldToLocalTile(ejectorSlotWsTile);\r\n                        const destLocalDir = destStaticComp.worldDirectionToLocal(ejectorSlotWsDirection);\r\n                        if (\r\n                            destAcceptor &&\r\n                            destAcceptor.findMatchingSlot(destLocalTile, destLocalDir, this.root.currentLayer)\r\n                        ) {\r\n                            // This one is connected, all good\r\n                            isConnected = true;\r\n                        } else {\r\n                            // This one is blocked\r\n                            isBlocked = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                const alpha = isConnected || isBlocked ? 1.0 : 0.3;\r\n                const sprite = isBlocked ? badArrowSprite : goodArrowSprite;\r\n\r\n                parameters.context.globalAlpha = alpha;\r\n                drawRotatedSprite({\r\n                    parameters,\r\n                    sprite,\r\n                    x: ejectorSLotWsPos.x,\r\n                    y: ejectorSLotWsPos.y,\r\n                    angle: Math.radians(enumDirectionToAngle[ejectorSlotWsDirection]),\r\n                    size: 13,\r\n                    offsetY: offsetShift,\r\n                });\r\n                parameters.context.globalAlpha = 1;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../../../core/config\";\r\nimport { gMetaBuildingRegistry } from \"../../../core/global_registries\";\r\nimport { Signal, STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { enumMouseButton } from \"../../camera\";\r\nimport { StaticMapEntityComponent } from \"../../components/static_map_entity\";\r\nimport { Entity } from \"../../entity\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { defaultBuildingVariant, MetaBuilding } from \"../../meta_building\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { MetaMinerBuilding, enumMinerVariants } from \"../../buildings/miner\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\nimport { enumLayer } from \"../../root\";\r\nimport { getBuildingDataFromCode, getCodeFromBuildingData } from \"../../building_codes\";\r\n\r\n/**\r\n * Contains all logic for the building placer - this doesn't include the rendering\r\n * of info boxes or drawing.\r\n */\r\nexport class HUDBuildingPlacerLogic extends BaseHUDPart {\r\n    /**\r\n     * Initializes the logic\r\n     * @see BaseHUDPart.initialize\r\n     */\r\n    initialize() {\r\n        /**\r\n         * We use a fake entity to get information about how a building will look\r\n         * once placed\r\n         * @type {Entity}\r\n         */\r\n        this.fakeEntity = null;\r\n\r\n        // Signals\r\n        this.signals = {\r\n            variantChanged: new Signal(),\r\n            draggingStarted: new Signal(),\r\n        };\r\n\r\n        /**\r\n         * The current building\r\n         * @type {TypedTrackedState<MetaBuilding?>}\r\n         */\r\n        this.currentMetaBuilding = new TrackedState(this.onSelectedMetaBuildingChanged, this);\r\n\r\n        /**\r\n         * The current rotation\r\n         * @type {number}\r\n         */\r\n        this.currentBaseRotationGeneral = 0;\r\n\r\n        /**\r\n         * The current rotation preference for each building.\r\n         * @type{Object.<string,number>}\r\n         */\r\n        this.preferredBaseRotations = {};\r\n\r\n        /**\r\n         * Whether we are currently dragging\r\n         * @type {boolean}\r\n         */\r\n        this.currentlyDragging = false;\r\n\r\n        /**\r\n         * Current building variant\r\n         * @type {TypedTrackedState<string>}\r\n         */\r\n        this.currentVariant = new TrackedState(() => this.signals.variantChanged.dispatch());\r\n\r\n        /**\r\n         * Whether we are currently drag-deleting\r\n         * @type {boolean}\r\n         */\r\n        this.currentlyDeleting = false;\r\n\r\n        /**\r\n         * Stores which variants for each building we prefer, this is based on what\r\n         * the user last selected\r\n         * @type {Object.<string, string>}\r\n         */\r\n        this.preferredVariants = {};\r\n\r\n        /**\r\n         * The tile we last dragged from\r\n         * @type {Vector}\r\n         */\r\n        this.lastDragTile = null;\r\n\r\n        /**\r\n         * The side for direction lock\r\n         * @type {number} (0|1)\r\n         */\r\n        this.currentDirectionLockSide = 0;\r\n\r\n        /**\r\n         * Whether the side for direction lock has not yet been determined.\r\n         * @type {boolean}\r\n         */\r\n        this.currentDirectionLockSideIndeterminate = true;\r\n\r\n        this.initializeBindings();\r\n    }\r\n\r\n    /**\r\n     * Initializes all bindings\r\n     */\r\n    initializeBindings() {\r\n        // KEYBINDINGS\r\n        const keyActionMapper = this.root.keyMapper;\r\n        keyActionMapper.getBinding(KEYMAPPINGS.placement.rotateWhilePlacing).add(this.tryRotate, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.placement.cycleBuildingVariants).add(this.cycleVariants, this);\r\n        keyActionMapper\r\n            .getBinding(KEYMAPPINGS.placement.switchDirectionLockSide)\r\n            .add(this.switchDirectionLockSide, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.abortPlacement, this);\r\n        keyActionMapper.getBinding(KEYMAPPINGS.placement.pipette).add(this.startPipette, this);\r\n        this.root.gameState.inputReciever.keyup.add(this.checkForDirectionLockSwitch, this);\r\n\r\n        // BINDINGS TO GAME EVENTS\r\n        this.root.hud.signals.buildingsSelectedForCopy.add(this.abortPlacement, this);\r\n        this.root.hud.signals.pasteBlueprintRequested.add(this.abortPlacement, this);\r\n        this.root.signals.storyGoalCompleted.add(() => this.signals.variantChanged.dispatch());\r\n        this.root.signals.upgradePurchased.add(() => this.signals.variantChanged.dispatch());\r\n        this.root.signals.editModeChanged.add(this.onEditModeChanged, this);\r\n\r\n        // MOUSE BINDINGS\r\n        this.root.camera.downPreHandler.add(this.onMouseDown, this);\r\n        this.root.camera.movePreHandler.add(this.onMouseMove, this);\r\n        this.root.camera.upPostHandler.add(this.onMouseUp, this);\r\n    }\r\n\r\n    /**\r\n     * Called when the edit mode got changed\r\n     * @param {enumLayer} editMode\r\n     */\r\n    onEditModeChanged(editMode) {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        if (metaBuilding) {\r\n            if (metaBuilding.getLayer() !== editMode) {\r\n                // This layer doesn't fit the edit mode anymore\r\n                this.currentMetaBuilding.set(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the current base rotation for the current meta-building.\r\n     * @returns {number}\r\n     */\r\n    get currentBaseRotation() {\r\n        if (!this.root.app.settings.getAllSettings().rotationByBuilding) {\r\n            return this.currentBaseRotationGeneral;\r\n        }\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        if (metaBuilding && this.preferredBaseRotations.hasOwnProperty(metaBuilding.getId())) {\r\n            return this.preferredBaseRotations[metaBuilding.getId()];\r\n        } else {\r\n            return this.currentBaseRotationGeneral;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the base rotation for the current meta-building.\r\n     * @param {number} rotation The new rotation/angle.\r\n     */\r\n    set currentBaseRotation(rotation) {\r\n        if (!this.root.app.settings.getAllSettings().rotationByBuilding) {\r\n            this.currentBaseRotationGeneral = rotation;\r\n        } else {\r\n            const metaBuilding = this.currentMetaBuilding.get();\r\n            if (metaBuilding) {\r\n                this.preferredBaseRotations[metaBuilding.getId()] = rotation;\r\n            } else {\r\n                this.currentBaseRotationGeneral = rotation;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns if the direction lock is currently active\r\n     * @returns {boolean}\r\n     */\r\n    get isDirectionLockActive() {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        return (\r\n            metaBuilding &&\r\n            metaBuilding.getHasDirectionLockAvailable() &&\r\n            this.root.keyMapper.getBinding(KEYMAPPINGS.placementModifiers.lockBeltDirection).pressed\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns the current direction lock corner, that is, the corner between\r\n     * mouse and original start point\r\n     * @returns {Vector|null}\r\n     */\r\n    get currentDirectionLockCorner() {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return null;\r\n        }\r\n\r\n        if (!this.lastDragTile) {\r\n            // Haven't dragged yet\r\n            return null;\r\n        }\r\n\r\n        // Figure which points the line visits\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const mouseTile = worldPos.toTileSpace();\r\n\r\n        // Figure initial direction\r\n        const dx = Math.abs(this.lastDragTile.x - mouseTile.x);\r\n        const dy = Math.abs(this.lastDragTile.y - mouseTile.y);\r\n        if (dx === 0 && dy === 0) {\r\n            // Back at the start. Try a new direction.\r\n            this.currentDirectionLockSideIndeterminate = true;\r\n        } else if (this.currentDirectionLockSideIndeterminate) {\r\n            this.currentDirectionLockSideIndeterminate = false;\r\n            this.currentDirectionLockSide = dx <= dy ? 0 : 1;\r\n        }\r\n\r\n        if (this.currentDirectionLockSide === 0) {\r\n            return new Vector(this.lastDragTile.x, mouseTile.y);\r\n        } else {\r\n            return new Vector(mouseTile.x, this.lastDragTile.y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Aborts the placement\r\n     */\r\n    abortPlacement() {\r\n        if (this.currentMetaBuilding.get()) {\r\n            this.currentMetaBuilding.set(null);\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Aborts any dragging\r\n     */\r\n    abortDragging() {\r\n        this.currentlyDragging = true;\r\n        this.currentlyDeleting = false;\r\n        this.initialPlacementVector = null;\r\n        this.lastDragTile = null;\r\n    }\r\n\r\n    /**\r\n     * @see BaseHUDPart.update\r\n     */\r\n    update() {\r\n        // Always update since the camera might have moved\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (mousePos) {\r\n            this.onMouseMove(mousePos);\r\n        }\r\n\r\n        // Make sure we have nothing selected while in overview mode\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            if (this.currentMetaBuilding.get()) {\r\n                this.currentMetaBuilding.set(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tries to rotate the current building\r\n     */\r\n    tryRotate() {\r\n        const selectedBuilding = this.currentMetaBuilding.get();\r\n        if (selectedBuilding) {\r\n            if (this.root.keyMapper.getBinding(KEYMAPPINGS.placement.rotateInverseModifier).pressed) {\r\n                this.currentBaseRotation = (this.currentBaseRotation + 270) % 360;\r\n            } else {\r\n                this.currentBaseRotation = (this.currentBaseRotation + 90) % 360;\r\n            }\r\n            const staticComp = this.fakeEntity.components.StaticMapEntity;\r\n            staticComp.rotation = this.currentBaseRotation;\r\n        }\r\n    }\r\n    /**\r\n     * Tries to delete the building under the mouse\r\n     */\r\n    deleteBelowCursor() {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const tile = worldPos.toTileSpace();\r\n        const contents = this.root.map.getTileContent(tile, this.root.currentLayer);\r\n        if (contents) {\r\n            if (this.root.logic.tryDeleteBuilding(contents)) {\r\n                this.root.soundProxy.playUi(SOUNDS.destroyBuilding);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts the pipette function\r\n     */\r\n    startPipette() {\r\n        // Disable in overview\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            return;\r\n        }\r\n\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const tile = worldPos.toTileSpace();\r\n\r\n        const contents = this.root.map.getTileContent(tile, this.root.currentLayer);\r\n        if (!contents) {\r\n            const tileBelow = this.root.map.getLowerLayerContentXY(tile.x, tile.y);\r\n\r\n            // Check if there's a shape or color item below, if so select the miner\r\n            if (tileBelow) {\r\n                this.currentMetaBuilding.set(gMetaBuildingRegistry.findByClass(MetaMinerBuilding));\r\n\r\n                // Select chained miner if available, since thats always desired once unlocked\r\n                if (this.root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_miner_chainable)) {\r\n                    this.currentVariant.set(enumMinerVariants.chainable);\r\n                }\r\n            } else {\r\n                this.currentMetaBuilding.set(null);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Try to extract the building\r\n        const buildingCode = contents.components.StaticMapEntity.code;\r\n        const extracted = getBuildingDataFromCode(buildingCode);\r\n\r\n        // If the building we are picking is the same as the one we have, clear the cursor.\r\n        if (\r\n            this.currentMetaBuilding.get() &&\r\n            extracted.metaInstance.getId() === this.currentMetaBuilding.get().getId() &&\r\n            extracted.variant === this.currentVariant.get()\r\n        ) {\r\n            this.currentMetaBuilding.set(null);\r\n            return;\r\n        }\r\n\r\n        this.currentMetaBuilding.set(extracted.metaInstance);\r\n        this.currentVariant.set(extracted.variant);\r\n        this.currentBaseRotation = contents.components.StaticMapEntity.rotation;\r\n    }\r\n\r\n    /**\r\n     * Switches the side for the direction lock manually\r\n     */\r\n    switchDirectionLockSide() {\r\n        this.currentDirectionLockSide = 1 - this.currentDirectionLockSide;\r\n    }\r\n\r\n    /**\r\n     * Checks if the direction lock key got released and if such, resets the placement\r\n     * @param {any} args\r\n     */\r\n    checkForDirectionLockSwitch({ keyCode }) {\r\n        if (\r\n            keyCode ===\r\n            this.root.keyMapper.getBinding(KEYMAPPINGS.placementModifiers.lockBeltDirection).keyCode\r\n        ) {\r\n            this.abortDragging();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tries to place the current building at the given tile\r\n     * @param {Vector} tile\r\n     */\r\n    tryPlaceCurrentBuildingAt(tile) {\r\n        if (this.root.camera.zoomLevel < globalConfig.mapChunkOverviewMinZoom) {\r\n            // Dont allow placing in overview mode\r\n            return;\r\n        }\r\n\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        const { rotation, rotationVariant } = metaBuilding.computeOptimalDirectionAndRotationVariantAtTile({\r\n            root: this.root,\r\n            tile,\r\n            rotation: this.currentBaseRotation,\r\n            variant: this.currentVariant.get(),\r\n            layer: metaBuilding.getLayer(),\r\n        });\r\n\r\n        const entity = this.root.logic.tryPlaceBuilding({\r\n            origin: tile,\r\n            rotation,\r\n            rotationVariant,\r\n            originalRotation: this.currentBaseRotation,\r\n            building: this.currentMetaBuilding.get(),\r\n            variant: this.currentVariant.get(),\r\n        });\r\n\r\n        if (entity) {\r\n            // Succesfully placed, find which entity we actually placed\r\n            this.root.signals.entityManuallyPlaced.dispatch(entity);\r\n\r\n            // Check if we should flip the orientation (used for tunnels)\r\n            if (\r\n                metaBuilding.getFlipOrientationAfterPlacement() &&\r\n                !this.root.keyMapper.getBinding(\r\n                    KEYMAPPINGS.placementModifiers.placementDisableAutoOrientation\r\n                ).pressed\r\n            ) {\r\n                this.currentBaseRotation = (180 + this.currentBaseRotation) % 360;\r\n            }\r\n\r\n            // Check if we should stop placement\r\n            if (\r\n                !metaBuilding.getStayInPlacementMode() &&\r\n                !this.root.keyMapper.getBinding(KEYMAPPINGS.placementModifiers.placeMultiple).pressed &&\r\n                !this.root.app.settings.getAllSettings().alwaysMultiplace\r\n            ) {\r\n                // Stop placement\r\n                this.currentMetaBuilding.set(null);\r\n            }\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cycles through the variants\r\n     */\r\n    cycleVariants() {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        if (!metaBuilding) {\r\n            this.currentVariant.set(defaultBuildingVariant);\r\n        } else {\r\n            const availableVariants = metaBuilding.getAvailableVariants(this.root);\r\n            const index = availableVariants.indexOf(this.currentVariant.get());\r\n            assert(\r\n                index >= 0,\r\n                \"Current variant was invalid: \" + this.currentVariant.get() + \" out of \" + availableVariants\r\n            );\r\n            const newIndex = (index + 1) % availableVariants.length;\r\n            const newVariant = availableVariants[newIndex];\r\n            this.setVariant(newVariant);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the current variant to the given variant\r\n     * @param {string} variant\r\n     */\r\n    setVariant(variant) {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        this.currentVariant.set(variant);\r\n\r\n        this.preferredVariants[metaBuilding.getId()] = variant;\r\n    }\r\n\r\n    /**\r\n     * Performs the direction locked placement between two points after\r\n     * releasing the mouse\r\n     */\r\n    executeDirectionLockedPlacement() {\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        if (!metaBuilding) {\r\n            // No active building\r\n            return;\r\n        }\r\n\r\n        // Get path to place\r\n        const path = this.computeDirectionLockPath();\r\n\r\n        // Store if we placed anything\r\n        let anythingPlaced = false;\r\n\r\n        // Perform this in bulk to avoid recalculations\r\n        this.root.logic.performBulkOperation(() => {\r\n            for (let i = 0; i < path.length; ++i) {\r\n                const { rotation, tile } = path[i];\r\n                this.currentBaseRotation = rotation;\r\n                if (this.tryPlaceCurrentBuildingAt(tile)) {\r\n                    anythingPlaced = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        if (anythingPlaced) {\r\n            this.root.soundProxy.playUi(metaBuilding.getPlacementSound());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds the path which the current direction lock will use\r\n     * @returns {Array<{ tile: Vector, rotation: number }>}\r\n     */\r\n    computeDirectionLockPath() {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return [];\r\n        }\r\n\r\n        let result = [];\r\n\r\n        // Figure which points the line visits\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        let endTile = worldPos.toTileSpace();\r\n        let startTile = this.lastDragTile;\r\n\r\n        // if the alt key is pressed, reverse belt planner direction by switching start and end tile\r\n        if (this.root.keyMapper.getBinding(KEYMAPPINGS.placementModifiers.placeInverse).pressed) {\r\n            let tmp = startTile;\r\n            startTile = endTile;\r\n            endTile = tmp;\r\n        }\r\n\r\n        // Place from start to corner\r\n        const pathToCorner = this.currentDirectionLockCorner.sub(startTile);\r\n        const deltaToCorner = pathToCorner.normalize().round();\r\n        const lengthToCorner = Math.round(pathToCorner.length());\r\n        let currentPos = startTile.copy();\r\n\r\n        let rotation = (Math.round(Math.degrees(deltaToCorner.angle()) / 90) * 90 + 360) % 360;\r\n\r\n        if (lengthToCorner > 0) {\r\n            for (let i = 0; i < lengthToCorner; ++i) {\r\n                result.push({\r\n                    tile: currentPos.copy(),\r\n                    rotation,\r\n                });\r\n                currentPos.addInplace(deltaToCorner);\r\n            }\r\n        }\r\n\r\n        // Place from corner to end\r\n        const pathFromCorner = endTile.sub(this.currentDirectionLockCorner);\r\n        const deltaFromCorner = pathFromCorner.normalize().round();\r\n        const lengthFromCorner = Math.round(pathFromCorner.length());\r\n\r\n        if (lengthFromCorner > 0) {\r\n            rotation = (Math.round(Math.degrees(deltaFromCorner.angle()) / 90) * 90 + 360) % 360;\r\n            for (let i = 0; i < lengthFromCorner + 1; ++i) {\r\n                result.push({\r\n                    tile: currentPos.copy(),\r\n                    rotation,\r\n                });\r\n                currentPos.addInplace(deltaFromCorner);\r\n            }\r\n        } else {\r\n            // Finish last one\r\n            result.push({\r\n                tile: currentPos.copy(),\r\n                rotation,\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Selects a given building\r\n     * @param {MetaBuilding} metaBuilding\r\n     */\r\n    startSelection(metaBuilding) {\r\n        this.currentMetaBuilding.set(metaBuilding);\r\n    }\r\n\r\n    /**\r\n     * Called when the selected buildings changed\r\n     * @param {MetaBuilding} metaBuilding\r\n     */\r\n    onSelectedMetaBuildingChanged(metaBuilding) {\r\n        this.abortDragging();\r\n        this.root.hud.signals.selectedPlacementBuildingChanged.dispatch(metaBuilding);\r\n        if (metaBuilding) {\r\n            const variant = this.preferredVariants[metaBuilding.getId()] || defaultBuildingVariant;\r\n            this.currentVariant.set(variant);\r\n\r\n            this.fakeEntity = new Entity(null);\r\n            metaBuilding.setupEntityComponents(this.fakeEntity, null);\r\n\r\n            this.fakeEntity.addComponent(\r\n                new StaticMapEntityComponent({\r\n                    origin: new Vector(0, 0),\r\n                    rotation: 0,\r\n                    tileSize: metaBuilding.getDimensions(this.currentVariant.get()).copy(),\r\n                    code: getCodeFromBuildingData(metaBuilding, variant, 0),\r\n                })\r\n            );\r\n            metaBuilding.updateVariants(this.fakeEntity, 0, this.currentVariant.get());\r\n        } else {\r\n            this.fakeEntity = null;\r\n        }\r\n\r\n        // Since it depends on both, rerender twice\r\n        this.signals.variantChanged.dispatch();\r\n    }\r\n\r\n    /**\r\n     * mouse down pre handler\r\n     * @param {Vector} pos\r\n     * @param {enumMouseButton} button\r\n     */\r\n    onMouseDown(pos, button) {\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            // We do not allow dragging if the overlay is active\r\n            return;\r\n        }\r\n\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n\r\n        // Placement\r\n        if (button === enumMouseButton.left && metaBuilding) {\r\n            this.currentlyDragging = true;\r\n            this.currentlyDeleting = false;\r\n            this.lastDragTile = this.root.camera.screenToWorld(pos).toTileSpace();\r\n\r\n            // Place initial building, but only if direction lock is not active\r\n            if (!this.isDirectionLockActive) {\r\n                if (this.tryPlaceCurrentBuildingAt(this.lastDragTile)) {\r\n                    this.root.soundProxy.playUi(metaBuilding.getPlacementSound());\r\n                }\r\n            }\r\n            return STOP_PROPAGATION;\r\n        }\r\n\r\n        // Deletion\r\n        if (button === enumMouseButton.right && !metaBuilding) {\r\n            this.currentlyDragging = true;\r\n            this.currentlyDeleting = true;\r\n            this.lastDragTile = this.root.camera.screenToWorld(pos).toTileSpace();\r\n            this.deleteBelowCursor();\r\n            return STOP_PROPAGATION;\r\n        }\r\n\r\n        // Cancel placement\r\n        if (button === enumMouseButton.right && metaBuilding) {\r\n            this.currentMetaBuilding.set(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * mouse move pre handler\r\n     * @param {Vector} pos\r\n     */\r\n    onMouseMove(pos) {\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            return;\r\n        }\r\n\r\n        // Check for direction lock\r\n        if (this.isDirectionLockActive) {\r\n            return;\r\n        }\r\n\r\n        const metaBuilding = this.currentMetaBuilding.get();\r\n        if ((metaBuilding || this.currentlyDeleting) && this.lastDragTile) {\r\n            const oldPos = this.lastDragTile;\r\n            let newPos = this.root.camera.screenToWorld(pos).toTileSpace();\r\n\r\n            // Check if camera is moving, since then we do nothing\r\n            if (this.root.camera.desiredCenter) {\r\n                this.lastDragTile = newPos;\r\n                return;\r\n            }\r\n\r\n            // Check if anything changed\r\n            if (!oldPos.equals(newPos)) {\r\n                // Automatic Direction\r\n                if (\r\n                    metaBuilding &&\r\n                    metaBuilding.getRotateAutomaticallyWhilePlacing(this.currentVariant.get()) &&\r\n                    !this.root.keyMapper.getBinding(\r\n                        KEYMAPPINGS.placementModifiers.placementDisableAutoOrientation\r\n                    ).pressed\r\n                ) {\r\n                    const delta = newPos.sub(oldPos);\r\n                    const angleDeg = Math.degrees(delta.angle());\r\n                    this.currentBaseRotation = (Math.round(angleDeg / 90) * 90 + 360) % 360;\r\n\r\n                    // Holding alt inverts the placement\r\n                    if (this.root.keyMapper.getBinding(KEYMAPPINGS.placementModifiers.placeInverse).pressed) {\r\n                        this.currentBaseRotation = (180 + this.currentBaseRotation) % 360;\r\n                    }\r\n                }\r\n\r\n                // bresenham\r\n                let x0 = oldPos.x;\r\n                let y0 = oldPos.y;\r\n                let x1 = newPos.x;\r\n                let y1 = newPos.y;\r\n\r\n                var dx = Math.abs(x1 - x0);\r\n                var dy = Math.abs(y1 - y0);\r\n                var sx = x0 < x1 ? 1 : -1;\r\n                var sy = y0 < y1 ? 1 : -1;\r\n                var err = dx - dy;\r\n\r\n                let anythingPlaced = false;\r\n                let anythingDeleted = false;\r\n\r\n                while (this.currentlyDeleting || this.currentMetaBuilding.get()) {\r\n                    if (this.currentlyDeleting) {\r\n                        // Deletion\r\n                        const contents = this.root.map.getLayerContentXY(x0, y0, this.root.currentLayer);\r\n                        if (contents && !contents.queuedForDestroy && !contents.destroyed) {\r\n                            if (this.root.logic.tryDeleteBuilding(contents)) {\r\n                                anythingDeleted = true;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // Placement\r\n                        if (this.tryPlaceCurrentBuildingAt(new Vector(x0, y0))) {\r\n                            anythingPlaced = true;\r\n                        }\r\n                    }\r\n\r\n                    if (x0 === x1 && y0 === y1) break;\r\n                    var e2 = 2 * err;\r\n                    if (e2 > -dy) {\r\n                        err -= dy;\r\n                        x0 += sx;\r\n                    }\r\n                    if (e2 < dx) {\r\n                        err += dx;\r\n                        y0 += sy;\r\n                    }\r\n                }\r\n\r\n                if (anythingPlaced) {\r\n                    this.root.soundProxy.playUi(metaBuilding.getPlacementSound());\r\n                }\r\n                if (anythingDeleted) {\r\n                    this.root.soundProxy.playUi(SOUNDS.destroyBuilding);\r\n                }\r\n            }\r\n\r\n            this.lastDragTile = newPos;\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mouse up handler\r\n     */\r\n    onMouseUp() {\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            return;\r\n        }\r\n\r\n        // Check for direction lock\r\n        if (this.lastDragTile && this.currentlyDragging && this.isDirectionLockActive) {\r\n            this.executeDirectionLockedPlacement();\r\n        }\r\n\r\n        this.abortDragging();\r\n    }\r\n}\r\n","import { MetaBeltBaseBuilding } from \"../../buildings/belt_base\";\r\nimport { MetaCutterBuilding } from \"../../buildings/cutter\";\r\nimport { MetaEnergyGenerator } from \"../../buildings/energy_generator\";\r\nimport { MetaMinerBuilding } from \"../../buildings/miner\";\r\nimport { MetaMixerBuilding } from \"../../buildings/mixer\";\r\nimport { MetaPainterBuilding } from \"../../buildings/painter\";\r\nimport { MetaRotaterBuilding } from \"../../buildings/rotater\";\r\nimport { MetaSplitterBuilding } from \"../../buildings/splitter\";\r\nimport { MetaStackerBuilding } from \"../../buildings/stacker\";\r\nimport { MetaTrashBuilding } from \"../../buildings/trash\";\r\nimport { MetaUndergroundBeltBuilding } from \"../../buildings/underground_belt\";\r\nimport { enumLayer } from \"../../root\";\r\nimport { HUDBaseToolbar } from \"./base_toolbar\";\r\nimport { MetaAdvancedProcessorBuilding } from \"../../buildings/advanced_processor\";\r\n\r\nexport const supportedBuildings = [\r\n    MetaBeltBaseBuilding,\r\n    MetaSplitterBuilding,\r\n    MetaUndergroundBeltBuilding,\r\n    MetaMinerBuilding,\r\n    MetaCutterBuilding,\r\n    MetaRotaterBuilding,\r\n    MetaStackerBuilding,\r\n    MetaMixerBuilding,\r\n    MetaPainterBuilding,\r\n    MetaTrashBuilding,\r\n\r\n    MetaEnergyGenerator,\r\n    MetaAdvancedProcessorBuilding,\r\n];\r\n\r\nexport class HUDBuildingsToolbar extends HUDBaseToolbar {\r\n    constructor(root) {\r\n        super(root, {\r\n            supportedBuildings,\r\n            visibilityCondition: () =>\r\n                !this.root.camera.getIsMapOverlayActive() && this.root.currentLayer === enumLayer.regular,\r\n            htmlElementId: \"ingame_HUD_buildings_toolbar\",\r\n        });\r\n    }\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\nimport { enumColors } from \"../../colors\";\r\nimport { ColorItem } from \"../../items/color_item\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { THEME } from \"../../theme\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { T } from \"../../../translations\";\r\nimport { enumItemType } from \"../../base_item\";\r\nimport { enumLayer } from \"../../root\";\r\n\r\nexport class HUDColorBlindHelper extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.belowTileIndicator = makeDiv(parent, \"ingame_HUD_ColorBlindBelowTileHelper\", []);\r\n    }\r\n\r\n    initialize() {\r\n        this.trackedColorBelowTile = new TrackedState(this.onColorBelowTileChanged, this);\r\n    }\r\n\r\n    /**\r\n     * Called when the color below the current tile changed\r\n     * @param {enumColors|null} color\r\n     */\r\n    onColorBelowTileChanged(color) {\r\n        this.belowTileIndicator.classList.toggle(\"visible\", !!color);\r\n        if (color) {\r\n            this.belowTileIndicator.innerText = T.ingame.colors[color];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Computes the color below the current tile\r\n     * @returns {enumColors}\r\n     */\r\n    computeColorBelowTile() {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return null;\r\n        }\r\n\r\n        if (this.root.currentLayer !== enumLayer.regular) {\r\n            // Not in regular mode\r\n            return null;\r\n        }\r\n\r\n        const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n        const tile = worldPos.toTileSpace();\r\n        const contents = this.root.map.getTileContent(tile, this.root.currentLayer);\r\n\r\n        if (contents && !contents.components.Miner) {\r\n            const beltComp = contents.components.Belt;\r\n\r\n            // Check if the belt has a color item\r\n            if (beltComp) {\r\n                const item = beltComp.assignedPath.findItemAtTile(tile);\r\n                if (item && item.getItemType() === enumItemType.color) {\r\n                    return /** @type {ColorItem} */ (item).color;\r\n                }\r\n            }\r\n\r\n            // Check if we are ejecting an item, if so use that color\r\n            const ejectorComp = contents.components.ItemEjector;\r\n            if (ejectorComp) {\r\n                for (let i = 0; i < ejectorComp.slots.length; ++i) {\r\n                    const slot = ejectorComp.slots[i];\r\n                    if (slot.layer !== this.root.currentLayer) {\r\n                        continue;\r\n                    }\r\n                    if (slot.item && slot.item.getItemType() === enumItemType.color) {\r\n                        return /** @type {ColorItem} */ (slot.item).color;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // We hovered a lower layer, show the color there\r\n            const lowerLayer = this.root.map.getLowerLayerContentXY(tile.x, tile.y);\r\n            if (lowerLayer && lowerLayer.getItemType() === enumItemType.color) {\r\n                return /** @type {ColorItem} */ (lowerLayer).color;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    update() {\r\n        this.trackedColorBelowTile.set(this.computeColorBelowTile());\r\n    }\r\n\r\n    /**\r\n     * Draws the currently selected tile\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        const mousePosition = this.root.app.mousePosition;\r\n        if (!mousePosition) {\r\n            // Not on screen\r\n            return null;\r\n        }\r\n\r\n        const below = this.computeColorBelowTile();\r\n        if (below) {\r\n            // We have something below our tile\r\n            const worldPos = this.root.camera.screenToWorld(mousePosition);\r\n            const tile = worldPos.toTileSpace().toWorldSpace();\r\n\r\n            parameters.context.strokeStyle = THEME.map.colorBlindPickerTile;\r\n            parameters.context.lineWidth = 1;\r\n            parameters.context.beginPath();\r\n            parameters.context.rect(tile.x, tile.y, globalConfig.tileSize, globalConfig.tileSize);\r\n            parameters.context.stroke();\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../../../core/config\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { Rectangle } from \"../../../core/rectangle\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\n\r\n/**\r\n * @typedef {{\r\n *    label: string,\r\n *    area: Rectangle,\r\n *    hideAt: number,\r\n *    fillColor: string\r\n * }} DebugChange\r\n */\r\n\r\nexport class HUDChangesDebugger extends BaseHUDPart {\r\n    createElements(parent) {}\r\n\r\n    initialize() {\r\n        /** @type {Array<DebugChange>} */\r\n        this.changes = [];\r\n    }\r\n\r\n    /**\r\n     * Renders a new change\r\n     * @param {string} label Text to display\r\n     * @param {Rectangle} area Affected area world space\r\n     * @param {string} fillColor Color to display (Hex)\r\n     * @param {number=} timeToDisplay How long to display the change\r\n     */\r\n    renderChange(label, area, fillColor, timeToDisplay = 0.3) {\r\n        this.changes.push({\r\n            label,\r\n            area: area.clone(),\r\n            fillColor,\r\n            hideAt: this.root.time.realtimeNow() + timeToDisplay,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        const now = this.root.time.realtimeNow();\r\n        // Detect outdated changes\r\n        for (let i = 0; i < this.changes.length; ++i) {\r\n            const change = this.changes[i];\r\n            if (change.hideAt <= now) {\r\n                this.changes.splice(i, 1);\r\n                i -= 1;\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        for (let i = 0; i < this.changes.length; ++i) {\r\n            const change = this.changes[i];\r\n            parameters.context.fillStyle = change.fillColor;\r\n            parameters.context.globalAlpha = 0.5;\r\n            parameters.context.fillRect(\r\n                change.area.x * globalConfig.tileSize,\r\n                change.area.y * globalConfig.tileSize,\r\n                change.area.w * globalConfig.tileSize,\r\n                change.area.h * globalConfig.tileSize\r\n            );\r\n\r\n            parameters.context.fillStyle = \"#222\";\r\n            parameters.context.globalAlpha = 1;\r\n            parameters.context.font = \"bold 8px GameFont\";\r\n            parameters.context.fillText(\r\n                change.label,\r\n                change.area.x * globalConfig.tileSize + 2,\r\n                change.area.y * globalConfig.tileSize + 12\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv, round3Digits, round2Digits } from \"../../../core/utils\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\n\r\n/** @enum {string} */\r\nconst enumDebugOverlayMode = { disabled: \"disabled\", regular: \"regular\", detailed: \"detailed\" };\r\n\r\n/**\r\n * Specifies which mode follows after which mode\r\n * @enum {enumDebugOverlayMode}\r\n */\r\nconst enumDebugOverlayModeNext = {\r\n    [enumDebugOverlayMode.disabled]: enumDebugOverlayMode.regular,\r\n    [enumDebugOverlayMode.regular]: enumDebugOverlayMode.detailed,\r\n    [enumDebugOverlayMode.detailed]: enumDebugOverlayMode.disabled,\r\n};\r\n\r\nconst UPDATE_INTERVAL_SECONDS = 0.25;\r\n\r\nexport class HUDDebugInfo extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_DebugInfo\", []);\r\n\r\n        const tickRateElement = makeDiv(this.element, null, [\"tickRate\"]);\r\n        this.trackedTickRate = new TrackedState(str => (tickRateElement.innerText = str));\r\n\r\n        const tickDurationElement = makeDiv(this.element, null, [\"tickDuration\"]);\r\n        this.trackedTickDuration = new TrackedState(str => (tickDurationElement.innerText = str));\r\n\r\n        const fpsElement = makeDiv(this.element, null, [\"fps\"]);\r\n        this.trackedFPS = new TrackedState(str => (fpsElement.innerText = str));\r\n\r\n        const mousePositionElement = makeDiv(this.element, null, [\"mousePosition\"]);\r\n        this.trackedMousePosition = new TrackedState(str => (mousePositionElement.innerHTML = str));\r\n\r\n        const cameraPositionElement = makeDiv(this.element, null, [\"cameraPosition\"]);\r\n        this.trackedCameraPosition = new TrackedState(str => (cameraPositionElement.innerHTML = str));\r\n\r\n        this.versionElement = makeDiv(this.element, null, [\"version\"], \"version unknown\");\r\n    }\r\n\r\n    initialize() {\r\n        this.lastTick = 0;\r\n\r\n        this.trackedMode = new TrackedState(this.onModeChanged, this);\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element);\r\n\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.ingame.toggleFPSInfo).add(() => this.cycleModes());\r\n\r\n        // Set initial mode\r\n        this.trackedMode.set(enumDebugOverlayMode.disabled);\r\n    }\r\n\r\n    /**\r\n     * Called when the mode changed\r\n     * @param {enumDebugOverlayMode} mode\r\n     */\r\n    onModeChanged(mode) {\r\n        this.element.setAttribute(\"data-mode\", mode);\r\n        this.versionElement.innerText = `${G_BUILD_VERSION} @ ${G_APP_ENVIRONMENT} @ ${G_BUILD_COMMIT_HASH}`;\r\n    }\r\n\r\n    /**\r\n     * Updates the labels\r\n     */\r\n    updateLabels() {\r\n        this.trackedTickRate.set(\"Tickrate: \" + this.root.dynamicTickrate.currentTickRate);\r\n        this.trackedFPS.set(\r\n            \"FPS: \" +\r\n                Math.round(this.root.dynamicTickrate.averageFps) +\r\n                \" (\" +\r\n                round2Digits(1000 / this.root.dynamicTickrate.averageFps) +\r\n                \" ms)\"\r\n        );\r\n        this.trackedTickDuration.set(\r\n            \"Tick: \" + round3Digits(this.root.dynamicTickrate.averageTickDuration) + \"ms\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Updates the detailed information\r\n     */\r\n    updateDetailedInformation() {\r\n        const mousePos = this.root.app.mousePosition || new Vector(0, 0);\r\n        const mouseTile = this.root.camera.screenToWorld(mousePos).toTileSpace();\r\n        const cameraTile = this.root.camera.center.toTileSpace();\r\n\r\n        this.trackedMousePosition.set(`Mouse: <code>${mouseTile.x}</code> / <code>${mouseTile.y}</code>`);\r\n        this.trackedCameraPosition.set(`Camera: <code>${cameraTile.x}</code> / <code>${cameraTile.y}</code>`);\r\n    }\r\n\r\n    /**\r\n     * Cycles through the different modes\r\n     */\r\n    cycleModes() {\r\n        this.trackedMode.set(enumDebugOverlayModeNext[this.trackedMode.get()]);\r\n    }\r\n\r\n    update() {\r\n        const visible = this.trackedMode.get() !== enumDebugOverlayMode.disabled;\r\n        this.domAttach.update(visible);\r\n\r\n        if (!visible) {\r\n            return;\r\n        }\r\n\r\n        // Periodically update the text\r\n        const now = this.root.time.realtimeNow();\r\n        if (now - this.lastTick > UPDATE_INTERVAL_SECONDS) {\r\n            this.lastTick = now;\r\n            this.updateLabels();\r\n        }\r\n\r\n        // Also update detailed information if required\r\n        if (this.trackedMode.get() === enumDebugOverlayMode.detailed) {\r\n            this.updateDetailedInformation();\r\n        }\r\n    }\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv, removeAllChildren } from \"../../../core/utils\";\r\nimport { globalConfig } from \"../../../core/config\";\r\n\r\nexport class HUDEntityDebugger extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_EntityDebugger\",\r\n            [],\r\n            `\r\n            Tile below cursor: <span class=\"mousePos\"></span><br>\r\n            Chunk below cursor: <span class=\"chunkPos\"></span><br>\r\n            <div class=\"entityInfo\"></div>\r\n        `\r\n        );\r\n\r\n        /** @type {HTMLElement} */\r\n        this.mousePosElem = this.element.querySelector(\".mousePos\");\r\n        /** @type {HTMLElement} */\r\n        this.chunkPosElem = this.element.querySelector(\".chunkPos\");\r\n        this.entityInfoElem = this.element.querySelector(\".entityInfo\");\r\n    }\r\n\r\n    initialize() {\r\n        this.root.camera.downPreHandler.add(this.onMouseDown, this);\r\n    }\r\n\r\n    update() {\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (!mousePos) {\r\n            return;\r\n        }\r\n        const worldPos = this.root.camera.screenToWorld(mousePos);\r\n        const worldTile = worldPos.toTileSpace();\r\n\r\n        const chunk = worldTile.divideScalar(globalConfig.mapChunkSize).floor();\r\n        this.mousePosElem.innerText = worldTile.x + \" / \" + worldTile.y;\r\n        this.chunkPosElem.innerText = chunk.x + \" / \" + chunk.y;\r\n\r\n        const entity = this.root.map.getTileContent(worldTile, this.root.currentLayer);\r\n        if (entity) {\r\n            removeAllChildren(this.entityInfoElem);\r\n            let html = \"Entity\";\r\n\r\n            const flag = (name, val) =>\r\n                `<span class='flag' data-value='${val ? \"1\" : \"0\"}'><u>${name}</u> ${val}</span>`;\r\n\r\n            html += \"<div class='entityFlags'>\";\r\n            html += flag(\"registered\", entity.registered);\r\n            html += flag(\"uid\", entity.uid);\r\n            html += flag(\"destroyed\", entity.destroyed);\r\n            html += \"</div>\";\r\n\r\n            html += \"<div class='components'>\";\r\n\r\n            for (const componentId in entity.components) {\r\n                const data = entity.components[componentId];\r\n                html += \"<div class='component'>\";\r\n                html += \"<strong class='name'>\" + componentId + \"</strong>\";\r\n                html += \"<textarea class='data'>\" + JSON.stringify(data.serialize(), null, 2) + \"</textarea>\";\r\n\r\n                html += \"</div>\";\r\n            }\r\n\r\n            html += \"</div>\";\r\n\r\n            this.entityInfoElem.innerHTML = html;\r\n        }\r\n    }\r\n\r\n    onMouseDown() {}\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv, randomInt } from \"../../../core/utils\";\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { enumNotificationType } from \"./notifications\";\r\nimport { T } from \"../../../translations\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { IS_DEMO } from \"../../../core/config\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nexport class HUDGameMenu extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_GameMenu\");\r\n\r\n        const buttons = [\r\n            {\r\n                id: \"shop\",\r\n                label: \"Upgrades\",\r\n                handler: () => this.root.hud.parts.shop.show(),\r\n                keybinding: KEYMAPPINGS.ingame.menuOpenShop,\r\n                badge: () => this.root.hubGoals.getAvailableUpgradeCount(),\r\n                notification: /** @type {[string, enumNotificationType]} */ ([\r\n                    T.ingame.notifications.newUpgrade,\r\n                    enumNotificationType.upgrade,\r\n                ]),\r\n                visible: () =>\r\n                    !this.root.app.settings.getAllSettings().offerHints || this.root.hubGoals.level >= 3,\r\n            },\r\n            {\r\n                id: \"stats\",\r\n                label: \"Stats\",\r\n                handler: () => this.root.hud.parts.statistics.show(),\r\n                keybinding: KEYMAPPINGS.ingame.menuOpenStats,\r\n                visible: () =>\r\n                    !this.root.app.settings.getAllSettings().offerHints || this.root.hubGoals.level >= 3,\r\n            },\r\n        ];\r\n\r\n        /** @type {Array<{\r\n         * badge: function,\r\n         * button: HTMLElement,\r\n         * badgeElement: HTMLElement,\r\n         * lastRenderAmount: number,\r\n         * condition?: function,\r\n         * notification: [string, enumNotificationType]\r\n         * }>} */\r\n        this.badgesToUpdate = [];\r\n\r\n        /** @type {Array<{\r\n         * button: HTMLElement,\r\n         * condition: function,\r\n         * domAttach: DynamicDomAttach\r\n         * }>} */\r\n        this.visibilityToUpdate = [];\r\n\r\n        this.buttonsElement = makeDiv(this.element, null, [\"buttonContainer\"]);\r\n\r\n        buttons.forEach(({ id, label, handler, keybinding, badge, notification, visible }) => {\r\n            const button = document.createElement(\"button\");\r\n            button.setAttribute(\"data-button-id\", id);\r\n            this.buttonsElement.appendChild(button);\r\n            this.trackClicks(button, handler);\r\n\r\n            if (keybinding) {\r\n                const binding = this.root.keyMapper.getBinding(keybinding);\r\n                binding.add(handler);\r\n                binding.appendLabelToElement(button);\r\n            }\r\n\r\n            if (visible) {\r\n                this.visibilityToUpdate.push({\r\n                    button,\r\n                    condition: visible,\r\n                    domAttach: new DynamicDomAttach(this.root, button),\r\n                });\r\n            }\r\n\r\n            if (badge) {\r\n                const badgeElement = makeDiv(button, null, [\"badge\"]);\r\n                this.badgesToUpdate.push({\r\n                    badge,\r\n                    lastRenderAmount: 0,\r\n                    button,\r\n                    badgeElement,\r\n                    notification,\r\n                    condition: visible,\r\n                });\r\n            }\r\n        });\r\n\r\n        const menuButtons = makeDiv(this.element, null, [\"menuButtons\"]);\r\n\r\n        this.musicButton = makeDiv(menuButtons, null, [\"button\", \"music\"]);\r\n        this.sfxButton = makeDiv(menuButtons, null, [\"button\", \"sfx\"]);\r\n        this.saveButton = makeDiv(menuButtons, null, [\"button\", \"save\", \"animEven\"]);\r\n        this.settingsButton = makeDiv(menuButtons, null, [\"button\", \"settings\"]);\r\n\r\n        this.trackClicks(this.musicButton, this.toggleMusic);\r\n        this.trackClicks(this.sfxButton, this.toggleSfx);\r\n        this.trackClicks(this.saveButton, this.startSave);\r\n        this.trackClicks(this.settingsButton, this.openSettings);\r\n\r\n        this.musicButton.classList.toggle(\"muted\", this.root.app.settings.getAllSettings().musicMuted);\r\n        this.sfxButton.classList.toggle(\"muted\", this.root.app.settings.getAllSettings().soundsMuted);\r\n    }\r\n    initialize() {\r\n        this.root.signals.gameSaved.add(this.onGameSaved, this);\r\n    }\r\n\r\n    update() {\r\n        let playSound = false;\r\n        let notifications = new Set();\r\n\r\n        // Update visibility of buttons\r\n        for (let i = 0; i < this.visibilityToUpdate.length; ++i) {\r\n            const { button, condition, domAttach } = this.visibilityToUpdate[i];\r\n            domAttach.update(condition());\r\n        }\r\n\r\n        // Check for notifications and badges\r\n        for (let i = 0; i < this.badgesToUpdate.length; ++i) {\r\n            const {\r\n                badge,\r\n                button,\r\n                badgeElement,\r\n                lastRenderAmount,\r\n                notification,\r\n                condition,\r\n            } = this.badgesToUpdate[i];\r\n\r\n            if (condition && !condition()) {\r\n                // Do not show notifications for invisible buttons\r\n                continue;\r\n            }\r\n\r\n            // Check if the amount shown differs from the one shown last frame\r\n            const amount = badge();\r\n            if (lastRenderAmount !== amount) {\r\n                if (amount > 0) {\r\n                    badgeElement.innerText = amount;\r\n                }\r\n                // Check if the badge increased, if so play a notification\r\n                if (amount > lastRenderAmount) {\r\n                    playSound = true;\r\n                    if (notification) {\r\n                        notifications.add(notification);\r\n                    }\r\n                }\r\n\r\n                // Rerender notifications\r\n                this.badgesToUpdate[i].lastRenderAmount = amount;\r\n                button.classList.toggle(\"hasBadge\", amount > 0);\r\n            }\r\n        }\r\n\r\n        if (playSound) {\r\n            this.root.soundProxy.playUi(SOUNDS.badgeNotification);\r\n        }\r\n\r\n        notifications.forEach(([notification, type]) => {\r\n            this.root.hud.signals.notification.dispatch(notification, type);\r\n        });\r\n    }\r\n\r\n    onGameSaved() {\r\n        this.saveButton.classList.toggle(\"animEven\");\r\n        this.saveButton.classList.toggle(\"animOdd\");\r\n    }\r\n\r\n    startSave() {\r\n        this.root.gameState.doSave();\r\n    }\r\n\r\n    openSettings() {\r\n        this.root.hud.parts.settingsMenu.show();\r\n    }\r\n\r\n    toggleMusic() {\r\n        const newValue = !this.root.app.settings.getAllSettings().musicMuted;\r\n        this.root.app.settings.updateSetting(\"musicMuted\", newValue);\r\n\r\n        this.musicButton.classList.toggle(\"muted\", newValue);\r\n    }\r\n\r\n    toggleSfx() {\r\n        const newValue = !this.root.app.settings.getAllSettings().soundsMuted;\r\n        this.root.app.settings.updateSetting(\"soundsMuted\", newValue);\r\n        this.sfxButton.classList.toggle(\"muted\", newValue);\r\n    }\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { GameRoot } from \"../../root\";\r\nimport { MinerComponent } from \"../../components/miner\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\nimport { cachebust } from \"../../../core/cachebust\";\r\nimport { T } from \"../../../translations\";\r\n\r\nconst tutorialsByLevel = [\r\n    // Level 1\r\n    [\r\n        // 1.1. place an extractor\r\n        {\r\n            id: \"1_1_extractor\",\r\n            condition: /** @param {GameRoot} root */ root => {\r\n                return root.entityMgr.getAllWithComponent(MinerComponent).length === 0;\r\n            },\r\n        },\r\n        // 1.2. connect to hub\r\n        {\r\n            id: \"1_2_conveyor\",\r\n            condition: /** @param {GameRoot} root */ root => {\r\n                return root.hubGoals.getCurrentGoalDelivered() === 0;\r\n            },\r\n        },\r\n        // 1.3 wait for completion\r\n        {\r\n            id: \"1_3_expand\",\r\n            condition: () => true,\r\n        },\r\n    ],\r\n];\r\n\r\nexport class HUDInteractiveTutorial extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_InteractiveTutorial\",\r\n            [\"animEven\"],\r\n            `\r\n            <strong class=\"title\">${T.ingame.interactiveTutorial.title}</strong>\r\n            `\r\n        );\r\n\r\n        this.elementDescription = makeDiv(this.element, null, [\"desc\"]);\r\n        this.elementGif = makeDiv(this.element, null, [\"helperGif\"]);\r\n    }\r\n\r\n    initialize() {\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element);\r\n        this.currentHintId = new TrackedState(this.onHintChanged, this);\r\n    }\r\n\r\n    onHintChanged(hintId) {\r\n        this.elementDescription.innerHTML = T.ingame.interactiveTutorial.hints[hintId];\r\n        this.elementGif.style.backgroundImage =\r\n            \"url('\" + cachebust(\"res/ui/interactive_tutorial.noinline/\" + hintId + \".gif\") + \"')\";\r\n        this.element.classList.toggle(\"animEven\");\r\n        this.element.classList.toggle(\"animOdd\");\r\n    }\r\n\r\n    update() {\r\n        // Compute current hint\r\n        const thisLevelHints = tutorialsByLevel[this.root.hubGoals.level - 1];\r\n        let targetHintId = null;\r\n\r\n        if (thisLevelHints) {\r\n            for (let i = 0; i < thisLevelHints.length; ++i) {\r\n                const hint = thisLevelHints[i];\r\n                if (hint.condition(this.root)) {\r\n                    targetHintId = hint.id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.currentHintId.set(targetHintId);\r\n        this.domAttach.update(!!targetHintId);\r\n    }\r\n}\r\n","import { makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport {\r\n    getStringForKeyCode,\r\n    KEYCODE_LMB,\r\n    KEYCODE_MMB,\r\n    KEYCODE_RMB,\r\n    KEYMAPPINGS,\r\n} from \"../../key_action_mapper\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nconst DIVIDER_TOKEN = \"/\";\r\nconst ADDER_TOKEN = \"+\";\r\n\r\n/**\r\n * @typedef {{ keyCode: number }} KeyCode\r\n */\r\n\r\n/**\r\n * @typedef {{\r\n *   condition: () => boolean,\r\n *   keys: Array<KeyCode|number|string>,\r\n *   label: string,\r\n *   cachedElement?: HTMLElement,\r\n *   cachedVisibility?: boolean\r\n * }} KeyBinding\r\n */\r\n\r\nexport class HUDKeybindingOverlay extends BaseHUDPart {\r\n    initialize() {}\r\n\r\n    /**\r\n     * HELPER / Returns if there is a building selected for placement\r\n     * @returns {boolean}\r\n     */\r\n    get buildingPlacementActive() {\r\n        const placer = this.root.hud.parts.buildingPlacer;\r\n        return !this.mapOverviewActive && placer && !!placer.currentMetaBuilding.get();\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is a building selected for placement and\r\n     * it supports the belt planner\r\n     * @returns {boolean}\r\n     */\r\n    get buildingPlacementSupportsBeltPlanner() {\r\n        const placer = this.root.hud.parts.buildingPlacer;\r\n        return (\r\n            !this.mapOverviewActive &&\r\n            placer &&\r\n            placer.currentMetaBuilding.get() &&\r\n            placer.currentMetaBuilding.get().getHasDirectionLockAvailable()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is a building selected for placement and\r\n     * it has multiplace enabled by default\r\n     * @returns {boolean}\r\n     */\r\n    get buildingPlacementStaysInPlacement() {\r\n        const placer = this.root.hud.parts.buildingPlacer;\r\n        return (\r\n            !this.mapOverviewActive &&\r\n            placer &&\r\n            placer.currentMetaBuilding.get() &&\r\n            placer.currentMetaBuilding.get().getStayInPlacementMode()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is a blueprint selected for placement\r\n     * @returns {boolean}\r\n     */\r\n    get blueprintPlacementActive() {\r\n        const placer = this.root.hud.parts.blueprintPlacer;\r\n        return placer && !!placer.currentBlueprint.get();\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if the belt planner is currently active\r\n     * @returns {boolean}\r\n     */\r\n    get beltPlannerActive() {\r\n        const placer = this.root.hud.parts.buildingPlacer;\r\n        return !this.mapOverviewActive && placer && placer.isDirectionLockActive;\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is a last blueprint available\r\n     * @returns {boolean}\r\n     */\r\n    get lastBlueprintAvailable() {\r\n        const placer = this.root.hud.parts.blueprintPlacer;\r\n        return placer && !!placer.lastBlueprintUsed;\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is anything selected on the map\r\n     * @returns {boolean}\r\n     */\r\n    get anythingSelectedOnMap() {\r\n        const selector = this.root.hud.parts.massSelector;\r\n        return selector && selector.selectedUids.size > 0;\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if there is a building or blueprint selected for placement\r\n     * @returns {boolean}\r\n     */\r\n    get anyPlacementActive() {\r\n        return this.buildingPlacementActive || this.blueprintPlacementActive;\r\n    }\r\n\r\n    /**\r\n     * HELPER / Returns if the map overview is active\r\n     * @returns {boolean}\r\n     */\r\n    get mapOverviewActive() {\r\n        return this.root.camera.getIsMapOverlayActive();\r\n    }\r\n\r\n    /**\r\n     * Initializes the element\r\n     * @param {HTMLElement} parent\r\n     */\r\n    createElements(parent) {\r\n        const mapper = this.root.keyMapper;\r\n        const k = KEYMAPPINGS;\r\n\r\n        /** @type {Array<KeyBinding>} */\r\n        this.keybindings = [\r\n            {\r\n                // Move map - Including mouse\r\n                label: T.ingame.keybindingsOverlay.moveMap,\r\n                keys: [\r\n                    KEYCODE_LMB,\r\n                    DIVIDER_TOKEN,\r\n                    k.navigation.mapMoveUp,\r\n                    k.navigation.mapMoveLeft,\r\n                    k.navigation.mapMoveDown,\r\n                    k.navigation.mapMoveRight,\r\n                ],\r\n                condition: () => !this.anyPlacementActive,\r\n            },\r\n\r\n            {\r\n                // Move map - No mouse\r\n                label: T.ingame.keybindingsOverlay.moveMap,\r\n                keys: [\r\n                    k.navigation.mapMoveUp,\r\n                    k.navigation.mapMoveLeft,\r\n                    k.navigation.mapMoveDown,\r\n                    k.navigation.mapMoveRight,\r\n                ],\r\n                condition: () => this.anyPlacementActive,\r\n            },\r\n\r\n            {\r\n                // [OVERVIEW] Create marker with right click\r\n                label: T.ingame.keybindingsOverlay.createMarker,\r\n                keys: [KEYCODE_RMB],\r\n                condition: () => this.mapOverviewActive && !this.blueprintPlacementActive,\r\n            },\r\n\r\n            {\r\n                // Pipette\r\n                label: T.ingame.keybindingsOverlay.pipette,\r\n                keys: [k.placement.pipette],\r\n                condition: () => !this.mapOverviewActive && !this.blueprintPlacementActive,\r\n            },\r\n\r\n            {\r\n                // Cancel placement\r\n                label: T.ingame.keybindingsOverlay.stopPlacement,\r\n                keys: [KEYCODE_RMB],\r\n                condition: () => this.anyPlacementActive,\r\n            },\r\n\r\n            {\r\n                // Delete with right click\r\n                label: T.ingame.keybindingsOverlay.delete,\r\n                keys: [KEYCODE_RMB],\r\n                condition: () =>\r\n                    !this.anyPlacementActive && !this.mapOverviewActive && !this.anythingSelectedOnMap,\r\n            },\r\n\r\n            {\r\n                // Area select\r\n                label: T.ingame.keybindingsOverlay.selectBuildings,\r\n                keys: [k.massSelect.massSelectStart, ADDER_TOKEN, KEYCODE_LMB],\r\n                condition: () => !this.anyPlacementActive && !this.anythingSelectedOnMap,\r\n            },\r\n\r\n            {\r\n                // Place building\r\n                label: T.ingame.keybindingsOverlay.placeBuilding,\r\n                keys: [KEYCODE_LMB],\r\n                condition: () => this.anyPlacementActive,\r\n            },\r\n\r\n            {\r\n                // Rotate\r\n                label: T.ingame.keybindingsOverlay.rotateBuilding,\r\n                keys: [k.placement.rotateWhilePlacing],\r\n                condition: () => this.anyPlacementActive && !this.beltPlannerActive,\r\n            },\r\n\r\n            {\r\n                // [BELT PLANNER] Flip Side\r\n                label: T.ingame.keybindingsOverlay.plannerSwitchSide,\r\n                keys: [k.placement.switchDirectionLockSide],\r\n                condition: () => this.beltPlannerActive,\r\n            },\r\n\r\n            {\r\n                // Place last blueprint\r\n                label: T.ingame.keybindingsOverlay.pasteLastBlueprint,\r\n                keys: [k.massSelect.pasteLastBlueprint],\r\n                condition: () => !this.blueprintPlacementActive && this.lastBlueprintAvailable,\r\n            },\r\n\r\n            {\r\n                // Belt planner\r\n                label: T.ingame.keybindingsOverlay.lockBeltDirection,\r\n                keys: [k.placementModifiers.lockBeltDirection],\r\n                condition: () => this.buildingPlacementSupportsBeltPlanner && !this.beltPlannerActive,\r\n            },\r\n\r\n            {\r\n                // [SELECTION] Destroy\r\n                label: T.ingame.keybindingsOverlay.delete,\r\n                keys: [k.massSelect.confirmMassDelete],\r\n                condition: () => this.anythingSelectedOnMap,\r\n            },\r\n\r\n            {\r\n                // [SELECTION] Cancel\r\n                label: T.ingame.keybindingsOverlay.clearSelection,\r\n                keys: [k.general.back],\r\n                condition: () => this.anythingSelectedOnMap,\r\n            },\r\n            {\r\n                // [SELECTION] Cut\r\n                label: T.ingame.keybindingsOverlay.cutSelection,\r\n                keys: [k.massSelect.massSelectCut],\r\n                condition: () => this.anythingSelectedOnMap,\r\n            },\r\n\r\n            {\r\n                // [SELECTION] Copy\r\n                label: T.ingame.keybindingsOverlay.copySelection,\r\n                keys: [k.massSelect.massSelectCopy],\r\n                condition: () => this.anythingSelectedOnMap,\r\n            },\r\n\r\n            {\r\n                // Switch layers\r\n                label: T.ingame.keybindingsOverlay.switchLayers,\r\n                keys: [k.ingame.switchLayers],\r\n                condition: () => true,\r\n            },\r\n        ];\r\n\r\n        if (!this.root.app.settings.getAllSettings().alwaysMultiplace) {\r\n            this.keybindings.push({\r\n                // Multiplace\r\n                label: T.ingame.keybindingsOverlay.placeMultiple,\r\n                keys: [k.placementModifiers.placeMultiple],\r\n                condition: () => this.anyPlacementActive && !this.buildingPlacementStaysInPlacement,\r\n            });\r\n        }\r\n\r\n        this.element = makeDiv(parent, \"ingame_HUD_KeybindingOverlay\", []);\r\n\r\n        for (let i = 0; i < this.keybindings.length; ++i) {\r\n            let html = \"\";\r\n            const handle = this.keybindings[i];\r\n\r\n            for (let k = 0; k < handle.keys.length; ++k) {\r\n                const key = handle.keys[k];\r\n\r\n                switch (key) {\r\n                    case KEYCODE_LMB:\r\n                        html += `<code class=\"keybinding leftMouse\"></code>`;\r\n                        break;\r\n                    case KEYCODE_RMB:\r\n                        html += `<code class=\"keybinding rightMouse\"></code>`;\r\n                        break;\r\n                    case KEYCODE_MMB:\r\n                        html += `<code class=\"keybinding middleMouse\"></code>`;\r\n                        break;\r\n                    case DIVIDER_TOKEN:\r\n                        html += `<i></i>`;\r\n                        break;\r\n                    case ADDER_TOKEN:\r\n                        html += `+`;\r\n                        break;\r\n                    default:\r\n                        html += `<code class=\"keybinding\">${getStringForKeyCode(\r\n                            mapper.getBinding(/** @type {KeyCode} */ (key)).keyCode\r\n                        )}</code>`;\r\n                }\r\n            }\r\n            html += `<label>${handle.label}</label>`;\r\n\r\n            handle.cachedElement = makeDiv(this.element, null, [\"binding\"], html);\r\n            handle.cachedVisibility = false;\r\n        }\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.keybindings.length; ++i) {\r\n            const handle = this.keybindings[i];\r\n            const visibility = handle.condition();\r\n            if (visibility !== handle.cachedVisibility) {\r\n                handle.cachedVisibility = visibility;\r\n                handle.cachedElement.classList.toggle(\"visible\", visibility);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { Entity } from \"../../entity\";\r\nimport { Loader } from \"../../../core/loader\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { makeDiv, formatBigNumber, formatBigNumberFull } from \"../../../core/utils\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { createLogger } from \"../../../core/logging\";\r\nimport { enumMouseButton } from \"../../camera\";\r\nimport { T } from \"../../../translations\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { THEME } from \"../../theme\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\nimport { Blueprint } from \"../../blueprint\";\r\nimport { blueprintShape } from \"../../upgrades\";\r\n\r\nconst logger = createLogger(\"hud/mass_selector\");\r\n\r\nexport class HUDMassSelector extends BaseHUDPart {\r\n    createElements(parent) {}\r\n\r\n    initialize() {\r\n        this.deletionMarker = Loader.getSprite(\"sprites/misc/deletion_marker.png\");\r\n\r\n        this.currentSelectionStartWorld = null;\r\n        this.currentSelectionEnd = null;\r\n        this.selectedUids = new Set();\r\n\r\n        this.root.signals.entityQueuedForDestroy.add(this.onEntityDestroyed, this);\r\n        this.root.hud.signals.pasteBlueprintRequested.add(this.clearSelection, this);\r\n\r\n        this.root.camera.downPreHandler.add(this.onMouseDown, this);\r\n        this.root.camera.movePreHandler.add(this.onMouseMove, this);\r\n        this.root.camera.upPostHandler.add(this.onMouseUp, this);\r\n\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.general.back).add(this.onBack, this);\r\n        this.root.keyMapper\r\n            .getBinding(KEYMAPPINGS.massSelect.confirmMassDelete)\r\n            .add(this.confirmDelete, this);\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.massSelect.massSelectCut).add(this.confirmCut, this);\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.massSelect.massSelectCopy).add(this.startCopy, this);\r\n\r\n        this.root.hud.signals.selectedPlacementBuildingChanged.add(this.clearSelection, this);\r\n        this.root.signals.editModeChanged.add(this.clearSelection, this);\r\n    }\r\n\r\n    /**\r\n     * Handles the destroy callback and makes sure we clean our list\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityDestroyed(entity) {\r\n        this.selectedUids.delete(entity.uid);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    onBack() {\r\n        // Clear entities on escape\r\n        if (this.selectedUids.size > 0) {\r\n            this.selectedUids = new Set();\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the entire selection\r\n     */\r\n    clearSelection() {\r\n        this.selectedUids = new Set();\r\n    }\r\n\r\n    confirmDelete() {\r\n        if (\r\n            !this.root.app.settings.getAllSettings().disableCutDeleteWarnings &&\r\n            this.selectedUids.size > 100\r\n        ) {\r\n            const { ok } = this.root.hud.parts.dialogs.showWarning(\r\n                T.dialogs.massDeleteConfirm.title,\r\n                T.dialogs.massDeleteConfirm.desc.replace(\r\n                    \"<count>\",\r\n                    \"\" + formatBigNumberFull(this.selectedUids.size)\r\n                ),\r\n                [\"cancel:good:escape\", \"ok:bad:enter\"]\r\n            );\r\n            ok.add(() => this.doDelete());\r\n        } else {\r\n            this.doDelete();\r\n        }\r\n    }\r\n\r\n    doDelete() {\r\n        const entityUids = Array.from(this.selectedUids);\r\n        for (let i = 0; i < entityUids.length; ++i) {\r\n            const uid = entityUids[i];\r\n            const entity = this.root.entityMgr.findByUid(uid);\r\n            if (!this.root.logic.tryDeleteBuilding(entity)) {\r\n                logger.error(\"Error in mass delete, could not remove building\");\r\n                this.selectedUids.delete(uid);\r\n            }\r\n        }\r\n    }\r\n\r\n    startCopy() {\r\n        if (this.selectedUids.size > 0) {\r\n            if (!this.root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_blueprints)) {\r\n                this.root.hud.parts.dialogs.showInfo(\r\n                    T.dialogs.blueprintsNotUnlocked.title,\r\n                    T.dialogs.blueprintsNotUnlocked.desc\r\n                );\r\n                return;\r\n            }\r\n            this.root.hud.signals.buildingsSelectedForCopy.dispatch(Array.from(this.selectedUids));\r\n            this.selectedUids = new Set();\r\n            this.root.soundProxy.playUiClick();\r\n        } else {\r\n            this.root.soundProxy.playUiError();\r\n        }\r\n    }\r\n\r\n    confirmCut() {\r\n        if (!this.root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_blueprints)) {\r\n            this.root.hud.parts.dialogs.showInfo(\r\n                T.dialogs.blueprintsNotUnlocked.title,\r\n                T.dialogs.blueprintsNotUnlocked.desc\r\n            );\r\n        } else if (\r\n            !this.root.app.settings.getAllSettings().disableCutDeleteWarnings &&\r\n            this.selectedUids.size > 100\r\n        ) {\r\n            const { ok } = this.root.hud.parts.dialogs.showWarning(\r\n                T.dialogs.massCutConfirm.title,\r\n                T.dialogs.massCutConfirm.desc.replace(\r\n                    \"<count>\",\r\n                    \"\" + formatBigNumberFull(this.selectedUids.size)\r\n                ),\r\n                [\"cancel:good:escape\", \"ok:bad:enter\"]\r\n            );\r\n            ok.add(() => this.doCut());\r\n        } else {\r\n            this.doCut();\r\n        }\r\n    }\r\n\r\n    doCut() {\r\n        if (this.selectedUids.size > 0) {\r\n            const entityUids = Array.from(this.selectedUids);\r\n\r\n            const cutAction = () => {\r\n                // copy code relies on entities still existing, so must copy before deleting.\r\n                this.root.hud.signals.buildingsSelectedForCopy.dispatch(entityUids);\r\n\r\n                for (let i = 0; i < entityUids.length; ++i) {\r\n                    const uid = entityUids[i];\r\n                    const entity = this.root.entityMgr.findByUid(uid);\r\n                    if (!this.root.logic.tryDeleteBuilding(entity)) {\r\n                        logger.error(\"Error in mass cut, could not remove building\");\r\n                        this.selectedUids.delete(uid);\r\n                    }\r\n                }\r\n            };\r\n\r\n            const blueprint = Blueprint.fromUids(this.root, entityUids);\r\n            if (blueprint.canAfford(this.root)) {\r\n                cutAction();\r\n            } else {\r\n                const { cancel, ok } = this.root.hud.parts.dialogs.showWarning(\r\n                    T.dialogs.massCutInsufficientConfirm.title,\r\n                    T.dialogs.massCutInsufficientConfirm.desc,\r\n                    [\"cancel:good:escape\", \"ok:bad:enter\"]\r\n                );\r\n                ok.add(cutAction);\r\n            }\r\n\r\n            this.root.soundProxy.playUiClick();\r\n        } else {\r\n            this.root.soundProxy.playUiError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * mouse down pre handler\r\n     * @param {Vector} pos\r\n     * @param {enumMouseButton} mouseButton\r\n     */\r\n    onMouseDown(pos, mouseButton) {\r\n        if (!this.root.keyMapper.getBinding(KEYMAPPINGS.massSelect.massSelectStart).pressed) {\r\n            return;\r\n        }\r\n\r\n        if (mouseButton !== enumMouseButton.left) {\r\n            return;\r\n        }\r\n\r\n        if (!this.root.keyMapper.getBinding(KEYMAPPINGS.massSelect.massSelectSelectMultiple).pressed) {\r\n            // Start new selection\r\n            this.selectedUids = new Set();\r\n        }\r\n\r\n        this.currentSelectionStartWorld = this.root.camera.screenToWorld(pos.copy());\r\n        this.currentSelectionEnd = pos.copy();\r\n        return STOP_PROPAGATION;\r\n    }\r\n\r\n    /**\r\n     * mouse move pre handler\r\n     * @param {Vector} pos\r\n     */\r\n    onMouseMove(pos) {\r\n        if (this.currentSelectionStartWorld) {\r\n            this.currentSelectionEnd = pos.copy();\r\n        }\r\n    }\r\n\r\n    onMouseUp() {\r\n        if (this.currentSelectionStartWorld) {\r\n            const worldStart = this.currentSelectionStartWorld;\r\n            const worldEnd = this.root.camera.screenToWorld(this.currentSelectionEnd);\r\n\r\n            const tileStart = worldStart.toTileSpace();\r\n            const tileEnd = worldEnd.toTileSpace();\r\n\r\n            const realTileStart = tileStart.min(tileEnd);\r\n            const realTileEnd = tileStart.max(tileEnd);\r\n\r\n            for (let x = realTileStart.x; x <= realTileEnd.x; ++x) {\r\n                for (let y = realTileStart.y; y <= realTileEnd.y; ++y) {\r\n                    const contents = this.root.map.getLayerContentXY(x, y, this.root.currentLayer);\r\n                    if (contents && this.root.logic.canDeleteBuilding(contents)) {\r\n                        this.selectedUids.add(contents.uid);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.currentSelectionStartWorld = null;\r\n            this.currentSelectionEnd = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        const boundsBorder = 2;\r\n\r\n        if (this.currentSelectionStartWorld) {\r\n            const worldStart = this.currentSelectionStartWorld;\r\n            const worldEnd = this.root.camera.screenToWorld(this.currentSelectionEnd);\r\n\r\n            const realWorldStart = worldStart.min(worldEnd);\r\n            const realWorldEnd = worldStart.max(worldEnd);\r\n\r\n            const tileStart = worldStart.toTileSpace();\r\n            const tileEnd = worldEnd.toTileSpace();\r\n\r\n            const realTileStart = tileStart.min(tileEnd);\r\n            const realTileEnd = tileStart.max(tileEnd);\r\n\r\n            parameters.context.lineWidth = 1;\r\n            parameters.context.fillStyle = THEME.map.selectionBackground;\r\n            parameters.context.strokeStyle = THEME.map.selectionOutline;\r\n            parameters.context.beginPath();\r\n            parameters.context.rect(\r\n                realWorldStart.x,\r\n                realWorldStart.y,\r\n                realWorldEnd.x - realWorldStart.x,\r\n                realWorldEnd.y - realWorldStart.y\r\n            );\r\n            parameters.context.fill();\r\n            parameters.context.stroke();\r\n\r\n            parameters.context.fillStyle = THEME.map.selectionOverlay;\r\n\r\n            for (let x = realTileStart.x; x <= realTileEnd.x; ++x) {\r\n                for (let y = realTileStart.y; y <= realTileEnd.y; ++y) {\r\n                    const contents = this.root.map.getLayerContentXY(x, y, this.root.currentLayer);\r\n                    if (contents && this.root.logic.canDeleteBuilding(contents)) {\r\n                        const staticComp = contents.components.StaticMapEntity;\r\n                        const bounds = staticComp.getTileSpaceBounds();\r\n                        parameters.context.beginRoundedRect(\r\n                            bounds.x * globalConfig.tileSize + boundsBorder,\r\n                            bounds.y * globalConfig.tileSize + boundsBorder,\r\n                            bounds.w * globalConfig.tileSize - 2 * boundsBorder,\r\n                            bounds.h * globalConfig.tileSize - 2 * boundsBorder,\r\n                            2\r\n                        );\r\n                        parameters.context.fill();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        parameters.context.fillStyle = THEME.map.selectionOverlay;\r\n        this.selectedUids.forEach(uid => {\r\n            const entity = this.root.entityMgr.findByUid(uid);\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const bounds = staticComp.getTileSpaceBounds();\r\n            parameters.context.beginRoundedRect(\r\n                bounds.x * globalConfig.tileSize + boundsBorder,\r\n                bounds.y * globalConfig.tileSize + boundsBorder,\r\n                bounds.w * globalConfig.tileSize - 2 * boundsBorder,\r\n                bounds.h * globalConfig.tileSize - 2 * boundsBorder,\r\n                2\r\n            );\r\n            parameters.context.fill();\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { Dialog, DialogLoading, DialogOptionChooser } from \"../../../core/modal_dialog_elements\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { THIRDPARTY_URLS } from \"../../../core/config\";\r\n\r\nexport class HUDModalDialogs extends BaseHUDPart {\r\n    constructor(root, app) {\r\n        // Important: Root is not always available here! Its also used in the main menu\r\n        super(root);\r\n\r\n        /** @type {Application} */\r\n        this.app = root ? root.app : app;\r\n\r\n        this.dialogParent = null;\r\n        this.dialogStack = [];\r\n    }\r\n\r\n    // For use inside of the game, implementation of base hud part\r\n    initialize() {\r\n        this.dialogParent = document.getElementById(\"ingame_HUD_ModalDialogs\");\r\n        this.domWatcher = new DynamicDomAttach(this.root, this.dialogParent);\r\n    }\r\n\r\n    shouldPauseRendering() {\r\n        return this.dialogStack.length > 0;\r\n    }\r\n\r\n    shouldPauseGame() {\r\n        return this.shouldPauseRendering();\r\n    }\r\n\r\n    createElements(parent) {\r\n        return makeDiv(parent, \"ingame_HUD_ModalDialogs\");\r\n    }\r\n\r\n    // For use outside of the game\r\n    initializeToElement(element) {\r\n        assert(element, \"No element for dialogs given\");\r\n        this.dialogParent = element;\r\n    }\r\n\r\n    // Methods\r\n\r\n    /**\r\n     * @param {string} title\r\n     * @param {string} text\r\n     * @param {Array<string>} buttons\r\n     */\r\n    showInfo(title, text, buttons = [\"ok:good\"]) {\r\n        const dialog = new Dialog({\r\n            app: this.app,\r\n            title: title,\r\n            contentHTML: text,\r\n            buttons: buttons,\r\n            type: \"info\",\r\n        });\r\n        this.internalShowDialog(dialog);\r\n\r\n        if (this.app) {\r\n            this.app.sound.playUiSound(SOUNDS.dialogOk);\r\n        }\r\n\r\n        return dialog.buttonSignals;\r\n    }\r\n\r\n    /**\r\n     * @param {string} title\r\n     * @param {string} text\r\n     * @param {Array<string>} buttons\r\n     */\r\n    showWarning(title, text, buttons = [\"ok:good\"]) {\r\n        const dialog = new Dialog({\r\n            app: this.app,\r\n            title: title,\r\n            contentHTML: text,\r\n            buttons: buttons,\r\n            type: \"warning\",\r\n        });\r\n        this.internalShowDialog(dialog);\r\n\r\n        if (this.app) {\r\n            this.app.sound.playUiSound(SOUNDS.dialogError);\r\n        }\r\n\r\n        return dialog.buttonSignals;\r\n    }\r\n\r\n    /**\r\n     * @param {string} feature\r\n     * @param {string} textPrefab\r\n     */\r\n    showFeatureRestrictionInfo(feature, textPrefab = T.dialogs.featureRestriction.desc) {\r\n        const dialog = new Dialog({\r\n            app: this.app,\r\n            title: T.dialogs.featureRestriction.title,\r\n            contentHTML: textPrefab.replace(\"<feature>\", feature),\r\n            buttons: [\"cancel:bad\", \"getStandalone:good\"],\r\n            type: \"warning\",\r\n        });\r\n        this.internalShowDialog(dialog);\r\n\r\n        if (this.app) {\r\n            this.app.sound.playUiSound(SOUNDS.dialogOk);\r\n        }\r\n\r\n        this.app.analytics.trackUiClick(\"demo_dialog_show\");\r\n\r\n        dialog.buttonSignals.cancel.add(() => {\r\n            this.app.analytics.trackUiClick(\"demo_dialog_cancel\");\r\n        });\r\n\r\n        dialog.buttonSignals.getStandalone.add(() => {\r\n            this.app.analytics.trackUiClick(\"demo_dialog_click\");\r\n            window.open(THIRDPARTY_URLS.standaloneStorePage);\r\n        });\r\n\r\n        return dialog.buttonSignals;\r\n    }\r\n\r\n    showOptionChooser(title, options) {\r\n        const dialog = new DialogOptionChooser({\r\n            app: this.app,\r\n            title,\r\n            options,\r\n        });\r\n        this.internalShowDialog(dialog);\r\n        return dialog.buttonSignals;\r\n    }\r\n\r\n    // Returns method to be called when laoding finishd\r\n    showLoadingDialog() {\r\n        const dialog = new DialogLoading(this.app);\r\n        this.internalShowDialog(dialog);\r\n        return this.closeDialog.bind(this, dialog);\r\n    }\r\n\r\n    internalShowDialog(dialog) {\r\n        const elem = dialog.createElement();\r\n        dialog.setIndex(this.dialogStack.length);\r\n\r\n        // Hide last dialog in queue\r\n        if (this.dialogStack.length > 0) {\r\n            this.dialogStack[this.dialogStack.length - 1].hide();\r\n        }\r\n\r\n        this.dialogStack.push(dialog);\r\n\r\n        // Append dialog\r\n        dialog.show();\r\n        dialog.closeRequested.add(this.closeDialog.bind(this, dialog));\r\n\r\n        // Append to HTML\r\n        this.dialogParent.appendChild(elem);\r\n\r\n        document.body.classList.toggle(\"modalDialogActive\", this.dialogStack.length > 0);\r\n\r\n        // IMPORTANT: Attach element directly, otherwise double submit is possible\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        if (this.domWatcher) {\r\n            this.domWatcher.update(this.dialogStack.length > 0);\r\n        }\r\n    }\r\n\r\n    closeDialog(dialog) {\r\n        dialog.destroy();\r\n\r\n        let index = -1;\r\n        for (let i = 0; i < this.dialogStack.length; ++i) {\r\n            if (this.dialogStack[i] === dialog) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        assert(index >= 0, \"Dialog not in dialog stack\");\r\n        this.dialogStack.splice(index, 1);\r\n\r\n        if (this.dialogStack.length > 0) {\r\n            // Show the dialog which was previously open\r\n            this.dialogStack[this.dialogStack.length - 1].show();\r\n        }\r\n\r\n        document.body.classList.toggle(\"modalDialogActive\", this.dialogStack.length > 0);\r\n    }\r\n\r\n    close() {\r\n        for (let i = 0; i < this.dialogStack.length; ++i) {\r\n            const dialog = this.dialogStack[i];\r\n            dialog.destroy();\r\n        }\r\n        this.dialogStack = [];\r\n    }\r\n\r\n    cleanup() {\r\n        super.cleanup();\r\n        for (let i = 0; i < this.dialogStack.length; ++i) {\r\n            this.dialogStack[i].destroy();\r\n        }\r\n        this.dialogStack = [];\r\n        this.dialogParent = null;\r\n    }\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { IS_DEMO } from \"../../../core/config\";\r\n\r\n/** @enum {string} */\r\nexport const enumNotificationType = {\r\n    saved: \"saved\",\r\n    upgrade: \"upgrade\",\r\n    success: \"success\",\r\n};\r\n\r\nconst notificationDuration = 3;\r\n\r\nexport class HUDNotifications extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_Notifications\", [], ``);\r\n    }\r\n\r\n    initialize() {\r\n        this.root.hud.signals.notification.add(this.onNotification, this);\r\n\r\n        /** @type {Array<{ element: HTMLElement, expireAt: number}>} */\r\n        this.notificationElements = [];\r\n\r\n        // Automatic notifications\r\n        this.root.signals.gameSaved.add(() =>\r\n            this.onNotification(T.ingame.notifications.gameSaved, enumNotificationType.saved)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param {string} message\r\n     * @param {enumNotificationType} type\r\n     */\r\n    onNotification(message, type) {\r\n        const element = makeDiv(this.element, null, [\"notification\", \"type-\" + type], message);\r\n        element.setAttribute(\"data-icon\", \"icons/notification_\" + type + \".png\");\r\n\r\n        this.notificationElements.push({\r\n            element,\r\n            expireAt: this.root.time.realtimeNow() + notificationDuration,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        const now = this.root.time.realtimeNow();\r\n        for (let i = 0; i < this.notificationElements.length; ++i) {\r\n            const handle = this.notificationElements[i];\r\n            if (handle.expireAt <= now) {\r\n                handle.element.remove();\r\n                this.notificationElements.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ClickDetector } from \"../../../core/click_detector\";\r\nimport { formatBigNumber, makeDiv, arrayDelete, arrayDeleteValue } from \"../../../core/utils\";\r\nimport { ShapeDefinition } from \"../../shape_definition\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { blueprintShape, UPGRADES } from \"../../upgrades\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\n\r\n/**\r\n * Manages the pinned shapes on the left side of the screen\r\n */\r\nexport class HUDPinnedShapes extends BaseHUDPart {\r\n    constructor(root) {\r\n        super(root);\r\n        /**\r\n         * Store a list of pinned shapes\r\n         * @type {Array<string>}\r\n         */\r\n        this.pinnedShapes = [];\r\n\r\n        /**\r\n         * Store handles to the currently rendered elements, so we can update them more\r\n         * convenient. Also allows for cleaning up handles.\r\n         * @type {Array<{\r\n         *  key: string,\r\n         *  amountLabel: HTMLElement,\r\n         *  lastRenderedValue: string,\r\n         *  element: HTMLElement,\r\n         *  detector?: ClickDetector,\r\n         *  infoDetector?: ClickDetector\r\n         * }>}\r\n         */\r\n        this.handles = [];\r\n    }\r\n\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_PinnedShapes\", []);\r\n    }\r\n\r\n    /**\r\n     * Serializes the pinned shapes\r\n     */\r\n    serialize() {\r\n        return {\r\n            shapes: this.pinnedShapes,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Deserializes the pinned shapes\r\n     * @param {{ shapes: Array<string>}} data\r\n     */\r\n    deserialize(data) {\r\n        if (!data || !data.shapes || !Array.isArray(data.shapes)) {\r\n            return \"Invalid pinned shapes data\";\r\n        }\r\n        this.pinnedShapes = data.shapes;\r\n    }\r\n\r\n    /**\r\n     * Initializes the hud component\r\n     */\r\n    initialize() {\r\n        // Connect to any relevant signals\r\n        this.root.signals.storyGoalCompleted.add(this.rerenderFull, this);\r\n        this.root.signals.upgradePurchased.add(this.updateShapesAfterUpgrade, this);\r\n        this.root.signals.postLoadHook.add(this.rerenderFull, this);\r\n        this.root.hud.signals.shapePinRequested.add(this.pinNewShape, this);\r\n        this.root.hud.signals.shapeUnpinRequested.add(this.unpinShape, this);\r\n\r\n        // Perform initial render\r\n        this.updateShapesAfterUpgrade();\r\n    }\r\n\r\n    /**\r\n     * Updates all shapes after an upgrade has been purchased and removes the unused ones\r\n     */\r\n    updateShapesAfterUpgrade() {\r\n        for (let i = 0; i < this.pinnedShapes.length; ++i) {\r\n            const key = this.pinnedShapes[i];\r\n            if (key === blueprintShape) {\r\n                // Ignore blueprint shapes\r\n                continue;\r\n            }\r\n            let goal = this.findGoalValueForShape(key);\r\n            if (!goal) {\r\n                // Seems no longer relevant\r\n                this.pinnedShapes.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n        }\r\n\r\n        this.rerenderFull();\r\n    }\r\n\r\n    /**\r\n     * Finds the current goal for the given key. If the key is the story goal, returns\r\n     * the story goal. If its the blueprint shape, no goal is returned. Otherwise\r\n     * it's searched for upgrades.\r\n     * @param {string} key\r\n     */\r\n    findGoalValueForShape(key) {\r\n        if (key === this.root.hubGoals.currentGoal.definition.getHash()) {\r\n            return this.root.hubGoals.currentGoal.required;\r\n        }\r\n        if (key === blueprintShape) {\r\n            return null;\r\n        }\r\n\r\n        // Check if this shape is required for any upgrade\r\n        for (const upgradeId in UPGRADES) {\r\n            const { tiers } = UPGRADES[upgradeId];\r\n            const currentTier = this.root.hubGoals.getUpgradeLevel(upgradeId);\r\n            const tierHandle = tiers[currentTier];\r\n\r\n            if (!tierHandle) {\r\n                // Max level\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < tierHandle.required.length; ++i) {\r\n                const { shape, amount } = tierHandle.required[i];\r\n                if (shape === key) {\r\n                    return amount;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Returns whether a given shape is currently pinned\r\n     * @param {string} key\r\n     */\r\n    isShapePinned(key) {\r\n        if (key === this.root.hubGoals.currentGoal.definition.getHash() || key === blueprintShape) {\r\n            // This is a \"special\" shape which is always pinned\r\n            return true;\r\n        }\r\n\r\n        return this.pinnedShapes.indexOf(key) >= 0;\r\n    }\r\n\r\n    /**\r\n     * Rerenders the whole component\r\n     */\r\n    rerenderFull() {\r\n        const currentGoal = this.root.hubGoals.currentGoal;\r\n        const currentKey = currentGoal.definition.getHash();\r\n\r\n        // First, remove all old shapes\r\n        for (let i = 0; i < this.handles.length; ++i) {\r\n            this.handles[i].element.remove();\r\n            const detector = this.handles[i].detector;\r\n            if (detector) {\r\n                detector.cleanup();\r\n            }\r\n            const infoDetector = this.handles[i].infoDetector;\r\n            if (infoDetector) {\r\n                infoDetector.cleanup();\r\n            }\r\n        }\r\n        this.handles = [];\r\n\r\n        // Pin story goal\r\n        this.internalPinShape(currentKey, false, \"goal\");\r\n\r\n        // Pin blueprint shape as well\r\n        if (this.root.hubGoals.isRewardUnlocked(enumHubGoalRewards.reward_blueprints)) {\r\n            this.internalPinShape(blueprintShape, false, \"blueprint\");\r\n            if (this.root.hubGoals.getShapesStoredByKey(blueprintShape) == 0) {\r\n                this.root.hubGoals.putShapeByKey(blueprintShape, 50);\r\n            }\r\n        }\r\n\r\n        // Pin manually pinned shapes\r\n        for (let i = 0; i < this.pinnedShapes.length; ++i) {\r\n            const key = this.pinnedShapes[i];\r\n            if (key !== currentKey) {\r\n                this.internalPinShape(key);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Pins a new shape\r\n     * @param {string} key\r\n     * @param {boolean} canUnpin\r\n     * @param {string=} className\r\n     */\r\n    internalPinShape(key, canUnpin = true, className = null) {\r\n        const definition = this.root.shapeDefinitionMgr.getShapeFromShortKey(key);\r\n\r\n        const element = makeDiv(this.element, null, [\"shape\"]);\r\n        const canvas = definition.generateAsCanvas(120);\r\n        element.appendChild(canvas);\r\n\r\n        if (className) {\r\n            element.classList.add(className);\r\n        }\r\n\r\n        let detector = null;\r\n        if (canUnpin) {\r\n            element.classList.add(\"unpinable\");\r\n            detector = new ClickDetector(element, {\r\n                consumeEvents: true,\r\n                preventDefault: true,\r\n                targetOnly: true,\r\n            });\r\n            detector.click.add(() => this.unpinShape(key));\r\n        } else {\r\n            element.classList.add(\"marked\");\r\n        }\r\n\r\n        // Show small info icon\r\n        const infoButton = document.createElement(\"button\");\r\n        infoButton.classList.add(\"infoButton\");\r\n        element.appendChild(infoButton);\r\n        const infoDetector = new ClickDetector(infoButton, {\r\n            consumeEvents: true,\r\n            preventDefault: true,\r\n            targetOnly: true,\r\n        });\r\n        infoDetector.click.add(() => this.root.hud.signals.viewShapeDetailsRequested.dispatch(definition));\r\n\r\n        const amountLabel = makeDiv(element, null, [\"amountLabel\"], \"\");\r\n\r\n        const goal = this.findGoalValueForShape(key);\r\n        if (goal) {\r\n            makeDiv(element, null, [\"goalLabel\"], \"/\" + formatBigNumber(goal));\r\n        }\r\n\r\n        this.handles.push({\r\n            key,\r\n            element,\r\n            amountLabel,\r\n            lastRenderedValue: \"\",\r\n            detector,\r\n            infoDetector,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates all amount labels\r\n     */\r\n    update() {\r\n        for (let i = 0; i < this.handles.length; ++i) {\r\n            const handle = this.handles[i];\r\n\r\n            const currentValue = this.root.hubGoals.getShapesStoredByKey(handle.key);\r\n            const currentValueFormatted = formatBigNumber(currentValue);\r\n            if (currentValueFormatted !== handle.lastRenderedValue) {\r\n                handle.lastRenderedValue = currentValueFormatted;\r\n                handle.amountLabel.innerText = currentValueFormatted;\r\n                const goal = this.findGoalValueForShape(handle.key);\r\n                handle.element.classList.toggle(\"completed\", goal && currentValue > goal);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unpins a shape\r\n     * @param {string} key\r\n     */\r\n    unpinShape(key) {\r\n        arrayDeleteValue(this.pinnedShapes, key);\r\n        this.rerenderFull();\r\n    }\r\n\r\n    /**\r\n     * Requests to pin a new shape\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    pinNewShape(definition) {\r\n        const key = definition.getHash();\r\n        if (key === this.root.hubGoals.currentGoal.definition.getHash()) {\r\n            // Can not pin current goal\r\n            return;\r\n        }\r\n\r\n        if (key === blueprintShape) {\r\n            // Can not pin the blueprint shape\r\n            return;\r\n        }\r\n\r\n        // Check if its already pinned\r\n        if (this.pinnedShapes.indexOf(key) >= 0) {\r\n            return;\r\n        }\r\n\r\n        this.pinnedShapes.push(key);\r\n        this.rerenderFull();\r\n    }\r\n}\r\n","import { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { Signal } from \"../../../core/signal\";\r\nimport { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { createLogger } from \"../../../core/logging\";\r\n\r\nconst logger = createLogger(\"hud/processing_overlay\");\r\n\r\nexport class HUDProcessingOverlay extends BaseHUDPart {\r\n    constructor(root) {\r\n        super(root);\r\n        this.tasks = [];\r\n        this.computeTimeout = null;\r\n\r\n        this.root.signals.performAsync.add(this.queueTask, this);\r\n\r\n        this.allTasksFinished = new Signal();\r\n        this.inputReceiver = new InputReceiver(\"processing-overlay\");\r\n\r\n        this.root.signals.aboutToDestruct.add(() =>\r\n            this.root.app.inputMgr.destroyReceiver(this.inputReceiver)\r\n        );\r\n    }\r\n\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"rg_HUD_ProcessingOverlay\",\r\n            [\"hudElement\"],\r\n            `\r\n            <span class=\"prefab_LoadingTextWithAnim\">\r\n            Computing\r\n            </span>\r\n        `\r\n        );\r\n    }\r\n\r\n    initialize() {\r\n        this.domWatcher = new DynamicDomAttach(this.root, this.element, {\r\n            timeToKeepSeconds: 0,\r\n        });\r\n    }\r\n\r\n    queueTask(task, name) {\r\n        if (!this.root.gameInitialized) {\r\n            // Tasks before the game started can be done directlry\r\n            task();\r\n            return;\r\n        }\r\n        task.__name = name;\r\n        this.tasks.push(task);\r\n    }\r\n\r\n    hasTasks() {\r\n        return this.tasks.length > 0;\r\n    }\r\n\r\n    isRunning() {\r\n        return this.computeTimeout !== null;\r\n    }\r\n\r\n    processSync() {\r\n        const now = performance.now();\r\n        while (this.tasks.length > 0) {\r\n            const workload = this.tasks[0];\r\n            workload.call();\r\n            this.tasks.shift();\r\n        }\r\n        const duration = performance.now() - now;\r\n        if (duration > 100) {\r\n            logger.log(\"Tasks done slow (SYNC!) within\", (performance.now() - now).toFixed(2), \"ms\");\r\n        }\r\n    }\r\n\r\n    process() {\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReceiver);\r\n\r\n        this.domWatcher.update(true);\r\n        if (this.tasks.length === 0) {\r\n            logger.warn(\"No tasks but still called process\");\r\n            return;\r\n        }\r\n\r\n        if (this.computeTimeout) {\r\n            assert(false, \"Double compute queued\");\r\n            clearTimeout(this.computeTimeout);\r\n        }\r\n\r\n        this.computeTimeout = setTimeout(() => {\r\n            const now = performance.now();\r\n            while (this.tasks.length > 0) {\r\n                const workload = this.tasks[0];\r\n                workload.call();\r\n                this.tasks.shift();\r\n            }\r\n            const duration = performance.now() - now;\r\n            if (duration > 100) {\r\n                logger.log(\"Tasks done slow within\", (performance.now() - now).toFixed(2), \"ms\");\r\n            }\r\n\r\n            this.domWatcher.update(false);\r\n\r\n            this.root.app.inputMgr.makeSureDetached(this.inputReceiver);\r\n\r\n            clearTimeout(this.computeTimeout);\r\n            this.computeTimeout = null;\r\n\r\n            this.allTasksFinished.dispatch();\r\n        });\r\n    }\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { blueprintShape, UPGRADES } from \"../../upgrades\";\r\nimport { enumNotificationType } from \"./notifications\";\r\nimport { tutorialGoals } from \"../../tutorial_goals\";\r\n\r\nexport class HUDSandboxController extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_SandboxController\",\r\n            [],\r\n            `\r\n            <label>Sandbox Options</label>\r\n            <span class=\"hint\">Use F6 to toggle this overlay</span>\r\n\r\n            <div class=\"buttons\">\r\n                <div class=\"levelToggle plusMinus\">\r\n                    <label>Level</label>\r\n                    <button class=\"styledButton minus\">-</button>\r\n                    <button class=\"styledButton plus\">+</button>\r\n                </div>\r\n                \r\n                <div class=\"upgradesBelt plusMinus\">\r\n                    <label>Upgrades &rarr; Belt</label>\r\n                    <button class=\"styledButton minus\">-</button>\r\n                    <button class=\"styledButton plus\">+</button>\r\n                </div>\r\n                \r\n                <div class=\"upgradesExtraction plusMinus\">\r\n                    <label>Upgrades &rarr; Extraction</label>\r\n                    <button class=\"styledButton minus\">-</button>\r\n                    <button class=\"styledButton plus\">+</button>\r\n                </div>\r\n                \r\n                <div class=\"upgradesProcessing plusMinus\">\r\n                    <label>Upgrades &rarr; Processing</label>\r\n                    <button class=\"styledButton minus\">-</button>\r\n                    <button class=\"styledButton plus\">+</button>\r\n                </div>\r\n                \r\n                <div class=\"upgradesPainting plusMinus\">\r\n                    <label>Upgrades &rarr; Painting</label>\r\n                    <button class=\"styledButton minus\">-</button>\r\n                    <button class=\"styledButton plus\">+</button>\r\n                </div>\r\n\r\n                <div class=\"additionalOptions\">\r\n                    <button class=\"styledButton giveBlueprints\">Fill blueprint shapes</button>\r\n                    <button class=\"styledButton maxOutAll\">Max out all</button>\r\n                </div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        const bind = (selector, handler) => this.trackClicks(this.element.querySelector(selector), handler);\r\n\r\n        bind(\".giveBlueprints\", this.giveBlueprints);\r\n        bind(\".maxOutAll\", this.maxOutAll);\r\n        bind(\".levelToggle .minus\", () => this.modifyLevel(-1));\r\n        bind(\".levelToggle .plus\", () => this.modifyLevel(1));\r\n\r\n        bind(\".upgradesBelt .minus\", () => this.modifyUpgrade(\"belt\", -1));\r\n        bind(\".upgradesBelt .plus\", () => this.modifyUpgrade(\"belt\", 1));\r\n\r\n        bind(\".upgradesExtraction .minus\", () => this.modifyUpgrade(\"miner\", -1));\r\n        bind(\".upgradesExtraction .plus\", () => this.modifyUpgrade(\"miner\", 1));\r\n\r\n        bind(\".upgradesProcessing .minus\", () => this.modifyUpgrade(\"processors\", -1));\r\n        bind(\".upgradesProcessing .plus\", () => this.modifyUpgrade(\"processors\", 1));\r\n\r\n        bind(\".upgradesPainting .minus\", () => this.modifyUpgrade(\"painting\", -1));\r\n        bind(\".upgradesPainting .plus\", () => this.modifyUpgrade(\"painting\", 1));\r\n    }\r\n\r\n    giveBlueprints() {\r\n        if (!this.root.hubGoals.storedShapes[blueprintShape]) {\r\n            this.root.hubGoals.storedShapes[blueprintShape] = 0;\r\n        }\r\n        this.root.hubGoals.storedShapes[blueprintShape] += 1e4;\r\n    }\r\n\r\n    maxOutAll() {\r\n        this.modifyUpgrade(\"belt\", 100);\r\n        this.modifyUpgrade(\"miner\", 100);\r\n        this.modifyUpgrade(\"processors\", 100);\r\n        this.modifyUpgrade(\"painting\", 100);\r\n    }\r\n\r\n    modifyUpgrade(id, amount) {\r\n        const handle = UPGRADES[id];\r\n        const maxLevel = handle.tiers.length;\r\n\r\n        this.root.hubGoals.upgradeLevels[id] = Math.max(\r\n            0,\r\n            Math.min(maxLevel, (this.root.hubGoals.upgradeLevels[id] || 0) + amount)\r\n        );\r\n\r\n        // Compute improvement\r\n        let improvement = 1;\r\n        for (let i = 0; i < this.root.hubGoals.upgradeLevels[id]; ++i) {\r\n            improvement += handle.tiers[i].improvement;\r\n        }\r\n        this.root.hubGoals.upgradeImprovements[id] = improvement;\r\n        this.root.signals.upgradePurchased.dispatch(id);\r\n        this.root.hud.signals.notification.dispatch(\r\n            \"Upgrade '\" + id + \"' is now at tier \" + (this.root.hubGoals.upgradeLevels[id] + 1),\r\n            enumNotificationType.upgrade\r\n        );\r\n    }\r\n\r\n    modifyLevel(amount) {\r\n        const hubGoals = this.root.hubGoals;\r\n        hubGoals.level = Math.max(1, hubGoals.level + amount);\r\n        hubGoals.createNextGoal();\r\n\r\n        // Clear all shapes of this level\r\n        hubGoals.storedShapes[hubGoals.currentGoal.definition.getHash()] = 0;\r\n\r\n        this.root.hud.parts.pinnedShapes.rerenderFull();\r\n\r\n        // Compute gained rewards\r\n        hubGoals.gainedRewards = {};\r\n        for (let i = 0; i < hubGoals.level - 1; ++i) {\r\n            if (i < tutorialGoals.length) {\r\n                const reward = tutorialGoals[i].reward;\r\n                hubGoals.gainedRewards[reward] = (hubGoals.gainedRewards[reward] || 0) + 1;\r\n            }\r\n        }\r\n\r\n        this.root.hud.signals.notification.dispatch(\r\n            \"Changed level to \" + hubGoals.level,\r\n            enumNotificationType.upgrade\r\n        );\r\n    }\r\n\r\n    initialize() {\r\n        // Allow toggling the controller overlay\r\n        this.root.gameState.inputReciever.keydown.add(key => {\r\n            if (key.keyCode === 117) {\r\n                // F6\r\n                this.toggle();\r\n            }\r\n        });\r\n\r\n        this.visible = !G_IS_DEV;\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element);\r\n    }\r\n\r\n    toggle() {\r\n        this.visible = !this.visible;\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n    }\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { IS_DEMO, globalConfig } from \"../../../core/config\";\r\nimport { T } from \"../../../translations\";\r\nimport { createLogger } from \"../../../core/logging\";\r\nimport { StaticMapEntityComponent } from \"../../components/static_map_entity\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { Rectangle } from \"../../../core/rectangle\";\r\n\r\nconst logger = createLogger(\"screenshot_exporter\");\r\n\r\nexport class HUDScreenshotExporter extends BaseHUDPart {\r\n    createElements() {}\r\n\r\n    initialize() {\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.ingame.exportScreenshot).add(this.startExport, this);\r\n    }\r\n\r\n    startExport() {\r\n        if (IS_DEMO) {\r\n            this.root.hud.parts.dialogs.showFeatureRestrictionInfo(T.demo.features.exportingBase);\r\n            return;\r\n        }\r\n\r\n        const { ok } = this.root.hud.parts.dialogs.showInfo(\r\n            T.dialogs.exportScreenshotWarning.title,\r\n            T.dialogs.exportScreenshotWarning.desc,\r\n            [\"cancel:good\", \"ok:bad\"]\r\n        );\r\n        ok.add(this.doExport, this);\r\n    }\r\n\r\n    doExport() {\r\n        logger.log(\"Starting export ...\");\r\n\r\n        // Find extends\r\n        const staticEntities = this.root.entityMgr.getAllWithComponent(StaticMapEntityComponent);\r\n\r\n        const minTile = new Vector(0, 0);\r\n        const maxTile = new Vector(0, 0);\r\n        for (let i = 0; i < staticEntities.length; ++i) {\r\n            const bounds = staticEntities[i].components.StaticMapEntity.getTileSpaceBounds();\r\n            minTile.x = Math.min(minTile.x, bounds.x);\r\n            minTile.y = Math.min(minTile.y, bounds.y);\r\n\r\n            maxTile.x = Math.max(maxTile.x, bounds.x + bounds.w);\r\n            maxTile.y = Math.max(maxTile.y, bounds.y + bounds.h);\r\n        }\r\n\r\n        const minChunk = minTile.divideScalar(globalConfig.mapChunkSize).floor();\r\n        const maxChunk = maxTile.divideScalar(globalConfig.mapChunkSize).ceil();\r\n\r\n        const dimensions = maxChunk.sub(minChunk);\r\n        logger.log(\"Dimensions:\", dimensions);\r\n\r\n        let chunkSizePixels = 128;\r\n        const maxDimensions = Math.max(dimensions.x, dimensions.y);\r\n\r\n        if (maxDimensions > 128) {\r\n            chunkSizePixels = Math.max(1, Math.floor(128 * (128 / maxDimensions)));\r\n        }\r\n        logger.log(\"ChunkSizePixels:\", chunkSizePixels);\r\n\r\n        const chunkScale = chunkSizePixels / (globalConfig.mapChunkSize * globalConfig.tileSize);\r\n        logger.log(\"Scale:\", chunkScale);\r\n\r\n        logger.log(\"Allocating buffer, if the factory grew too big it will crash here\");\r\n        const [canvas, context] = makeOffscreenBuffer(\r\n            dimensions.x * chunkSizePixels,\r\n            dimensions.y * chunkSizePixels,\r\n            {\r\n                smooth: true,\r\n                reusable: false,\r\n                label: \"export-buffer\",\r\n            }\r\n        );\r\n        logger.log(\"Got buffer, rendering now ...\");\r\n\r\n        const visibleRect = new Rectangle(\r\n            minChunk.x * globalConfig.mapChunkSize * globalConfig.tileSize,\r\n            minChunk.y * globalConfig.mapChunkSize * globalConfig.tileSize,\r\n            dimensions.x * globalConfig.mapChunkSize * globalConfig.tileSize,\r\n            dimensions.y * globalConfig.mapChunkSize * globalConfig.tileSize\r\n        );\r\n        const parameters = new DrawParameters({\r\n            context,\r\n            visibleRect,\r\n            desiredAtlasScale: \"1\",\r\n            root: this.root,\r\n            zoomLevel: chunkScale,\r\n        });\r\n\r\n        context.scale(chunkScale, chunkScale);\r\n        context.translate(-visibleRect.x, -visibleRect.y);\r\n\r\n        // Render all relevant chunks\r\n        this.root.map.drawBackground(parameters);\r\n        this.root.map.drawForeground(parameters);\r\n\r\n        // Offer export\r\n        logger.log(\"Rendered buffer, exporting ...\");\r\n        const image = canvas.toDataURL(\"image/png\");\r\n        const link = document.createElement(\"a\");\r\n        link.download = \"base.png\";\r\n        link.href = image;\r\n        link.click();\r\n        logger.log(\"Done!\");\r\n    }\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv, formatSeconds, formatBigNumberFull } from \"../../../core/utils\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { KeyActionMapper, KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { T } from \"../../../translations\";\r\nimport { StaticMapEntityComponent } from \"../../components/static_map_entity\";\r\nimport { ItemProcessorComponent } from \"../../components/item_processor\";\r\nimport { BeltComponent } from \"../../components/belt\";\r\nimport { IS_DEMO } from \"../../../core/config\";\r\n\r\nexport class HUDSettingsMenu extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.background = makeDiv(parent, \"ingame_HUD_SettingsMenu\", [\"ingameDialog\"]);\r\n\r\n        this.menuElement = makeDiv(this.background, null, [\"menuElement\"]);\r\n\r\n        this.statsElement = makeDiv(\r\n            this.background,\r\n            null,\r\n            [\"statsElement\"],\r\n            `\r\n            <strong>${T.ingame.settingsMenu.beltsPlaced}</strong><span class=\"beltsPlaced\"></span>\r\n            <strong>${T.ingame.settingsMenu.buildingsPlaced}</strong><span class=\"buildingsPlaced\"></span>\r\n            <strong>${T.ingame.settingsMenu.playtime}</strong><span class=\"playtime\"></span>\r\n\r\n            `\r\n        );\r\n\r\n        this.buttonContainer = makeDiv(this.menuElement, null, [\"buttons\"]);\r\n\r\n        const buttons = [\r\n            {\r\n                title: T.ingame.settingsMenu.buttons.continue,\r\n                action: () => this.close(),\r\n            },\r\n            {\r\n                title: T.ingame.settingsMenu.buttons.settings,\r\n                action: () => this.goToSettings(),\r\n            },\r\n            {\r\n                title: T.ingame.settingsMenu.buttons.menu,\r\n                action: () => this.returnToMenu(),\r\n            },\r\n        ];\r\n\r\n        for (let i = 0; i < buttons.length; ++i) {\r\n            const { title, action } = buttons[i];\r\n\r\n            const element = document.createElement(\"button\");\r\n            element.classList.add(\"styledButton\");\r\n            element.innerText = title;\r\n            this.buttonContainer.appendChild(element);\r\n\r\n            this.trackClicks(element, action);\r\n        }\r\n    }\r\n\r\n    returnToMenu() {\r\n        // if (IS_DEMO) {\r\n        //     const { cancel, deleteGame } = this.root.hud.parts.dialogs.showWarning(\r\n        //         T.dialogs.leaveNotPossibleInDemo.title,\r\n        //         T.dialogs.leaveNotPossibleInDemo.desc,\r\n        //         [\"cancel:good\", \"deleteGame:bad\"]\r\n        //     );\r\n        //     deleteGame.add(() => this.root.gameState.goBackToMenu());\r\n        // } else {\r\n        this.root.gameState.goBackToMenu();\r\n        // }\r\n    }\r\n\r\n    goToSettings() {\r\n        this.root.gameState.goToSettings();\r\n    }\r\n\r\n    shouldPauseGame() {\r\n        return this.visible;\r\n    }\r\n\r\n    shouldPauseRendering() {\r\n        return this.visible;\r\n    }\r\n\r\n    initialize() {\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.general.back).add(this.show, this);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.background, {\r\n            attachClass: \"visible\",\r\n        });\r\n\r\n        this.inputReciever = new InputReceiver(\"settingsmenu\");\r\n        this.keyActionMapper = new KeyActionMapper(this.root, this.inputReciever);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.close, this);\r\n\r\n        this.close();\r\n    }\r\n\r\n    cleanup() {\r\n        document.body.classList.remove(\"ingameDialogOpen\");\r\n    }\r\n\r\n    show() {\r\n        this.visible = true;\r\n        document.body.classList.add(\"ingameDialogOpen\");\r\n        // this.background.classList.add(\"visible\");\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n\r\n        const totalMinutesPlayed = Math.ceil(this.root.time.now() / 60);\r\n\r\n        /** @type {HTMLElement} */\r\n        const playtimeElement = this.statsElement.querySelector(\".playtime\");\r\n        /** @type {HTMLElement} */\r\n        const buildingsPlacedElement = this.statsElement.querySelector(\".buildingsPlaced\");\r\n        /** @type {HTMLElement} */\r\n        const beltsPlacedElement = this.statsElement.querySelector(\".beltsPlaced\");\r\n\r\n        playtimeElement.innerText = T.global.time.xMinutes.replace(\"<x>\", `${totalMinutesPlayed}`);\r\n\r\n        buildingsPlacedElement.innerText = formatBigNumberFull(\r\n            this.root.entityMgr.getAllWithComponent(StaticMapEntityComponent).length -\r\n                this.root.entityMgr.getAllWithComponent(BeltComponent).length\r\n        );\r\n\r\n        beltsPlacedElement.innerText = formatBigNumberFull(\r\n            this.root.entityMgr.getAllWithComponent(BeltComponent).length\r\n        );\r\n    }\r\n\r\n    close() {\r\n        this.visible = false;\r\n        document.body.classList.remove(\"ingameDialogOpen\");\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n    }\r\n}\r\n","import { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { makeDiv, removeAllChildren } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { KeyActionMapper, KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { ShapeDefinition } from \"../../shape_definition\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nconst copy = require(\"clipboard-copy\");\r\n\r\nexport class HUDShapeViewer extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.background = makeDiv(parent, \"ingame_HUD_ShapeViewer\", [\"ingameDialog\"]);\r\n\r\n        // DIALOG Inner / Wrapper\r\n        this.dialogInner = makeDiv(this.background, null, [\"dialogInner\"]);\r\n        this.title = makeDiv(this.dialogInner, null, [\"title\"], T.ingame.shapeViewer.title);\r\n        this.closeButton = makeDiv(this.title, null, [\"closeButton\"]);\r\n        this.trackClicks(this.closeButton, this.close);\r\n        this.contentDiv = makeDiv(this.dialogInner, null, [\"content\"]);\r\n\r\n        this.renderArea = makeDiv(this.contentDiv, null, [\"renderArea\"]);\r\n        this.infoArea = makeDiv(this.contentDiv, null, [\"infoArea\"]);\r\n\r\n        // Create button to copy the shape area\r\n        this.copyButton = document.createElement(\"button\");\r\n        this.copyButton.classList.add(\"styledButton\", \"copyKey\");\r\n        this.copyButton.innerText = T.ingame.shapeViewer.copyKey;\r\n        this.infoArea.appendChild(this.copyButton);\r\n    }\r\n\r\n    initialize() {\r\n        this.root.hud.signals.viewShapeDetailsRequested.add(this.renderForShape, this);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.background, {\r\n            attachClass: \"visible\",\r\n        });\r\n\r\n        this.currentShapeKey = null;\r\n\r\n        this.inputReciever = new InputReceiver(\"shape_viewer\");\r\n        this.keyActionMapper = new KeyActionMapper(this.root, this.inputReciever);\r\n\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.close, this);\r\n\r\n        this.trackClicks(this.copyButton, this.onCopyKeyRequested);\r\n\r\n        this.close();\r\n    }\r\n\r\n    /**\r\n     * Called when the copying of a key was requested\r\n     */\r\n    onCopyKeyRequested() {\r\n        if (this.currentShapeKey) {\r\n            copy(this.currentShapeKey);\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Closes the dialog\r\n     */\r\n    close() {\r\n        this.visible = false;\r\n        document.body.classList.remove(\"ingameDialogOpen\");\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Shows the viewer for a given definition\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    renderForShape(definition) {\r\n        this.visible = true;\r\n        document.body.classList.add(\"ingameDialogOpen\");\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n\r\n        removeAllChildren(this.renderArea);\r\n\r\n        this.currentShapeKey = definition.getHash();\r\n\r\n        const layers = definition.layers;\r\n        this.contentDiv.setAttribute(\"data-layers\", layers.length);\r\n\r\n        for (let i = 0; i < layers.length; ++i) {\r\n            const layerElem = makeDiv(this.renderArea, null, [\"layer\", \"layer-\" + i]);\r\n\r\n            let fakeLayers = [];\r\n            for (let k = 0; k < i; ++k) {\r\n                fakeLayers.push([null, null, null, null]);\r\n            }\r\n            fakeLayers.push(layers[i]);\r\n\r\n            const thisLayerOnly = new ShapeDefinition({ layers: fakeLayers });\r\n            const thisLayerCanvas = thisLayerOnly.generateAsCanvas(160);\r\n            layerElem.appendChild(thisLayerCanvas);\r\n\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                const quadElem = makeDiv(layerElem, null, [\"quad\", \"quad-\" + quad]);\r\n\r\n                const contents = layers[i][quad];\r\n                if (contents) {\r\n                    const colorLabelElem = makeDiv(\r\n                        quadElem,\r\n                        null,\r\n                        [\"colorLabel\"],\r\n                        T.ingame.colors[contents.color]\r\n                    );\r\n                } else {\r\n                    const emptyLabelElem = makeDiv(\r\n                        quadElem,\r\n                        null,\r\n                        [\"emptyLabel\"],\r\n                        T.ingame.shapeViewer.empty\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans up everything\r\n     */\r\n    cleanup() {\r\n        document.body.classList.remove(\"ingameDialogOpen\");\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n    }\r\n}\r\n","import { ClickDetector } from \"../../../core/click_detector\";\r\nimport { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { formatBigNumber, makeDiv } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { KeyActionMapper, KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { UPGRADES } from \"../../upgrades\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\n\r\nexport class HUDShop extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.background = makeDiv(parent, \"ingame_HUD_Shop\", [\"ingameDialog\"]);\r\n\r\n        // DIALOG Inner / Wrapper\r\n        this.dialogInner = makeDiv(this.background, null, [\"dialogInner\"]);\r\n        this.title = makeDiv(this.dialogInner, null, [\"title\"], T.ingame.shop.title);\r\n        this.closeButton = makeDiv(this.title, null, [\"closeButton\"]);\r\n        this.trackClicks(this.closeButton, this.close);\r\n        this.contentDiv = makeDiv(this.dialogInner, null, [\"content\"]);\r\n\r\n        this.upgradeToElements = {};\r\n\r\n        // Upgrades\r\n        for (const upgradeId in UPGRADES) {\r\n            const handle = {};\r\n            handle.requireIndexToElement = [];\r\n\r\n            // Wrapper\r\n            handle.elem = makeDiv(this.contentDiv, null, [\"upgrade\"]);\r\n            handle.elem.setAttribute(\"data-upgrade-id\", upgradeId);\r\n\r\n            // Title\r\n            const title = makeDiv(handle.elem, null, [\"title\"], T.shopUpgrades[upgradeId].name);\r\n\r\n            // Title > Tier\r\n            handle.elemTierLabel = makeDiv(title, null, [\"tier\"]);\r\n\r\n            // Icon\r\n            handle.icon = makeDiv(handle.elem, null, [\"icon\"]);\r\n            handle.icon.setAttribute(\"data-icon\", \"upgrades/\" + upgradeId + \".png\");\r\n\r\n            // Description\r\n            handle.elemDescription = makeDiv(handle.elem, null, [\"description\"], \"??\");\r\n            handle.elemRequirements = makeDiv(handle.elem, null, [\"requirements\"]);\r\n\r\n            // Buy button\r\n            handle.buyButton = document.createElement(\"button\");\r\n            handle.buyButton.classList.add(\"buy\", \"styledButton\");\r\n            handle.buyButton.innerText = T.ingame.shop.buttonUnlock;\r\n            handle.elem.appendChild(handle.buyButton);\r\n\r\n            this.trackClicks(handle.buyButton, () => this.tryUnlockNextTier(upgradeId));\r\n\r\n            // Assign handle\r\n            this.upgradeToElements[upgradeId] = handle;\r\n        }\r\n    }\r\n\r\n    rerenderFull() {\r\n        for (const upgradeId in this.upgradeToElements) {\r\n            const handle = this.upgradeToElements[upgradeId];\r\n            const { tiers } = UPGRADES[upgradeId];\r\n\r\n            const currentTier = this.root.hubGoals.getUpgradeLevel(upgradeId);\r\n            const currentTierMultiplier = this.root.hubGoals.upgradeImprovements[upgradeId];\r\n            const tierHandle = tiers[currentTier];\r\n\r\n            // Set tier\r\n            handle.elemTierLabel.innerText = T.ingame.shop.tier.replace(\r\n                \"<x>\",\r\n                \"\" + T.ingame.shop.tierLabels[currentTier]\r\n            );\r\n\r\n            handle.elemTierLabel.setAttribute(\"data-tier\", currentTier);\r\n\r\n            // Cleanup detectors\r\n            for (let i = 0; i < handle.requireIndexToElement.length; ++i) {\r\n                const requiredHandle = handle.requireIndexToElement[i];\r\n                requiredHandle.container.remove();\r\n                requiredHandle.pinDetector.cleanup();\r\n                requiredHandle.infoDetector.cleanup();\r\n            }\r\n\r\n            // Cleanup\r\n            handle.requireIndexToElement = [];\r\n\r\n            handle.elem.classList.toggle(\"maxLevel\", !tierHandle);\r\n\r\n            if (!tierHandle) {\r\n                // Max level\r\n                handle.elemDescription.innerText = T.ingame.shop.maximumLevel.replace(\r\n                    \"<currentMult>\",\r\n                    currentTierMultiplier.toString()\r\n                );\r\n                continue;\r\n            }\r\n\r\n            // Set description\r\n            handle.elemDescription.innerText = T.shopUpgrades[upgradeId].description\r\n                .replace(\"<currentMult>\", currentTierMultiplier.toString())\r\n                .replace(\"<newMult>\", (currentTierMultiplier + tierHandle.improvement).toString())\r\n                // Backwards compatibility\r\n                .replace(\"<gain>\", (tierHandle.improvement * 100.0).toString());\r\n\r\n            tierHandle.required.forEach(({ shape, amount }) => {\r\n                const container = makeDiv(handle.elemRequirements, null, [\"requirement\"]);\r\n\r\n                const shapeDef = this.root.shapeDefinitionMgr.getShapeFromShortKey(shape);\r\n                const shapeCanvas = shapeDef.generateAsCanvas(120);\r\n                shapeCanvas.classList.add();\r\n                container.appendChild(shapeCanvas);\r\n\r\n                const progressContainer = makeDiv(container, null, [\"amount\"]);\r\n                const progressBar = document.createElement(\"label\");\r\n                progressBar.classList.add(\"progressBar\");\r\n                progressContainer.appendChild(progressBar);\r\n\r\n                const progressLabel = document.createElement(\"label\");\r\n                progressContainer.appendChild(progressLabel);\r\n\r\n                const pinButton = document.createElement(\"button\");\r\n                pinButton.classList.add(\"pin\");\r\n                container.appendChild(pinButton);\r\n\r\n                const viewInfoButton = document.createElement(\"button\");\r\n                viewInfoButton.classList.add(\"showInfo\");\r\n                container.appendChild(viewInfoButton);\r\n\r\n                const currentGoalShape = this.root.hubGoals.currentGoal.definition.getHash();\r\n                if (shape === currentGoalShape) {\r\n                    pinButton.classList.add(\"isGoal\");\r\n                } else if (this.root.hud.parts.pinnedShapes.isShapePinned(shape)) {\r\n                    pinButton.classList.add(\"alreadyPinned\");\r\n                }\r\n\r\n                const pinDetector = new ClickDetector(pinButton, {\r\n                    consumeEvents: true,\r\n                    preventDefault: true,\r\n                });\r\n                pinDetector.click.add(() => {\r\n                    if (this.root.hud.parts.pinnedShapes.isShapePinned(shape)) {\r\n                        this.root.hud.signals.shapeUnpinRequested.dispatch(shape);\r\n                        pinButton.classList.add(\"unpinned\");\r\n                        pinButton.classList.remove(\"pinned\", \"alreadyPinned\");\r\n                    } else {\r\n                        this.root.hud.signals.shapePinRequested.dispatch(shapeDef);\r\n                        pinButton.classList.add(\"pinned\");\r\n                        pinButton.classList.remove(\"unpinned\");\r\n                    }\r\n                });\r\n\r\n                const infoDetector = new ClickDetector(viewInfoButton, {\r\n                    consumeEvents: true,\r\n                    preventDefault: true,\r\n                });\r\n                infoDetector.click.add(() =>\r\n                    this.root.hud.signals.viewShapeDetailsRequested.dispatch(shapeDef)\r\n                );\r\n\r\n                handle.requireIndexToElement.push({\r\n                    container,\r\n                    progressLabel,\r\n                    progressBar,\r\n                    definition: shapeDef,\r\n                    required: amount,\r\n                    pinDetector,\r\n                    infoDetector,\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    renderCountsAndStatus() {\r\n        for (const upgradeId in this.upgradeToElements) {\r\n            const handle = this.upgradeToElements[upgradeId];\r\n            for (let i = 0; i < handle.requireIndexToElement.length; ++i) {\r\n                const { progressLabel, progressBar, definition, required } = handle.requireIndexToElement[i];\r\n\r\n                const haveAmount = this.root.hubGoals.getShapesStored(definition);\r\n                const progress = Math.min(haveAmount / required, 1.0);\r\n\r\n                progressLabel.innerText = formatBigNumber(haveAmount) + \" / \" + formatBigNumber(required);\r\n                progressBar.style.width = progress * 100.0 + \"%\";\r\n                progressBar.classList.toggle(\"complete\", progress >= 1.0);\r\n            }\r\n\r\n            handle.buyButton.classList.toggle(\"buyable\", this.root.hubGoals.canUnlockUpgrade(upgradeId));\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this.domAttach = new DynamicDomAttach(this.root, this.background, {\r\n            attachClass: \"visible\",\r\n        });\r\n\r\n        this.inputReciever = new InputReceiver(\"shop\");\r\n        this.keyActionMapper = new KeyActionMapper(this.root, this.inputReciever);\r\n\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.close, this);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.ingame.menuClose).add(this.close, this);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.ingame.menuOpenShop).add(this.close, this);\r\n\r\n        this.close();\r\n\r\n        this.rerenderFull();\r\n        this.root.signals.upgradePurchased.add(this.rerenderFull, this);\r\n    }\r\n\r\n    cleanup() {\r\n        document.body.classList.remove(\"ingameDialogOpen\");\r\n\r\n        // Cleanup detectors\r\n        for (const upgradeId in this.upgradeToElements) {\r\n            const handle = this.upgradeToElements[upgradeId];\r\n            for (let i = 0; i < handle.requireIndexToElement.length; ++i) {\r\n                const requiredHandle = handle.requireIndexToElement[i];\r\n                requiredHandle.container.remove();\r\n                requiredHandle.pinDetector.cleanup();\r\n                requiredHandle.infoDetector.cleanup();\r\n            }\r\n            handle.requireIndexToElement = [];\r\n        }\r\n    }\r\n\r\n    show() {\r\n        this.visible = true;\r\n        document.body.classList.add(\"ingameDialogOpen\");\r\n        // this.background.classList.add(\"visible\");\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n        this.rerenderFull();\r\n    }\r\n\r\n    close() {\r\n        this.visible = false;\r\n        document.body.classList.remove(\"ingameDialogOpen\");\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n        if (this.visible) {\r\n            this.renderCountsAndStatus();\r\n        }\r\n    }\r\n\r\n    tryUnlockNextTier(upgradeId) {\r\n        // Nothing\r\n        this.root.hubGoals.tryUnlockUpgrade(upgradeId);\r\n    }\r\n}\r\n","import { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { makeButton, makeDiv, removeAllChildren, capitalizeFirstLetter } from \"../../../core/utils\";\r\nimport { KeyActionMapper, KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { enumAnalyticsDataSource } from \"../../production_analytics\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { enumDisplayMode, HUDShapeStatisticsHandle } from \"./statistics_handle\";\r\nimport { T } from \"../../../translations\";\r\n\r\nexport class HUDStatistics extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.background = makeDiv(parent, \"ingame_HUD_Statistics\", [\"ingameDialog\"]);\r\n\r\n        // DIALOG Inner / Wrapper\r\n        this.dialogInner = makeDiv(this.background, null, [\"dialogInner\"]);\r\n        this.title = makeDiv(this.dialogInner, null, [\"title\"], T.ingame.statistics.title);\r\n        this.closeButton = makeDiv(this.title, null, [\"closeButton\"]);\r\n        this.trackClicks(this.closeButton, this.close);\r\n\r\n        this.filterHeader = makeDiv(this.dialogInner, null, [\"filterHeader\"]);\r\n        this.sourceExplanation = makeDiv(this.dialogInner, null, [\"sourceExplanation\"]);\r\n\r\n        this.filtersDataSource = makeDiv(this.filterHeader, null, [\"filtersDataSource\"]);\r\n        this.filtersDisplayMode = makeDiv(this.filterHeader, null, [\"filtersDisplayMode\"]);\r\n\r\n        const dataSources = [\r\n            enumAnalyticsDataSource.produced,\r\n            enumAnalyticsDataSource.delivered,\r\n            enumAnalyticsDataSource.stored,\r\n        ];\r\n\r\n        for (let i = 0; i < dataSources.length; ++i) {\r\n            const dataSource = dataSources[i];\r\n            const button = makeButton(\r\n                this.filtersDataSource,\r\n                [\"mode\" + capitalizeFirstLetter(dataSource)],\r\n                T.ingame.statistics.dataSources[dataSource].title\r\n            );\r\n            this.trackClicks(button, () => this.setDataSource(dataSource));\r\n        }\r\n\r\n        const buttonDisplayDetailed = makeButton(this.filtersDisplayMode, [\"displayDetailed\"]);\r\n        const buttonDisplayIcons = makeButton(this.filtersDisplayMode, [\"displayIcons\"]);\r\n\r\n        this.trackClicks(buttonDisplayIcons, () => this.setDisplayMode(enumDisplayMode.icons));\r\n        this.trackClicks(buttonDisplayDetailed, () => this.setDisplayMode(enumDisplayMode.detailed));\r\n\r\n        this.contentDiv = makeDiv(this.dialogInner, null, [\"content\"]);\r\n    }\r\n\r\n    /**\r\n     * @param {enumAnalyticsDataSource} source\r\n     */\r\n    setDataSource(source) {\r\n        this.dataSource = source;\r\n        this.dialogInner.setAttribute(\"data-datasource\", source);\r\n\r\n        this.sourceExplanation.innerText = T.ingame.statistics.dataSources[source].description;\r\n        if (this.visible) {\r\n            this.rerenderFull();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {enumDisplayMode} mode\r\n     */\r\n    setDisplayMode(mode) {\r\n        this.displayMode = mode;\r\n        this.dialogInner.setAttribute(\"data-displaymode\", mode);\r\n        if (this.visible) {\r\n            this.rerenderFull();\r\n        }\r\n    }\r\n\r\n    initialize() {\r\n        this.domAttach = new DynamicDomAttach(this.root, this.background, {\r\n            attachClass: \"visible\",\r\n        });\r\n\r\n        this.inputReciever = new InputReceiver(\"statistics\");\r\n        this.keyActionMapper = new KeyActionMapper(this.root, this.inputReciever);\r\n\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.close, this);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.ingame.menuClose).add(this.close, this);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.ingame.menuOpenStats).add(this.close, this);\r\n\r\n        /** @type {Object.<string, HUDShapeStatisticsHandle>} */\r\n        this.activeHandles = {};\r\n\r\n        this.setDataSource(enumAnalyticsDataSource.produced);\r\n        this.setDisplayMode(enumDisplayMode.detailed);\r\n\r\n        this.intersectionObserver = new IntersectionObserver(this.intersectionCallback.bind(this), {\r\n            root: this.contentDiv,\r\n        });\r\n\r\n        this.lastFullRerender = 0;\r\n\r\n        this.close();\r\n        this.rerenderFull();\r\n    }\r\n\r\n    intersectionCallback(entries) {\r\n        for (let i = 0; i < entries.length; ++i) {\r\n            const entry = entries[i];\r\n            const handle = this.activeHandles[entry.target.getAttribute(\"data-shape-key\")];\r\n            if (handle) {\r\n                handle.setVisible(entry.intersectionRatio > 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    cleanup() {\r\n        document.body.classList.remove(\"ingameDialogOpen\");\r\n    }\r\n\r\n    show() {\r\n        this.visible = true;\r\n        document.body.classList.add(\"ingameDialogOpen\");\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n        this.rerenderFull();\r\n        this.update();\r\n    }\r\n\r\n    close() {\r\n        this.visible = false;\r\n        document.body.classList.remove(\"ingameDialogOpen\");\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n        if (this.visible) {\r\n            if (this.root.time.now() - this.lastFullRerender > 1) {\r\n                this.lastFullRerender = this.root.time.now();\r\n                this.lastPartialRerender = this.root.time.now();\r\n                this.rerenderFull();\r\n            }\r\n            this.rerenderPartial();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs a partial rerender, only updating graphs and counts\r\n     */\r\n    rerenderPartial() {\r\n        for (const key in this.activeHandles) {\r\n            const handle = this.activeHandles[key];\r\n            handle.update(this.displayMode, this.dataSource);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs a full rerender, regenerating everything\r\n     */\r\n    rerenderFull() {\r\n        for (const key in this.activeHandles) {\r\n            this.activeHandles[key].detach();\r\n        }\r\n        removeAllChildren(this.contentDiv);\r\n\r\n        // Now, attach new ones\r\n\r\n        let entries = null;\r\n        switch (this.dataSource) {\r\n            case enumAnalyticsDataSource.stored: {\r\n                entries = Object.entries(this.root.hubGoals.storedShapes);\r\n                break;\r\n            }\r\n            case enumAnalyticsDataSource.produced:\r\n            case enumAnalyticsDataSource.delivered: {\r\n                entries = Object.entries(this.root.productionAnalytics.getCurrentShapeRates(this.dataSource));\r\n                break;\r\n            }\r\n        }\r\n\r\n        entries.sort((a, b) => b[1] - a[1]);\r\n\r\n        let rendered = new Set();\r\n\r\n        for (let i = 0; i < Math.min(entries.length, 200); ++i) {\r\n            const entry = entries[i];\r\n            const shapeKey = entry[0];\r\n\r\n            let handle = this.activeHandles[shapeKey];\r\n            if (!handle) {\r\n                const definition = this.root.shapeDefinitionMgr.getShapeFromShortKey(shapeKey);\r\n                handle = this.activeHandles[shapeKey] = new HUDShapeStatisticsHandle(\r\n                    this.root,\r\n                    definition,\r\n                    this.intersectionObserver\r\n                );\r\n            }\r\n\r\n            rendered.add(shapeKey);\r\n            handle.attach(this.contentDiv);\r\n        }\r\n\r\n        for (const key in this.activeHandles) {\r\n            if (!rendered.has(key)) {\r\n                this.activeHandles[key].destroy();\r\n                delete this.activeHandles[key];\r\n            }\r\n        }\r\n\r\n        if (entries.length === 0) {\r\n            this.contentDiv.innerHTML = `\r\n            <strong class=\"noEntries\">${T.ingame.statistics.noShapesProduced}</strong>`;\r\n        }\r\n\r\n        this.contentDiv.classList.toggle(\"hasEntries\", entries.length > 0);\r\n    }\r\n}\r\n","import { makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { clamp, formatBigNumber, round2Digits } from \"../../../core/utils\";\r\nimport { T } from \"../../../translations\";\r\nimport { enumAnalyticsDataSource } from \"../../production_analytics\";\r\nimport { GameRoot } from \"../../root\";\r\nimport { ShapeDefinition } from \"../../shape_definition\";\r\n\r\n/** @enum {string} */\r\nexport const enumDisplayMode = {\r\n    icons: \"icons\",\r\n    detailed: \"detailed\",\r\n};\r\n\r\n/**\r\n * Simple wrapper for a shape definition within the shape statistics\r\n */\r\nexport class HUDShapeStatisticsHandle {\r\n    /**\r\n     * @param {GameRoot} root\r\n     * @param {ShapeDefinition} definition\r\n     * @param {IntersectionObserver} intersectionObserver\r\n     */\r\n    constructor(root, definition, intersectionObserver) {\r\n        this.definition = definition;\r\n        this.root = root;\r\n        this.intersectionObserver = intersectionObserver;\r\n\r\n        this.visible = false;\r\n    }\r\n\r\n    initElement() {\r\n        this.element = document.createElement(\"div\");\r\n        this.element.setAttribute(\"data-shape-key\", this.definition.getHash());\r\n\r\n        this.counter = document.createElement(\"span\");\r\n        this.counter.classList.add(\"counter\");\r\n        this.element.appendChild(this.counter);\r\n    }\r\n\r\n    /**\r\n     * Sets whether the shape handle is visible currently\r\n     * @param {boolean} visibility\r\n     */\r\n    setVisible(visibility) {\r\n        if (visibility === this.visible) {\r\n            return;\r\n        }\r\n        this.visible = visibility;\r\n        if (visibility) {\r\n            if (!this.shapeCanvas) {\r\n                // Create elements\r\n                this.shapeCanvas = this.definition.generateAsCanvas(100);\r\n                this.shapeCanvas.classList.add(\"icon\");\r\n                this.element.appendChild(this.shapeCanvas);\r\n            }\r\n        } else {\r\n            // Drop elements\r\n            this.cleanupChildElements();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {enumDisplayMode} displayMode\r\n     * @param {enumAnalyticsDataSource} dataSource\r\n     * @param {boolean=} forced\r\n     */\r\n    update(displayMode, dataSource, forced = false) {\r\n        if (!this.element) {\r\n            return;\r\n        }\r\n        if (!this.visible && !forced) {\r\n            return;\r\n        }\r\n\r\n        switch (dataSource) {\r\n            case enumAnalyticsDataSource.stored: {\r\n                this.counter.innerText = formatBigNumber(\r\n                    this.root.hubGoals.storedShapes[this.definition.getHash()] || 0\r\n                );\r\n                break;\r\n            }\r\n            case enumAnalyticsDataSource.delivered:\r\n            case enumAnalyticsDataSource.produced: {\r\n                let rate =\r\n                    (this.root.productionAnalytics.getCurrentShapeRate(dataSource, this.definition) /\r\n                        globalConfig.analyticsSliceDurationSeconds) *\r\n                    60;\r\n                this.counter.innerText = T.ingame.statistics.shapesPerMinute.replace(\r\n                    \"<shapes>\",\r\n                    formatBigNumber(rate)\r\n                );\r\n\r\n                if (G_IS_DEV && globalConfig.debug.detailedStatistics) {\r\n                    this.counter.innerText = \"\" + round2Digits(rate / 60) + \" /s\";\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (displayMode === enumDisplayMode.detailed) {\r\n            const graphDpi = globalConfig.statisticsGraphDpi;\r\n\r\n            const w = 270;\r\n            const h = 40;\r\n\r\n            if (!this.graphCanvas) {\r\n                const [canvas, context] = makeOffscreenBuffer(w * graphDpi, h * graphDpi, {\r\n                    smooth: true,\r\n                    reusable: false,\r\n                    label: \"statgraph-\" + this.definition.getHash(),\r\n                });\r\n                context.scale(graphDpi, graphDpi);\r\n                canvas.classList.add(\"graph\");\r\n                this.graphCanvas = canvas;\r\n                this.graphContext = context;\r\n                this.element.appendChild(this.graphCanvas);\r\n            }\r\n\r\n            this.graphContext.clearRect(0, 0, w, h);\r\n\r\n            this.graphContext.fillStyle = \"#bee0db\";\r\n            this.graphContext.strokeStyle = \"#66ccbc\";\r\n            this.graphContext.lineWidth = 1.5;\r\n\r\n            const sliceWidth = w / (globalConfig.statisticsGraphSlices - 1);\r\n\r\n            let values = [];\r\n            let maxValue = 1;\r\n\r\n            for (let i = 0; i < globalConfig.statisticsGraphSlices - 2; ++i) {\r\n                const value = this.root.productionAnalytics.getPastShapeRate(\r\n                    dataSource,\r\n                    this.definition,\r\n                    globalConfig.statisticsGraphSlices - i - 2\r\n                );\r\n                if (value > maxValue) {\r\n                    maxValue = value;\r\n                }\r\n                values.push(value);\r\n            }\r\n\r\n            this.graphContext.beginPath();\r\n            this.graphContext.moveTo(0.75, h + 5);\r\n            for (let i = 0; i < values.length; ++i) {\r\n                const yValue = clamp((1 - values[i] / maxValue) * h, 0.75, h - 0.75);\r\n                const x = i * sliceWidth;\r\n                if (i === 0) {\r\n                    this.graphContext.lineTo(0.75, yValue);\r\n                }\r\n                this.graphContext.lineTo(x, yValue);\r\n                if (i === values.length - 1) {\r\n                    this.graphContext.lineTo(w + 100, yValue);\r\n                    this.graphContext.lineTo(w + 100, h + 5);\r\n                }\r\n            }\r\n\r\n            this.graphContext.closePath();\r\n            this.graphContext.stroke();\r\n            this.graphContext.fill();\r\n        } else {\r\n            if (this.graphCanvas) {\r\n                this.graphCanvas.remove();\r\n                delete this.graphCanvas;\r\n                delete this.graphContext;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attaches the handle\r\n     * @param {HTMLElement} parent\r\n     */\r\n    attach(parent) {\r\n        if (!this.element) {\r\n            this.initElement();\r\n        }\r\n        if (this.element.parentElement !== parent) {\r\n            parent.appendChild(this.element);\r\n            this.intersectionObserver.observe(this.element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detaches the handle\r\n     */\r\n    detach() {\r\n        if (this.element && this.element.parentElement) {\r\n            this.element.parentElement.removeChild(this.element);\r\n            this.intersectionObserver.unobserve(this.element);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleans up all child elements\r\n     */\r\n    cleanupChildElements() {\r\n        if (this.shapeCanvas) {\r\n            this.shapeCanvas.remove();\r\n            delete this.shapeCanvas;\r\n        }\r\n\r\n        if (this.graphCanvas) {\r\n            this.graphCanvas.remove();\r\n            delete this.graphCanvas;\r\n            delete this.graphContext;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroys the handle\r\n     */\r\n    destroy() {\r\n        this.cleanupChildElements();\r\n        if (this.element) {\r\n            this.intersectionObserver.unobserve(this.element);\r\n            this.element.remove();\r\n            delete this.element;\r\n\r\n            // Remove handle\r\n            delete this.counter;\r\n        }\r\n    }\r\n}\r\n","import { InputReceiver } from \"../../../core/input_receiver\";\r\nimport { TrackedState } from \"../../../core/tracked_state\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { KeyActionMapper, KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { T } from \"../../../translations\";\r\n\r\nconst tutorialVideos = [2, 3, 4, 5, 6, 7, 9, 10, 11];\r\n\r\nexport class HUDPartTutorialHints extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(\r\n            parent,\r\n            \"ingame_HUD_TutorialHints\",\r\n            [],\r\n            `\r\n        <div class=\"header\">\r\n            <span>${T.ingame.tutorialHints.title}</span>\r\n            <button class=\"styledButton toggleHint\">\r\n                <span class=\"show\">${T.ingame.tutorialHints.showHint}</span>\r\n                <span class=\"hide\">${T.ingame.tutorialHints.hideHint}</span>\r\n            </button>\r\n        </div>\r\n\r\n        <video autoplay muted loop class=\"fullscreenBackgroundVideo\">\r\n            <source type=\"video/webm\">\r\n        </video>\r\n        `\r\n        );\r\n\r\n        this.videoElement = this.element.querySelector(\"video\");\r\n    }\r\n\r\n    shouldPauseGame() {\r\n        return this.enlarged;\r\n    }\r\n\r\n    initialize() {\r\n        this.trackClicks(this.element.querySelector(\".toggleHint\"), this.toggleHintEnlarged);\r\n\r\n        this.videoAttach = new DynamicDomAttach(this.root, this.videoElement, {\r\n            timeToKeepSeconds: 0.3,\r\n        });\r\n\r\n        this.videoAttach.update(false);\r\n        this.enlarged = false;\r\n\r\n        this.inputReciever = new InputReceiver(\"tutorial_hints\");\r\n        this.keyActionMapper = new KeyActionMapper(this.root, this.inputReciever);\r\n        this.keyActionMapper.getBinding(KEYMAPPINGS.general.back).add(this.close, this);\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element);\r\n\r\n        this.currentShownLevel = new TrackedState(this.updateVideoUrl, this);\r\n    }\r\n\r\n    updateVideoUrl(level) {\r\n        if (tutorialVideos.indexOf(level) < 0) {\r\n            this.videoElement.querySelector(\"source\").setAttribute(\"src\", \"\");\r\n            this.videoElement.pause();\r\n        } else {\r\n            this.videoElement\r\n                .querySelector(\"source\")\r\n                .setAttribute(\"src\", \"https://static.shapez.io/tutorial_videos/level_\" + level + \".webm\");\r\n            this.videoElement.currentTime = 0;\r\n            this.videoElement.load();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.enlarged = false;\r\n        document.body.classList.remove(\"ingameDialogOpen\");\r\n        this.element.classList.remove(\"enlarged\", \"noBlur\");\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        this.update();\r\n    }\r\n\r\n    show() {\r\n        this.root.app.analytics.trackUiClick(\"tutorial_hint_show\");\r\n        this.root.app.analytics.trackUiClick(\"tutorial_hint_show_lvl_\" + this.root.hubGoals.level);\r\n\r\n        document.body.classList.add(\"ingameDialogOpen\");\r\n        this.element.classList.add(\"enlarged\", \"noBlur\");\r\n        this.enlarged = true;\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n        this.update();\r\n\r\n        this.videoElement.currentTime = 0;\r\n        this.videoElement.play();\r\n    }\r\n\r\n    update() {\r\n        this.videoAttach.update(this.enlarged);\r\n\r\n        this.currentShownLevel.set(this.root.hubGoals.level);\r\n\r\n        const tutorialVisible = tutorialVideos.indexOf(this.root.hubGoals.level) >= 0;\r\n        this.domAttach.update(tutorialVisible);\r\n    }\r\n\r\n    toggleHintEnlarged() {\r\n        if (this.enlarged) {\r\n            this.close();\r\n        } else {\r\n            this.show();\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../../../core/config\";\r\nimport { gMetaBuildingRegistry } from \"../../../core/global_registries\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { SOUNDS } from \"../../../platform/sound\";\r\nimport { T } from \"../../../translations\";\r\nimport { defaultBuildingVariant } from \"../../meta_building\";\r\nimport { enumHubGoalRewards } from \"../../tutorial_goals\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { enumHubGoalRewardsToContentUnlocked } from \"../../tutorial_goals_mappings\";\r\nimport { InputReceiver } from \"../../../core/input_receiver\";\r\n\r\nexport class HUDUnlockNotification extends BaseHUDPart {\r\n    initialize() {\r\n        this.visible = false;\r\n\r\n        this.domAttach = new DynamicDomAttach(this.root, this.element, {\r\n            timeToKeepSeconds: 0,\r\n        });\r\n\r\n        if (!(G_IS_DEV && globalConfig.debug.disableUnlockDialog)) {\r\n            this.root.signals.storyGoalCompleted.add(this.showForLevel, this);\r\n        }\r\n\r\n        this.buttonShowTimeout = null;\r\n    }\r\n\r\n    createElements(parent) {\r\n        this.inputReciever = new InputReceiver(\"unlock-notification\");\r\n\r\n        this.element = makeDiv(parent, \"ingame_HUD_UnlockNotification\", [\"noBlur\"]);\r\n\r\n        const dialog = makeDiv(this.element, null, [\"dialog\"]);\r\n\r\n        this.elemTitle = makeDiv(dialog, null, [\"title\"]);\r\n        this.elemSubTitle = makeDiv(dialog, null, [\"subTitle\"], T.ingame.levelCompleteNotification.completed);\r\n\r\n        this.elemContents = makeDiv(dialog, null, [\"contents\"]);\r\n\r\n        this.btnClose = document.createElement(\"button\");\r\n        this.btnClose.classList.add(\"close\", \"styledButton\");\r\n        this.btnClose.innerText = T.ingame.levelCompleteNotification.buttonNextLevel;\r\n        dialog.appendChild(this.btnClose);\r\n\r\n        this.trackClicks(this.btnClose, this.requestClose);\r\n    }\r\n\r\n    /**\r\n     * @param {number} level\r\n     * @param {enumHubGoalRewards} reward\r\n     */\r\n    showForLevel(level, reward) {\r\n        this.root.app.inputMgr.makeSureAttachedAndOnTop(this.inputReciever);\r\n        this.elemTitle.innerText = T.ingame.levelCompleteNotification.levelTitle.replace(\r\n            \"<level>\",\r\n            (\"\" + level).padStart(2, \"0\")\r\n        );\r\n\r\n        const rewardName = T.storyRewards[reward].title;\r\n\r\n        let html = `\r\n        <div class=\"rewardName\">\r\n            ${T.ingame.levelCompleteNotification.unlockText.replace(\"<reward>\", rewardName)}\r\n        </div>\r\n        \r\n        <div class=\"rewardDesc\">\r\n            ${T.storyRewards[reward].desc}\r\n        </div>\r\n\r\n        `;\r\n\r\n        html += \"<div class='images'>\";\r\n        const gained = enumHubGoalRewardsToContentUnlocked[reward];\r\n        if (gained) {\r\n            gained.forEach(([metaBuildingClass, variant]) => {\r\n                const metaBuilding = gMetaBuildingRegistry.findByClass(metaBuildingClass);\r\n                html += `<div class=\"buildingExplanation\" data-icon=\"building_tutorials/${\r\n                    metaBuilding.getId() + (variant === defaultBuildingVariant ? \"\" : \"-\" + variant)\r\n                }.png\"></div>`;\r\n            });\r\n        }\r\n        html += \"</div>\";\r\n\r\n        this.elemContents.innerHTML = html;\r\n        this.visible = true;\r\n        this.root.soundProxy.playUi(SOUNDS.levelComplete);\r\n\r\n        if (this.buttonShowTimeout) {\r\n            clearTimeout(this.buttonShowTimeout);\r\n        }\r\n\r\n        this.element.querySelector(\"button.close\").classList.remove(\"unlocked\");\r\n\r\n        if (this.root.app.settings.getAllSettings().offerHints) {\r\n            this.buttonShowTimeout = setTimeout(\r\n                () => this.element.querySelector(\"button.close\").classList.add(\"unlocked\"),\r\n                G_IS_DEV ? 100 : 5000\r\n            );\r\n        } else {\r\n            this.element.querySelector(\"button.close\").classList.add(\"unlocked\");\r\n        }\r\n    }\r\n\r\n    cleanup() {\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        if (this.buttonShowTimeout) {\r\n            clearTimeout(this.buttonShowTimeout);\r\n            this.buttonShowTimeout = null;\r\n        }\r\n    }\r\n\r\n    requestClose() {\r\n        this.root.app.adProvider.showVideoAd().then(() => {\r\n            this.close();\r\n\r\n            if (!this.root.app.settings.getAllSettings().offerHints) {\r\n                return;\r\n            }\r\n\r\n            if (this.root.hubGoals.level === 3) {\r\n                const { showUpgrades } = this.root.hud.parts.dialogs.showInfo(\r\n                    T.dialogs.upgradesIntroduction.title,\r\n                    T.dialogs.upgradesIntroduction.desc,\r\n                    [\"showUpgrades:good:timeout\"]\r\n                );\r\n                showUpgrades.add(() => this.root.hud.parts.shop.show());\r\n            }\r\n\r\n            if (this.root.hubGoals.level === 5) {\r\n                const { showKeybindings } = this.root.hud.parts.dialogs.showInfo(\r\n                    T.dialogs.keybindingsIntroduction.title,\r\n                    T.dialogs.keybindingsIntroduction.desc,\r\n                    [\"showKeybindings:misc\", \"ok:good:timeout\"]\r\n                );\r\n                showKeybindings.add(() => this.root.gameState.goToKeybindings());\r\n            }\r\n        });\r\n    }\r\n\r\n    close() {\r\n        this.root.app.inputMgr.makeSureDetached(this.inputReciever);\r\n        if (this.buttonShowTimeout) {\r\n            clearTimeout(this.buttonShowTimeout);\r\n            this.buttonShowTimeout = null;\r\n        }\r\n        this.visible = false;\r\n    }\r\n\r\n    update() {\r\n        this.domAttach.update(this.visible);\r\n        if (!this.visible && this.buttonShowTimeout) {\r\n            clearTimeout(this.buttonShowTimeout);\r\n            this.buttonShowTimeout = null;\r\n        }\r\n    }\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\n\r\nexport class HUDVignetteOverlay extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_VignetteOverlay\");\r\n    }\r\n\r\n    initialize() {}\r\n}\r\n","import { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { makeDiv } from \"../../../core/utils\";\r\nimport { THIRDPARTY_URLS } from \"../../../core/config\";\r\nimport { T } from \"../../../translations\";\r\n\r\nexport class HUDWatermark extends BaseHUDPart {\r\n    createElements(parent) {\r\n        this.element = makeDiv(parent, \"ingame_HUD_Watermark\");\r\n    }\r\n\r\n    initialize() {\r\n        this.trackClicks(this.element, this.onWatermarkClick);\r\n    }\r\n\r\n    onWatermarkClick() {\r\n        this.root.app.analytics.trackUiClick(\"watermark_click_2\");\r\n        this.root.app.platformWrapper.openExternalLink(THIRDPARTY_URLS.standaloneStorePage);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawOverlays(parameters) {\r\n        const w = this.root.gameWidth;\r\n        const x = 280 * this.root.app.getEffectiveUiScale();\r\n\r\n        parameters.context.fillStyle = \"#f77\";\r\n        parameters.context.font = \"bold \" + this.root.app.getEffectiveUiScale() * 17 + \"px GameFont\";\r\n        // parameters.context.textAlign = \"center\";\r\n        parameters.context.fillText(\r\n            T.demoBanners.title.toUpperCase(),\r\n            x,\r\n            this.root.app.getEffectiveUiScale() * 27\r\n        );\r\n\r\n        parameters.context.font = \"bold \" + this.root.app.getEffectiveUiScale() * 12 + \"px GameFont\";\r\n        // parameters.context.textAlign = \"center\";\r\n        parameters.context.fillText(T.demoBanners.intro, x, this.root.app.getEffectiveUiScale() * 45);\r\n\r\n        // parameters.context.textAlign = \"left\";\r\n    }\r\n}\r\n","import { makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { globalConfig, IS_DEMO } from \"../../../core/config\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { Loader } from \"../../../core/loader\";\r\nimport { DialogWithForm } from \"../../../core/modal_dialog_elements\";\r\nimport { FormElementInput } from \"../../../core/modal_dialog_forms\";\r\nimport { Rectangle } from \"../../../core/rectangle\";\r\nimport { STOP_PROPAGATION } from \"../../../core/signal\";\r\nimport { arrayDeleteValue, lerp, makeDiv, removeAllChildren, clamp } from \"../../../core/utils\";\r\nimport { Vector } from \"../../../core/vector\";\r\nimport { T } from \"../../../translations\";\r\nimport { enumMouseButton } from \"../../camera\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { DynamicDomAttach } from \"../dynamic_dom_attach\";\r\nimport { enumNotificationType } from \"./notifications\";\r\nimport { ShapeDefinition } from \"../../shape_definition\";\r\n\r\n/** @typedef {{\r\n *   label: string | null,\r\n *   center: { x: number, y: number },\r\n *   zoomLevel: number\r\n * }} Waypoint */\r\n\r\n/**\r\n * Used when a shape icon is rendered instead\r\n */\r\nconst SHAPE_LABEL_PLACEHOLDER = \"      \";\r\n\r\nconst MAX_LABEL_LENGTH = 71;\r\n\r\nexport class HUDWaypoints extends BaseHUDPart {\r\n    /**\r\n     * Creates the overview of waypoints\r\n     * @param {HTMLElement} parent\r\n     */\r\n    createElements(parent) {\r\n        // Create the helper box on the lower right when zooming out\r\n        if (this.root.app.settings.getAllSettings().offerHints) {\r\n            this.hintElement = makeDiv(\r\n                parent,\r\n                \"ingame_HUD_Waypoints_Hint\",\r\n                [],\r\n                `\r\n            <strong class='title'>${T.ingame.waypoints.waypoints}</strong>\r\n            <span class='desc'>${T.ingame.waypoints.description.replace(\r\n                \"<keybinding>\",\r\n                `<code class='keybinding'>${this.root.keyMapper\r\n                    .getBinding(KEYMAPPINGS.navigation.createMarker)\r\n                    .getKeyCodeString()}</code>`\r\n            )}</span>\r\n        `\r\n            );\r\n        }\r\n\r\n        // Create the waypoint list on the upper right\r\n        this.waypointsListElement = makeDiv(parent, \"ingame_HUD_Waypoints\", [], \"Waypoints\");\r\n    }\r\n\r\n    /**\r\n     * Serializes the waypoints\r\n     */\r\n    serialize() {\r\n        return {\r\n            waypoints: this.waypoints,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Deserializes the waypoints\r\n     * @param {{waypoints: Array<Waypoint>}} data\r\n     */\r\n    deserialize(data) {\r\n        if (!data || !data.waypoints || !Array.isArray(data.waypoints)) {\r\n            return \"Invalid waypoints data\";\r\n        }\r\n        this.waypoints = data.waypoints;\r\n        this.rerenderWaypointList();\r\n    }\r\n\r\n    /**\r\n     * Initializes everything\r\n     */\r\n    initialize() {\r\n        // Cache the sprite for the waypoints\r\n        this.waypointSprite = Loader.getSprite(\"sprites/misc/waypoint.png\");\r\n        this.directionIndicatorSprite = Loader.getSprite(\"sprites/misc/hub_direction_indicator.png\");\r\n\r\n        /** @type {Array<Waypoint>}\r\n         */\r\n        this.waypoints = [\r\n            {\r\n                label: null,\r\n                center: { x: 0, y: 0 },\r\n                zoomLevel: 3,\r\n            },\r\n        ];\r\n\r\n        // Create a buffer we can use to measure text\r\n        this.dummyBuffer = makeOffscreenBuffer(1, 1, {\r\n            reusable: false,\r\n            label: \"waypoints-measure-canvas\",\r\n        })[1];\r\n\r\n        // Dynamically attach/detach the lower right hint in the map overview\r\n        if (this.hintElement) {\r\n            this.domAttach = new DynamicDomAttach(this.root, this.hintElement);\r\n        }\r\n\r\n        // Catch mouse and key events\r\n        this.root.camera.downPreHandler.add(this.onMouseDown, this);\r\n        this.root.keyMapper\r\n            .getBinding(KEYMAPPINGS.navigation.createMarker)\r\n            .add(() => this.requestSaveMarker({}));\r\n\r\n        /**\r\n         * Stores at how much opacity the markers should be rendered on the map.\r\n         * This is interpolated over multiple frames so we have some sort of fade effect\r\n         */\r\n        this.currentMarkerOpacity = 1;\r\n        this.currentCompassOpacity = 0;\r\n\r\n        // Create buffer which is used to indicate the hub direction\r\n        const [canvas, context] = makeOffscreenBuffer(48, 48, {\r\n            smooth: true,\r\n            reusable: false,\r\n            label: \"waypoints-compass\",\r\n        });\r\n        this.compassBuffer = { canvas, context };\r\n\r\n        /**\r\n         * Stores a cache from a shape short key to its canvas representation\r\n         */\r\n        this.cachedKeyToCanvas = {};\r\n\r\n        // Initial render\r\n        this.rerenderWaypointList();\r\n    }\r\n\r\n    /**\r\n     * Re-renders the waypoint list to account for changes\r\n     */\r\n    rerenderWaypointList() {\r\n        removeAllChildren(this.waypointsListElement);\r\n        this.cleanupClickDetectors();\r\n\r\n        for (let i = 0; i < this.waypoints.length; ++i) {\r\n            const waypoint = this.waypoints[i];\r\n            const label = this.getWaypointLabel(waypoint);\r\n\r\n            const element = makeDiv(this.waypointsListElement, null, [\"waypoint\"]);\r\n\r\n            if (ShapeDefinition.isValidShortKey(label)) {\r\n                const canvas = this.getWaypointCanvas(waypoint);\r\n                /**\r\n                 * Create a clone of the cached canvas, as calling appendElement when a canvas is\r\n                 * already in the document will move the existing canvas to the new position.\r\n                 */\r\n                const [newCanvas, context] = makeOffscreenBuffer(48, 48, {\r\n                    smooth: true,\r\n                    label: label + \"-waypoint-\" + i,\r\n                });\r\n                context.drawImage(canvas, 0, 0);\r\n                element.appendChild(newCanvas);\r\n                element.classList.add(\"shapeIcon\");\r\n            } else {\r\n                element.innerText = label;\r\n            }\r\n\r\n            if (this.isWaypointDeletable(waypoint)) {\r\n                const editButton = makeDiv(element, null, [\"editButton\"]);\r\n                this.trackClicks(editButton, () => this.requestSaveMarker({ waypoint }));\r\n            }\r\n\r\n            if (!waypoint.label) {\r\n                // This must be the hub label\r\n                element.classList.add(\"hub\");\r\n                element.insertBefore(this.compassBuffer.canvas, element.childNodes[0]);\r\n            }\r\n\r\n            this.trackClicks(element, () => this.moveToWaypoint(waypoint), {\r\n                targetOnly: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Moves the camera to a given waypoint\r\n     * @param {Waypoint} waypoint\r\n     */\r\n    moveToWaypoint(waypoint) {\r\n        this.root.camera.setDesiredCenter(new Vector(waypoint.center.x, waypoint.center.y));\r\n        this.root.camera.setDesiredZoom(waypoint.zoomLevel);\r\n    }\r\n\r\n    /**\r\n     * Deletes a waypoint from the list\r\n     * @param {Waypoint} waypoint\r\n     */\r\n    deleteWaypoint(waypoint) {\r\n        arrayDeleteValue(this.waypoints, waypoint);\r\n        this.rerenderWaypointList();\r\n    }\r\n\r\n    /**\r\n     * Gets the canvas for a given waypoint\r\n     * @param {Waypoint} waypoint\r\n     * @returns {HTMLCanvasElement}\r\n     */\r\n    getWaypointCanvas(waypoint) {\r\n        const key = waypoint.label;\r\n        if (this.cachedKeyToCanvas[key]) {\r\n            return this.cachedKeyToCanvas[key];\r\n        }\r\n\r\n        assert(ShapeDefinition.isValidShortKey(key), \"Invalid short key: \" + key);\r\n        const definition = ShapeDefinition.fromShortKey(key);\r\n        const preRendered = definition.generateAsCanvas(48);\r\n        return (this.cachedKeyToCanvas[key] = preRendered);\r\n    }\r\n\r\n    /**\r\n     * Requests to save a marker at the current camera position. If worldPos is set,\r\n     * uses that position instead.\r\n     * @param {object} param0\r\n     * @param {Vector=} param0.worldPos Override the world pos, otherwise it is the camera position\r\n     * @param {Waypoint=} param0.waypoint Waypoint to be edited. If omitted, create new\r\n     */\r\n    requestSaveMarker({ worldPos = null, waypoint = null }) {\r\n        // Construct dialog with input field\r\n        const markerNameInput = new FormElementInput({\r\n            id: \"markerName\",\r\n            label: null,\r\n            placeholder: \"\",\r\n            defaultValue: waypoint ? waypoint.label : \"\",\r\n            validator: val =>\r\n                val.length > 0 && (val.length < MAX_LABEL_LENGTH || ShapeDefinition.isValidShortKey(val)),\r\n        });\r\n        const dialog = new DialogWithForm({\r\n            app: this.root.app,\r\n            title: waypoint ? T.dialogs.createMarker.titleEdit : T.dialogs.createMarker.title,\r\n            desc: T.dialogs.createMarker.desc,\r\n            formElements: [markerNameInput],\r\n            buttons: waypoint ? [\"delete:bad\", \"cancel\", \"ok:good\"] : [\"cancel\", \"ok:good\"],\r\n        });\r\n        this.root.hud.parts.dialogs.internalShowDialog(dialog);\r\n\r\n        // Edit marker\r\n        if (waypoint) {\r\n            dialog.buttonSignals.ok.add(() => {\r\n                // Actually rename the waypoint\r\n                this.renameWaypoint(waypoint, markerNameInput.getValue());\r\n            });\r\n            dialog.buttonSignals.delete.add(() => {\r\n                // Actually delete the waypoint\r\n                this.deleteWaypoint(waypoint);\r\n            });\r\n        } else {\r\n            // Compute where to create the marker\r\n            const center = worldPos || this.root.camera.center;\r\n\r\n            dialog.buttonSignals.ok.add(() => {\r\n                // Show info that you can have only N markers in the demo,\r\n                // actually show this *after* entering the name so you want the\r\n                // standalone even more (I'm evil :P)\r\n                if (IS_DEMO && this.waypoints.length > 2) {\r\n                    this.root.hud.parts.dialogs.showFeatureRestrictionInfo(\r\n                        \"\",\r\n                        T.dialogs.markerDemoLimit.desc\r\n                    );\r\n                    return;\r\n                }\r\n\r\n                // Actually create the waypoint\r\n                this.addWaypoint(markerNameInput.getValue(), center);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a new waypoint at the given location with the given label\r\n     * @param {string} label\r\n     * @param {Vector} position\r\n     */\r\n    addWaypoint(label, position) {\r\n        this.waypoints.push({\r\n            label,\r\n            center: { x: position.x, y: position.y },\r\n            // Make sure the zoom is *just* a bit above the zoom level where the map overview\r\n            // starts, so you always see all buildings\r\n            zoomLevel: Math.max(this.root.camera.zoomLevel, globalConfig.mapChunkOverviewMinZoom + 0.05),\r\n        });\r\n\r\n        this.sortWaypoints();\r\n\r\n        // Show notification about creation\r\n        this.root.hud.signals.notification.dispatch(\r\n            T.ingame.waypoints.creationSuccessNotification,\r\n            enumNotificationType.success\r\n        );\r\n\r\n        // Re-render the list and thus add it\r\n        this.rerenderWaypointList();\r\n    }\r\n\r\n    /**\r\n     * Renames a waypoint with the given label\r\n     * @param {Waypoint} waypoint\r\n     * @param {string} label\r\n     */\r\n    renameWaypoint(waypoint, label) {\r\n        waypoint.label = label;\r\n\r\n        this.sortWaypoints();\r\n\r\n        // Show notification about renamed\r\n        this.root.hud.signals.notification.dispatch(\r\n            T.ingame.waypoints.creationSuccessNotification,\r\n            enumNotificationType.success\r\n        );\r\n\r\n        // Re-render the list and thus add it\r\n        this.rerenderWaypointList();\r\n    }\r\n\r\n    /**\r\n     * Called every frame to update stuff\r\n     */\r\n    update() {\r\n        if (this.domAttach) {\r\n            this.domAttach.update(this.root.camera.getIsMapOverlayActive());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sort waypoints by name\r\n     */\r\n    sortWaypoints() {\r\n        this.waypoints.sort((a, b) => {\r\n            if (!a.label) {\r\n                return -1;\r\n            }\r\n            if (!b.label) {\r\n                return 1;\r\n            }\r\n            return this.getWaypointLabel(a)\r\n                .padEnd(MAX_LABEL_LENGTH, \"0\")\r\n                .localeCompare(this.getWaypointLabel(b).padEnd(MAX_LABEL_LENGTH, \"0\"));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns the label for a given waypoint\r\n     * @param {Waypoint} waypoint\r\n     * @returns {string}\r\n     */\r\n    getWaypointLabel(waypoint) {\r\n        return waypoint.label || T.ingame.waypoints.hub;\r\n    }\r\n\r\n    /**\r\n     * Returns if a waypoint is deletable\r\n     * @param {Waypoint} waypoint\r\n     * @returns {boolean}\r\n     */\r\n    isWaypointDeletable(waypoint) {\r\n        return waypoint.label !== null;\r\n    }\r\n\r\n    /**\r\n     * Finds the currently intersected waypoint on the map overview under\r\n     * the cursor.\r\n     *\r\n     * @returns {Waypoint | null}\r\n     */\r\n    findCurrentIntersectedWaypoint() {\r\n        const mousePos = this.root.app.mousePosition;\r\n        if (!mousePos) {\r\n            return;\r\n        }\r\n\r\n        if (!this.root.camera.getIsMapOverlayActive()) {\r\n            return;\r\n        }\r\n\r\n        const scale = this.root.app.getEffectiveUiScale();\r\n\r\n        this.dummyBuffer.font = \"bold \" + 12 * scale + \"px GameFont\";\r\n\r\n        for (let i = 0; i < this.waypoints.length; ++i) {\r\n            const waypoint = this.waypoints[i];\r\n            const screenPos = this.root.camera.worldToScreen(\r\n                new Vector(waypoint.center.x, waypoint.center.y)\r\n            );\r\n\r\n            let label = this.getWaypointLabel(waypoint);\r\n\r\n            // Special case for icons\r\n            if (ShapeDefinition.isValidShortKey(label)) {\r\n                label = SHAPE_LABEL_PLACEHOLDER;\r\n            }\r\n\r\n            const intersectionRect = new Rectangle(\r\n                screenPos.x - 7 * scale,\r\n                screenPos.y - 12 * scale,\r\n                15 * scale + this.dummyBuffer.measureText(label).width,\r\n                15 * scale\r\n            );\r\n            if (intersectionRect.containsPoint(mousePos.x, mousePos.y)) {\r\n                return waypoint;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Mouse-Down handler\r\n     * @param {Vector} pos\r\n     * @param {enumMouseButton} button\r\n     */\r\n    onMouseDown(pos, button) {\r\n        const waypoint = this.findCurrentIntersectedWaypoint();\r\n        if (waypoint) {\r\n            if (button === enumMouseButton.left) {\r\n                this.root.soundProxy.playUiClick();\r\n                this.moveToWaypoint(waypoint);\r\n            } else if (button === enumMouseButton.right) {\r\n                if (this.isWaypointDeletable(waypoint)) {\r\n                    this.root.soundProxy.playUiClick();\r\n                    this.requestSaveMarker({ waypoint });\r\n                } else {\r\n                    this.root.soundProxy.playUiError();\r\n                }\r\n            }\r\n\r\n            return STOP_PROPAGATION;\r\n        } else {\r\n            // Allow right click to create a marker\r\n            if (button === enumMouseButton.right) {\r\n                if (this.root.camera.getIsMapOverlayActive()) {\r\n                    const worldPos = this.root.camera.screenToWorld(pos);\r\n                    this.requestSaveMarker({ worldPos });\r\n                    return STOP_PROPAGATION;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rerenders the compass\r\n     */\r\n    rerenderWaypointsCompass() {\r\n        const context = this.compassBuffer.context;\r\n        const dims = 48;\r\n        context.clearRect(0, 0, dims, dims);\r\n        const indicatorSize = 30;\r\n\r\n        const cameraPos = this.root.camera.center;\r\n\r\n        const distanceToHub = cameraPos.length();\r\n        const compassVisible = distanceToHub > (10 * globalConfig.tileSize) / this.root.camera.zoomLevel;\r\n        const targetCompassAlpha = compassVisible ? 1 : 0;\r\n        this.currentCompassOpacity = lerp(this.currentCompassOpacity, targetCompassAlpha, 0.08);\r\n\r\n        if (this.currentCompassOpacity > 0.01) {\r\n            context.globalAlpha = this.currentCompassOpacity;\r\n            const angle = cameraPos.angle() + Math.radians(45) + Math.PI / 2;\r\n            context.translate(dims / 2, dims / 2);\r\n            context.rotate(angle);\r\n            this.directionIndicatorSprite.drawCentered(context, 0, 0, indicatorSize);\r\n            context.rotate(-angle);\r\n            context.translate(-dims / 2, -dims / 2);\r\n            context.globalAlpha = 1;\r\n        }\r\n\r\n        const iconOpacity = 1 - this.currentCompassOpacity;\r\n        if (iconOpacity > 0.01) {\r\n            // Draw icon\r\n            context.globalAlpha = iconOpacity;\r\n            this.waypointSprite.drawCentered(context, dims / 2, dims / 2, dims * 0.7);\r\n            context.globalAlpha = 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the waypoints on the map\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        const desiredOpacity = this.root.camera.getIsMapOverlayActive() ? 1 : 0;\r\n        this.currentMarkerOpacity = lerp(this.currentMarkerOpacity, desiredOpacity, 0.08);\r\n\r\n        this.rerenderWaypointsCompass();\r\n\r\n        // Don't render with low opacity\r\n        if (this.currentMarkerOpacity < 0.01) {\r\n            return;\r\n        }\r\n\r\n        // Find waypoint below cursor\r\n        const selected = this.findCurrentIntersectedWaypoint();\r\n\r\n        // Determine rendering scale\r\n        const scale = (1 / this.root.camera.zoomLevel) * this.root.app.getEffectiveUiScale();\r\n\r\n        // Render all of 'em\r\n        for (let i = 0; i < this.waypoints.length; ++i) {\r\n            const waypoint = this.waypoints[i];\r\n\r\n            const pos = waypoint.center;\r\n            parameters.context.globalAlpha = this.currentMarkerOpacity * (selected === waypoint ? 1 : 0.7);\r\n\r\n            const yOffset = -5 * scale;\r\n            const originalLabel = this.getWaypointLabel(waypoint);\r\n            let renderLabel = originalLabel;\r\n            let isShapeIcon = false;\r\n\r\n            if (ShapeDefinition.isValidShortKey(originalLabel)) {\r\n                renderLabel = SHAPE_LABEL_PLACEHOLDER;\r\n                isShapeIcon = true;\r\n            }\r\n\r\n            // Render the background rectangle\r\n            parameters.context.font = \"bold \" + 12 * scale + \"px GameFont\";\r\n            parameters.context.fillStyle = \"rgba(255, 255, 255, 0.7)\";\r\n            parameters.context.fillRect(\r\n                pos.x - 7 * scale,\r\n                pos.y - 12 * scale,\r\n                15 * scale + this.dummyBuffer.measureText(renderLabel).width / this.root.camera.zoomLevel,\r\n                15 * scale\r\n            );\r\n\r\n            // Render the text\r\n            if (isShapeIcon) {\r\n                const canvas = this.getWaypointCanvas(waypoint);\r\n                parameters.context.drawImage(\r\n                    canvas,\r\n                    pos.x + 6 * scale,\r\n                    pos.y - 11.5 * scale,\r\n                    14 * scale,\r\n                    14 * scale\r\n                );\r\n            } else {\r\n                // Render the text\r\n                parameters.context.fillStyle = \"#000\";\r\n                parameters.context.textBaseline = \"middle\";\r\n                parameters.context.fillText(renderLabel, pos.x + 6 * scale, pos.y + 0.5 * scale + yOffset);\r\n                parameters.context.textBaseline = \"alphabetic\";\r\n            }\r\n\r\n            // Render the small icon on the left\r\n            this.waypointSprite.drawCentered(parameters.context, pos.x, pos.y + yOffset, 10 * scale);\r\n        }\r\n\r\n        parameters.context.globalAlpha = 1;\r\n    }\r\n}\r\n","import { makeOffscreenBuffer } from \"../../../core/buffer_utils\";\r\nimport { globalConfig } from \"../../../core/config\";\r\nimport { DrawParameters } from \"../../../core/draw_parameters\";\r\nimport { KEYMAPPINGS } from \"../../key_action_mapper\";\r\nimport { enumLayer } from \"../../root\";\r\nimport { THEME } from \"../../theme\";\r\nimport { BaseHUDPart } from \"../base_hud_part\";\r\nimport { Loader } from \"../../../core/loader\";\r\nimport { lerp } from \"../../../core/utils\";\r\n\r\nconst wiresBackgroundDpi = 4;\r\n\r\nexport class HUDWiresOverlay extends BaseHUDPart {\r\n    createElements(parent) {}\r\n\r\n    initialize() {\r\n        // Probably not the best location, but the one which makes most sense\r\n        this.root.keyMapper.getBinding(KEYMAPPINGS.ingame.switchLayers).add(this.switchLayers, this);\r\n\r\n        this.generateTilePattern();\r\n\r\n        this.currentAlpha = 0.0;\r\n    }\r\n\r\n    /**\r\n     * Switches between layers\r\n     */\r\n    switchLayers() {\r\n        if (this.root.currentLayer === enumLayer.regular) {\r\n            this.root.currentLayer = enumLayer.wires;\r\n        } else {\r\n            this.root.currentLayer = enumLayer.regular;\r\n        }\r\n        this.root.signals.editModeChanged.dispatch(this.root.currentLayer);\r\n    }\r\n\r\n    /**\r\n     * Generates the background pattern for the wires overlay\r\n     */\r\n    generateTilePattern() {\r\n        const overlayTile = Loader.getSprite(\"sprites/misc/wires_overlay_tile.png\");\r\n        const dims = globalConfig.tileSize * wiresBackgroundDpi;\r\n        const [canvas, context] = makeOffscreenBuffer(dims, dims, {\r\n            smooth: false,\r\n            reusable: false,\r\n            label: \"wires-tile-pattern\",\r\n        });\r\n        overlayTile.draw(context, 0, 0, dims, dims);\r\n        this.tilePatternCanvas = canvas;\r\n    }\r\n\r\n    update() {\r\n        const desiredAlpha = this.root.currentLayer === enumLayer.wires ? 1.0 : 0.0;\r\n        this.currentAlpha = lerp(this.currentAlpha, desiredAlpha, 0.12);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        if (this.currentAlpha < 0.02) {\r\n            return;\r\n        }\r\n\r\n        if (this.root.camera.getIsMapOverlayActive()) {\r\n            return;\r\n        }\r\n\r\n        if (!this.cachedPatternBackground) {\r\n            this.cachedPatternBackground = parameters.context.createPattern(this.tilePatternCanvas, \"repeat\");\r\n        }\r\n\r\n        const bounds = parameters.visibleRect;\r\n\r\n        const scaleFactor = 1 / wiresBackgroundDpi;\r\n\r\n        parameters.context.globalAlpha = 0.9 * this.currentAlpha;\r\n        parameters.context.globalCompositeOperation = \"darken\";\r\n        parameters.context.scale(scaleFactor, scaleFactor);\r\n        parameters.context.fillStyle = this.cachedPatternBackground;\r\n        parameters.context.fillRect(\r\n            bounds.x / scaleFactor,\r\n            bounds.y / scaleFactor,\r\n            bounds.w / scaleFactor,\r\n            bounds.h / scaleFactor\r\n        );\r\n        parameters.context.scale(1 / scaleFactor, 1 / scaleFactor);\r\n        parameters.context.globalCompositeOperation = \"source-over\";\r\n        parameters.context.globalAlpha = 1;\r\n\r\n        // parameters.context.fillStyle = \"#3a85bf\";\r\n        // parameters.context.globalAlpha = 0.0 * this.currentAlpha;\r\n        // parameters.context.fillRect(bounds.x, bounds.y, bounds.w, bounds.h);\r\n        // parameters.context.globalAlpha = 1;\r\n    }\r\n}\r\n","import { MetaWireBaseBuilding } from \"../../buildings/wire_base\";\r\nimport { enumLayer } from \"../../root\";\r\nimport { HUDBaseToolbar } from \"./base_toolbar\";\r\nimport { MetaWireCrossingsBuilding } from \"../../buildings/wire_crossings\";\r\n\r\nconst supportedBuildings = [MetaWireBaseBuilding, MetaWireCrossingsBuilding];\r\n\r\nexport class HUDWiresToolbar extends HUDBaseToolbar {\r\n    constructor(root) {\r\n        super(root, {\r\n            supportedBuildings,\r\n            visibilityCondition: () =>\r\n                !this.root.camera.getIsMapOverlayActive() && this.root.currentLayer === enumLayer.wires,\r\n            htmlElementId: \"ingame_HUD_wires_toolbar\",\r\n        });\r\n    }\r\n}\r\n","import { GameRoot, enumLayer } from \"../root\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { Vector, mixVector } from \"../../core/vector\";\r\nimport { lerp } from \"../../core/utils\";\r\n\r\n/* dev:start */\r\nimport trailerPoints from \"./trailer_points\";\r\nimport { gMetaBuildingRegistry } from \"../../core/global_registries\";\r\nimport { MetaBeltBaseBuilding } from \"../buildings/belt_base\";\r\nimport { MinerComponent } from \"../components/miner\";\r\n\r\nconst tickrate = 1 / 165;\r\n\r\nexport class TrailerMaker {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        this.markers = [];\r\n        this.playbackMarkers = null;\r\n        this.currentPlaybackOrigin = new Vector();\r\n        this.currentPlaybackZoom = 3;\r\n\r\n        window.addEventListener(\"keydown\", ev => {\r\n            if (ev.key === \"j\") {\r\n                console.log(\"Record\");\r\n                this.markers.push({\r\n                    pos: this.root.camera.center.copy(),\r\n                    zoom: this.root.camera.zoomLevel,\r\n                    time: 1,\r\n                    wait: 0,\r\n                });\r\n            } else if (ev.key === \"k\") {\r\n                console.log(\"Export\");\r\n                const json = JSON.stringify(this.markers);\r\n                const handle = window.open(\"about:blank\");\r\n                handle.document.write(json);\r\n            } else if (ev.key === \"u\") {\r\n                if (this.playbackMarkers && this.playbackMarkers.length > 0) {\r\n                    this.playbackMarkers = [];\r\n                    return;\r\n                }\r\n                console.log(\"Playback\");\r\n                this.playbackMarkers = trailerPoints.map(p => Object.assign({}, p));\r\n                this.playbackMarkers.unshift(this.playbackMarkers[0]);\r\n                this.currentPlaybackOrigin = Vector.fromSerializedObject(this.playbackMarkers[0].pos);\r\n\r\n                this.currentPlaybackZoom = this.playbackMarkers[0].zoom;\r\n                this.root.camera.center = this.currentPlaybackOrigin.copy();\r\n                this.root.camera.zoomLevel = this.currentPlaybackZoom;\r\n                console.log(\"STart at\", this.currentPlaybackOrigin);\r\n\r\n                // this.root.entityMgr.getAllWithComponent(MinerComponent).forEach(miner => {\r\n                //     miner.components.Miner.itemChainBuffer = [];\r\n                //     miner.components.Miner.lastMiningTime = this.root.time.now() + 5;\r\n                //     miner.components.ItemEjector.slots.forEach(slot => (slot.item = null));\r\n                // });\r\n\r\n                // this.root.logic.tryPlaceBuilding({\r\n                //     origin: new Vector(-428, -15),\r\n                //     building: gMetaBuildingRegistry.findByClass(MetaBeltBaseBuilding),\r\n                //     originalRotation: 0,\r\n                //     rotation: 0,\r\n                //     variant: \"default\",\r\n                //     rotationVariant: 0,\r\n                // });\r\n\r\n                // this.root.logic.tryPlaceBuilding({\r\n                //     origin: new Vector(-427, -15),\r\n                //     building: gMetaBuildingRegistry.findByClass(MetaBeltBaseBuilding),\r\n                //     originalRotation: 0,\r\n                //     rotation: 0,\r\n                //     variant: \"default\",\r\n                //     rotationVariant: 0,\r\n                // });\r\n            }\r\n        });\r\n    }\r\n\r\n    update() {\r\n        if (this.playbackMarkers && this.playbackMarkers.length > 0) {\r\n            const nextMarker = this.playbackMarkers[0];\r\n\r\n            if (!nextMarker.startTime) {\r\n                console.log(\"Starting to approach\", nextMarker.pos);\r\n                nextMarker.startTime = performance.now() / 1000.0;\r\n            }\r\n\r\n            const speed =\r\n                globalConfig.tileSize *\r\n                globalConfig.beltSpeedItemsPerSecond *\r\n                globalConfig.beltItemSpacingByLayer[enumLayer.regular];\r\n            // let time =\r\n            //     this.currentPlaybackOrigin.distance(Vector.fromSerializedObject(nextMarker.pos)) / speed;\r\n            const time = nextMarker.time;\r\n\r\n            const progress = (performance.now() / 1000.0 - nextMarker.startTime) / time;\r\n\r\n            if (progress > 1.0) {\r\n                if (nextMarker.wait > 0) {\r\n                    nextMarker.wait -= tickrate;\r\n                } else {\r\n                    console.log(\"Approached\");\r\n                    this.currentPlaybackOrigin = this.root.camera.center.copy();\r\n                    this.currentPlaybackZoom = this.root.camera.zoomLevel;\r\n                    this.playbackMarkers.shift();\r\n                }\r\n                return;\r\n            }\r\n\r\n            const targetPos = Vector.fromSerializedObject(nextMarker.pos);\r\n            const targetZoom = nextMarker.zoom;\r\n\r\n            const pos = mixVector(this.currentPlaybackOrigin, targetPos, progress);\r\n            const zoom = lerp(this.currentPlaybackZoom, targetZoom, progress);\r\n            this.root.camera.zoomLevel = zoom;\r\n            this.root.camera.center = pos;\r\n        }\r\n    }\r\n}\r\n\r\n/* dev:end */\r\n","export default [\r\n    // // initial\r\n    // { pos: { x: -13665, y: -434 }, zoom: 6, time: 1, wait: 8 },\r\n\r\n    // // Go up to first curve\r\n    // { pos: { x: -13665, y: -580 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // To balancers\r\n    // { pos: { x: -13450, y: -580 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // To cutters\r\n    // { pos: { x: -13350, y: -580 }, zoom: 3, time: 1, wait: 2 },\r\n\r\n    // // To initial cutters\r\n    // { pos: { x: -12713, y: -580 }, zoom: 3, time: 1, wait: 2.5 },\r\n\r\n    // // To rotaters 3,2,1,0\r\n    // { pos: { x: -12402, y: -580 }, zoom: 3, time: 1, wait: 0 },\r\n\r\n    // // Zoom in further to stackers\r\n    // { pos: { x: -12045, y: -580 }, zoom: 6, time: 1, wait: 4 },\r\n\r\n    // // Focus on painter\r\n    // { pos: { x: -11700, y: -660 }, zoom: 6, time: 1, wait: 3.5 },\r\n\r\n    // // Zoom in to mixers\r\n    // { pos: { x: -11463, y: -520 }, zoom: 6, time: 1, wait: 3.8 },\r\n\r\n    // // Focus to second painter\r\n    // { pos: { x: -11290, y: -610 }, zoom: 6, time: 1, wait: 1 },\r\n\r\n    // // Second stacker\r\n    // { pos: { x: -11022, y: -610 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // Go right until first curve\r\n    // { pos: { x: -10859, y: -650 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // Go up to stacker\r\n    // { pos: { x: -10859, y: -1120 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // Go further up\r\n    // { pos: { x: -10859, y: -1260 }, zoom: 6, time: 1, wait: 0 },\r\n\r\n    // // Go left\r\n    // { pos: { x: -11235, y: -1260 }, zoom: 6, time: 1, wait: 1 },\r\n\r\n    // OWO Savegames\r\n    // { pos: { x: -4939.356940622392, y: 71.76431237675517 }, zoom: 5.06640625, time: 1, wait: 1 },\r\n    // { pos: { x: -4275.441641063683, y: 26.3603982512193 }, zoom: 0.45, time: 32, wait: 0 },\r\n\r\n    // Eve\r\n\r\n    //     { pos: { x: -277.22574043554704, y: 2151.1873666983033 }, zoom: 3.1, time: 0, wait: 2 },\r\n    //     { pos: { x: -43.64015426578788, y: 1577.5520572108883 }, zoom: 1.4, time: 16, wait: 0 },\r\n    //     { pos: { x: 133.22735227708466, y: 957.2211413984563 }, zoom: 1.4, time: 8, wait: 0 },\r\n    //     { pos: { x: 480.20365842184424, y: -313.5485044644265 }, zoom: 1.4, time: 8, wait: 0 },\r\n    //     {\r\n    //         pos: { x: 452.56528647804333, y: -1341.6422407571154 },\r\n    //         zoom: 1.4,\r\n    //         time: 8,\r\n    //         wait: 0,\r\n    //     },\r\n\r\n    // D\r\n    { pos: { x: -7506.562977380196, y: 1777.6671860680613 }, zoom: 2.3764616075569833, time: 0, wait: 1 },\r\n    { pos: { x: -7506.562977380196, y: 1777.6671860680613 }, zoom: 2.3764616075569833, time: 1, wait: 0 },\r\n    { pos: { x: -6592.471896026158, y: 1841.974816890533 }, zoom: 1.4594444847409322, time: 24, wait: 0 },\r\n    { pos: { x: -7274.384090342281, y: 729.3783696229457 }, zoom: 1.4594444847409322, time: 24, wait: 0 },\r\n    { pos: { x: -6048.006011617565, y: 764.6297752493597 }, zoom: 1.1853320776932916, time: 24, wait: 0 },\r\n    {\r\n        pos: { x: -3674.7204249483366, y: 658.6366426023269 },\r\n        zoom: 0.25332031250000003,\r\n        time: 24,\r\n        wait: 0,\r\n    },\r\n    {\r\n        pos: { x: -1213.9916574596728, y: -1387.1496772071198 },\r\n        zoom: 0.443058809814453,\r\n        time: 24,\r\n        wait: 0,\r\n    },\r\n    {\r\n        pos: { x: 1722.5210292405573, y: -2457.2072755163636 },\r\n        zoom: 0.6313986260996299,\r\n        time: 24,\r\n        wait: 0,\r\n    },\r\n    { pos: { x: 3533.263459106946, y: -1806.6756300805193 }, zoom: 1.551908182277415, time: 24, wait: 0 },\r\n];\r\n","import { gItemRegistry } from \"../core/global_registries\";\r\nimport { ShapeItem } from \"./items/shape_item\";\r\nimport { ColorItem } from \"./items/color_item\";\r\nimport { PositiveEnergyItem } from \"./items/positive_energy_item\";\r\nimport { NegativeEnergyItem } from \"./items/negative_energy_item\";\r\n\r\nexport function initItemRegistry() {\r\n    gItemRegistry.register(ShapeItem);\r\n    gItemRegistry.register(ColorItem);\r\n    gItemRegistry.register(PositiveEnergyItem);\r\n    gItemRegistry.register(NegativeEnergyItem);\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { smoothenDpi } from \"../../core/dpi_manager\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem, enumItemType } from \"../base_item\";\r\nimport { enumColors, enumColorToShortcode, enumColorsToHexCode } from \"../colors\";\r\nimport { THEME } from \"../theme\";\r\n\r\nexport class ColorItem extends BaseItem {\r\n    static getId() {\r\n        return \"color\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return types.enum(enumColors);\r\n    }\r\n\r\n    serialize() {\r\n        return this.color;\r\n    }\r\n\r\n    deserialize(data) {\r\n        this.color = data;\r\n    }\r\n\r\n    getHash() {\r\n        return enumColorToShortcode[this.color];\r\n    }\r\n\r\n    getItemType() {\r\n        return enumItemType.color;\r\n    }\r\n\r\n    /**\r\n     * @param {enumColors} color\r\n     */\r\n    constructor(color) {\r\n        super();\r\n        this.color = color;\r\n        this.bufferGenerator = null;\r\n    }\r\n\r\n    getBackgroundColorAsResource() {\r\n        return THEME.map.resources[this.color] || THEME.map.resources.shape;\r\n    }\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} size\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(x, y, parameters, size = 12) {\r\n        if (!this.bufferGenerator) {\r\n            this.bufferGenerator = this.internalGenerateColorBuffer.bind(this);\r\n        }\r\n\r\n        const dpi = smoothenDpi(globalConfig.shapesSharpness * parameters.zoomLevel);\r\n\r\n        const key = size + \"/\" + dpi;\r\n        const canvas = parameters.root.buffers.getForKey(\r\n            key,\r\n            this.color,\r\n            size,\r\n            size,\r\n            dpi,\r\n            this.bufferGenerator\r\n        );\r\n        parameters.context.drawImage(canvas, x - size / 2, y - size / 2, size, size);\r\n    }\r\n    /**\r\n     *\r\n     * @param {HTMLCanvasElement} canvas\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @param {number} dpi\r\n     */\r\n    internalGenerateColorBuffer(canvas, context, w, h, dpi) {\r\n        context.translate((w * dpi) / 2, (h * dpi) / 2);\r\n        context.scale((dpi * w) / 12, (dpi * h) / 12);\r\n\r\n        context.fillStyle = enumColorsToHexCode[this.color];\r\n        context.strokeStyle = THEME.items.outline;\r\n        context.lineWidth = 2 * THEME.items.outlineWidth;\r\n        context.beginCircle(2, -1, 3);\r\n        context.stroke();\r\n        context.fill();\r\n        context.beginCircle(-2, -1, 3);\r\n        context.stroke();\r\n        context.fill();\r\n        context.beginCircle(0, 2, 3);\r\n        context.closePath();\r\n        context.stroke();\r\n        context.fill();\r\n    }\r\n}\r\n","import { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem, enumItemType } from \"../base_item\";\r\n\r\nexport class NegativeEnergyItem extends BaseItem {\r\n    static getId() {\r\n        return \"negative_energy\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return types.uint;\r\n    }\r\n\r\n    serialize() {\r\n        return 0;\r\n    }\r\n\r\n    deserialize(data) {}\r\n\r\n    getItemType() {\r\n        return enumItemType.negativeEnergy;\r\n    }\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} size\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(x, y, parameters, size = 12) {\r\n        const sprite = Loader.getSprite(\"sprites/wires/negative_energy.png\");\r\n        sprite.drawCachedCentered(parameters, x, y, size * 1.5);\r\n    }\r\n}\r\n\r\nexport const NEGATIVE_ENERGY_ITEM_SINGLETON = new NegativeEnergyItem();\r\n","import { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem, enumItemType } from \"../base_item\";\r\n\r\nexport class PositiveEnergyItem extends BaseItem {\r\n    static getId() {\r\n        return \"positive_energy\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return types.uint;\r\n    }\r\n\r\n    serialize() {\r\n        return 0;\r\n    }\r\n\r\n    deserialize(data) {}\r\n\r\n    getItemType() {\r\n        return enumItemType.positiveEnergy;\r\n    }\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} size\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(x, y, parameters, size = 12) {\r\n        const sprite = Loader.getSprite(\"sprites/wires/positive_energy.png\");\r\n        sprite.drawCachedCentered(parameters, x, y, size * 1.5);\r\n    }\r\n}\r\n\r\nexport const POSITIVE_ENERGY_ITEM_SINGLETON = new PositiveEnergyItem();\r\n","import { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { types } from \"../../savegame/serialization\";\r\nimport { BaseItem, enumItemType } from \"../base_item\";\r\nimport { ShapeDefinition } from \"../shape_definition\";\r\nimport { THEME } from \"../theme\";\r\n\r\nexport class ShapeItem extends BaseItem {\r\n    static getId() {\r\n        return \"shape\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return types.string;\r\n    }\r\n\r\n    serialize() {\r\n        return this.definition.getHash();\r\n    }\r\n\r\n    deserialize(data) {\r\n        this.definition = ShapeDefinition.fromShortKey(data);\r\n    }\r\n\r\n    getHash() {\r\n        return this.definition.getHash()\r\n    }\r\n\r\n    getItemType() {\r\n        return enumItemType.shape;\r\n    }\r\n\r\n    /**\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    constructor(definition) {\r\n        super();\r\n        // logger.log(\"New shape item for shape definition\", definition.generateId(), \"created\");\r\n\r\n        /**\r\n         * This property must not be modified on runtime, you have to clone the class in order to change the definition\r\n         */\r\n        this.definition = definition;\r\n    }\r\n\r\n    getBackgroundColorAsResource() {\r\n        return THEME.map.resources.shape;\r\n    }\r\n\r\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {DrawParameters} parameters\r\n     * @param {number=} size\r\n     */\r\n    draw(x, y, parameters, size) {\r\n        this.definition.draw(x, y, parameters, size);\r\n    }\r\n}\r\n","\r\n\r\nimport { Signal, STOP_PROPAGATION } from \"../core/signal\";\r\nimport { IS_MOBILE } from \"../core/config\";\r\nimport { T } from \"../translations\";\r\nfunction key(str) {\r\n    return str.toUpperCase().charCodeAt(0);\r\n}\r\n\r\nexport const KEYMAPPINGS = {\r\n    general: {\r\n        confirm: { keyCode: 13 }, // enter\r\n        back: { keyCode: 27, builtin: true }, // escape\r\n    },\r\n\r\n    ingame: {\r\n        menuOpenShop: { keyCode: key(\"F\") },\r\n        menuOpenStats: { keyCode: key(\"G\") },\r\n        menuClose: { keyCode: key(\"Q\") },\r\n\r\n        toggleHud: { keyCode: 113 }, // F2\r\n        exportScreenshot: { keyCode: 114 }, // F3PS\r\n        toggleFPSInfo: { keyCode: 115 }, // F4\r\n\r\n        switchLayers: { keyCode: key(\"Y\") },\r\n    },\r\n\r\n    navigation: {\r\n        mapMoveUp: { keyCode: key(\"W\") },\r\n        mapMoveRight: { keyCode: key(\"D\") },\r\n        mapMoveDown: { keyCode: key(\"S\") },\r\n        mapMoveLeft: { keyCode: key(\"A\") },\r\n        mapMoveFaster: { keyCode: 16 }, //shift\r\n\r\n        centerMap: { keyCode: 32 }, // SPACE\r\n        mapZoomIn: { keyCode: 187, repeated: true }, // \"+\"\r\n        mapZoomOut: { keyCode: 189, repeated: true }, // \"-\"\r\n\r\n        createMarker: { keyCode: key(\"M\") },\r\n    },\r\n\r\n    buildings: {\r\n        belt: { keyCode: key(\"1\") },\r\n        splitter: { keyCode: key(\"2\") },\r\n        underground_belt: { keyCode: key(\"3\") },\r\n        miner: { keyCode: key(\"4\") },\r\n        cutter: { keyCode: key(\"5\") },\r\n        rotater: { keyCode: key(\"6\") },\r\n        stacker: { keyCode: key(\"7\") },\r\n        mixer: { keyCode: key(\"8\") },\r\n        painter: { keyCode: key(\"9\") },\r\n        trash: { keyCode: key(\"0\") },\r\n        energy_generator: { keyCode: key(\"O\") },\r\n        advanced_processor: { keyCode: key(\"P\") },\r\n\r\n        // Wires layer\r\n        wire: { keyCode: key(\"1\") },\r\n        wire_crossings: { keyCode: key(\"2\") },\r\n    },\r\n\r\n    placement: {\r\n        pipette: { keyCode: key(\"Q\") },\r\n        rotateWhilePlacing: { keyCode: key(\"R\") },\r\n        rotateInverseModifier: { keyCode: 16 }, // SHIFT\r\n        cycleBuildingVariants: { keyCode: key(\"T\") },\r\n        cycleBuildings: { keyCode: 9 }, // TAB\r\n        switchDirectionLockSide: { keyCode: key(\"R\") },\r\n    },\r\n\r\n    massSelect: {\r\n        massSelectStart: { keyCode: 17 }, // CTRL\r\n        massSelectSelectMultiple: { keyCode: 16 }, // SHIFT\r\n        massSelectCopy: { keyCode: key(\"C\") },\r\n        massSelectCut: { keyCode: key(\"X\") },\r\n        confirmMassDelete: { keyCode: 46 }, // DEL\r\n        pasteLastBlueprint: { keyCode: key(\"V\") },\r\n    },\r\n\r\n    placementModifiers: {\r\n        lockBeltDirection: { keyCode: 16 }, // SHIFT\r\n        placementDisableAutoOrientation: { keyCode: 17 }, // CTRL\r\n        placeMultiple: { keyCode: 16 }, // SHIFT\r\n        placeInverse: { keyCode: 18 }, // ALT\r\n    },\r\n};\r\n\r\n// Assign ids\r\nfor (const categoryId in KEYMAPPINGS) {\r\n    for (const mappingId in KEYMAPPINGS[categoryId]) {\r\n        KEYMAPPINGS[categoryId][mappingId].id = mappingId;\r\n    }\r\n}\r\n\r\nexport const KEYCODE_LMB = 1;\r\nexport const KEYCODE_MMB = 2;\r\nexport const KEYCODE_RMB = 3;\r\n\r\n/**\r\n * Returns a keycode -> string\r\n * @param {number} code\r\n * @returns {string}\r\n */\r\nexport function getStringForKeyCode(code) {\r\n    switch (code) {\r\n        case KEYCODE_LMB:\r\n            return \"LMB\";\r\n        case KEYCODE_MMB:\r\n            return \"MMB\";\r\n        case KEYCODE_RMB:\r\n            return \"RMB\";\r\n        case 4:\r\n            return \"MB4\";\r\n        case 5:\r\n            return \"MB5\";\r\n        case 8:\r\n            return \"⌫\";\r\n        case 9:\r\n            return T.global.keys.tab;\r\n        case 13:\r\n            return \"⏎\";\r\n        case 16:\r\n            return \"⇪\";\r\n        case 17:\r\n            return T.global.keys.control;\r\n        case 18:\r\n            return T.global.keys.alt;\r\n        case 19:\r\n            return \"PAUSE\";\r\n        case 20:\r\n            return \"CAPS\";\r\n        case 27:\r\n            return T.global.keys.escape;\r\n        case 32:\r\n            return T.global.keys.space;\r\n        case 33:\r\n            return \"PGUP\";\r\n        case 34:\r\n            return \"PGDOWN\";\r\n        case 35:\r\n            return \"END\";\r\n        case 36:\r\n            return \"HOME\";\r\n        case 37:\r\n            return \"⬅\";\r\n        case 38:\r\n            return \"⬆\";\r\n        case 39:\r\n            return \"➡\";\r\n        case 40:\r\n            return \"⬇\";\r\n        case 44:\r\n            return \"PRNT\";\r\n        case 45:\r\n            return \"INS\";\r\n        case 46:\r\n            return \"DEL\";\r\n        case 93:\r\n            return \"SEL\";\r\n        case 96:\r\n            return \"NUM 0\";\r\n        case 97:\r\n            return \"NUM 1\";\r\n        case 98:\r\n            return \"NUM 2\";\r\n        case 99:\r\n            return \"NUM 3\";\r\n        case 100:\r\n            return \"NUM 4\";\r\n        case 101:\r\n            return \"NUM 5\";\r\n        case 102:\r\n            return \"NUM 6\";\r\n        case 103:\r\n            return \"NUM 7\";\r\n        case 104:\r\n            return \"NUM 8\";\r\n        case 105:\r\n            return \"NUM 9\";\r\n        case 106:\r\n            return \"*\";\r\n        case 107:\r\n            return \"+\";\r\n        case 109:\r\n            return \"-\";\r\n        case 110:\r\n            return \".\";\r\n        case 111:\r\n            return \"/\";\r\n        case 112:\r\n            return \"F1\";\r\n        case 113:\r\n            return \"F2\";\r\n        case 114:\r\n            return \"F3\";\r\n        case 115:\r\n            return \"F4\";\r\n        case 116:\r\n            return \"F4\";\r\n        case 117:\r\n            return \"F5\";\r\n        case 118:\r\n            return \"F6\";\r\n        case 119:\r\n            return \"F7\";\r\n        case 120:\r\n            return \"F8\";\r\n        case 121:\r\n            return \"F9\";\r\n        case 122:\r\n            return \"F10\";\r\n        case 123:\r\n            return \"F11\";\r\n        case 124:\r\n            return \"F12\";\r\n\r\n        case 144:\r\n            return \"NUMLOCK\";\r\n        case 145:\r\n            return \"SCRLOCK\";\r\n        case 182:\r\n            return \"COMP\";\r\n        case 183:\r\n            return \"CALC\";\r\n        case 186:\r\n            return \";\";\r\n        case 187:\r\n            return \"+\";\r\n        case 188:\r\n            return \",\";\r\n        case 189:\r\n            return \"-\";\r\n        case 191:\r\n            return \"/\";\r\n        case 219:\r\n            return \"[\";\r\n        case 220:\r\n            return \"\\\\\";\r\n        case 221:\r\n            return \"]\";\r\n        case 222:\r\n            return \"'\";\r\n    }\r\n\r\n    return String.fromCharCode(code);\r\n}\r\n\r\nexport class Keybinding {\r\n    /**\r\n     *\r\n     * @param {KeyActionMapper} keyMapper\r\n     * @param {Application} app\r\n     * @param {object} param0\r\n     * @param {number} param0.keyCode\r\n     * @param {boolean=} param0.builtin\r\n     * @param {boolean=} param0.repeated\r\n     */\r\n    constructor(keyMapper, app, { keyCode, builtin = false, repeated = false }) {\r\n        assert(keyCode && Number.isInteger(keyCode), \"Invalid key code: \" + keyCode);\r\n        this.keyMapper = keyMapper;\r\n        this.app = app;\r\n        this.keyCode = keyCode;\r\n        this.builtin = builtin;\r\n        this.repeated = repeated;\r\n\r\n        this.signal = new Signal();\r\n        this.toggled = new Signal();\r\n    }\r\n\r\n    /**\r\n     * Returns whether this binding is currently pressed\r\n     * @returns {boolean}\r\n     */\r\n    get pressed() {\r\n        // Check if the key is down\r\n        if (this.app.inputMgr.keysDown.has(this.keyCode)) {\r\n            // Check if it is the top reciever\r\n            const reciever = this.keyMapper.inputReceiver;\r\n            return this.app.inputMgr.getTopReciever() === reciever;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Adds an event listener\r\n     * @param {function() : void} receiver\r\n     * @param {object=} scope\r\n     */\r\n    add(receiver, scope = null) {\r\n        this.signal.add(receiver, scope);\r\n    }\r\n\r\n    /**\r\n     * @param {Element} elem\r\n     * @returns {HTMLElement} the created element, or null if the keybindings are not shown\r\n     *  */\r\n    appendLabelToElement(elem) {\r\n        if (IS_MOBILE) {\r\n            return null;\r\n        }\r\n        const spacer = document.createElement(\"code\");\r\n        spacer.classList.add(\"keybinding\");\r\n        spacer.innerHTML = getStringForKeyCode(this.keyCode);\r\n        elem.appendChild(spacer);\r\n        return spacer;\r\n    }\r\n\r\n    /**\r\n     * Returns the key code as a nice string\r\n     */\r\n    getKeyCodeString() {\r\n        return getStringForKeyCode(this.keyCode);\r\n    }\r\n\r\n    /**\r\n     * Remvoes all signal receivers\r\n     */\r\n    clearSignalReceivers() {\r\n        this.signal.removeAll();\r\n    }\r\n}\r\n\r\nexport class KeyActionMapper {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {InputReceiver} inputReciever\r\n     */\r\n    constructor(root, inputReciever) {\r\n        this.root = root;\r\n        this.inputReceiver = inputReciever;\r\n\r\n        inputReciever.keydown.add(this.handleKeydown, this);\r\n        inputReciever.keyup.add(this.handleKeyup, this);\r\n\r\n        /** @type {Object.<string, Keybinding>} */\r\n        this.keybindings = {};\r\n\r\n        const overrides = root.app.settings.getKeybindingOverrides();\r\n\r\n        for (const category in KEYMAPPINGS) {\r\n            for (const key in KEYMAPPINGS[category]) {\r\n                let payload = Object.assign({}, KEYMAPPINGS[category][key]);\r\n                if (overrides[key]) {\r\n                    payload.keyCode = overrides[key];\r\n                }\r\n\r\n                this.keybindings[key] = new Keybinding(this, this.root.app, payload);\r\n            }\r\n        }\r\n\r\n        inputReciever.pageBlur.add(this.onPageBlur, this);\r\n        inputReciever.destroyed.add(this.cleanup, this);\r\n    }\r\n\r\n    /**\r\n     * Returns all keybindings starting with the given id\r\n     * @param {string} pattern\r\n     * @returns {Array<Keybinding>}\r\n     */\r\n    getKeybindingsStartingWith(pattern) {\r\n        let result = [];\r\n        for (const key in this.keybindings) {\r\n            if (key.startsWith(pattern)) {\r\n                result.push(this.keybindings[key]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Forwards the given events to the other mapper (used in tooltips)\r\n     * @param {KeyActionMapper} receiver\r\n     * @param {Array<string>} bindings\r\n     */\r\n    forward(receiver, bindings) {\r\n        for (let i = 0; i < bindings.length; ++i) {\r\n            const key = bindings[i];\r\n            this.keybindings[key].signal.add((...args) => receiver.keybindings[key].signal.dispatch(...args));\r\n        }\r\n    }\r\n\r\n    cleanup() {\r\n        for (const key in this.keybindings) {\r\n            this.keybindings[key].signal.removeAll();\r\n        }\r\n    }\r\n\r\n    onPageBlur() {\r\n        // Reset all down states\r\n        // Find mapping\r\n        for (const key in this.keybindings) {\r\n            /** @type {Keybinding} */\r\n            const binding = this.keybindings[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal keydown handler\r\n     * @param {object} param0\r\n     * @param {number} param0.keyCode\r\n     * @param {boolean} param0.shift\r\n     * @param {boolean} param0.alt\r\n     * @param {boolean=} param0.initial\r\n     */\r\n    handleKeydown({ keyCode, shift, alt, initial }) {\r\n        let stop = false;\r\n\r\n        // Find mapping\r\n        for (const key in this.keybindings) {\r\n            /** @type {Keybinding} */\r\n            const binding = this.keybindings[key];\r\n            if (binding.keyCode === keyCode && (initial || binding.repeated)) {\r\n                /** @type {Signal} */\r\n                const signal = this.keybindings[key].signal;\r\n                if (signal.dispatch() === STOP_PROPAGATION) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (stop) {\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal keyup handler\r\n     * @param {object} param0\r\n     * @param {number} param0.keyCode\r\n     * @param {boolean} param0.shift\r\n     * @param {boolean} param0.alt\r\n     */\r\n    handleKeyup({ keyCode, shift, alt }) {\r\n        // Empty\r\n    }\r\n\r\n    /**\r\n     * Returns a given keybinding\r\n     * @param {{ keyCode: number }} binding\r\n     * @returns {Keybinding}\r\n     */\r\n    getBinding(binding) {\r\n        // @ts-ignore\r\n        const id = binding.id;\r\n        assert(id, \"Not a valid keybinding: \" + JSON.stringify(binding));\r\n        assert(this.keybindings[id], \"Keybinding \" + id + \" not known!\");\r\n        return this.keybindings[id];\r\n    }\r\n}\r\n","import { createLogger } from \"../core/logging\";\r\nimport { round2Digits } from \"../core/utils\";\r\nimport { enumDirection, enumDirectionToVector, Vector } from \"../core/vector\";\r\nimport { Entity } from \"./entity\";\r\nimport { MetaBuilding } from \"./meta_building\";\r\nimport { enumLayer, GameRoot } from \"./root\";\r\nimport { STOP_PROPAGATION } from \"../core/signal\";\r\n\r\nconst logger = createLogger(\"ingame/logic\");\r\n\r\n/**\r\n * Typing helper\r\n * @typedef {Array<{\r\n *  entity: Entity,\r\n *  slot: import(\"./components/item_ejector\").ItemEjectorSlot,\r\n *  fromTile: Vector,\r\n *  toDirection: enumDirection\r\n * }>} EjectorsAffectingTile\r\n */\r\n\r\n/**\r\n * Typing helper\r\n * @typedef {Array<{\r\n *  entity: Entity,\r\n *  slot: import(\"./components/item_acceptor\").ItemAcceptorSlot,\r\n *  toTile: Vector,\r\n *  fromDirection: enumDirection\r\n * }>} AcceptorsAffectingTile\r\n */\r\n\r\n/**\r\n * @typedef {{\r\n *     acceptors: AcceptorsAffectingTile,\r\n *     ejectors: EjectorsAffectingTile\r\n * }} AcceptorsAndEjectorsAffectingTile\r\n */\r\n\r\nexport class GameLogic {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n    }\r\n\r\n    /**\r\n     * Checks if the given entity can be placed\r\n     * @param {Entity} entity\r\n     * @param {Vector=} offset Optional, move the entity by the given offset first\r\n     * @returns {boolean} true if the entity could be placed there\r\n     */\r\n    checkCanPlaceEntity(entity, offset = null) {\r\n        // Compute area of the building\r\n        const rect = entity.components.StaticMapEntity.getTileSpaceBounds();\r\n        if (offset) {\r\n            rect.x += offset.x;\r\n            rect.y += offset.y;\r\n        }\r\n\r\n        // Check the whole area of the building\r\n        for (let x = rect.x; x < rect.x + rect.w; ++x) {\r\n            for (let y = rect.y; y < rect.y + rect.h; ++y) {\r\n                // Check if there is any direct collision\r\n                const otherEntity = this.root.map.getLayerContentXY(x, y, entity.layer);\r\n                if (otherEntity && !otherEntity.components.ReplaceableMapEntity) {\r\n                    // This one is a direct blocker\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Perform additional placement checks\r\n        if (this.root.signals.prePlacementCheck.dispatch(entity, offset) === STOP_PROPAGATION) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attempts to place the given building\r\n     * @param {object} param0\r\n     * @param {Vector} param0.origin\r\n     * @param {number} param0.rotation\r\n     * @param {number} param0.originalRotation\r\n     * @param {number} param0.rotationVariant\r\n     * @param {string} param0.variant\r\n     * @param {MetaBuilding} param0.building\r\n     * @returns {Entity}\r\n     */\r\n    tryPlaceBuilding({ origin, rotation, rotationVariant, originalRotation, variant, building }) {\r\n        const entity = building.createEntity({\r\n            root: this.root,\r\n            origin,\r\n            rotation,\r\n            originalRotation,\r\n            rotationVariant,\r\n            variant,\r\n        });\r\n        if (this.checkCanPlaceEntity(entity)) {\r\n            this.freeEntityAreaBeforeBuild(entity);\r\n            this.root.map.placeStaticEntity(entity);\r\n            this.root.entityMgr.registerEntity(entity);\r\n            return entity;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Removes all entities with a RemovableMapEntityComponent which need to get\r\n     * removed before placing this entity\r\n     * @param {Entity} entity\r\n     */\r\n    freeEntityAreaBeforeBuild(entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const rect = staticComp.getTileSpaceBounds();\r\n        // Remove any removeable colliding entities on the same layer\r\n        for (let x = rect.x; x < rect.x + rect.w; ++x) {\r\n            for (let y = rect.y; y < rect.y + rect.h; ++y) {\r\n                const contents = this.root.map.getLayerContentXY(x, y, entity.layer);\r\n                if (contents) {\r\n                    assertAlways(\r\n                        contents.components.ReplaceableMapEntity,\r\n                        \"Tried to replace non-repleaceable entity\"\r\n                    );\r\n                    if (!this.tryDeleteBuilding(contents)) {\r\n                        assertAlways(false, \"Tried to replace non-repleaceable entity #2\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Perform other callbacks\r\n        this.root.signals.freeEntityAreaBeforeBuild.dispatch(entity);\r\n    }\r\n\r\n    /**\r\n     * Performs a bulk operation, not updating caches in the meantime\r\n     * @param {function} operation\r\n     */\r\n    performBulkOperation(operation) {\r\n        logger.warn(\"Running bulk operation ...\");\r\n        assert(!this.root.bulkOperationRunning, \"Can not run two bulk operations twice\");\r\n        this.root.bulkOperationRunning = true;\r\n        const now = performance.now();\r\n        const returnValue = operation();\r\n        const duration = performance.now() - now;\r\n        logger.log(\"Done in\", round2Digits(duration), \"ms\");\r\n        assert(this.root.bulkOperationRunning, \"Bulk operation = false while bulk operation was running\");\r\n        this.root.bulkOperationRunning = false;\r\n        this.root.signals.bulkOperationFinished.dispatch();\r\n        return returnValue;\r\n    }\r\n\r\n    /**\r\n     * Returns whether the given building can get removed\r\n     * @param {Entity} building\r\n     */\r\n    canDeleteBuilding(building) {\r\n        return building.components.StaticMapEntity && !building.components.Unremovable;\r\n    }\r\n\r\n    /**\r\n     * Tries to delete the given building\r\n     * @param {Entity} building\r\n     */\r\n    tryDeleteBuilding(building) {\r\n        if (!this.canDeleteBuilding(building)) {\r\n            return false;\r\n        }\r\n        this.root.map.removeStaticEntity(building);\r\n        this.root.entityMgr.destroyEntity(building);\r\n        this.root.entityMgr.processDestroyList();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns the acceptors and ejectors which affect the current tile\r\n     * @param {Vector} tile\r\n     * @param {enumLayer} layer\r\n     * @returns {AcceptorsAndEjectorsAffectingTile}\r\n     */\r\n    getEjectorsAndAcceptorsAtTile(tile, layer) {\r\n        /** @type {EjectorsAffectingTile} */\r\n        let ejectors = [];\r\n        /** @type {AcceptorsAffectingTile} */\r\n        let acceptors = [];\r\n\r\n        // Well .. please ignore this code! :D\r\n        for (let dx = -1; dx <= 1; ++dx) {\r\n            for (let dy = -1; dy <= 1; ++dy) {\r\n                if (Math.abs(dx) + Math.abs(dy) !== 1) {\r\n                    continue;\r\n                }\r\n\r\n                const entities = this.root.map.getLayersContentsMultipleXY(tile.x + dx, tile.y + dy);\r\n                for (let i = 0; i < entities.length; ++i) {\r\n                    const entity = entities[i];\r\n\r\n                    const staticComp = entity.components.StaticMapEntity;\r\n                    const itemEjector = entity.components.ItemEjector;\r\n                    if (itemEjector) {\r\n                        for (let ejectorSlot = 0; ejectorSlot < itemEjector.slots.length; ++ejectorSlot) {\r\n                            const slot = itemEjector.slots[ejectorSlot];\r\n                            if (slot.layer !== layer) {\r\n                                continue;\r\n                            }\r\n                            const wsTile = staticComp.localTileToWorld(slot.pos);\r\n                            const wsDirection = staticComp.localDirectionToWorld(slot.direction);\r\n                            const targetTile = wsTile.add(enumDirectionToVector[wsDirection]);\r\n                            if (targetTile.equals(tile)) {\r\n                                ejectors.push({\r\n                                    entity,\r\n                                    slot,\r\n                                    fromTile: wsTile,\r\n                                    toDirection: wsDirection,\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const itemAcceptor = entity.components.ItemAcceptor;\r\n                    if (itemAcceptor) {\r\n                        for (let acceptorSlot = 0; acceptorSlot < itemAcceptor.slots.length; ++acceptorSlot) {\r\n                            const slot = itemAcceptor.slots[acceptorSlot];\r\n                            if (slot.layer !== layer) {\r\n                                continue;\r\n                            }\r\n\r\n                            const wsTile = staticComp.localTileToWorld(slot.pos);\r\n                            for (let k = 0; k < slot.directions.length; ++k) {\r\n                                const direction = slot.directions[k];\r\n                                const wsDirection = staticComp.localDirectionToWorld(direction);\r\n\r\n                                const sourceTile = wsTile.add(enumDirectionToVector[wsDirection]);\r\n                                if (sourceTile.equals(tile)) {\r\n                                    acceptors.push({\r\n                                        entity,\r\n                                        slot,\r\n                                        toTile: wsTile,\r\n                                        fromDirection: wsDirection,\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { ejectors, acceptors };\r\n    }\r\n}\r\n","import { GameRoot, enumLayer } from \"./root\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { Entity } from \"./entity\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { BaseItem } from \"./base_item\";\r\nimport { MapChunkView } from \"./map_chunk_view\";\r\nimport { randomInt } from \"../core/utils\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\n\r\nconst logger = createLogger(\"map\");\r\n\r\nexport class BaseMap extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"Map\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            seed: types.uint,\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n        this.root = root;\r\n\r\n        this.seed = 0;\r\n\r\n        /**\r\n         * Mapping of 'X|Y' to chunk\r\n         * @type {Map<string, MapChunkView>} */\r\n        this.chunksById = new Map();\r\n    }\r\n\r\n    /**\r\n     * Returns the given chunk by index\r\n     * @param {number} chunkX\r\n     * @param {number} chunkY\r\n     */\r\n    getChunk(chunkX, chunkY, createIfNotExistent = false) {\r\n        const chunkIdentifier = chunkX + \"|\" + chunkY;\r\n        let storedChunk;\r\n\r\n        if ((storedChunk = this.chunksById.get(chunkIdentifier))) {\r\n            return storedChunk;\r\n        }\r\n\r\n        if (createIfNotExistent) {\r\n            const instance = new MapChunkView(this.root, chunkX, chunkY);\r\n            this.chunksById.set(chunkIdentifier, instance);\r\n            return instance;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Gets or creates a new chunk if not existent for the given tile\r\n     * @param {number} tileX\r\n     * @param {number} tileY\r\n     * @returns {MapChunkView}\r\n     */\r\n    getOrCreateChunkAtTile(tileX, tileY) {\r\n        const chunkX = Math.floor(tileX / globalConfig.mapChunkSize);\r\n        const chunkY = Math.floor(tileY / globalConfig.mapChunkSize);\r\n        return this.getChunk(chunkX, chunkY, true);\r\n    }\r\n\r\n    /**\r\n     * Gets a chunk if not existent for the given tile\r\n     * @param {number} tileX\r\n     * @param {number} tileY\r\n     * @returns {MapChunkView?}\r\n     */\r\n    getChunkAtTileOrNull(tileX, tileY) {\r\n        const chunkX = Math.floor(tileX / globalConfig.mapChunkSize);\r\n        const chunkY = Math.floor(tileY / globalConfig.mapChunkSize);\r\n        return this.getChunk(chunkX, chunkY, false);\r\n    }\r\n\r\n    /**\r\n     * Checks if a given tile is within the map bounds\r\n     * @param {Vector} tile\r\n     * @returns {boolean}\r\n     */\r\n    isValidTile(tile) {\r\n        if (G_IS_DEV) {\r\n            assert(tile instanceof Vector, \"tile is not a vector\");\r\n        }\r\n        return Number.isInteger(tile.x) && Number.isInteger(tile.y);\r\n    }\r\n\r\n    /**\r\n     * Returns the tile content of a given tile\r\n     * @param {Vector} tile\r\n     * @param {enumLayer} layer\r\n     * @returns {Entity} Entity or null\r\n     */\r\n    getTileContent(tile, layer) {\r\n        if (G_IS_DEV) {\r\n            this.internalCheckTile(tile);\r\n        }\r\n        const chunk = this.getChunkAtTileOrNull(tile.x, tile.y);\r\n        return chunk && chunk.getLayerContentFromWorldCoords(tile.x, tile.y, layer);\r\n    }\r\n\r\n    /**\r\n     * Returns the lower layers content of the given tile\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {BaseItem=}\r\n     */\r\n    getLowerLayerContentXY(x, y) {\r\n        return this.getOrCreateChunkAtTile(x, y).getLowerLayerFromWorldCoords(x, y);\r\n    }\r\n\r\n    /**\r\n     * Returns the tile content of a given tile\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {enumLayer} layer\r\n     * @returns {Entity} Entity or null\r\n     */\r\n    getLayerContentXY(x, y, layer) {\r\n        const chunk = this.getChunkAtTileOrNull(x, y);\r\n        return chunk && chunk.getLayerContentFromWorldCoords(x, y, layer);\r\n    }\r\n\r\n    /**\r\n     * Returns the tile contents of a given tile\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @returns {Array<Entity>} Entity or null\r\n     */\r\n    getLayersContentsMultipleXY(x, y) {\r\n        const chunk = this.getChunkAtTileOrNull(x, y);\r\n        if (!chunk) {\r\n            return [];\r\n        }\r\n        return chunk.getLayersContentsMultipleFromWorldCoords(x, y);\r\n    }\r\n\r\n    /**\r\n     * Checks if the tile is used\r\n     * @param {Vector} tile\r\n     * @param {enumLayer} layer\r\n     * @returns {boolean}\r\n     */\r\n    isTileUsed(tile, layer) {\r\n        if (G_IS_DEV) {\r\n            this.internalCheckTile(tile);\r\n        }\r\n        const chunk = this.getChunkAtTileOrNull(tile.x, tile.y);\r\n        return chunk && chunk.getLayerContentFromWorldCoords(tile.x, tile.y, layer) != null;\r\n    }\r\n\r\n    /**\r\n     * Checks if the tile is used\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {enumLayer} layer\r\n     * @returns {boolean}\r\n     */\r\n    isTileUsedXY(x, y, layer) {\r\n        const chunk = this.getChunkAtTileOrNull(x, y);\r\n        return chunk && chunk.getLayerContentFromWorldCoords(x, y, layer) != null;\r\n    }\r\n\r\n    /**\r\n     * Sets the tiles content\r\n     * @param {Vector} tile\r\n     * @param {Entity} entity\r\n     */\r\n    setTileContent(tile, entity) {\r\n        if (G_IS_DEV) {\r\n            this.internalCheckTile(tile);\r\n        }\r\n\r\n        this.getOrCreateChunkAtTile(tile.x, tile.y).setLayerContentFromWorldCords(\r\n            tile.x,\r\n            tile.y,\r\n            entity,\r\n            entity.layer\r\n        );\r\n\r\n        const staticComponent = entity.components.StaticMapEntity;\r\n        assert(staticComponent, \"Can only place static map entities in tiles\");\r\n    }\r\n\r\n    /**\r\n     * Places an entity with the StaticMapEntity component\r\n     * @param {Entity} entity\r\n     */\r\n    placeStaticEntity(entity) {\r\n        assert(entity.components.StaticMapEntity, \"Entity is not static\");\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const rect = staticComp.getTileSpaceBounds();\r\n        for (let dx = 0; dx < rect.w; ++dx) {\r\n            for (let dy = 0; dy < rect.h; ++dy) {\r\n                const x = rect.x + dx;\r\n                const y = rect.y + dy;\r\n                this.getOrCreateChunkAtTile(x, y).setLayerContentFromWorldCords(x, y, entity, entity.layer);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes an entity with the StaticMapEntity component\r\n     * @param {Entity} entity\r\n     */\r\n    removeStaticEntity(entity) {\r\n        assert(entity.components.StaticMapEntity, \"Entity is not static\");\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const rect = staticComp.getTileSpaceBounds();\r\n        for (let dx = 0; dx < rect.w; ++dx) {\r\n            for (let dy = 0; dy < rect.h; ++dy) {\r\n                const x = rect.x + dx;\r\n                const y = rect.y + dy;\r\n                this.getOrCreateChunkAtTile(x, y).setLayerContentFromWorldCords(x, y, null, entity.layer);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Internal\r\n\r\n    /**\r\n     * Checks a given tile for validty\r\n     * @param {Vector} tile\r\n     */\r\n    internalCheckTile(tile) {\r\n        assert(tile instanceof Vector, \"tile is not a vector: \" + tile);\r\n        assert(tile.x % 1 === 0, \"Tile X is not a valid integer: \" + tile.x);\r\n        assert(tile.y % 1 === 0, \"Tile Y is not a valid integer: \" + tile.y);\r\n    }\r\n}\r\n","import { GameRoot, enumLayer } from \"./root\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { clamp, fastArrayDeleteValueIfContained, make2DUndefinedArray } from \"../core/utils\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { BaseItem } from \"./base_item\";\r\nimport { enumColors, allColorData } from \"./colors\";\r\nimport { allShapeData } from \"./shapes\";\r\nimport { Entity } from \"./entity\";\r\nimport { ColorItem } from \"./items/color_item\";\r\nimport { ShapeItem } from \"./items/shape_item\";\r\nimport { enumSubShape } from \"./shape_definition\";\r\nimport { RandomNumberGenerator } from \"../core/rng\";\r\n\r\nconst logger = createLogger(\"map_chunk\");\r\n\r\nexport class MapChunk {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    constructor(root, x, y) {\r\n        this.root = root;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.tileX = x * globalConfig.mapChunkSize;\r\n        this.tileY = y * globalConfig.mapChunkSize;\r\n\r\n        /** @type {Array<Array<?Entity>>} */\r\n        this.contents = make2DUndefinedArray(\r\n            globalConfig.mapChunkSize,\r\n            globalConfig.mapChunkSize,\r\n            \"map-chunk@\" + this.x + \"|\" + this.y\r\n        );\r\n\r\n        /** @type {Array<Array<?Entity>>} */\r\n        this.wireContents = make2DUndefinedArray(\r\n            globalConfig.mapChunkSize,\r\n            globalConfig.mapChunkSize,\r\n            \"map-chunk-wires@\" + this.x + \"|\" + this.y\r\n        );\r\n\r\n        /** @type {Array<Array<?BaseItem>>} */\r\n        this.lowerLayer = make2DUndefinedArray(\r\n            globalConfig.mapChunkSize,\r\n            globalConfig.mapChunkSize,\r\n            \"map-chunk-lower@\" + this.x + \"|\" + this.y\r\n        );\r\n\r\n        /** @type {Array<Entity>} */\r\n        this.containedEntities = [];\r\n\r\n        /**\r\n         * Store which patches we have so we can render them in the overview\r\n         * @type {Array<{pos: Vector, item: BaseItem, size: number }>}\r\n         */\r\n        this.patches = [];\r\n\r\n        this.generateLowerLayer();\r\n    }\r\n\r\n    /**\r\n     * Generates a patch filled with the given item\r\n     * @param {RandomNumberGenerator} rng\r\n     * @param {number} patchSize\r\n     * @param {BaseItem} item\r\n     * @param {number=} overrideX Override the X position of the patch\r\n     * @param {number=} overrideY Override the Y position of the patch\r\n     */\r\n    internalGeneratePatch(rng, patchSize, item, overrideX = null, overrideY = null) {\r\n        const border = Math.ceil(patchSize / 2 + 3);\r\n\r\n        // Find a position within the chunk which is not blocked\r\n        let patchX = rng.nextIntRange(border, globalConfig.mapChunkSize - border - 1);\r\n        let patchY = rng.nextIntRange(border, globalConfig.mapChunkSize - border - 1);\r\n\r\n        if (overrideX !== null) {\r\n            patchX = overrideX;\r\n        }\r\n\r\n        if (overrideY !== null) {\r\n            patchY = overrideY;\r\n        }\r\n\r\n        const avgPos = new Vector(0, 0);\r\n        let patchesDrawn = 0;\r\n\r\n        // Each patch consists of multiple circles\r\n        const numCircles = patchSize;\r\n\r\n        for (let i = 0; i <= numCircles; ++i) {\r\n            // Determine circle parameters\r\n            const circleRadius = Math.min(1 + i, patchSize);\r\n            const circleRadiusSquare = circleRadius * circleRadius;\r\n            const circleOffsetRadius = (numCircles - i) / 2 + 2;\r\n\r\n            // We draw an elipsis actually\r\n            const circleScaleX = rng.nextRange(0.9, 1.1);\r\n            const circleScaleY = rng.nextRange(0.9, 1.1);\r\n\r\n            const circleX = patchX + rng.nextIntRange(-circleOffsetRadius, circleOffsetRadius);\r\n            const circleY = patchY + rng.nextIntRange(-circleOffsetRadius, circleOffsetRadius);\r\n\r\n            for (let dx = -circleRadius * circleScaleX - 2; dx <= circleRadius * circleScaleX + 2; ++dx) {\r\n                for (let dy = -circleRadius * circleScaleY - 2; dy <= circleRadius * circleScaleY + 2; ++dy) {\r\n                    const x = Math.round(circleX + dx);\r\n                    const y = Math.round(circleY + dy);\r\n                    if (x >= 0 && x < globalConfig.mapChunkSize && y >= 0 && y <= globalConfig.mapChunkSize) {\r\n                        const originalDx = dx / circleScaleX;\r\n                        const originalDy = dy / circleScaleY;\r\n                        if (originalDx * originalDx + originalDy * originalDy <= circleRadiusSquare) {\r\n                            if (!this.lowerLayer[x][y]) {\r\n                                this.lowerLayer[x][y] = item;\r\n                                ++patchesDrawn;\r\n                                avgPos.x += x;\r\n                                avgPos.y += y;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // logger.warn(\"Tried to spawn resource out of chunk\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.patches.push({\r\n            pos: avgPos.divideScalar(patchesDrawn),\r\n            item,\r\n            size: patchSize,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Generates a color patch\r\n     * @param {RandomNumberGenerator} rng\r\n     * @param {number} colorPatchSize\r\n     * @param {number} distanceToOriginInChunks\r\n     */\r\n    internalGenerateColorPatch(rng, colorPatchSize, distanceToOriginInChunks) {\r\n        // First, determine available colors\r\n        let availableColors = [];\r\n        for (let c in enumColors) {\r\n            c = enumColors[c];\r\n            if (\r\n                allColorData[c] &&\r\n                allColorData[c].spawnable &&\r\n                allColorData[c].minDistance <= distanceToOriginInChunks\r\n            ) {\r\n                availableColors.push(c);\r\n            }\r\n        }\r\n        this.internalGeneratePatch(rng, colorPatchSize, new ColorItem(rng.choice(availableColors)));\r\n    }\r\n\r\n    /**\r\n     * Generates a shape patch\r\n     * @param {RandomNumberGenerator} rng\r\n     * @param {number} shapePatchSize\r\n     * @param {number} distanceToOriginInChunks\r\n     */\r\n    internalGenerateShapePatch(rng, shapePatchSize, distanceToOriginInChunks) {\r\n        /** @type {[enumSubShape, enumSubShape, enumSubShape, enumSubShape]} */\r\n        let quads = null;\r\n\r\n        let weights = {};\r\n        for (let s in allShapeData) {\r\n            const data = allShapeData[s];\r\n            if (data.disabled || !data.spawnable || distanceToOriginInChunks < data.minDistance) {\r\n                continue;\r\n            }\r\n            const chance = Math.round(\r\n                clamp(\r\n                    data.minChance + (distanceToOriginInChunks - data.minDistance) * data.distChance,\r\n                    0,\r\n                    data.maxChance\r\n                )\r\n            );\r\n            if (chance) {\r\n                weights[data.id] = chance;\r\n            }\r\n        }\r\n        quads = [\r\n            this.internalGenerateRandomSubShape(rng, weights),\r\n            this.internalGenerateRandomSubShape(rng, weights),\r\n            this.internalGenerateRandomSubShape(rng, weights),\r\n            this.internalGenerateRandomSubShape(rng, weights),\r\n        ];\r\n        if (distanceToOriginInChunks < 10) {\r\n            // Initial chunk patches always have the same shape\r\n            quads = [quads[0], quads[0], quads[0], quads[0]];\r\n        } else if (distanceToOriginInChunks < 15) {\r\n            // Later patches can also have mixed ones\r\n            quads = [quads[0], quads[0], quads[1], quads[1]];\r\n        } else {\r\n            // if (quads[0] == quads[2] && quads[0] != quads[3] && quads[0] != quads[1]) {\r\n            //     quads = [quads[0], quads[2], quads[1], quads[3]];\r\n            // }\r\n            // if (quads[1] == quads[3] && quads[1] != quads[0] && quads[1] != quads[2]) {\r\n            //     quads = [quads[0], quads[2], quads[1], quads[3]];\r\n            // }\r\n        }\r\n\r\n        if (\r\n            quads.filter(q => q == quads[0]).length > allShapeData[quads[0]].maxQuarters ||\r\n            quads.filter(q => q == quads[1]).length > allShapeData[quads[1]].maxQuarters ||\r\n            quads.filter(q => q == quads[2]).length > allShapeData[quads[2]].maxQuarters\r\n        ) {\r\n            return this.internalGenerateShapePatch(rng, shapePatchSize, distanceToOriginInChunks);\r\n        }\r\n\r\n        let colors = quads.map(q => allShapeData[q].spawnColor);\r\n\r\n        const definition = this.root.shapeDefinitionMgr.getDefinitionFromSimpleShapesAndColors(quads, colors);\r\n        this.internalGeneratePatch(rng, shapePatchSize, new ShapeItem(definition));\r\n    }\r\n\r\n    /**\r\n     * Chooses a random shape with the given weights\r\n     * @param {RandomNumberGenerator} rng\r\n     * @param {Object.<enumSubShape, number>} weights\r\n     * @returns {enumSubShape}\r\n     */\r\n    internalGenerateRandomSubShape(rng, weights) {\r\n        // @ts-ignore\r\n        const sum = Object.values(weights).reduce((a, b) => a + b, 0);\r\n\r\n        const chosenNumber = rng.nextIntRange(0, sum - 1);\r\n        let accumulated = 0;\r\n        for (const key in weights) {\r\n            const weight = weights[key];\r\n            if (accumulated + weight > chosenNumber) {\r\n                return key;\r\n            }\r\n            accumulated += weight;\r\n        }\r\n\r\n        logger.error(\"Failed to find matching shape in chunk generation\");\r\n        return enumSubShape.circle;\r\n    }\r\n\r\n    /**\r\n     * Generates the lower layer \"terrain\"\r\n     */\r\n    generateLowerLayer() {\r\n        const rng = new RandomNumberGenerator(this.x + \"|\" + this.y + \"|\" + this.root.map.seed);\r\n\r\n        if (this.generatePredefined(rng)) {\r\n            return;\r\n        }\r\n\r\n        const chunkCenter = new Vector(this.x, this.y).addScalar(0.5);\r\n        const distanceToOriginInChunks = Math.round(chunkCenter.length());\r\n\r\n        // Determine how likely it is that there is a color patch\r\n        const colorPatchChance = 0.9 - clamp(distanceToOriginInChunks / 25, 0, 1) * 0.5;\r\n\r\n        if (rng.next() < colorPatchChance / 4) {\r\n            const colorPatchSize = Math.max(2, Math.round(1 + clamp(distanceToOriginInChunks / 8, 0, 4)));\r\n            this.internalGenerateColorPatch(rng, colorPatchSize, distanceToOriginInChunks);\r\n        }\r\n\r\n        // Determine how likely it is that there is a shape patch\r\n        const shapePatchChance = 0.9 - clamp(distanceToOriginInChunks / 25, 0, 1) * 0.5;\r\n        if (rng.next() < shapePatchChance / 4) {\r\n            const shapePatchSize = Math.max(2, Math.round(1 + clamp(distanceToOriginInChunks / 8, 0, 4)));\r\n            this.internalGenerateShapePatch(rng, shapePatchSize, distanceToOriginInChunks);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if this chunk has predefined contents, and if so returns true and generates the\r\n     * predefined contents\r\n     * @param {RandomNumberGenerator} rng\r\n     * @returns {boolean}\r\n     */\r\n    generatePredefined(rng) {\r\n        if (this.x === 0 && this.y === 0) {\r\n            this.internalGeneratePatch(rng, 2, new ColorItem(enumColors.red), 7, 7);\r\n            return true;\r\n        }\r\n        if (this.x === -1 && this.y === 0) {\r\n            const definition = this.root.shapeDefinitionMgr.getShapeFromShortKey(\"CuCuCuCu\");\r\n            this.internalGeneratePatch(rng, 2, new ShapeItem(definition), globalConfig.mapChunkSize - 9, 7);\r\n            return true;\r\n        }\r\n        if (this.x === 0 && this.y === -1) {\r\n            const definition = this.root.shapeDefinitionMgr.getShapeFromShortKey(\"RuRuRuRu\");\r\n            this.internalGeneratePatch(rng, 2, new ShapeItem(definition), 5, globalConfig.mapChunkSize - 7);\r\n            return true;\r\n        }\r\n\r\n        if (this.x === -1 && this.y === -1) {\r\n            this.internalGeneratePatch(rng, 2, new ColorItem(enumColors.green));\r\n            return true;\r\n        }\r\n\r\n        if (this.x === 5 && this.y === -2) {\r\n            const definition = this.root.shapeDefinitionMgr.getShapeFromShortKey(\"SuSuSuSu\");\r\n            this.internalGeneratePatch(rng, 2, new ShapeItem(definition), 5, globalConfig.mapChunkSize - 7);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} worldX\r\n     * @param {number} worldY\r\n     * @returns {BaseItem=}\r\n     */\r\n    getLowerLayerFromWorldCoords(worldX, worldY) {\r\n        const localX = worldX - this.tileX;\r\n        const localY = worldY - this.tileY;\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n        return this.lowerLayer[localX][localY] || null;\r\n    }\r\n\r\n    /**\r\n     * Returns the contents of this chunk from the given world space coordinates\r\n     * @param {number} worldX\r\n     * @param {number} worldY\r\n     * @returns {Entity=}\r\n     */\r\n    getTileContentFromWorldCoords(worldX, worldY) {\r\n        const localX = worldX - this.tileX;\r\n        const localY = worldY - this.tileY;\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n        return this.contents[localX][localY] || null;\r\n    }\r\n\r\n    /**\r\n     * Returns the contents of this chunk from the given world space coordinates\r\n     * @param {number} worldX\r\n     * @param {number} worldY\r\n     * @param {enumLayer} layer\r\n     * @returns {Entity=}\r\n     */\r\n    getLayerContentFromWorldCoords(worldX, worldY, layer) {\r\n        const localX = worldX - this.tileX;\r\n        const localY = worldY - this.tileY;\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n        if (layer === enumLayer.regular) {\r\n            return this.contents[localX][localY] || null;\r\n        } else {\r\n            return this.wireContents[localX][localY] || null;\r\n        }\r\n    }\r\n    /**\r\n     * Returns the contents of this chunk from the given world space coordinates\r\n     * @param {number} worldX\r\n     * @param {number} worldY\r\n     * @returns {Array<Entity>}\r\n     */\r\n    getLayersContentsMultipleFromWorldCoords(worldX, worldY) {\r\n        const localX = worldX - this.tileX;\r\n        const localY = worldY - this.tileY;\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n\r\n        const regularContent = this.contents[localX][localY];\r\n        const wireContent = this.wireContents[localX][localY];\r\n\r\n        const result = [];\r\n        if (regularContent) {\r\n            result.push(regularContent);\r\n        }\r\n        if (wireContent) {\r\n            result.push(wireContent);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns the chunks contents from the given local coordinates\r\n     * @param {number} localX\r\n     * @param {number} localY\r\n     * @returns {Entity=}\r\n     */\r\n    getTileContentFromLocalCoords(localX, localY) {\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n\r\n        return this.contents[localX][localY] || null;\r\n    }\r\n\r\n    /**\r\n     * Sets the chunks contents\r\n     * @param {number} tileX\r\n     * @param {number} tileY\r\n     * @param {Entity=} contents\r\n     * @param {enumLayer} layer\r\n     */\r\n    setLayerContentFromWorldCords(tileX, tileY, contents, layer) {\r\n        const localX = tileX - this.tileX;\r\n        const localY = tileY - this.tileY;\r\n        assert(localX >= 0, \"Local X is < 0\");\r\n        assert(localY >= 0, \"Local Y is < 0\");\r\n        assert(localX < globalConfig.mapChunkSize, \"Local X is >= chunk size\");\r\n        assert(localY < globalConfig.mapChunkSize, \"Local Y is >= chunk size\");\r\n\r\n        let oldContents;\r\n        if (layer === enumLayer.regular) {\r\n            oldContents = this.contents[localX][localY];\r\n        } else {\r\n            oldContents = this.wireContents[localX][localY];\r\n        }\r\n\r\n        assert(contents === null || !oldContents, \"Tile already used: \" + tileX + \" / \" + tileY);\r\n\r\n        if (oldContents) {\r\n            // Remove from list\r\n            fastArrayDeleteValueIfContained(this.containedEntities, oldContents);\r\n        }\r\n\r\n        if (layer === enumLayer.regular) {\r\n            this.contents[localX][localY] = contents;\r\n        } else {\r\n            this.wireContents[localX][localY] = contents;\r\n        }\r\n\r\n        if (contents) {\r\n            if (this.containedEntities.indexOf(contents) < 0) {\r\n                this.containedEntities.push(contents);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { MapChunk } from \"./map_chunk\";\r\nimport { GameRoot } from \"./root\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { round1Digit } from \"../core/utils\";\r\nimport { Rectangle } from \"../core/rectangle\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { smoothenDpi } from \"../core/dpi_manager\";\r\nimport { THEME } from \"./theme\";\r\n\r\nconst logger = createLogger(\"chunk\");\r\nconst chunkSizePixels = globalConfig.mapChunkSize * globalConfig.tileSize;\r\n\r\nexport class MapChunkView extends MapChunk {\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\r\n    constructor(root, x, y) {\r\n        super(root, x, y);\r\n\r\n        /**\r\n         * Whenever something changes, we increase this number - so we know we need to redraw\r\n         */\r\n        this.renderIteration = 0;\r\n\r\n        this.markDirty();\r\n    }\r\n\r\n    /**\r\n     * Marks this chunk as dirty, rerendering all caches\r\n     */\r\n    markDirty() {\r\n        ++this.renderIteration;\r\n        this.renderKey = this.x + \"/\" + this.y + \"@\" + this.renderIteration;\r\n    }\r\n\r\n    /**\r\n     * Draws the background layer\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawBackgroundLayer(parameters) {\r\n        const systems = this.root.systemMgr.systems;\r\n        systems.mapResources.drawChunk(parameters, this);\r\n        systems.belt.drawChunk(parameters, this);\r\n    }\r\n\r\n    /**\r\n     * Draws the foreground layer\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawForegroundLayer(parameters) {\r\n        const systems = this.root.systemMgr.systems;\r\n        systems.miner.drawChunk(parameters, this);\r\n        systems.staticMapEntities.drawChunk(parameters, this);\r\n    }\r\n\r\n    /**\r\n     * Draws the wires layer\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawWiresLayer(parameters) {\r\n        const systems = this.root.systemMgr.systems;\r\n        systems.belt.drawWiresChunk(parameters, this);\r\n    }\r\n\r\n    /**\r\n     * Draws the wires layer\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawWiresForegroundLayer(parameters) {\r\n        const systems = this.root.systemMgr.systems;\r\n        systems.staticMapEntities.drawWiresChunk(parameters, this);\r\n    }\r\n}\r\n","import { globalConfig } from \"../core/config\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { BaseMap } from \"./map\";\r\nimport { freeCanvas, makeOffscreenBuffer } from \"../core/buffer_utils\";\r\nimport { Entity } from \"./entity\";\r\nimport { THEME } from \"./theme\";\r\nimport { MapChunkView } from \"./map_chunk_view\";\r\n\r\n/**\r\n * This is the view of the map, it extends the map which is the raw model and allows\r\n * to draw it\r\n */\r\nexport class MapView extends BaseMap {\r\n    constructor(root) {\r\n        super(root);\r\n\r\n        /**\r\n         * DPI of the background cache images, required in some places\r\n         */\r\n        this.backgroundCacheDPI = 2;\r\n\r\n        /**\r\n         * The cached background sprite, containing the flat background\r\n         * @type {HTMLCanvasElement} */\r\n        this.cachedBackgroundCanvas = null;\r\n\r\n        /** @type {CanvasRenderingContext2D} */\r\n        this.cachedBackgroundContext = null;\r\n        /**\r\n         * Cached pattern of the stripes background\r\n         * @type {CanvasPattern} */\r\n        this.cachedBackgroundPattern = null;\r\n\r\n        this.internalInitializeCachedBackgroundCanvases();\r\n        this.root.signals.aboutToDestruct.add(this.cleanup, this);\r\n\r\n        this.root.signals.entityAdded.add(this.onEntityChanged, this);\r\n        this.root.signals.entityDestroyed.add(this.onEntityChanged, this);\r\n        this.root.signals.entityChanged.add(this.onEntityChanged, this);\r\n    }\r\n\r\n    cleanup() {\r\n        freeCanvas(this.cachedBackgroundCanvas);\r\n        this.cachedBackgroundCanvas = null;\r\n        this.cachedBackgroundPattern = null;\r\n    }\r\n\r\n    /**\r\n     * Called when an entity was added, removed or changed\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityChanged(entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        if (staticComp) {\r\n            const rect = staticComp.getTileSpaceBounds();\r\n            for (let x = rect.x; x <= rect.right(); ++x) {\r\n                for (let y = rect.y; y <= rect.bottom(); ++y) {\r\n                    this.root.map.getOrCreateChunkAtTile(x, y).markDirty();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws all static entities like buildings etc.\r\n     * @param {DrawParameters} drawParameters\r\n     */\r\n    drawStaticEntityDebugOverlays(drawParameters) {\r\n        const cullRange = drawParameters.visibleRect.toTileCullRectangle();\r\n        const top = cullRange.top();\r\n        const right = cullRange.right();\r\n        const bottom = cullRange.bottom();\r\n        const left = cullRange.left();\r\n\r\n        const border = 1;\r\n\r\n        const minY = top - border;\r\n        const maxY = bottom + border;\r\n        const minX = left - border;\r\n        const maxX = right + border - 1;\r\n\r\n        // Render y from top down for proper blending\r\n        for (let y = minY; y <= maxY; ++y) {\r\n            for (let x = minX; x <= maxX; ++x) {\r\n                // const content = this.tiles[x][y];\r\n                const chunk = this.getChunkAtTileOrNull(x, y);\r\n                if (!chunk) {\r\n                    continue;\r\n                }\r\n                const content = chunk.getTileContentFromWorldCoords(x, y);\r\n                if (content) {\r\n                    let isBorder = x <= left - 1 || x >= right + 1 || y <= top - 1 || y >= bottom + 1;\r\n                    if (!isBorder) {\r\n                        content.drawDebugOverlays(drawParameters);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes all canvases used for background rendering\r\n     */\r\n    internalInitializeCachedBackgroundCanvases() {\r\n        // Background canvas\r\n        const dims = globalConfig.tileSize;\r\n        const dpi = this.backgroundCacheDPI;\r\n        const [canvas, context] = makeOffscreenBuffer(dims * dpi, dims * dpi, {\r\n            smooth: false,\r\n            label: \"map-cached-bg\",\r\n        });\r\n        context.scale(dpi, dpi);\r\n\r\n        context.fillStyle = THEME.map.background;\r\n        context.fillRect(0, 0, dims, dims);\r\n\r\n        const borderWidth = THEME.map.gridLineWidth;\r\n        context.fillStyle = THEME.map.grid;\r\n        context.fillRect(0, 0, dims, borderWidth);\r\n        context.fillRect(0, borderWidth, borderWidth, dims);\r\n\r\n        context.fillRect(dims - borderWidth, borderWidth, borderWidth, dims - 2 * borderWidth);\r\n        context.fillRect(borderWidth, dims - borderWidth, dims, borderWidth);\r\n\r\n        this.cachedBackgroundCanvas = canvas;\r\n        this.cachedBackgroundContext = context;\r\n    }\r\n\r\n    /**\r\n     * Draws the maps foreground\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawForeground(parameters) {\r\n        this.drawVisibleChunks(parameters, MapChunkView.prototype.drawForegroundLayer);\r\n    }\r\n\r\n    /**\r\n     * Calls a given method on all given chunks\r\n     * @param {DrawParameters} parameters\r\n     * @param {function} method\r\n     */\r\n    drawVisibleChunks(parameters, method) {\r\n        const cullRange = parameters.visibleRect.toTileCullRectangle();\r\n        const top = cullRange.top();\r\n        const right = cullRange.right();\r\n        const bottom = cullRange.bottom();\r\n        const left = cullRange.left();\r\n\r\n        const border = 1;\r\n        const minY = top - border;\r\n        const maxY = bottom + border;\r\n        const minX = left - border;\r\n        const maxX = right + border - 1;\r\n\r\n        const chunkStartX = Math.floor(minX / globalConfig.mapChunkSize);\r\n        const chunkStartY = Math.floor(minY / globalConfig.mapChunkSize);\r\n\r\n        const chunkEndX = Math.ceil(maxX / globalConfig.mapChunkSize);\r\n        const chunkEndY = Math.ceil(maxY / globalConfig.mapChunkSize);\r\n\r\n        // Render y from top down for proper blending\r\n        for (let chunkX = chunkStartX; chunkX <= chunkEndX; ++chunkX) {\r\n            for (let chunkY = chunkStartY; chunkY <= chunkEndY; ++chunkY) {\r\n                const chunk = this.root.map.getChunk(chunkX, chunkY, true);\r\n                method.call(chunk, parameters);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the wires background\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawWiresLayer(parameters) {\r\n        this.drawVisibleChunks(parameters, MapChunkView.prototype.drawWiresLayer);\r\n    }\r\n\r\n    /**\r\n     * Draws the wires foreground\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawWiresForegroundLayer(parameters) {\r\n        this.drawVisibleChunks(parameters, MapChunkView.prototype.drawWiresForegroundLayer);\r\n    }\r\n\r\n    /**\r\n     * Draws the map background\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawBackground(parameters) {\r\n        // If not using prerendered, draw background\r\n        if (parameters.zoomLevel > globalConfig.mapChunkPrerenderMinZoom) {\r\n            if (!this.cachedBackgroundPattern) {\r\n                this.cachedBackgroundPattern = parameters.context.createPattern(\r\n                    this.cachedBackgroundCanvas,\r\n                    \"repeat\"\r\n                );\r\n            }\r\n\r\n            const dpi = this.backgroundCacheDPI;\r\n            parameters.context.scale(1 / dpi, 1 / dpi);\r\n\r\n            parameters.context.fillStyle = this.cachedBackgroundPattern;\r\n            parameters.context.fillRect(\r\n                parameters.visibleRect.x * dpi,\r\n                parameters.visibleRect.y * dpi,\r\n                parameters.visibleRect.w * dpi,\r\n                parameters.visibleRect.h * dpi\r\n            );\r\n            parameters.context.scale(dpi, dpi);\r\n        }\r\n\r\n        this.drawVisibleChunks(parameters, MapChunkView.prototype.drawBackgroundLayer);\r\n\r\n        if (G_IS_DEV && globalConfig.debug.showChunkBorders) {\r\n            const cullRange = parameters.visibleRect.toTileCullRectangle();\r\n            const top = cullRange.top();\r\n            const right = cullRange.right();\r\n            const bottom = cullRange.bottom();\r\n            const left = cullRange.left();\r\n\r\n            const border = 1;\r\n            const minY = top - border;\r\n            const maxY = bottom + border;\r\n            const minX = left - border;\r\n            const maxX = right + border - 1;\r\n\r\n            const chunkStartX = Math.floor(minX / globalConfig.mapChunkSize);\r\n            const chunkStartY = Math.floor(minY / globalConfig.mapChunkSize);\r\n\r\n            const chunkEndX = Math.ceil(maxX / globalConfig.mapChunkSize);\r\n            const chunkEndY = Math.ceil(maxY / globalConfig.mapChunkSize);\r\n\r\n            // Render y from top down for proper blending\r\n            for (let chunkX = chunkStartX; chunkX <= chunkEndX; ++chunkX) {\r\n                for (let chunkY = chunkStartY; chunkY <= chunkEndY; ++chunkY) {\r\n                    parameters.context.fillStyle = \"#ffaaaa\";\r\n                    parameters.context.fillRect(\r\n                        chunkX * globalConfig.mapChunkSize * globalConfig.tileSize,\r\n                        chunkY * globalConfig.mapChunkSize * globalConfig.tileSize,\r\n                        globalConfig.mapChunkSize * globalConfig.tileSize,\r\n                        3\r\n                    );\r\n                    parameters.context.fillRect(\r\n                        chunkX * globalConfig.mapChunkSize * globalConfig.tileSize,\r\n                        chunkY * globalConfig.mapChunkSize * globalConfig.tileSize,\r\n                        3,\r\n                        globalConfig.mapChunkSize * globalConfig.tileSize\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Loader } from \"../core/loader\";\r\nimport { AtlasSprite } from \"../core/sprites\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { SOUNDS } from \"../platform/sound\";\r\nimport { StaticMapEntityComponent } from \"./components/static_map_entity\";\r\nimport { Entity } from \"./entity\";\r\nimport { enumLayer, GameRoot } from \"./root\";\r\nimport { getCodeFromBuildingData } from \"./building_codes\";\r\n\r\nexport const defaultBuildingVariant = \"default\";\r\n\r\nexport class MetaBuilding {\r\n    /**\r\n     *\r\n     * @param {string} id Building id\r\n     */\r\n    constructor(id) {\r\n        this.id = id;\r\n    }\r\n\r\n    /**\r\n     * Returns the id of this building\r\n     */\r\n    getId() {\r\n        return this.id;\r\n    }\r\n\r\n    /**\r\n     * Returns the edit layer of the building\r\n     * @returns {enumLayer}\r\n     */\r\n    getLayer() {\r\n        return enumLayer.regular;\r\n    }\r\n\r\n    /**\r\n     * Should return the dimensions of the building\r\n     */\r\n    getDimensions(variant = defaultBuildingVariant) {\r\n        return new Vector(1, 1);\r\n    }\r\n\r\n    /**\r\n     * Returns whether the building has the direction lock switch available\r\n     */\r\n    getHasDirectionLockAvailable() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Whether to stay in placement mode after having placed a building\r\n     */\r\n    getStayInPlacementMode() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Should return additional statistics about this building\r\n     * @param {GameRoot} root\r\n     * @param {string} variant\r\n     * @returns {Array<[string, string]>}\r\n     */\r\n    getAdditionalStatistics(root, variant) {\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Whether to flip the orientation after a building has been placed - useful\r\n     * for tunnels.\r\n     */\r\n    getFlipOrientationAfterPlacement() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Whether to rotate automatically in the dragging direction while placing\r\n     * @param {string} variant\r\n     */\r\n    getRotateAutomaticallyWhilePlacing(variant) {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns the placement sound\r\n     * @returns {string}\r\n     */\r\n    getPlacementSound() {\r\n        return SOUNDS.placeBuilding;\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    getAvailableVariants(root) {\r\n        return [defaultBuildingVariant];\r\n    }\r\n\r\n    /**\r\n     * Returns a preview sprite\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getPreviewSprite(rotationVariant = 0, variant = defaultBuildingVariant) {\r\n        return Loader.getSprite(\r\n            \"sprites/buildings/\" +\r\n                this.id +\r\n                (variant === defaultBuildingVariant ? \"\" : \"-\" + variant) +\r\n                \".png\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns a sprite for blueprints\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getBlueprintSprite(rotationVariant = 0, variant = defaultBuildingVariant) {\r\n        return Loader.getSprite(\r\n            \"sprites/blueprints/\" +\r\n                this.id +\r\n                (variant === defaultBuildingVariant ? \"\" : \"-\" + variant) +\r\n                \".png\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns whether this building is rotateable\r\n     * @param {string} variant\r\n     * @returns {boolean}\r\n     */\r\n    isRotateable(variant) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this building is unlocked for the given game\r\n     * @param {GameRoot} root\r\n     */\r\n    getIsUnlocked(root) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Should return a silhouette color for the map overview or null if not set\r\n     */\r\n    getSilhouetteColor() {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Creates the entity without placing it\r\n     * @param {object} param0\r\n     * @param {GameRoot} param0.root\r\n     * @param {Vector} param0.origin Origin tile\r\n     * @param {number=} param0.rotation Rotation\r\n     * @param {number} param0.originalRotation Original Rotation\r\n     * @param {number} param0.rotationVariant Rotation variant\r\n     * @param {string} param0.variant\r\n     */\r\n    createEntity({ root, origin, rotation, originalRotation, rotationVariant, variant }) {\r\n        const entity = new Entity(root);\r\n        entity.layer = this.getLayer();\r\n        entity.addComponent(\r\n            new StaticMapEntityComponent({\r\n                origin: new Vector(origin.x, origin.y),\r\n                rotation,\r\n                originalRotation,\r\n                tileSize: this.getDimensions(variant).copy(),\r\n                code: getCodeFromBuildingData(this, variant, rotationVariant),\r\n            })\r\n        );\r\n        this.setupEntityComponents(entity, root);\r\n        this.updateVariants(entity, rotationVariant, variant);\r\n        return entity;\r\n    }\r\n\r\n    /**\r\n     * Returns the sprite for a given variant\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     * @returns {AtlasSprite}\r\n     */\r\n    getSprite(rotationVariant, variant) {\r\n        return Loader.getSprite(\r\n            \"sprites/buildings/\" +\r\n                this.id +\r\n                (variant === defaultBuildingVariant ? \"\" : \"-\" + variant) +\r\n                \".png\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Should compute the optimal rotation variant on the given tile\r\n     * @param {object} param0\r\n     * @param {GameRoot} param0.root\r\n     * @param {Vector} param0.tile\r\n     * @param {number} param0.rotation\r\n     * @param {string} param0.variant\r\n     * @param {string} param0.layer\r\n     * @return {{ rotation: number, rotationVariant: number, connectedEntities?: Array<Entity> }}\r\n     */\r\n    computeOptimalDirectionAndRotationVariantAtTile({ root, tile, rotation, variant, layer }) {\r\n        if (!this.isRotateable(variant)) {\r\n            return {\r\n                rotation: 0,\r\n                rotationVariant: 0,\r\n            };\r\n        }\r\n        return {\r\n            rotation,\r\n            rotationVariant: 0,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Should update the entity to match the given variants\r\n     * @param {Entity} entity\r\n     * @param {number} rotationVariant\r\n     * @param {string} variant\r\n     */\r\n    updateVariants(entity, rotationVariant, variant) {}\r\n\r\n    // PRIVATE INTERFACE\r\n\r\n    /**\r\n     * Should setup the entity components\r\n     * @param {Entity} entity\r\n     * @param {GameRoot} root\r\n     */\r\n    setupEntityComponents(entity, root) {\r\n        abstract;\r\n    }\r\n}\r\n","import { gMetaBuildingRegistry } from \"../core/global_registries\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { MetaAdvancedProcessorBuilding } from \"./buildings/advanced_processor\";\r\nimport { MetaBeltBuilding } from \"./buildings/belt\";\r\nimport { MetaBeltBaseBuilding } from \"./buildings/belt_base\";\r\nimport { enumCutterVariants, MetaCutterBuilding } from \"./buildings/cutter\";\r\nimport { MetaEnergyGenerator } from \"./buildings/energy_generator\";\r\nimport { MetaHubBuilding } from \"./buildings/hub\";\r\nimport { enumMinerVariants, MetaMinerBuilding } from \"./buildings/miner\";\r\nimport { MetaMixerBuilding } from \"./buildings/mixer\";\r\nimport { enumPainterVariants, MetaPainterBuilding } from \"./buildings/painter\";\r\nimport { enumRotaterVariants, MetaRotaterBuilding } from \"./buildings/rotater\";\r\nimport { enumSplitterVariants, MetaSplitterBuilding } from \"./buildings/splitter\";\r\nimport { MetaStackerBuilding } from \"./buildings/stacker\";\r\nimport { enumTrashVariants, MetaTrashBuilding } from \"./buildings/trash\";\r\nimport { enumUndergroundBeltVariants, MetaUndergroundBeltBuilding } from \"./buildings/underground_belt\";\r\nimport { MetaWireBaseBuilding } from \"./buildings/wire_base\";\r\nimport { enumWireCrossingVariants, MetaWireCrossingsBuilding } from \"./buildings/wire_crossings\";\r\nimport { gBuildingVariants, registerBuildingVariant } from \"./building_codes\";\r\nimport { defaultBuildingVariant } from \"./meta_building\";\r\nimport { allCustomBuildingData } from \"./custom/modBuildings\";\r\n\r\nconst logger = createLogger(\"building_registry\");\r\n\r\nexport function initMetaBuildingRegistry() {\r\n    gMetaBuildingRegistry.register(MetaSplitterBuilding);\r\n    gMetaBuildingRegistry.register(MetaMinerBuilding);\r\n    gMetaBuildingRegistry.register(MetaCutterBuilding);\r\n    gMetaBuildingRegistry.register(MetaRotaterBuilding);\r\n    gMetaBuildingRegistry.register(MetaStackerBuilding);\r\n    gMetaBuildingRegistry.register(MetaMixerBuilding);\r\n    gMetaBuildingRegistry.register(MetaPainterBuilding);\r\n    gMetaBuildingRegistry.register(MetaTrashBuilding);\r\n    gMetaBuildingRegistry.register(MetaBeltBuilding);\r\n    gMetaBuildingRegistry.register(MetaUndergroundBeltBuilding);\r\n    gMetaBuildingRegistry.register(MetaHubBuilding);\r\n    gMetaBuildingRegistry.register(MetaEnergyGenerator);\r\n    gMetaBuildingRegistry.register(MetaWireBaseBuilding);\r\n    gMetaBuildingRegistry.register(MetaAdvancedProcessorBuilding);\r\n    gMetaBuildingRegistry.register(MetaWireCrossingsBuilding);\r\n\r\n    for (let custom of allCustomBuildingData) {\r\n        if (custom.meta && !custom.meta._registered) {\r\n            gMetaBuildingRegistry.register(custom.meta);\r\n            custom.meta._registered = true;\r\n        }\r\n    }\r\n\r\n    // Belt\r\n    registerBuildingVariant(1, MetaBeltBaseBuilding, defaultBuildingVariant, 0);\r\n    registerBuildingVariant(2, MetaBeltBaseBuilding, defaultBuildingVariant, 1);\r\n    registerBuildingVariant(3, MetaBeltBaseBuilding, defaultBuildingVariant, 2);\r\n\r\n    // Splitter\r\n    registerBuildingVariant(4, MetaSplitterBuilding);\r\n    registerBuildingVariant(5, MetaSplitterBuilding, enumSplitterVariants.compact);\r\n    registerBuildingVariant(6, MetaSplitterBuilding, enumSplitterVariants.compactInverse);\r\n\r\n    // Miner\r\n    registerBuildingVariant(7, MetaMinerBuilding);\r\n    registerBuildingVariant(8, MetaMinerBuilding, enumMinerVariants.chainable);\r\n\r\n    // Cutter\r\n    registerBuildingVariant(9, MetaCutterBuilding);\r\n    registerBuildingVariant(10, MetaCutterBuilding, enumCutterVariants.quad);\r\n\r\n    // Rotater\r\n    registerBuildingVariant(11, MetaRotaterBuilding);\r\n    registerBuildingVariant(12, MetaRotaterBuilding, enumRotaterVariants.ccw);\r\n    registerBuildingVariant(13, MetaRotaterBuilding, enumRotaterVariants.fl);\r\n\r\n    // Stacker\r\n    registerBuildingVariant(14, MetaStackerBuilding);\r\n\r\n    // Mixer\r\n    registerBuildingVariant(15, MetaMixerBuilding);\r\n\r\n    // Painter\r\n    registerBuildingVariant(16, MetaPainterBuilding);\r\n    registerBuildingVariant(17, MetaPainterBuilding, enumPainterVariants.mirrored);\r\n    registerBuildingVariant(18, MetaPainterBuilding, enumPainterVariants.double);\r\n    registerBuildingVariant(19, MetaPainterBuilding, enumPainterVariants.quad);\r\n\r\n    // Trash\r\n    registerBuildingVariant(20, MetaTrashBuilding);\r\n    registerBuildingVariant(21, MetaTrashBuilding, enumTrashVariants.storage);\r\n\r\n    // Underground belt\r\n    registerBuildingVariant(22, MetaUndergroundBeltBuilding, defaultBuildingVariant, 0);\r\n    registerBuildingVariant(23, MetaUndergroundBeltBuilding, defaultBuildingVariant, 1);\r\n    registerBuildingVariant(24, MetaUndergroundBeltBuilding, enumUndergroundBeltVariants.tier2, 0);\r\n    registerBuildingVariant(25, MetaUndergroundBeltBuilding, enumUndergroundBeltVariants.tier2, 1);\r\n\r\n    // Hub\r\n    registerBuildingVariant(26, MetaHubBuilding);\r\n\r\n    // Energy generator\r\n    registerBuildingVariant(27, MetaEnergyGenerator);\r\n\r\n    // Wire\r\n    registerBuildingVariant(28, MetaWireBaseBuilding, defaultBuildingVariant, 0);\r\n    registerBuildingVariant(29, MetaWireBaseBuilding, defaultBuildingVariant, 1);\r\n    registerBuildingVariant(30, MetaWireBaseBuilding, defaultBuildingVariant, 2);\r\n\r\n    // Advanced processor\r\n    registerBuildingVariant(31, MetaAdvancedProcessorBuilding);\r\n\r\n    // Wire crossing\r\n    registerBuildingVariant(32, MetaWireCrossingsBuilding);\r\n    registerBuildingVariant(33, MetaWireCrossingsBuilding, enumWireCrossingVariants.merger);\r\n\r\n    for (let custom of allCustomBuildingData) {\r\n        if (custom.meta && custom.variantId) {\r\n            registerBuildingVariant(\r\n                custom.variantId,\r\n                custom.meta,\r\n                custom.variant || defaultBuildingVariant,\r\n                custom.rotationVariant || 0\r\n            );\r\n        }\r\n    }\r\n\r\n    // Propagate instances\r\n    for (const key in gBuildingVariants) {\r\n        gBuildingVariants[key].metaInstance = gMetaBuildingRegistry.findByClass(\r\n            gBuildingVariants[key].metaClass\r\n        );\r\n    }\r\n\r\n    for (const key in gBuildingVariants) {\r\n        const variant = gBuildingVariants[key];\r\n        assert(variant.metaClass, \"Variant has no meta: \" + key);\r\n\r\n        if (typeof variant.rotationVariant === \"undefined\") {\r\n            variant.rotationVariant = 0;\r\n        }\r\n        if (typeof variant.variant === \"undefined\") {\r\n            variant.variant = defaultBuildingVariant;\r\n        }\r\n    }\r\n\r\n    logger.log(\"Registered\", gMetaBuildingRegistry.getNumEntries(), \"buildings\");\r\n    logger.log(\"Registered\", Object.keys(gBuildingVariants).length, \"building codes\");\r\n}\r\n\r\n/**\r\n * Once all sprites are loaded, propagates the cache\r\n */\r\nexport function initBuildingCodesAfterResourcesLoaded() {\r\n    logger.log(\"Propagating sprite cache\");\r\n    for (const key in gBuildingVariants) {\r\n        const variant = gBuildingVariants[key];\r\n\r\n        variant.sprite = variant.metaInstance.getSprite(variant.rotationVariant, variant.variant);\r\n        variant.blueprintSprite = variant.metaInstance.getBlueprintSprite(\r\n            variant.rotationVariant,\r\n            variant.variant\r\n        );\r\n        variant.silhouetteColor = variant.metaInstance.getSilhouetteColor();\r\n    }\r\n}\r\n","import { GameRoot } from \"./root\";\r\nimport { ShapeDefinition } from \"./shape_definition\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { BaseItem, enumItemType } from \"./base_item\";\r\nimport { ShapeItem } from \"./items/shape_item\";\r\nimport { BasicSerializableObject } from \"../savegame/serialization\";\r\n\r\n/** @enum {string} */\r\nexport const enumAnalyticsDataSource = {\r\n    produced: \"produced\",\r\n    stored: \"stored\",\r\n    delivered: \"delivered\",\r\n};\r\n\r\nexport class ProductionAnalytics extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"ProductionAnalytics\";\r\n    }\r\n\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n        this.root = root;\r\n\r\n        this.history = {\r\n            [enumAnalyticsDataSource.produced]: [],\r\n            [enumAnalyticsDataSource.stored]: [],\r\n            [enumAnalyticsDataSource.delivered]: [],\r\n        };\r\n\r\n        for (let i = 0; i < globalConfig.statisticsGraphSlices; ++i) {\r\n            this.startNewSlice();\r\n        }\r\n\r\n        this.root.signals.shapeDelivered.add(this.onShapeDelivered, this);\r\n        this.root.signals.itemProduced.add(this.onItemProduced, this);\r\n\r\n        this.lastAnalyticsSlice = 0;\r\n    }\r\n\r\n    /**\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    onShapeDelivered(definition) {\r\n        const key = definition.getHash();\r\n        const entry = this.history[enumAnalyticsDataSource.delivered];\r\n        entry[entry.length - 1][key] = (entry[entry.length - 1][key] || 0) + 1;\r\n    }\r\n\r\n    /**\r\n     * @param {BaseItem} item\r\n     */\r\n    onItemProduced(item) {\r\n        if (item.getItemType() === enumItemType.shape) {\r\n            const definition = /** @type {ShapeItem} */ (item).definition;\r\n            const key = definition.getHash();\r\n            const entry = this.history[enumAnalyticsDataSource.produced];\r\n            entry[entry.length - 1][key] = (entry[entry.length - 1][key] || 0) + 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts a new time slice\r\n     */\r\n    startNewSlice() {\r\n        for (const key in this.history) {\r\n            if (key === enumAnalyticsDataSource.stored) {\r\n                // Copy stored data\r\n                this.history[key].push(Object.assign({}, this.root.hubGoals.storedShapes));\r\n            } else {\r\n                this.history[key].push({});\r\n            }\r\n            while (this.history[key].length > globalConfig.statisticsGraphSlices) {\r\n                this.history[key].shift();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the current rate of a given shape\r\n     * @param {enumAnalyticsDataSource} dataSource\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    getCurrentShapeRate(dataSource, definition) {\r\n        const slices = this.history[dataSource];\r\n        return slices[slices.length - 2][definition.getHash()] || 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the rate of a given shape, <historyOffset> frames ago\r\n     * @param {enumAnalyticsDataSource} dataSource\r\n     * @param {ShapeDefinition} definition\r\n     * @param {number} historyOffset\r\n     */\r\n    getPastShapeRate(dataSource, definition, historyOffset) {\r\n        assertAlways(\r\n            historyOffset >= 0 && historyOffset < globalConfig.statisticsGraphSlices - 1,\r\n            \"Invalid slice offset: \" + historyOffset\r\n        );\r\n\r\n        const slices = this.history[dataSource];\r\n        return slices[slices.length - 2 - historyOffset][definition.getHash()] || 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the rates of all shapes\r\n     * @param {enumAnalyticsDataSource} dataSource\r\n     */\r\n    getCurrentShapeRates(dataSource) {\r\n        const slices = this.history[dataSource];\r\n\r\n        // First, copy current slice\r\n        const baseValues = Object.assign({}, slices[slices.length - 2]);\r\n\r\n        // Add past values\r\n        for (let i = 0; i < 10; ++i) {\r\n            const pastValues = slices[slices.length - i - 3];\r\n            for (const key in pastValues) {\r\n                baseValues[key] = baseValues[key] || 0;\r\n            }\r\n        }\r\n\r\n        return baseValues;\r\n    }\r\n\r\n    update() {\r\n        if (this.root.time.now() - this.lastAnalyticsSlice > globalConfig.analyticsSliceDurationSeconds) {\r\n            this.lastAnalyticsSlice = this.root.time.now();\r\n            this.startNewSlice();\r\n        }\r\n    }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n\r\nimport { Signal } from \"../core/signal\";\r\nimport { RandomNumberGenerator } from \"../core/rng\";\r\nimport { createLogger } from \"../core/logging\";\r\n\r\n// Type hints\r\n\r\n\r\nconst logger = createLogger(\"game/root\");\r\n\r\n/** @enum {string} */\r\nexport const enumLayer = {\r\n    regular: \"regular\",\r\n    wires: \"wires\",\r\n};\r\n\r\n/** @type {Array<enumLayer>} */\r\nexport const arrayLayers = [enumLayer.regular, enumLayer.wires];\r\n\r\n/**\r\n * The game root is basically the whole game state at a given point,\r\n * combining all important classes. We don't have globals, but this\r\n * class is passed to almost all game classes.\r\n */\r\nexport class GameRoot {\r\n    /**\r\n     * Constructs a new game root\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        this.app = app;\r\n\r\n        /** @type {Savegame} */\r\n        this.savegame = null;\r\n\r\n        /** @type {InGameState} */\r\n        this.gameState = null;\r\n\r\n        /** @type {KeyActionMapper} */\r\n        this.keyMapper = null;\r\n\r\n        // Store game dimensions\r\n        this.gameWidth = 500;\r\n        this.gameHeight = 500;\r\n\r\n        // Stores whether the current session is a fresh game (true), or was continued (false)\r\n        /** @type {boolean} */\r\n        this.gameIsFresh = true;\r\n\r\n        // Stores whether the logic is already initialized\r\n        /** @type {boolean} */\r\n        this.logicInitialized = false;\r\n\r\n        // Stores whether the game is already initialized, that is, all systems etc have been created\r\n        /** @type {boolean} */\r\n        this.gameInitialized = false;\r\n\r\n        /**\r\n         * Whether a bulk operation is running\r\n         */\r\n        this.bulkOperationRunning = false;\r\n\r\n        //////// Other properties ///////\r\n\r\n        /** @type {Camera} */\r\n        this.camera = null;\r\n\r\n        /** @type {HTMLCanvasElement} */\r\n        this.canvas = null;\r\n\r\n        /** @type {CanvasRenderingContext2D} */\r\n        this.context = null;\r\n\r\n        /** @type {MapView} */\r\n        this.map = null;\r\n\r\n        /** @type {GameLogic} */\r\n        this.logic = null;\r\n\r\n        /** @type {EntityManager} */\r\n        this.entityMgr = null;\r\n\r\n        /** @type {GameHUD} */\r\n        this.hud = null;\r\n\r\n        /** @type {GameSystemManager} */\r\n        this.systemMgr = null;\r\n\r\n        /** @type {GameTime} */\r\n        this.time = null;\r\n\r\n        /** @type {HubGoals} */\r\n        this.hubGoals = null;\r\n\r\n        /** @type {BufferMaintainer} */\r\n        this.buffers = null;\r\n\r\n        /** @type {AutomaticSave} */\r\n        this.automaticSave = null;\r\n\r\n        /** @type {SoundProxy} */\r\n        this.soundProxy = null;\r\n\r\n        /** @type {ShapeDefinitionManager} */\r\n        this.shapeDefinitionMgr = null;\r\n\r\n        /** @type {ProductionAnalytics} */\r\n        this.productionAnalytics = null;\r\n\r\n        /** @type {DynamicTickrate} */\r\n        this.dynamicTickrate = null;\r\n\r\n        /** @type {enumLayer} */\r\n        this.currentLayer = enumLayer.regular;\r\n\r\n        this.signals = {\r\n            // Entities\r\n            entityManuallyPlaced: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityAdded: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityChanged: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityGotNewComponent: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityComponentRemoved: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityQueuedForDestroy: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n            entityDestroyed: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n\r\n            // Global\r\n            resized: /** @type {TypedSignal<[number, number]>} */ (new Signal()),\r\n            readyToRender: /** @type {TypedSignal<[]>} */ (new Signal()),\r\n            aboutToDestruct: /** @type {TypedSignal<[]>} */ new Signal(),\r\n\r\n            // Game Hooks\r\n            gameSaved: /** @type {TypedSignal<[]>} */ (new Signal()), // Game got saved\r\n            gameRestored: /** @type {TypedSignal<[]>} */ (new Signal()), // Game got restored\r\n\r\n            storyGoalCompleted: /** @type {TypedSignal<[number, string]>} */ (new Signal()),\r\n            upgradePurchased: /** @type {TypedSignal<[string]>} */ (new Signal()),\r\n\r\n            // Called right after game is initialized\r\n            postLoadHook: /** @type {TypedSignal<[]>} */ (new Signal()),\r\n\r\n            // Can be used to trigger an async task\r\n            performAsync: /** @type {TypedSignal<[function]>} */ (new Signal()),\r\n\r\n            shapeDelivered: /** @type {TypedSignal<[ShapeDefinition]>} */ (new Signal()),\r\n            itemProduced: /** @type {TypedSignal<[BaseItem]>} */ (new Signal()),\r\n\r\n            bulkOperationFinished: /** @type {TypedSignal<[]>} */ (new Signal()),\r\n\r\n            editModeChanged: /** @type {TypedSignal<[enumLayer]>} */ (new Signal()),\r\n\r\n            // Called to check if an entity can be placed, second parameter is an additional offset.\r\n            // Use to introduce additional placement checks\r\n            prePlacementCheck: /** @type {TypedSignal<[Entity, Vector]>} */ (new Signal()),\r\n\r\n            // Called before actually placing an entity, use to perform additional logic\r\n            // for freeing space before actually placing.\r\n            freeEntityAreaBeforeBuild: /** @type {TypedSignal<[Entity]>} */ (new Signal()),\r\n        };\r\n\r\n        // RNG's\r\n        /** @type {Object.<string, Object.<string, RandomNumberGenerator>>} */\r\n        this.rngs = {};\r\n\r\n        // Work queue\r\n        this.queue = {\r\n            requireRedraw: false,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Destructs the game root\r\n     */\r\n    destruct() {\r\n        logger.log(\"destructing root\");\r\n        this.signals.aboutToDestruct.dispatch();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Resets the whole root and removes all properties\r\n     */\r\n    reset() {\r\n        if (this.signals) {\r\n            // Destruct all signals\r\n            for (let i = 0; i < this.signals.length; ++i) {\r\n                this.signals[i].removeAll();\r\n            }\r\n        }\r\n\r\n        if (this.hud) {\r\n            this.hud.cleanup();\r\n        }\r\n        if (this.camera) {\r\n            this.camera.cleanup();\r\n        }\r\n\r\n        // Finally free all properties\r\n        for (let prop in this) {\r\n            if (this.hasOwnProperty(prop)) {\r\n                delete this[prop];\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { enumSubShape, enumSubShapeToShortcode, enumShortcodeToSubShape, allShapeData } from \"./shapes.js\";\r\nexport { enumSubShape, enumSubShapeToShortcode, enumShortcodeToSubShape } from \"./shapes.js\";\r\nimport { makeOffscreenBuffer } from \"../core/buffer_utils\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { smoothenDpi } from \"../core/dpi_manager\";\r\nimport { DrawParameters } from \"../core/draw_parameters\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { Vector } from \"../core/vector\";\r\nimport { BasicSerializableObject, types } from \"../savegame/serialization\";\r\nimport {\r\n    enumColors,\r\n    enumColorsToHexCode,\r\n    enumColorToShortcode,\r\n    enumShortcodeToColor,\r\n    enumInvertedColors,\r\n} from \"./colors\";\r\nimport { THEME } from \"./theme\";\r\n\r\nconst rusha = require(\"rusha\");\r\n\r\nconst logger = createLogger(\"shape_definition\");\r\n\r\n/**\r\n * @typedef {{\r\n *   subShape: enumSubShape,\r\n *   color: enumColors,\r\n * }} ShapeLayerItem\r\n */\r\n\r\n/**\r\n * Order is Q1 (tr), Q2(br), Q3(bl), Q4(tl)\r\n * @typedef {[ShapeLayerItem?, ShapeLayerItem?, ShapeLayerItem?, ShapeLayerItem?]} ShapeLayer\r\n */\r\n\r\nconst arrayQuadrantIndexToOffset = [\r\n    new Vector(1, -1), // tr\r\n    new Vector(1, 1), // br\r\n    new Vector(-1, 1), // bl\r\n    new Vector(-1, -1), // tl\r\n];\r\n\r\n/**\r\n * Converts the given parameters to a valid shape definition\r\n * @param {*} layers\r\n * @returns {Array<import(\"./shape_definition\").ShapeLayer>}\r\n */\r\nexport function createSimpleShape(layers) {\r\n    layers.forEach(layer => {\r\n        layer.forEach(item => {\r\n            if (item) {\r\n                item.color = item.color || enumColors.uncolored;\r\n            }\r\n        });\r\n    });\r\n    return layers;\r\n}\r\n\r\n/**\r\n * Cache which shapes are valid short keys and which not\r\n * @type {Map<string, boolean>}\r\n */\r\nconst SHORT_KEY_CACHE = new Map();\r\n\r\nexport class ShapeDefinition extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"ShapeDefinition\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    deserialize(data) {\r\n        const errorCode = super.deserialize(data);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n        const definition = ShapeDefinition.fromShortKey(data);\r\n        this.layers = definition.layers;\r\n    }\r\n\r\n    serialize() {\r\n        return this.getHash();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {object} param0\r\n     * @param {Array<ShapeLayer>=} param0.layers\r\n     */\r\n    constructor({ layers = [] }) {\r\n        super();\r\n\r\n        /**\r\n         * The layers from bottom to top\r\n         * @type {Array<ShapeLayer>} */\r\n        this.layers = layers;\r\n\r\n        /** @type {string} */\r\n        this.cachedHash = null;\r\n\r\n        // Set on demand\r\n        this.bufferGenerator = null;\r\n    }\r\n\r\n    /**\r\n     * Generates the definition from the given short key\r\n     * @param {string} key\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    static fromShortKey(key) {\r\n        const sourceLayers = key.split(\":\");\r\n        let layers = [];\r\n        for (let i = 0; i < sourceLayers.length; ++i) {\r\n            const text = sourceLayers[i];\r\n            assert(text.length === 8, \"Invalid shape short key: \" + key);\r\n\r\n            /** @type {ShapeLayer} */\r\n            const quads = [null, null, null, null];\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                const shapeText = text[quad * 2 + 0];\r\n                const subShape = enumShortcodeToSubShape[shapeText];\r\n                const color = enumShortcodeToColor[text[quad * 2 + 1]];\r\n                if (subShape) {\r\n                    assert(color, \"Invalid shape short key:\", key);\r\n                    quads[quad] = {\r\n                        subShape,\r\n                        color,\r\n                    };\r\n                } else if (shapeText !== \"-\") {\r\n                    assert(false, \"Invalid shape key: \" + shapeText);\r\n                }\r\n            }\r\n            layers.push(quads);\r\n        }\r\n\r\n        const definition = new ShapeDefinition({ layers });\r\n        // We know the hash so save some work\r\n        definition.cachedHash = key;\r\n        return definition;\r\n    }\r\n\r\n    /**\r\n     * Checks if a given string is a valid short key\r\n     * @param {string} key\r\n     * @returns {boolean}\r\n     */\r\n    static isValidShortKey(key) {\r\n        if (SHORT_KEY_CACHE.has(key)) {\r\n            return SHORT_KEY_CACHE.get(key);\r\n        }\r\n\r\n        const result = ShapeDefinition.isValidShortKeyInternal(key);\r\n        SHORT_KEY_CACHE.set(key, result);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * INTERNAL\r\n     * Checks if a given string is a valid short key\r\n     * @param {string} key\r\n     * @returns {boolean}\r\n     */\r\n    static isValidShortKeyInternal(key) {\r\n        const sourceLayers = key.split(\":\");\r\n        let layers = [];\r\n        for (let i = 0; i < sourceLayers.length; ++i) {\r\n            const text = sourceLayers[i];\r\n            if (text.length !== 8) {\r\n                return false;\r\n            }\r\n\r\n            /** @type {ShapeLayer} */\r\n            const quads = [null, null, null, null];\r\n            let anyFilled = false;\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                const shapeText = text[quad * 2 + 0];\r\n                const colorText = text[quad * 2 + 1];\r\n                const subShape = enumShortcodeToSubShape[shapeText];\r\n                const color = enumShortcodeToColor[colorText];\r\n\r\n                // Valid shape\r\n                if (subShape) {\r\n                    if (!color) {\r\n                        // Invalid color\r\n                        return false;\r\n                    }\r\n                    quads[quad] = {\r\n                        subShape,\r\n                        color,\r\n                    };\r\n                    anyFilled = true;\r\n                } else if (shapeText === \"-\") {\r\n                    // Make sure color is empty then, too\r\n                    if (colorText !== \"-\") {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    // Invalid shape key\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (!anyFilled) {\r\n                // Empty layer\r\n                return false;\r\n            }\r\n            layers.push(quads);\r\n        }\r\n\r\n        if (layers.length === 0 || layers.length > 4) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Internal method to clone the shape definition\r\n     * @returns {Array<ShapeLayer>}\r\n     */\r\n    internalCloneLayers() {\r\n        return JSON.parse(JSON.stringify(this.layers));\r\n    }\r\n\r\n    /**\r\n     * Returns if the definition is entirely empty^\r\n     * @returns {boolean}\r\n     */\r\n    isEntirelyEmpty() {\r\n        return this.layers.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Returns a unique id for this shape\r\n     * @returns {string}\r\n     */\r\n    getHash() {\r\n        if (this.cachedHash) {\r\n            return this.cachedHash;\r\n        }\r\n\r\n        let id = \"\";\r\n        for (let layerIndex = 0; layerIndex < this.layers.length; ++layerIndex) {\r\n            const layer = this.layers[layerIndex];\r\n\r\n            for (let quadrant = 0; quadrant < layer.length; ++quadrant) {\r\n                const item = layer[quadrant];\r\n                if (item) {\r\n                    id += enumSubShapeToShortcode[item.subShape] + enumColorToShortcode[item.color];\r\n                } else {\r\n                    id += \"--\";\r\n                }\r\n            }\r\n\r\n            if (layerIndex < this.layers.length - 1) {\r\n                id += \":\";\r\n            }\r\n        }\r\n        this.cachedHash = id;\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Draws the shape definition\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(x, y, parameters, size = 20) {\r\n        const dpi = smoothenDpi(globalConfig.shapesSharpness * parameters.zoomLevel);\r\n\r\n        if (!this.bufferGenerator) {\r\n            this.bufferGenerator = this.internalGenerateShapeBuffer.bind(this);\r\n        }\r\n\r\n        const key = size + \"/\" + dpi;\r\n        const canvas = parameters.root.buffers.getForKey(\r\n            key,\r\n            this.cachedHash,\r\n            size,\r\n            size,\r\n            dpi,\r\n            this.bufferGenerator\r\n        );\r\n        parameters.context.drawImage(canvas, x - size / 2, y - size / 2, size, size);\r\n    }\r\n\r\n    /**\r\n     * Generates this shape as a canvas\r\n     * @param {number} size\r\n     */\r\n    generateAsCanvas(size = 120) {\r\n        const [canvas, context] = makeOffscreenBuffer(size, size, {\r\n            smooth: true,\r\n            label: \"definition-canvas-cache-\" + this.getHash(),\r\n            reusable: false,\r\n        });\r\n\r\n        this.internalGenerateShapeBuffer(canvas, context, size, size, 1);\r\n        return canvas;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {HTMLCanvasElement} canvas\r\n     * @param {CanvasRenderingContext2D} context\r\n     * @param {number} w\r\n     * @param {number} h\r\n     * @param {number} dpi\r\n     */\r\n    internalGenerateShapeBuffer(canvas, context, w, h, dpi) {\r\n        context.translate((w * dpi) / 2, (h * dpi) / 2);\r\n        context.scale((dpi * w) / 23, (dpi * h) / 23);\r\n\r\n        context.fillStyle = \"#e9ecf7\";\r\n\r\n        const quadrantSize = 10;\r\n        const quadrantHalfSize = quadrantSize / 2;\r\n\r\n        context.fillStyle = THEME.items.circleBackground;\r\n        context.beginCircle(0, 0, quadrantSize * 1.15);\r\n        context.fill();\r\n\r\n        for (let layerIndex = 0; layerIndex < this.layers.length; ++layerIndex) {\r\n            const quadrants = this.layers[layerIndex];\r\n\r\n            const layerScale = Math.max(0.1, 0.9 - layerIndex * 0.22);\r\n\r\n            for (let quadrantIndex = 0; quadrantIndex < 4; ++quadrantIndex) {\r\n                if (!quadrants[quadrantIndex]) {\r\n                    continue;\r\n                }\r\n                const { subShape, color } = quadrants[quadrantIndex];\r\n\r\n                const quadrantPos = arrayQuadrantIndexToOffset[quadrantIndex];\r\n                const centerQuadrantX = quadrantPos.x * quadrantHalfSize;\r\n                const centerQuadrantY = quadrantPos.y * quadrantHalfSize;\r\n\r\n                const rotation = Math.radians(quadrantIndex * 90);\r\n\r\n                context.save();\r\n                context.translate(centerQuadrantX, centerQuadrantY);\r\n                context.rotate(rotation);\r\n\r\n                context.fillStyle = enumColorsToHexCode[color];\r\n                context.strokeStyle = THEME.items.outline;\r\n                const lineWidth = THEME.items.outlineWidth * Math.pow(0.8, layerIndex);\r\n                context.lineWidth = lineWidth;\r\n\r\n                const insetPadding = 0.0;\r\n\r\n                const dims = quadrantSize * layerScale;\r\n                const innerDims = insetPadding - quadrantHalfSize;\r\n                let began = null;\r\n\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function begin(args) {\r\n                    context.save();\r\n                    context.translate(innerDims, -innerDims);\r\n                    context.scale(dims, -dims);\r\n                    context.lineWidth = lineWidth / dims / (args.size || 1);\r\n                    if (args.size) {\r\n                        context.scale(args.size, args.size);\r\n                    }\r\n                    if (args.path) {\r\n                        context.beginPath();\r\n                    }\r\n                    if (args.zero) {\r\n                        context.moveTo(0, 0);\r\n                    }\r\n                    began = args;\r\n                }\r\n                // eslint-disable-next-line no-inner-declarations\r\n                function end() {\r\n                    if (!began) {\r\n                        return;\r\n                    }\r\n                    if (began.path) {\r\n                        context.closePath();\r\n                    }\r\n                    context.restore();\r\n                }\r\n\r\n                let shape = allShapeData[subShape];\r\n                assertAlways(shape.draw, \"stape should be drawable!\");\r\n                if (typeof shape.draw == \"string\") {\r\n                    let draw = shape.draw;\r\n                    let scale = parseFloat(draw);\r\n                    if (scale) {\r\n                        draw = draw.replace(scale, \"\");\r\n                        scale = 1 / scale;\r\n                    } else {\r\n                        scale = 1;\r\n                    }\r\n                    begin({ size: scale });\r\n                    let p = new Path2D(draw);\r\n                    context.fill(p);\r\n                    context.stroke(p);\r\n                    end();\r\n                } else {\r\n                    shape.draw({\r\n                        dims,\r\n                        innerDims,\r\n                        layer: layerIndex,\r\n                        quad: quadrantIndex,\r\n                        context,\r\n                        color,\r\n                        begin,\r\n                    });\r\n                    end();\r\n                    context.fill();\r\n                    context.stroke();\r\n                }\r\n\r\n                context.restore();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a definition with only the given quadrants\r\n     * @param {Array<number>} includeQuadrants\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    cloneFilteredByQuadrants(includeQuadrants) {\r\n        const newLayers = this.internalCloneLayers();\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            let anyContents = false;\r\n            for (let quadrantIndex = 0; quadrantIndex < 4; ++quadrantIndex) {\r\n                if (includeQuadrants.indexOf(quadrantIndex) < 0) {\r\n                    quadrants[quadrantIndex] = null;\r\n                } else if (quadrants[quadrantIndex]) {\r\n                    anyContents = true;\r\n                }\r\n            }\r\n\r\n            // Check if the layer is entirely empty\r\n            if (!anyContents) {\r\n                newLayers.splice(layerIndex, 1);\r\n                layerIndex -= 1;\r\n            }\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Returns a definition which was rotated clockwise\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    cloneRotateCW() {\r\n        const newLayers = this.internalCloneLayers();\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            quadrants.unshift(quadrants[3]);\r\n            quadrants.pop();\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Returns a definition which was rotated counter clockwise\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    cloneRotateCCW() {\r\n        const newLayers = this.internalCloneLayers();\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            quadrants.push(quadrants[0]);\r\n            quadrants.shift();\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Returns a definition which was rotated 180 degrees (flipped)\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    cloneRotateFL() {\r\n        const newLayers = this.internalCloneLayers();\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            quadrants.push(quadrants.shift(), quadrants.shift());\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Stacks the given shape definition on top.\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    cloneAndStackWith(definition) {\r\n        if (this.isEntirelyEmpty() || definition.isEntirelyEmpty()) {\r\n            assert(false, \"Can not stack entirely empty definition\");\r\n        }\r\n\r\n        const bottomShapeLayers = this.layers;\r\n        const bottomShapeHighestLayerByQuad = [-1, -1, -1, -1];\r\n\r\n        for (let layer = bottomShapeLayers.length - 1; layer >= 0; --layer) {\r\n            const shapeLayer = bottomShapeLayers[layer];\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                const shapeQuad = shapeLayer[quad];\r\n                if (shapeQuad !== null && bottomShapeHighestLayerByQuad[quad] < layer) {\r\n                    bottomShapeHighestLayerByQuad[quad] = layer;\r\n                }\r\n            }\r\n        }\r\n\r\n        const topShapeLayers = definition.layers;\r\n        const topShapeLowestLayerByQuad = [4, 4, 4, 4];\r\n\r\n        for (let layer = 0; layer < topShapeLayers.length; ++layer) {\r\n            const shapeLayer = topShapeLayers[layer];\r\n            for (let quad = 0; quad < 4; ++quad) {\r\n                const shapeQuad = shapeLayer[quad];\r\n                if (shapeQuad !== null && topShapeLowestLayerByQuad[quad] > layer) {\r\n                    topShapeLowestLayerByQuad[quad] = layer;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * We want to find the number `layerToMergeAt` such that when the top shape is placed at that\r\n         * layer, the smallest gap between shapes is only 1. Instead of doing a guess-and-check method to\r\n         * find the appropriate layer, we just calculate all the gaps assuming a merge at layer 0, even\r\n         * though they go negative, and calculating the number to add to it so the minimum gap is 1 (ends\r\n         * up being 1 - minimum).\r\n         */\r\n        const gapsBetweenShapes = [];\r\n        for (let quad = 0; quad < 4; ++quad) {\r\n            gapsBetweenShapes.push(topShapeLowestLayerByQuad[quad] - bottomShapeHighestLayerByQuad[quad]);\r\n        }\r\n        const smallestGapBetweenShapes = Math.min(...gapsBetweenShapes);\r\n        // Can't merge at a layer lower than 0\r\n        const layerToMergeAt = Math.max(1 - smallestGapBetweenShapes, 0);\r\n\r\n        const mergedLayers = this.internalCloneLayers();\r\n        for (let layer = mergedLayers.length; layer < layerToMergeAt + topShapeLayers.length; ++layer) {\r\n            mergedLayers.push([null, null, null, null]);\r\n        }\r\n\r\n        for (let layer = 0; layer < topShapeLayers.length; ++layer) {\r\n            const layerMergingAt = layerToMergeAt + layer;\r\n            const bottomShapeLayer = mergedLayers[layerMergingAt];\r\n            const topShapeLayer = topShapeLayers[layer];\r\n            for (let quad = 0; quad < 4; quad++) {\r\n                assert(!(bottomShapeLayer[quad] && topShapeLayer[quad]), \"Shape merge: Sub shape got lost\");\r\n                bottomShapeLayer[quad] = bottomShapeLayer[quad] || topShapeLayer[quad];\r\n            }\r\n        }\r\n\r\n        // Limit to 4 layers at max\r\n        mergedLayers.splice(4);\r\n\r\n        return new ShapeDefinition({ layers: mergedLayers });\r\n    }\r\n\r\n    /**\r\n     * Clones the shape and colors everything in the given color\r\n     * @param {enumColors} color\r\n     */\r\n    cloneAndPaintWith(color) {\r\n        const newLayers = this.internalCloneLayers();\r\n\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            for (let quadrantIndex = 0; quadrantIndex < 4; ++quadrantIndex) {\r\n                const item = quadrants[quadrantIndex];\r\n                if (item) {\r\n                    item.color = color;\r\n                }\r\n            }\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Clones the shape and inverts all colors\r\n     */\r\n    cloneAndInvertColors() {\r\n        const newLayers = this.internalCloneLayers();\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            for (let quadrantIndex = 0; quadrantIndex < 4; ++quadrantIndex) {\r\n                const item = quadrants[quadrantIndex];\r\n                if (item) {\r\n                    item.color = enumInvertedColors[item.color];\r\n                }\r\n            }\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n\r\n    /**\r\n     * Clones the shape and colors everything in the given colors\r\n     * @param {[enumColors, enumColors, enumColors, enumColors]} colors\r\n     */\r\n    cloneAndPaintWith4Colors(colors) {\r\n        const newLayers = this.internalCloneLayers();\r\n\r\n        for (let layerIndex = 0; layerIndex < newLayers.length; ++layerIndex) {\r\n            const quadrants = newLayers[layerIndex];\r\n            for (let quadrantIndex = 0; quadrantIndex < 4; ++quadrantIndex) {\r\n                const item = quadrants[quadrantIndex];\r\n                if (item) {\r\n                    item.color = colors[quadrantIndex];\r\n                }\r\n            }\r\n        }\r\n        return new ShapeDefinition({ layers: newLayers });\r\n    }\r\n}\r\n","import { BasicSerializableObject } from \"../savegame/serialization\";\r\nimport { GameRoot } from \"./root\";\r\nimport { ShapeDefinition, enumSubShape } from \"./shape_definition\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { enumColors } from \"./colors\";\r\n\r\nconst logger = createLogger(\"shape_definition_manager\");\r\n\r\nexport class ShapeDefinitionManager extends BasicSerializableObject {\r\n    static getId() {\r\n        return \"ShapeDefinitionManager\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n        this.root = root;\r\n\r\n        this.shapeKeyToDefinition = {};\r\n\r\n        // Caches operations in the form of 'operation:def1[:def2]'\r\n        /** @type {Object.<string, Array<ShapeDefinition>|ShapeDefinition>} */\r\n        this.operationCache = {};\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} hash\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    getShapeFromShortKey(hash) {\r\n        const cached = this.shapeKeyToDefinition[hash];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        return (this.shapeKeyToDefinition[hash] = ShapeDefinition.fromShortKey(hash));\r\n    }\r\n\r\n    /**\r\n     * Registers a new shape definition\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    registerShapeDefinition(definition) {\r\n        const id = definition.getHash();\r\n        assert(!this.shapeKeyToDefinition[id], \"Shape Definition \" + id + \" already exists\");\r\n        this.shapeKeyToDefinition[id] = definition;\r\n        // logger.log(\"Registered shape with key\", id);\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for splitting a shape definition in two halfs\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {[ShapeDefinition, ShapeDefinition]}\r\n     */\r\n    shapeActionCutHalf(definition) {\r\n        const key = \"cut:\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {[ShapeDefinition, ShapeDefinition]} */ (this.operationCache[key]);\r\n        }\r\n        const rightSide = definition.cloneFilteredByQuadrants([2, 3]);\r\n        const leftSide = definition.cloneFilteredByQuadrants([0, 1]);\r\n\r\n        return /** @type {[ShapeDefinition, ShapeDefinition]} */ (this.operationCache[key] = [\r\n            this.registerOrReturnHandle(rightSide),\r\n            this.registerOrReturnHandle(leftSide),\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for splitting a shape definition in four quads\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {[ShapeDefinition, ShapeDefinition, ShapeDefinition, ShapeDefinition]}\r\n     */\r\n    shapeActionCutQuad(definition) {\r\n        const key = \"cut-quad:\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {[ShapeDefinition, ShapeDefinition, ShapeDefinition, ShapeDefinition]} */ (this\r\n                .operationCache[key]);\r\n        }\r\n\r\n        return /** @type {[ShapeDefinition, ShapeDefinition, ShapeDefinition, ShapeDefinition]} */ (this.operationCache[\r\n            key\r\n        ] = [\r\n            this.registerOrReturnHandle(definition.cloneFilteredByQuadrants([0])),\r\n            this.registerOrReturnHandle(definition.cloneFilteredByQuadrants([1])),\r\n            this.registerOrReturnHandle(definition.cloneFilteredByQuadrants([2])),\r\n            this.registerOrReturnHandle(definition.cloneFilteredByQuadrants([3])),\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for rotating a shape clockwise\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionRotateCW(definition) {\r\n        const key = \"rotate-cw:\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n\r\n        const rotated = definition.cloneRotateCW();\r\n\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            rotated\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for rotating a shape counter clockwise\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionRotateCCW(definition) {\r\n        const key = \"rotate-ccw:\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n\r\n        const rotated = definition.cloneRotateCCW();\r\n\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            rotated\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for rotating a shape counter clockwise\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionRotateFL(definition) {\r\n        const key = \"rotate-fl:\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n\r\n        const rotated = definition.cloneRotateFL();\r\n\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            rotated\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for stacking the upper definition onto the lower one\r\n     * @param {ShapeDefinition} lowerDefinition\r\n     * @param {ShapeDefinition} upperDefinition\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionStack(lowerDefinition, upperDefinition) {\r\n        const key = \"stack:\" + lowerDefinition.getHash() + \":\" + upperDefinition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n        const stacked = lowerDefinition.cloneAndStackWith(upperDefinition);\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            stacked\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for painting it with the given color\r\n     * @param {ShapeDefinition} definition\r\n     * @param {enumColors} color\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionPaintWith(definition, color) {\r\n        const key = \"paint:\" + definition.getHash() + \":\" + color;\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n        const colorized = definition.cloneAndPaintWith(color);\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            colorized\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for inverting all colors on that shape\r\n     * @param {ShapeDefinition} definition\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionInvertColors(definition) {\r\n        const key = \"invert:\" + definition.getHash();\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n        const inverted = definition.cloneAndInvertColors();\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            inverted\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Generates a definition for painting it with the 4 colors\r\n     * @param {ShapeDefinition} definition\r\n     * @param {[enumColors, enumColors, enumColors, enumColors]} colors\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    shapeActionPaintWith4Colors(definition, colors) {\r\n        const key = \"paint4:\" + definition.getHash() + \":\" + colors.join(\",\");\r\n        if (this.operationCache[key]) {\r\n            return /** @type {ShapeDefinition} */ (this.operationCache[key]);\r\n        }\r\n        const colorized = definition.cloneAndPaintWith4Colors(colors);\r\n        return /** @type {ShapeDefinition} */ (this.operationCache[key] = this.registerOrReturnHandle(\r\n            colorized\r\n        ));\r\n    }\r\n\r\n    /**\r\n     * Checks if we already have cached this definition, and if so throws it away and returns the already\r\n     * cached variant\r\n     * @param {ShapeDefinition} definition\r\n     */\r\n    registerOrReturnHandle(definition) {\r\n        const id = definition.getHash();\r\n        if (this.shapeKeyToDefinition[id]) {\r\n            return this.shapeKeyToDefinition[id];\r\n        }\r\n        this.shapeKeyToDefinition[id] = definition;\r\n        // logger.log(\"Registered shape with key (2)\", id);\r\n        return definition;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {[enumSubShape, enumSubShape, enumSubShape, enumSubShape]} subShapes\r\n     * @returns {ShapeDefinition}\r\n     */\r\n    getDefinitionFromSimpleShapes(subShapes, color = enumColors.uncolored) {\r\n        const shapeLayer = /** @type {import(\"./shape_definition\").ShapeLayer} */ (subShapes.map(\r\n            subShape => ({ subShape, color })\r\n        ));\r\n\r\n        return this.registerOrReturnHandle(new ShapeDefinition({ layers: [shapeLayer] }));\r\n    }\r\n\r\n    getDefinitionFromSimpleShapesAndColors(subShapes, colors) {\r\n        const shapeLayer = /** @type {import(\"./shape_definition\").ShapeLayer} */ (subShapes.map(\r\n            (subShape, i) => ({ subShape, color: colors[i] })\r\n        ));\r\n\r\n        return this.registerOrReturnHandle(new ShapeDefinition({ layers: [shapeLayer] }));\r\n    }\r\n}\r\n","import { enumColors } from \"./colors\";\r\nimport { customShapes } from \"./custom/shapes\";\r\n\r\n/** @enum {string} */\r\nexport const enumSubShape = {\r\n    rect: \"rect\",\r\n    circle: \"circle\",\r\n    star: \"star\",\r\n    windmill: \"windmill\",\r\n};\r\n\r\n/** @enum {string} */\r\nexport const enumSubShapeToShortcode = {\r\n    [enumSubShape.rect]: \"R\",\r\n    [enumSubShape.circle]: \"C\",\r\n    [enumSubShape.star]: \"S\",\r\n    [enumSubShape.windmill]: \"W\",\r\n};\r\n\r\n/** @enum {enumSubShape} */\r\nexport const enumShortcodeToSubShape = {};\r\nfor (const key in enumSubShapeToShortcode) {\r\n    enumShortcodeToSubShape[enumSubShapeToShortcode[key]] = key;\r\n}\r\n\r\n/**\r\n * @callback DrawShape\r\n * @param {Object} args\r\n */\r\n\r\n/**\r\n * @typedef {Object} ShapeData\r\n * @property {string} id\r\n * @property {string} code\r\n * @property {boolean} [spawnable]\r\n * @property {string} [spawnColor]\r\n * @property {number} [maxQuarters]\r\n * @property {number} [minDistance]\r\n * @property {number} [minChance]\r\n * @property {number} [distChance]\r\n * @property {number} [maxChance]\r\n * @property {DrawShape | string} draw\r\n * @property {number} tier\r\n */\r\n\r\n/** @enum {ShapeData} */\r\nexport const allShapeData = {\r\n    rect: {\r\n        id: \"rect\",\r\n        code: \"R\",\r\n        spawnable: true,\r\n        spawnColor: \"uncolored\",\r\n        maxQuarters: 4,\r\n        minDistance: 0,\r\n        minChance: 100,\r\n        distChance: 0,\r\n        maxChance: 100,\r\n        draw: \"M 0 0 v 1 h 1 v -1 z\",\r\n        tier: 0,\r\n    },\r\n    circle: {\r\n        id: \"circle\",\r\n        code: \"C\",\r\n        spawnable: true,\r\n        spawnColor: \"uncolored\",\r\n        maxQuarters: 4,\r\n        minDistance: 0,\r\n        minChance: 50,\r\n        distChance: 2,\r\n        maxChance: 100,\r\n        draw: \"M 0 0 l 1 0 a 1 1 0 0 1 -1 1 z \",\r\n        tier: 0,\r\n    },\r\n    star: {\r\n        id: \"star\",\r\n        code: \"S\",\r\n        spawnable: true,\r\n        spawnColor: \"uncolored\",\r\n        maxQuarters: 4,\r\n        minDistance: 7,\r\n        minChance: 20 + 7,\r\n        distChance: 1,\r\n        maxChance: 50,\r\n        draw: \"M 0 0 L 0 0.6 1 1 0.6 0 z\",\r\n        tier: 1,\r\n    },\r\n    windmill: {\r\n        id: \"windmill\",\r\n        code: \"W\",\r\n        spawnable: true,\r\n        spawnColor: \"uncolored\",\r\n        maxQuarters: 2,\r\n        minDistance: 7,\r\n        minChance: 6 + 7 / 2,\r\n        distChance: 1 / 2,\r\n        maxChance: 26,\r\n        draw: \"M 0 0 L 0 0.6 1 1 1 0 z\",\r\n        tier: 2,\r\n    },\r\n};\r\n\r\nfor (let data of customShapes) {\r\n    allShapeData[data.id] = data;\r\n}\r\n\r\ninitShapes();\r\n\r\nexport function initShapes() {\r\n    for (let k in enumSubShape) {\r\n        delete enumSubShape[k];\r\n    }\r\n    for (let k in enumSubShapeToShortcode) {\r\n        delete enumSubShapeToShortcode[k];\r\n    }\r\n    for (let k in enumShortcodeToSubShape) {\r\n        delete enumShortcodeToSubShape[k];\r\n    }\r\n\r\n    for (let s in allShapeData) {\r\n        let data = allShapeData[s];\r\n        assert(data.id == s);\r\n        assert(data.code.toUpperCase() == data.code);\r\n        enumSubShape[data.id] = data.id;\r\n        enumSubShapeToShortcode[data.id] = data.code;\r\n        enumShortcodeToSubShape[data.code] = data.id;\r\n        if (data.spawnable) {\r\n            data.spawnColor = data.spawnColor || \"uncolored\";\r\n            assert(enumColors[data.spawnColor], \"should have known initial color\");\r\n            data.maxQuarters = data.maxQuarters || 4;\r\n            data.minDistance = data.minDistance || 0;\r\n            assert(data.minChance > 0 || data.distChance > 0, \"should have chance to spawn\");\r\n            data.minChance = data.minChance || 0;\r\n            data.distChance = data.distChance || 0;\r\n            data.maxChance = data.maxChance || 999999;\r\n        }\r\n    }\r\n}\r\n","\r\n\r\nimport { Vector } from \"../core/vector\";\r\nimport { SOUNDS } from \"../platform/sound\";\r\n\r\nconst avgSoundDurationSeconds = 0.1;\r\nconst maxOngoingSounds = 2;\r\nconst maxOngoingUiSounds = 5;\r\n\r\n// Proxy to the application sound instance\r\nexport class SoundProxy {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        this.root = root;\r\n\r\n        // Store a list of sounds and when we started them\r\n        this.playing3DSounds = [];\r\n        this.playingUiSounds = [];\r\n    }\r\n\r\n    /**\r\n     * Plays a new ui sound\r\n     * @param {string} id Sound ID\r\n     */\r\n    playUi(id) {\r\n        assert(typeof id === \"string\", \"Not a valid sound id: \" + id);\r\n        this.internalUpdateOngoingSounds();\r\n        if (this.playingUiSounds.length > maxOngoingUiSounds) {\r\n            // Too many ongoing sounds\r\n            return false;\r\n        }\r\n\r\n        this.root.app.sound.playUiSound(id);\r\n        this.playingUiSounds.push(this.root.time.realtimeNow());\r\n    }\r\n\r\n    /**\r\n     * Plays the ui click sound\r\n     */\r\n    playUiClick() {\r\n        this.playUi(SOUNDS.uiClick);\r\n    }\r\n\r\n    /**\r\n     * Plays the ui error sound\r\n     */\r\n    playUiError() {\r\n        this.playUi(SOUNDS.uiError);\r\n    }\r\n\r\n    /**\r\n     * Plays a 3D sound whose volume is scaled based on where it was emitted\r\n     * @param {string} id Sound ID\r\n     * @param {Vector} pos World space position\r\n     */\r\n    play3D(id, pos) {\r\n        assert(typeof id === \"string\", \"Not a valid sound id: \" + id);\r\n        assert(pos instanceof Vector, \"Invalid sound position\");\r\n        this.internalUpdateOngoingSounds();\r\n\r\n        if (this.playing3DSounds.length > maxOngoingSounds) {\r\n            // Too many ongoing sounds\r\n            return false;\r\n        }\r\n\r\n        this.root.app.sound.play3DSound(id, pos, this.root);\r\n        this.playing3DSounds.push(this.root.time.realtimeNow());\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Updates the list of ongoing sounds\r\n     */\r\n    internalUpdateOngoingSounds() {\r\n        const now = this.root.time.realtimeNow();\r\n        for (let i = 0; i < this.playing3DSounds.length; ++i) {\r\n            if (now - this.playing3DSounds[i] > avgSoundDurationSeconds) {\r\n                this.playing3DSounds.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.playingUiSounds.length; ++i) {\r\n            if (now - this.playingUiSounds[i] > avgSoundDurationSeconds) {\r\n                this.playingUiSounds.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { gMetaBuildingRegistry } from \"../../core/global_registries\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { AtlasSprite } from \"../../core/sprites\";\r\nimport { fastArrayDeleteValue } from \"../../core/utils\";\r\nimport { enumDirection, enumDirectionToVector, enumInvertedDirections, Vector } from \"../../core/vector\";\r\nimport { BeltPath } from \"../belt_path\";\r\nimport { arrayBeltVariantToRotation, MetaBeltBaseBuilding } from \"../buildings/belt_base\";\r\nimport { BeltComponent } from \"../components/belt\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\nimport { defaultBuildingVariant } from \"../meta_building\";\r\nimport { enumLayer } from \"../root\";\r\nimport { MetaWireBaseBuilding } from \"../buildings/wire_base\";\r\nimport { enumItemType } from \"../base_item\";\r\n\r\nexport const BELT_ANIM_COUNT = 28;\r\n\r\nconst logger = createLogger(\"belt\");\r\n\r\n/**\r\n * Manages all belts\r\n */\r\nexport class BeltSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [BeltComponent]);\r\n        /**\r\n         * @type {Object.<enumDirection, Array<AtlasSprite>>}\r\n         */\r\n        this.beltSprites = {\r\n            [enumDirection.top]: Loader.getSprite(\"sprites/belt/forward_0.png\"),\r\n            [enumDirection.left]: Loader.getSprite(\"sprites/belt/left_0.png\"),\r\n            [enumDirection.right]: Loader.getSprite(\"sprites/belt/right_0.png\"),\r\n        };\r\n\r\n        /**\r\n         * @type {Object.<enumDirection, Array<AtlasSprite>>}\r\n         */\r\n        this.wireSprites = {\r\n            [enumDirection.top]: Loader.getSprite(\"sprites/buildings/wire_top.png\"),\r\n            [enumDirection.left]: Loader.getSprite(\"sprites/buildings/wire_left.png\"),\r\n            [enumDirection.right]: Loader.getSprite(\"sprites/buildings/wire_right.png\"),\r\n        };\r\n\r\n        /**\r\n         * @type {Object.<enumDirection, Array<AtlasSprite>>}\r\n         */\r\n        this.beltAnimations = {\r\n            [enumDirection.top]: [],\r\n            [enumDirection.left]: [],\r\n            [enumDirection.right]: [],\r\n        };\r\n\r\n        for (let i = 0; i < BELT_ANIM_COUNT; ++i) {\r\n            this.beltAnimations[enumDirection.top].push(\r\n                Loader.getSprite(\"sprites/belt/forward_\" + i + \".png\")\r\n            );\r\n            this.beltAnimations[enumDirection.left].push(Loader.getSprite(\"sprites/belt/left_\" + i + \".png\"));\r\n            this.beltAnimations[enumDirection.right].push(\r\n                Loader.getSprite(\"sprites/belt/right_\" + i + \".png\")\r\n            );\r\n        }\r\n\r\n        this.root.signals.entityDestroyed.add(this.onEntityDestroyed, this);\r\n        this.root.signals.entityDestroyed.add(this.updateSurroundingBeltPlacement, this);\r\n\r\n        // Notice: These must come *after* the entity destroyed signals\r\n        this.root.signals.entityAdded.add(this.onEntityAdded, this);\r\n        this.root.signals.entityAdded.add(this.updateSurroundingBeltPlacement, this);\r\n\r\n        /** @type {Array<BeltPath>} */\r\n        this.beltPaths = [];\r\n    }\r\n\r\n    /**\r\n     * Serializes all belt paths\r\n     * @returns {Array<object>}\r\n     */\r\n    serializePaths() {\r\n        let data = [];\r\n        for (let i = 0; i < this.beltPaths.length; ++i) {\r\n            data.push(this.beltPaths[i].serialize());\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Deserializes all belt paths\r\n     * @param {Array<any>} data\r\n     */\r\n    deserializePaths(data) {\r\n        if (!Array.isArray(data)) {\r\n            return \"Belt paths are not an array: \" + typeof data;\r\n        }\r\n\r\n        for (let i = 0; i < data.length; ++i) {\r\n            const path = BeltPath.fromSerialized(this.root, data[i]);\r\n            // If path is a string, that means its an error\r\n            if (!(path instanceof BeltPath)) {\r\n                return \"Failed to create path from belt data: \" + path;\r\n            }\r\n            this.beltPaths.push(path);\r\n        }\r\n\r\n        if (this.beltPaths.length === 0) {\r\n            // Old savegames might not have paths yet\r\n            logger.warn(\"Recomputing belt paths (most likely the savegame is old or empty)\");\r\n            this.recomputeAllBeltPaths();\r\n        } else {\r\n            logger.warn(\"Restored\", this.beltPaths.length, \"belt paths\");\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the belt placement after an entity has been added / deleted\r\n     * @param {Entity} entity\r\n     */\r\n    updateSurroundingBeltPlacement(entity) {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        if (!staticComp) {\r\n            return;\r\n        }\r\n\r\n        const metaBelt = gMetaBuildingRegistry.findByClass(MetaBeltBaseBuilding);\r\n        // Compute affected area\r\n        const originalRect = staticComp.getTileSpaceBounds();\r\n        const affectedArea = originalRect.expandedInAllDirections(1);\r\n\r\n        for (let x = affectedArea.x; x < affectedArea.right(); ++x) {\r\n            for (let y = affectedArea.y; y < affectedArea.bottom(); ++y) {\r\n                if (originalRect.containsPoint(x, y)) {\r\n                    // Make sure we don't update the original entity\r\n                    continue;\r\n                }\r\n\r\n                const targetEntities = this.root.map.getLayersContentsMultipleXY(x, y);\r\n                for (let i = 0; i < targetEntities.length; ++i) {\r\n                    const targetEntity = targetEntities[i];\r\n\r\n                    const targetBeltComp = targetEntity.components.Belt;\r\n                    const targetStaticComp = targetEntity.components.StaticMapEntity;\r\n\r\n                    if (!targetBeltComp) {\r\n                        // Not a belt\r\n                        continue;\r\n                    }\r\n\r\n                    const {\r\n                        rotation,\r\n                        rotationVariant,\r\n                    } = metaBelt.computeOptimalDirectionAndRotationVariantAtTile({\r\n                        root: this.root,\r\n                        tile: new Vector(x, y),\r\n                        rotation: targetStaticComp.originalRotation,\r\n                        variant: defaultBuildingVariant,\r\n                        layer: targetEntity.layer,\r\n                    });\r\n\r\n                    // Compute delta to see if anything changed\r\n                    const newDirection = arrayBeltVariantToRotation[rotationVariant];\r\n\r\n                    if (targetStaticComp.rotation !== rotation || newDirection !== targetBeltComp.direction) {\r\n                        // Ok, first remove it from its current path\r\n                        this.deleteEntityFromPath(targetBeltComp.assignedPath, targetEntity);\r\n\r\n                        // Change stuff\r\n                        targetStaticComp.rotation = rotation;\r\n                        metaBelt.updateVariants(targetEntity, rotationVariant, defaultBuildingVariant);\r\n\r\n                        // Now add it again\r\n                        this.addEntityToPaths(targetEntity);\r\n\r\n                        // Sanity\r\n                        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n                            this.debug_verifyBeltPaths();\r\n                        }\r\n\r\n                        // Make sure the chunks know about the update\r\n                        this.root.signals.entityChanged.dispatch(targetEntity);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when an entity got destroyed\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityDestroyed(entity) {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n\r\n        if (!entity.components.Belt) {\r\n            return;\r\n        }\r\n\r\n        const assignedPath = entity.components.Belt.assignedPath;\r\n        assert(assignedPath, \"Entity has no belt path assigned\");\r\n        this.deleteEntityFromPath(assignedPath, entity);\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attempts to delete the belt from its current path\r\n     * @param {BeltPath} path\r\n     * @param {Entity} entity\r\n     */\r\n    deleteEntityFromPath(path, entity) {\r\n        if (path.entityPath.length === 1) {\r\n            // This is a single entity path, easy to do, simply erase whole path\r\n            fastArrayDeleteValue(this.beltPaths, path);\r\n            return;\r\n        }\r\n\r\n        // Notice: Since there might be circular references, it is important to check\r\n        // which role the entity has\r\n        if (path.isStartEntity(entity)) {\r\n            // We tried to delete the start\r\n            path.deleteEntityOnStart(entity);\r\n        } else if (path.isEndEntity(entity)) {\r\n            // We tried to delete the end\r\n            path.deleteEntityOnEnd(entity);\r\n        } else {\r\n            // We tried to delete something inbetween\r\n            const newPath = path.deleteEntityOnPathSplitIntoTwo(entity);\r\n            this.beltPaths.push(newPath);\r\n        }\r\n\r\n        // Sanity\r\n        entity.components.Belt.assignedPath = null;\r\n    }\r\n\r\n    /**\r\n     * Adds the given entity to the appropriate paths\r\n     * @param {Entity} entity\r\n     */\r\n    addEntityToPaths(entity) {\r\n        const fromEntity = this.findSupplyingEntity(entity);\r\n        const toEntity = this.findFollowUpEntity(entity);\r\n\r\n        // Check if we can add the entity to the previous path\r\n        if (fromEntity) {\r\n            const fromPath = fromEntity.components.Belt.assignedPath;\r\n            fromPath.extendOnEnd(entity);\r\n\r\n            // Check if we now can extend the current path by the next path\r\n            if (toEntity) {\r\n                const toPath = toEntity.components.Belt.assignedPath;\r\n\r\n                if (fromPath === toPath) {\r\n                    // This is a circular dependency -> Ignore\r\n                } else {\r\n                    fromPath.extendByPath(toPath);\r\n\r\n                    // Delete now obsolete path\r\n                    fastArrayDeleteValue(this.beltPaths, toPath);\r\n                }\r\n            }\r\n        } else {\r\n            if (toEntity) {\r\n                // Prepend it to the other path\r\n                const toPath = toEntity.components.Belt.assignedPath;\r\n                toPath.extendOnBeginning(entity);\r\n            } else {\r\n                // This is an empty belt path\r\n                const path = new BeltPath(this.root, [entity]);\r\n                this.beltPaths.push(path);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when an entity got added\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityAdded(entity) {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n\r\n        if (!entity.components.Belt) {\r\n            return;\r\n        }\r\n\r\n        this.addEntityToPaths(entity);\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws all belt paths\r\n     * @param {DrawParameters} parameters\r\n     * @param {enumLayer} layer\r\n     */\r\n    drawLayerBeltItems(parameters, layer) {\r\n        for (let i = 0; i < this.beltPaths.length; ++i) {\r\n            const path = this.beltPaths[i];\r\n            if (path.layer === layer) {\r\n                path.draw(parameters);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Verifies all belt paths\r\n     */\r\n    debug_verifyBeltPaths() {\r\n        for (let i = 0; i < this.beltPaths.length; ++i) {\r\n            this.beltPaths[i].debug_checkIntegrity(\"general-verify\");\r\n        }\r\n\r\n        const belts = this.root.entityMgr.getAllWithComponent(BeltComponent);\r\n        for (let i = 0; i < belts.length; ++i) {\r\n            const path = belts[i].components.Belt.assignedPath;\r\n            if (!path) {\r\n                throw new Error(\"Belt has no path: \" + belts[i].uid);\r\n            }\r\n            if (this.beltPaths.indexOf(path) < 0) {\r\n                throw new Error(\"Path of entity not contained: \" + belts[i].uid);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds the follow up entity for a given belt. Used for building the dependencies\r\n     * @param {Entity} entity\r\n     * @returns {Entity|null}\r\n     */\r\n    findFollowUpEntity(entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const beltComp = entity.components.Belt;\r\n\r\n        const followUpDirection = staticComp.localDirectionToWorld(beltComp.direction);\r\n        const followUpVector = enumDirectionToVector[followUpDirection];\r\n\r\n        const followUpTile = staticComp.origin.add(followUpVector);\r\n        const followUpEntity = this.root.map.getLayerContentXY(followUpTile.x, followUpTile.y, entity.layer);\r\n\r\n        // Check if theres a belt at the tile we point to\r\n        if (followUpEntity) {\r\n            const followUpBeltComp = followUpEntity.components.Belt;\r\n            if (followUpBeltComp) {\r\n                const followUpStatic = followUpEntity.components.StaticMapEntity;\r\n                const followUpAcceptor = followUpEntity.components.ItemAcceptor;\r\n\r\n                // Check if the belt accepts items from our direction\r\n                const acceptorSlots = followUpAcceptor.slots;\r\n                for (let i = 0; i < acceptorSlots.length; ++i) {\r\n                    const slot = acceptorSlots[i];\r\n\r\n                    // Make sure the acceptor slot is on the same layer\r\n                    if (slot.layer !== entity.layer) {\r\n                        continue;\r\n                    }\r\n\r\n                    for (let k = 0; k < slot.directions.length; ++k) {\r\n                        const localDirection = followUpStatic.localDirectionToWorld(slot.directions[k]);\r\n                        if (enumInvertedDirections[localDirection] === followUpDirection) {\r\n                            return followUpEntity;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Finds the supplying belt for a given belt. Used for building the dependencies\r\n     * @param {Entity} entity\r\n     * @returns {Entity|null}\r\n     */\r\n    findSupplyingEntity(entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        const supplyDirection = staticComp.localDirectionToWorld(enumDirection.bottom);\r\n        const supplyVector = enumDirectionToVector[supplyDirection];\r\n\r\n        const supplyTile = staticComp.origin.add(supplyVector);\r\n        const supplyEntity = this.root.map.getLayerContentXY(supplyTile.x, supplyTile.y, entity.layer);\r\n\r\n        // Check if theres a belt at the tile we point to\r\n        if (supplyEntity) {\r\n            const supplyBeltComp = supplyEntity.components.Belt;\r\n            if (supplyBeltComp) {\r\n                const supplyStatic = supplyEntity.components.StaticMapEntity;\r\n                const supplyEjector = supplyEntity.components.ItemEjector;\r\n\r\n                // Check if the belt accepts items from our direction\r\n                const ejectorSlots = supplyEjector.slots;\r\n                for (let i = 0; i < ejectorSlots.length; ++i) {\r\n                    const slot = ejectorSlots[i];\r\n\r\n                    // Make sure the ejector slot is on the same layer\r\n                    if (slot.layer !== entity.layer) {\r\n                        continue;\r\n                    }\r\n                    const localDirection = supplyStatic.localDirectionToWorld(slot.direction);\r\n                    if (enumInvertedDirections[localDirection] === supplyDirection) {\r\n                        return supplyEntity;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Recomputes the belt path network. Only required for old savegames\r\n     */\r\n    recomputeAllBeltPaths() {\r\n        logger.warn(\"Recomputing all belt paths\");\r\n        const visitedUids = new Set();\r\n\r\n        const result = [];\r\n\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            if (visitedUids.has(entity.uid)) {\r\n                continue;\r\n            }\r\n\r\n            // Mark entity as visited\r\n            visitedUids.add(entity.uid);\r\n\r\n            // Compute path, start with entity and find precedors / successors\r\n            const path = [entity];\r\n\r\n            // Prevent infinite loops\r\n            let maxIter = 99999;\r\n\r\n            // Find precedors\r\n            let prevEntity = this.findSupplyingEntity(entity);\r\n            while (prevEntity && --maxIter > 0) {\r\n                if (visitedUids.has(prevEntity.uid)) {\r\n                    break;\r\n                }\r\n                path.unshift(prevEntity);\r\n                visitedUids.add(prevEntity.uid);\r\n                prevEntity = this.findSupplyingEntity(prevEntity);\r\n            }\r\n\r\n            // Find succedors\r\n            let nextEntity = this.findFollowUpEntity(entity);\r\n            while (nextEntity && --maxIter > 0) {\r\n                if (visitedUids.has(nextEntity.uid)) {\r\n                    break;\r\n                }\r\n\r\n                path.push(nextEntity);\r\n                visitedUids.add(nextEntity.uid);\r\n                nextEntity = this.findFollowUpEntity(nextEntity);\r\n            }\r\n\r\n            assert(maxIter > 1, \"Ran out of iterations\");\r\n            result.push(new BeltPath(this.root, path));\r\n        }\r\n\r\n        logger.log(\"Found\", this.beltPaths.length, \"belt paths\");\r\n        this.beltPaths = result;\r\n    }\r\n\r\n    /**\r\n     * Updates all belts\r\n     */\r\n    update() {\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n\r\n        for (let i = 0; i < this.beltPaths.length; ++i) {\r\n            this.beltPaths[i].update();\r\n        }\r\n\r\n        if (G_IS_DEV && globalConfig.debug.checkBeltPaths) {\r\n            this.debug_verifyBeltPaths();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws a given chunk\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk(parameters, chunk) {\r\n        if (parameters.zoomLevel < globalConfig.mapChunkOverviewMinZoom) {\r\n            return;\r\n        }\r\n\r\n        // Limit speed to avoid belts going backwards\r\n        const speedMultiplier = Math.min(this.root.hubGoals.getBeltBaseSpeed(enumLayer.regular), 10);\r\n\r\n        // SYNC with systems/item_acceptor.js:drawEntityUnderlays!\r\n        // 126 / 42 is the exact animation speed of the png animation\r\n        const animationIndex = Math.floor(\r\n            ((this.root.time.realtimeNow() * speedMultiplier * BELT_ANIM_COUNT * 126) / 42) *\r\n                globalConfig.beltItemSpacingByLayer[enumLayer.regular]\r\n        );\r\n        const contents = chunk.contents;\r\n        for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const entity = contents[x][y];\r\n\r\n                if (entity && entity.components.Belt) {\r\n                    const direction = entity.components.Belt.direction;\r\n                    const sprite = this.beltAnimations[direction][animationIndex % BELT_ANIM_COUNT];\r\n\r\n                    entity.components.StaticMapEntity.drawSpriteOnFullEntityBounds(\r\n                        parameters,\r\n                        sprite,\r\n                        0,\r\n                        false\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        1;\r\n    }\r\n\r\n    /**\r\n     * Draws a given chunk\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawWiresChunk(parameters, chunk) {\r\n        if (parameters.zoomLevel < globalConfig.mapChunkOverviewMinZoom) {\r\n            return;\r\n        }\r\n\r\n        const contents = chunk.wireContents;\r\n        for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const entity = contents[x][y];\r\n\r\n                if (entity && entity.components.Belt) {\r\n                    const direction = entity.components.Belt.direction;\r\n                    const sprite = this.wireSprites[direction];\r\n                    entity.components.StaticMapEntity.drawSpriteOnFullEntityBounds(\r\n                        parameters,\r\n                        sprite,\r\n                        0,\r\n                        false\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the belt path debug overlays\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    drawBeltPathDebug(parameters) {\r\n        for (let i = 0; i < this.beltPaths.length; ++i) {\r\n            this.beltPaths[i].drawDebug(parameters);\r\n        }\r\n    }\r\n}\r\n","import { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { clamp } from \"../../core/utils\";\r\nimport { enumItemType } from \"../base_item\";\r\nimport { EnergyConsumerComponent } from \"../components/energy_consumer\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { NEGATIVE_ENERGY_ITEM_SINGLETON } from \"../items/negative_energy_item\";\r\nimport { POSITIVE_ENERGY_ITEM_SINGLETON } from \"../items/positive_energy_item\";\r\n\r\nexport class EnergyConsumerSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [EnergyConsumerComponent]);\r\n\r\n        this.batterySprites = [\r\n            Loader.getSprite(\"sprites/wires/battery_empty.png\"),\r\n            Loader.getSprite(\"sprites/wires/battery_low.png\"),\r\n            Loader.getSprite(\"sprites/wires/battery_medium.png\"),\r\n            Loader.getSprite(\"sprites/wires/battery_full.png\"),\r\n        ];\r\n\r\n        this.piledWasteSprite = Loader.getSprite(\"sprites/wires/waste_piled.png\");\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const energyConsumerComp = entity.components.EnergyConsumer;\r\n\r\n            if (energyConsumerComp.piledOutput >= 1.0) {\r\n                // Try to get rid of waste\r\n\r\n                const ejectorComp = entity.components.ItemEjector;\r\n                const item = this.getItemSingletonByType(energyConsumerComp.wasteType);\r\n                if (ejectorComp.tryEject(energyConsumerComp.ejectorSlotIndex, item)) {\r\n                    // Got rid of waste\r\n                    energyConsumerComp.reduceWaste(1.0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {enumItemType} itemType\r\n     */\r\n    getItemSingletonByType(itemType) {\r\n        switch (itemType) {\r\n            case enumItemType.positiveEnergy:\r\n                return POSITIVE_ENERGY_ITEM_SINGLETON;\r\n            case enumItemType.negativeEnergy:\r\n                return NEGATIVE_ENERGY_ITEM_SINGLETON;\r\n            default:\r\n                assertAlways(false, \"Bad item type: \" + itemType);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws everything\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        this.forEachMatchingEntityOnScreen(parameters, this.drawSingleEntity.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Draws a given entity\r\n     * @param {DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawSingleEntity(parameters, entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const consumerComp = entity.components.EnergyConsumer;\r\n\r\n        const position = staticComp.localTileToWorld(consumerComp.batteryPosition).toWorldSpaceCenterOfTile();\r\n\r\n        if (consumerComp.hasTooMuchWastePiled()) {\r\n            this.piledWasteSprite.drawCachedCentered(parameters, position.x, position.y, 12);\r\n        } else {\r\n            const percentage = consumerComp.stored / consumerComp.bufferSize;\r\n            const index = clamp(\r\n                Math.round(percentage * this.batterySprites.length),\r\n                0,\r\n                this.batterySprites.length - 1\r\n            );\r\n\r\n            this.batterySprites[index].drawCachedCentered(parameters, position.x, position.y, 12);\r\n        }\r\n    }\r\n}\r\n","import { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { formatBigNumber } from \"../../core/utils\";\r\nimport { T } from \"../../translations\";\r\nimport { EnergyGeneratorComponent } from \"../components/energy_generator\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { POSITIVE_ENERGY_ITEM_SINGLETON } from \"../items/positive_energy_item\";\r\nimport { ShapeDefinition } from \"../shape_definition\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { globalConfig } from \"../../core/config\";\r\n\r\nexport class EnergyGeneratorSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [EnergyGeneratorComponent]);\r\n\r\n        this.energyGeneratorOverlay = Loader.getSprite(\"sprites/misc/energy_generator_overlay.png\");\r\n    }\r\n\r\n    draw(parameters) {\r\n        this.forEachMatchingEntityOnScreen(parameters, this.drawEntity.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Returns which shape is required for a given generator\r\n     * @param {Entity} entity\r\n     */\r\n    getShapeRequiredForGenerator(entity) {\r\n        return \"CuCuCuCu\";\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const energyGenComp = entity.components.EnergyGenerator;\r\n            const ejectorComp = entity.components.ItemEjector;\r\n\r\n            if (!energyGenComp.requiredKey) {\r\n                // Compute required key for this generator\r\n                energyGenComp.requiredKey = this.getShapeRequiredForGenerator(entity);\r\n            }\r\n\r\n            if (energyGenComp.itemsInQueue > 0) {\r\n                // FIXME: Find slot dynamically\r\n                if (ejectorComp.tryEject(0, POSITIVE_ENERGY_ITEM_SINGLETON)) {\r\n                    energyGenComp.itemsInQueue -= 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawEntity(parameters, entity) {\r\n        const context = parameters.context;\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        if (!staticComp.shouldBeDrawn(parameters)) {\r\n            return;\r\n        }\r\n\r\n        const energyGenComp = entity.components.EnergyGenerator;\r\n        if (!energyGenComp.requiredKey) {\r\n            // Not initialized yet\r\n            return;\r\n        }\r\n\r\n        const pos = staticComp.getTileSpaceBounds().getCenter().toWorldSpace();\r\n\r\n        const definition = ShapeDefinition.fromShortKey(energyGenComp.requiredKey);\r\n        definition.draw(pos.x, pos.y, parameters, 30);\r\n\r\n        // Draw background\r\n        this.energyGeneratorOverlay.drawCachedCentered(\r\n            parameters,\r\n            pos.x,\r\n            pos.y,\r\n            globalConfig.tileSize * 2 + 8\r\n        );\r\n\r\n        // TODO\r\n        const energyGenerated = 5;\r\n\r\n        // deliver: Deliver\r\n        // toGenerateEnergy: For <x> energy\r\n        context.font = \"bold 9px GameFont\";\r\n        context.fillStyle = \"#64666e\";\r\n        context.textAlign = \"left\";\r\n        context.fillText(T.buildings.energy_generator.deliver.toUpperCase(), pos.x - 25, pos.y - 18);\r\n        context.fillText(T.buildings.energy_generator.toGenerateEnergy.toUpperCase(), pos.x - 25, pos.y + 27);\r\n\r\n        context.font = \"700 9px GameFont\";\r\n        context.fillStyle = \"#dee1ea\";\r\n        context.fillText(\"\" + formatBigNumber(energyGenerated), pos.x + 1, pos.y + 27);\r\n    }\r\n}\r\n","import { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { HubComponent } from \"../components/hub\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Entity } from \"../entity\";\r\nimport { formatBigNumber } from \"../../core/utils\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { T } from \"../../translations\";\r\n\r\nexport class HubSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [HubComponent]);\r\n\r\n        this.hubSprite = Loader.getSprite(\"sprites/buildings/hub.png\");\r\n    }\r\n\r\n    draw(parameters) {\r\n        this.forEachMatchingEntityOnScreen(parameters, this.drawEntity.bind(this));\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n\r\n            const hubComponent = entity.components.Hub;\r\n\r\n            const queue = hubComponent.definitionsToAnalyze;\r\n            for (let k = 0; k < queue.length; ++k) {\r\n                const definition = queue[k];\r\n                this.root.hubGoals.handleDefinitionDelivered(definition);\r\n            }\r\n\r\n            hubComponent.definitionsToAnalyze = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawEntity(parameters, entity) {\r\n        const context = parameters.context;\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        if (!staticComp.shouldBeDrawn(parameters)) {\r\n            return;\r\n        }\r\n\r\n        const pos = staticComp.getTileSpaceBounds().getCenter().toWorldSpace();\r\n\r\n        // Background\r\n        staticComp.drawSpriteOnFullEntityBounds(parameters, this.hubSprite, 2.2);\r\n\r\n        const definition = this.root.hubGoals.currentGoal.definition;\r\n\r\n        definition.draw(pos.x - 25, pos.y - 10, parameters, 40);\r\n\r\n        const goals = this.root.hubGoals.currentGoal;\r\n\r\n        const textOffsetX = 2;\r\n        const textOffsetY = -6;\r\n\r\n        // Deliver count\r\n        const delivered = this.root.hubGoals.getCurrentGoalDelivered();\r\n\r\n        if (delivered > 9999) {\r\n            context.font = \"bold 16px GameFont\";\r\n        } else if (delivered > 999) {\r\n            context.font = \"bold 20px GameFont\";\r\n        } else {\r\n            context.font = \"bold 25px GameFont\";\r\n        }\r\n        context.fillStyle = \"#64666e\";\r\n        context.textAlign = \"left\";\r\n        context.fillText(\"\" + formatBigNumber(delivered), pos.x + textOffsetX, pos.y + textOffsetY);\r\n\r\n        // Required\r\n        context.font = \"13px GameFont\";\r\n        context.fillStyle = \"#a4a6b0\";\r\n        context.fillText(\r\n            \"/ \" + formatBigNumber(goals.required),\r\n            pos.x + textOffsetX,\r\n            pos.y + textOffsetY + 13\r\n        );\r\n\r\n        // Reward\r\n        const rewardText = T.storyRewards[goals.reward].title.toUpperCase();\r\n        if (rewardText.length > 12) {\r\n            context.font = \"bold 9px GameFont\";\r\n        } else {\r\n            context.font = \"bold 11px GameFont\";\r\n        }\r\n        context.fillStyle = \"#fd0752\";\r\n        context.textAlign = \"center\";\r\n\r\n        context.fillText(rewardText, pos.x, pos.y + 46);\r\n\r\n        // Level\r\n        context.font = \"bold 11px GameFont\";\r\n        context.fillStyle = \"#fff\";\r\n        context.fillText(\"\" + this.root.hubGoals.level, pos.x - 42, pos.y - 36);\r\n\r\n        // Texts\r\n        context.textAlign = \"center\";\r\n        context.fillStyle = \"#fff\";\r\n        context.font = \"bold 7px GameFont\";\r\n        context.fillText(T.buildings.hub.levelShortcut, pos.x - 42, pos.y - 47);\r\n\r\n        context.fillStyle = \"#64666e\";\r\n        context.font = \"bold 11px GameFont\";\r\n        context.fillText(T.buildings.hub.deliver.toUpperCase(), pos.x, pos.y - 40);\r\n\r\n        const unlockText = T.buildings.hub.toUnlock.toUpperCase();\r\n        if (unlockText.length > 15) {\r\n            context.font = \"bold 8px GameFont\";\r\n        } else {\r\n            context.font = \"bold 11px GameFont\";\r\n        }\r\n        context.fillText(T.buildings.hub.toUnlock.toUpperCase(), pos.x, pos.y + 30);\r\n\r\n        context.textAlign = \"left\";\r\n    }\r\n}\r\n","import { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Entity } from \"../entity\";\r\nimport { enumDirectionToVector, enumDirectionToAngle } from \"../../core/vector\";\r\nimport { ItemAcceptorComponent } from \"../components/item_acceptor\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { drawRotatedSprite } from \"../../core/draw_utils\";\r\nimport { BELT_ANIM_COUNT } from \"./belt\";\r\nimport { fastArrayDelete } from \"../../core/utils\";\r\nimport { enumLayer } from \"../root\";\r\n\r\nexport class ItemAcceptorSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [ItemAcceptorComponent]);\r\n\r\n        this.underlayBeltSprites = [];\r\n\r\n        for (let i = 0; i < BELT_ANIM_COUNT; ++i) {\r\n            this.underlayBeltSprites.push(Loader.getSprite(\"sprites/belt/forward_\" + i + \".png\"));\r\n        }\r\n    }\r\n\r\n    update() {\r\n        const progress = this.root.dynamicTickrate.deltaSeconds * 2; // * 2 because its only a half tile\r\n\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const aceptorComp = entity.components.ItemAcceptor;\r\n            const animations = aceptorComp.itemConsumptionAnimations;\r\n\r\n            // Process item consumption animations to avoid items popping from the belts\r\n            for (let animIndex = 0; animIndex < animations.length; ++animIndex) {\r\n                const anim = animations[animIndex];\r\n                const layer = aceptorComp.slots[anim.slotIndex].layer;\r\n                anim.animProgress +=\r\n                    progress *\r\n                    this.root.hubGoals.getBeltBaseSpeed(layer) *\r\n                    globalConfig.beltItemSpacingByLayer[layer];\r\n                if (anim.animProgress > 1) {\r\n                    // Original\r\n                    // animations.splice(animIndex, 1);\r\n\r\n                    // Faster variant\r\n                    fastArrayDelete(animations, animIndex);\r\n\r\n                    animIndex -= 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the acceptor items\r\n     * @param {DrawParameters} parameters\r\n     * @param {enumLayer} layer\r\n     */\r\n    drawLayer(parameters, layer) {\r\n        this.forEachMatchingEntityOnScreen(parameters, this.drawEntityRegularLayer.bind(this, layer));\r\n    }\r\n\r\n    /**\r\n     * Draws the acceptor underlays\r\n     * @param {DrawParameters} parameters\r\n     * @param {enumLayer} layer\r\n     */\r\n    drawUnderlays(parameters, layer) {\r\n        this.forEachMatchingEntityOnScreen(parameters, this.drawEntityUnderlays.bind(this, layer));\r\n    }\r\n\r\n    /**\r\n     * @param {enumLayer} layer\r\n     * @param {DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawEntityRegularLayer(layer, parameters, entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const acceptorComp = entity.components.ItemAcceptor;\r\n\r\n        if (!staticComp.shouldBeDrawn(parameters)) {\r\n            return;\r\n        }\r\n\r\n        for (let animIndex = 0; animIndex < acceptorComp.itemConsumptionAnimations.length; ++animIndex) {\r\n            const { item, slotIndex, animProgress, direction } = acceptorComp.itemConsumptionAnimations[\r\n                animIndex\r\n            ];\r\n\r\n            const slotData = acceptorComp.slots[slotIndex];\r\n            if (slotData.layer !== layer) {\r\n                // Don't draw non-regular slots for now\r\n                continue;\r\n            }\r\n\r\n            const slotWorldPos = staticComp.applyRotationToVector(slotData.pos).add(staticComp.origin);\r\n            const fadeOutDirection = enumDirectionToVector[staticComp.localDirectionToWorld(direction)];\r\n            const finalTile = slotWorldPos.subScalars(\r\n                fadeOutDirection.x * (animProgress / 2 - 0.5),\r\n                fadeOutDirection.y * (animProgress / 2 - 0.5)\r\n            );\r\n            item.draw(\r\n                (finalTile.x + 0.5) * globalConfig.tileSize,\r\n                (finalTile.y + 0.5) * globalConfig.tileSize,\r\n                parameters\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {enumLayer} layer\r\n     * @param {DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawEntityUnderlays(layer, parameters, entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const acceptorComp = entity.components.ItemAcceptor;\r\n\r\n        if (!staticComp.shouldBeDrawn(parameters)) {\r\n            return;\r\n        }\r\n\r\n        // Limit speed to avoid belts going backwards\r\n        const speedMultiplier = Math.min(this.root.hubGoals.getBeltBaseSpeed(layer), 10);\r\n\r\n        const underlays = acceptorComp.beltUnderlays;\r\n        for (let i = 0; i < underlays.length; ++i) {\r\n            const { pos, direction, layer: underlayLayer } = underlays[i];\r\n            if (underlayLayer !== layer) {\r\n                // Not our layer\r\n                continue;\r\n            }\r\n\r\n            const transformedPos = staticComp.localTileToWorld(pos);\r\n            const angle = enumDirectionToAngle[staticComp.localDirectionToWorld(direction)];\r\n\r\n            // SYNC with systems/belt.js:drawSingleEntity!\r\n            const animationIndex = Math.floor(\r\n                ((this.root.time.realtimeNow() * speedMultiplier * BELT_ANIM_COUNT * 126) / 42) *\r\n                    globalConfig.beltItemSpacingByLayer[layer]\r\n            );\r\n\r\n            drawRotatedSprite({\r\n                parameters,\r\n                sprite: this.underlayBeltSprites[animationIndex % this.underlayBeltSprites.length],\r\n                x: (transformedPos.x + 0.5) * globalConfig.tileSize,\r\n                y: (transformedPos.y + 0.5) * globalConfig.tileSize,\r\n                angle: Math.radians(angle),\r\n                size: globalConfig.tileSize,\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { Rectangle } from \"../../core/rectangle\";\r\nimport { enumDirectionToVector, Vector } from \"../../core/vector\";\r\nimport { BaseItem, enumItemType, enumItemTypeToLayer } from \"../base_item\";\r\nimport { ItemEjectorComponent } from \"../components/item_ejector\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { enumLayer } from \"../root\";\r\n\r\nconst logger = createLogger(\"systems/ejector\");\r\n\r\nexport class ItemEjectorSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [ItemEjectorComponent]);\r\n\r\n        this.root.signals.entityAdded.add(this.checkForCacheInvalidation, this);\r\n        this.root.signals.entityDestroyed.add(this.checkForCacheInvalidation, this);\r\n        this.root.signals.postLoadHook.add(this.recomputeCache, this);\r\n\r\n        /**\r\n         * @type {Rectangle}\r\n         */\r\n        this.areaToRecompute = null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    checkForCacheInvalidation(entity) {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n        if (!entity.components.StaticMapEntity) {\r\n            return;\r\n        }\r\n\r\n        // Optimize for the common case: adding or removing one building at a time. Clicking\r\n        // and dragging can cause up to 4 add/remove signals.\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const bounds = staticComp.getTileSpaceBounds();\r\n        const expandedBounds = bounds.expandedInAllDirections(2);\r\n\r\n        if (this.areaToRecompute) {\r\n            this.areaToRecompute = this.areaToRecompute.getUnion(expandedBounds);\r\n        } else {\r\n            this.areaToRecompute = expandedBounds;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Precomputes the cache, which makes up for a huge performance improvement\r\n     */\r\n    recomputeCache() {\r\n        if (this.areaToRecompute) {\r\n            logger.log(\"Recomputing cache using rectangle\");\r\n            if (G_IS_DEV && globalConfig.debug.renderChanges) {\r\n                this.root.hud.parts.changesDebugger.renderChange(\r\n                    \"ejector-area\",\r\n                    this.areaToRecompute,\r\n                    \"#fe50a6\"\r\n                );\r\n            }\r\n            this.recomputeAreaCache();\r\n            this.areaToRecompute = null;\r\n        } else {\r\n            logger.log(\"Full cache recompute\");\r\n            if (G_IS_DEV && globalConfig.debug.renderChanges) {\r\n                this.root.hud.parts.changesDebugger.renderChange(\r\n                    \"ejector-full\",\r\n                    new Rectangle(-1000, -1000, 2000, 2000),\r\n                    \"#fe50a6\"\r\n                );\r\n            }\r\n\r\n            // Try to find acceptors for every ejector\r\n            for (let i = 0; i < this.allEntities.length; ++i) {\r\n                const entity = this.allEntities[i];\r\n                this.recomputeSingleEntityCache(entity);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recomputes the cache in the given area\r\n     */\r\n    recomputeAreaCache() {\r\n        const area = this.areaToRecompute;\r\n        let entryCount = 0;\r\n\r\n        logger.log(\"Recomputing area:\", area.x, area.y, \"/\", area.w, area.h);\r\n\r\n        // Store the entities we already recomputed, so we don't do work twice\r\n        const recomputedEntities = new Set();\r\n\r\n        for (let x = area.x; x < area.right(); ++x) {\r\n            for (let y = area.y; y < area.bottom(); ++y) {\r\n                const entities = this.root.map.getLayersContentsMultipleXY(x, y);\r\n                for (let i = 0; i < entities.length; ++i) {\r\n                    const entity = entities[i];\r\n\r\n                    // Recompute the entity in case its relevant for this system and it\r\n                    // hasn't already been computed\r\n                    if (!recomputedEntities.has(entity.uid) && entity.components.ItemEjector) {\r\n                        recomputedEntities.add(entity.uid);\r\n                        this.recomputeSingleEntityCache(entity);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return entryCount;\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     */\r\n    recomputeSingleEntityCache(entity) {\r\n        const ejectorComp = entity.components.ItemEjector;\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        // Clear the old cache.\r\n        ejectorComp.cachedConnectedSlots = null;\r\n\r\n        for (let ejectorSlotIndex = 0; ejectorSlotIndex < ejectorComp.slots.length; ++ejectorSlotIndex) {\r\n            const ejectorSlot = ejectorComp.slots[ejectorSlotIndex];\r\n\r\n            // Clear the old cache.\r\n            ejectorSlot.cachedDestSlot = null;\r\n            ejectorSlot.cachedTargetEntity = null;\r\n\r\n            // Figure out where and into which direction we eject items\r\n            const ejectSlotWsTile = staticComp.localTileToWorld(ejectorSlot.pos);\r\n            const ejectSlotWsDirection = staticComp.localDirectionToWorld(ejectorSlot.direction);\r\n            const ejectSlotWsDirectionVector = enumDirectionToVector[ejectSlotWsDirection];\r\n            const ejectSlotTargetWsTile = ejectSlotWsTile.add(ejectSlotWsDirectionVector);\r\n\r\n            // Try to find the given acceptor component to take the item\r\n            // Since there can be cross layer dependencies, check on all layers\r\n            const targetEntities = this.root.map.getLayersContentsMultipleXY(\r\n                ejectSlotTargetWsTile.x,\r\n                ejectSlotTargetWsTile.y\r\n            );\r\n\r\n            for (let i = 0; i < targetEntities.length; ++i) {\r\n                const targetEntity = targetEntities[i];\r\n\r\n                const targetAcceptorComp = targetEntity.components.ItemAcceptor;\r\n                const targetStaticComp = targetEntity.components.StaticMapEntity;\r\n                if (!targetAcceptorComp) {\r\n                    // Entity doesn't accept items\r\n                    continue;\r\n                }\r\n\r\n                const matchingSlot = targetAcceptorComp.findMatchingSlot(\r\n                    targetStaticComp.worldToLocalTile(ejectSlotTargetWsTile),\r\n                    targetStaticComp.worldDirectionToLocal(ejectSlotWsDirection),\r\n                    ejectorSlot.layer\r\n                );\r\n\r\n                if (!matchingSlot) {\r\n                    // No matching slot found\r\n                    continue;\r\n                }\r\n\r\n                // Ok we found a connection\r\n                if (ejectorComp.cachedConnectedSlots) {\r\n                    ejectorComp.cachedConnectedSlots.push(ejectorSlot);\r\n                } else {\r\n                    ejectorComp.cachedConnectedSlots = [ejectorSlot];\r\n                }\r\n\r\n                // A slot can always be connected to one other slot only\r\n                ejectorSlot.cachedTargetEntity = targetEntity;\r\n                ejectorSlot.cachedDestSlot = matchingSlot;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (this.areaToRecompute) {\r\n            this.recomputeCache();\r\n        }\r\n\r\n        // Precompute effective belt speed\r\n        let progressGrowth = 2 * this.root.dynamicTickrate.deltaSeconds;\r\n\r\n        if (G_IS_DEV && globalConfig.debug.instantBelts) {\r\n            progressGrowth = 1;\r\n        }\r\n\r\n        // Go over all cache entries\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const sourceEntity = this.allEntities[i];\r\n            const sourceEjectorComp = sourceEntity.components.ItemEjector;\r\n            if (!sourceEjectorComp.enabled) {\r\n                continue;\r\n            }\r\n\r\n            if (!sourceEjectorComp.cachedConnectedSlots) {\r\n                continue;\r\n            }\r\n\r\n            const slots = sourceEjectorComp.cachedConnectedSlots;\r\n            for (let j = 0; j < slots.length; ++j) {\r\n                const sourceSlot = slots[j];\r\n                const item = sourceSlot.item;\r\n                if (!item) {\r\n                    // No item available to be ejected\r\n                    continue;\r\n                }\r\n\r\n                const destSlot = sourceSlot.cachedDestSlot;\r\n                const targetEntity = sourceSlot.cachedTargetEntity;\r\n\r\n                // Advance items on the slot\r\n                sourceSlot.progress = Math.min(\r\n                    1,\r\n                    sourceSlot.progress +\r\n                        progressGrowth *\r\n                            this.root.hubGoals.getBeltBaseSpeed(sourceSlot.layer) *\r\n                            globalConfig.beltItemSpacingByLayer[sourceSlot.layer]\r\n                );\r\n\r\n                // Check if we are still in the process of ejecting, can't proceed then\r\n                if (sourceSlot.progress < 1.0) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if the target acceptor can actually accept this item\r\n                const targetAcceptorComp = targetEntity.components.ItemAcceptor;\r\n                if (!targetAcceptorComp.canAcceptItem(destSlot.index, item)) {\r\n                    continue;\r\n                }\r\n\r\n                // Try to hand over the item\r\n                if (this.tryPassOverItem(item, targetEntity, destSlot.index)) {\r\n                    // Handover successful, clear slot\r\n                    targetAcceptorComp.onItemAccepted(destSlot.index, destSlot.acceptedDirection, item);\r\n                    sourceSlot.item = null;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {BaseItem} item\r\n     * @param {Entity} receiver\r\n     * @param {number} slotIndex\r\n     */\r\n    tryPassOverItem(item, receiver, slotIndex) {\r\n        // Try figuring out how what to do with the item\r\n        // TODO: Kinda hacky. How to solve this properly? Don't want to go through inheritance hell.\r\n        // Also its just a few cases (hope it stays like this .. :x).\r\n\r\n        const itemLayer = enumItemTypeToLayer[item.getItemType()];\r\n\r\n        const beltComp = receiver.components.Belt;\r\n        if (beltComp) {\r\n            const path = beltComp.assignedPath;\r\n            assert(path, \"belt has no path\");\r\n            if (path.tryAcceptItem(item)) {\r\n                return true;\r\n            }\r\n            // Belt can have nothing else\r\n            return false;\r\n        }\r\n\r\n        const energyConsumerComp = receiver.components.EnergyConsumer;\r\n        if (energyConsumerComp) {\r\n            if (energyConsumerComp.tryAcceptItem(item, slotIndex)) {\r\n                // All good\r\n                return true;\r\n            }\r\n\r\n            // Energy consumer can have more components\r\n        }\r\n\r\n        const itemProcessorComp = receiver.components.ItemProcessor;\r\n        if (itemProcessorComp) {\r\n            // Make sure its the same layer\r\n            if (itemLayer === receiver.layer) {\r\n                // Its an item processor ..\r\n                if (itemProcessorComp.tryTakeItem(item, slotIndex)) {\r\n                    return true;\r\n                }\r\n                // Item processor can have nothing else\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const undergroundBeltComp = receiver.components.UndergroundBelt;\r\n        if (undergroundBeltComp) {\r\n            // Its an underground belt. yay.\r\n            if (\r\n                undergroundBeltComp.tryAcceptExternalItem(\r\n                    item,\r\n                    this.root.hubGoals.getUndergroundBeltBaseSpeed()\r\n                )\r\n            ) {\r\n                return true;\r\n            }\r\n\r\n            // Underground belt can have nothing else\r\n            return false;\r\n        }\r\n\r\n        const storageComp = receiver.components.Storage;\r\n        if (storageComp) {\r\n            // It's a storage\r\n            if (storageComp.canAcceptItem(item)) {\r\n                storageComp.takeItem(item);\r\n                return true;\r\n            }\r\n\r\n            // Storage can't have anything else\r\n            return false;\r\n        }\r\n\r\n        const energyGeneratorComp = receiver.components.EnergyGenerator;\r\n        if (energyGeneratorComp) {\r\n            if (energyGeneratorComp.tryTakeItem(item, slotIndex)) {\r\n                // Passed it over\r\n                return true;\r\n            }\r\n\r\n            // Energy generator comp can't have anything else\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Draws the given layer\r\n     * @param {DrawParameters} parameters\r\n     * @param {enumLayer} layer\r\n     */\r\n    drawLayer(parameters, layer) {\r\n        this.forEachMatchingEntityOnScreen(parameters, this.drawSingleEntity.bind(this, layer));\r\n    }\r\n\r\n    /**\r\n     * @param {enumLayer} layer\r\n     * @param {DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawSingleEntity(layer, parameters, entity) {\r\n        const ejectorComp = entity.components.ItemEjector;\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        if (!staticComp.shouldBeDrawn(parameters)) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < ejectorComp.slots.length; ++i) {\r\n            const slot = ejectorComp.slots[i];\r\n            const ejectedItem = slot.item;\r\n\r\n            if (!ejectedItem) {\r\n                // No item\r\n                continue;\r\n            }\r\n\r\n            if (slot.layer !== layer) {\r\n                // Not our layer\r\n                continue;\r\n            }\r\n\r\n            const realPosition = slot.pos.rotateFastMultipleOf90(staticComp.rotation);\r\n            const realDirection = Vector.transformDirectionFromMultipleOf90(\r\n                slot.direction,\r\n                staticComp.rotation\r\n            );\r\n            const realDirectionVector = enumDirectionToVector[realDirection];\r\n\r\n            const tileX =\r\n                staticComp.origin.x + realPosition.x + 0.5 + realDirectionVector.x * 0.5 * slot.progress;\r\n            const tileY =\r\n                staticComp.origin.y + realPosition.y + 0.5 + realDirectionVector.y * 0.5 * slot.progress;\r\n\r\n            const worldX = tileX * globalConfig.tileSize;\r\n            const worldY = tileY * globalConfig.tileSize;\r\n\r\n            ejectedItem.draw(worldX, worldY, parameters);\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { BaseItem, enumItemType } from \"../base_item\";\r\nimport { enumColorMixingResults, enumInvertedColors } from \"../colors\";\r\nimport { enumItemProcessorTypes, ItemProcessorComponent } from \"../components/item_processor\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { ColorItem } from \"../items/color_item\";\r\nimport { ShapeItem } from \"../items/shape_item\";\r\nimport { ShapeDefinition } from \"../shape_definition\";\r\nimport { customBuildingData } from \"../custom/modBuildings\";\r\n\r\nexport class ItemProcessorSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [ItemProcessorComponent]);\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n\r\n            const processorComp = entity.components.ItemProcessor;\r\n            const ejectorComp = entity.components.ItemEjector;\r\n\r\n            // First of all, process the current recipe\r\n            processorComp.secondsUntilEject = Math.max(\r\n                0,\r\n                processorComp.secondsUntilEject - this.root.dynamicTickrate.deltaSeconds\r\n            );\r\n\r\n            if (G_IS_DEV && globalConfig.debug.instantProcessors) {\r\n                processorComp.secondsUntilEject = 0;\r\n            }\r\n\r\n            // Check if we have any finished items we can eject\r\n            if (\r\n                processorComp.secondsUntilEject === 0 && // it was processed in time\r\n                processorComp.itemsToEject.length > 0 // we have some items left to eject\r\n            ) {\r\n                for (let itemIndex = 0; itemIndex < processorComp.itemsToEject.length; ++itemIndex) {\r\n                    const { item, requiredSlot, preferredSlot } = processorComp.itemsToEject[itemIndex];\r\n\r\n                    let slot = null;\r\n                    if (requiredSlot !== null && requiredSlot !== undefined) {\r\n                        // We have a slot override, check if that is free\r\n                        if (ejectorComp.canEjectOnSlot(requiredSlot)) {\r\n                            slot = requiredSlot;\r\n                        }\r\n                    } else if (preferredSlot !== null && preferredSlot !== undefined) {\r\n                        // We have a slot preference, try using it but otherwise use a free slot\r\n                        if (ejectorComp.canEjectOnSlot(preferredSlot)) {\r\n                            slot = preferredSlot;\r\n                        } else {\r\n                            slot = ejectorComp.getFirstFreeSlot(entity.layer);\r\n                        }\r\n                    } else {\r\n                        // We can eject on any slot\r\n                        slot = ejectorComp.getFirstFreeSlot(entity.layer);\r\n                    }\r\n\r\n                    if (slot !== null) {\r\n                        // Alright, we can actually eject\r\n                        if (!ejectorComp.tryEject(slot, item)) {\r\n                            assert(false, \"Failed to eject\");\r\n                        } else {\r\n                            processorComp.itemsToEject.splice(itemIndex, 1);\r\n                            itemIndex -= 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check if we have an empty queue and can start a new charge\r\n            if (processorComp.itemsToEject.length === 0) {\r\n                if (processorComp.inputSlots.length >= processorComp.inputsPerCharge) {\r\n                    const energyConsumerComp = entity.components.EnergyConsumer;\r\n                    if (energyConsumerComp) {\r\n                        // Check if we have enough energy\r\n                        if (energyConsumerComp.tryStartNextCharge()) {\r\n                            this.startNewCharge(entity);\r\n                        }\r\n                    } else {\r\n                        // No further checks required\r\n                        this.startNewCharge(entity);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts a new charge for the entity\r\n     * @param {Entity} entity\r\n     */\r\n    startNewCharge(entity) {\r\n        const processorComp = entity.components.ItemProcessor;\r\n\r\n        // First, take items\r\n        const items = processorComp.inputSlots;\r\n        processorComp.inputSlots = [];\r\n\r\n        /** @type {Array.<{ item: BaseItem, sourceSlot: number }>} */\r\n        const itemsBySlot = [];\r\n        for (let i = 0; i < items.length; ++i) {\r\n            itemsBySlot[items[i].sourceSlot] = items[i];\r\n        }\r\n\r\n        const baseSpeed = this.root.hubGoals.getProcessorBaseSpeed(processorComp.type);\r\n        processorComp.secondsUntilEject = 1 / baseSpeed;\r\n\r\n        /** @type {Array<{item: BaseItem, requiredSlot?: number, preferredSlot?: number}>} */\r\n        const outItems = [];\r\n\r\n        // Whether to track the production towards the analytics\r\n        let trackProduction = true;\r\n\r\n        // DO SOME MAGIC\r\n\r\n        if (customBuildingData[processorComp.type]) {\r\n            let custom = customBuildingData[processorComp.type];\r\n            trackProduction = custom.process({\r\n                items: itemsBySlot,\r\n                trackProduction,\r\n                entity,\r\n                outItems,\r\n                self: this,\r\n            });\r\n        } else\r\n        switch (processorComp.type) {\r\n            // SPLITTER\r\n            case enumItemProcessorTypes.splitterWires:\r\n            case enumItemProcessorTypes.splitter: {\r\n                trackProduction = false;\r\n                const availableSlots = entity.components.ItemEjector.slots.length;\r\n\r\n                let nextSlot = processorComp.nextOutputSlot++ % availableSlots;\r\n                for (let i = 0; i < items.length; ++i) {\r\n                    outItems.push({\r\n                        item: items[i].item,\r\n                        preferredSlot: (nextSlot + i) % availableSlots,\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n\r\n            // CUTTER\r\n            case enumItemProcessorTypes.cutter: {\r\n                const inputItem = /** @type {ShapeItem} */ (items[0].item);\r\n                assert(inputItem instanceof ShapeItem, \"Input for cut is not a shape\");\r\n                const inputDefinition = inputItem.definition;\r\n\r\n                const cutDefinitions = this.root.shapeDefinitionMgr.shapeActionCutHalf(inputDefinition);\r\n\r\n                for (let i = 0; i < cutDefinitions.length; ++i) {\r\n                    const definition = cutDefinitions[i];\r\n                    if (!definition.isEntirelyEmpty()) {\r\n                        outItems.push({\r\n                            item: new ShapeItem(definition),\r\n                            requiredSlot: i,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            // CUTTER (Quad)\r\n            case enumItemProcessorTypes.cutterQuad: {\r\n                const inputItem = /** @type {ShapeItem} */ (items[0].item);\r\n                assert(inputItem instanceof ShapeItem, \"Input for cut is not a shape\");\r\n                const inputDefinition = inputItem.definition;\r\n\r\n                const cutDefinitions = this.root.shapeDefinitionMgr.shapeActionCutQuad(inputDefinition);\r\n\r\n                for (let i = 0; i < cutDefinitions.length; ++i) {\r\n                    const definition = cutDefinitions[i];\r\n                    if (!definition.isEntirelyEmpty()) {\r\n                        outItems.push({\r\n                            item: new ShapeItem(definition),\r\n                            requiredSlot: i,\r\n                        });\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            // ROTATER\r\n            case enumItemProcessorTypes.rotater: {\r\n                const inputItem = /** @type {ShapeItem} */ (items[0].item);\r\n                assert(inputItem instanceof ShapeItem, \"Input for rotation is not a shape\");\r\n                const inputDefinition = inputItem.definition;\r\n\r\n                const rotatedDefinition = this.root.shapeDefinitionMgr.shapeActionRotateCW(inputDefinition);\r\n                outItems.push({\r\n                    item: new ShapeItem(rotatedDefinition),\r\n                });\r\n                break;\r\n            }\r\n\r\n            // ROTATER (CCW)\r\n            case enumItemProcessorTypes.rotaterCCW: {\r\n                const inputItem = /** @type {ShapeItem} */ (items[0].item);\r\n                assert(inputItem instanceof ShapeItem, \"Input for rotation is not a shape\");\r\n                const inputDefinition = inputItem.definition;\r\n\r\n                const rotatedDefinition = this.root.shapeDefinitionMgr.shapeActionRotateCCW(inputDefinition);\r\n                outItems.push({\r\n                    item: new ShapeItem(rotatedDefinition),\r\n                });\r\n                break;\r\n            }\r\n\r\n            // ROTATER (FL)\r\n            case enumItemProcessorTypes.rotaterFL: {\r\n                const inputItem = /** @type {ShapeItem} */ (items[0].item);\r\n                assert(inputItem instanceof ShapeItem, \"Input for rotation is not a shape\");\r\n                const inputDefinition = inputItem.definition;\r\n\r\n                const rotatedDefinition = this.root.shapeDefinitionMgr.shapeActionRotateFL(inputDefinition);\r\n                outItems.push({\r\n                    item: new ShapeItem(rotatedDefinition),\r\n                });\r\n                break;\r\n            }\r\n\r\n            // STACKER\r\n\r\n            case enumItemProcessorTypes.stacker: {\r\n                const lowerItem = /** @type {ShapeItem} */ (itemsBySlot[0].item);\r\n                const upperItem = /** @type {ShapeItem} */ (itemsBySlot[1].item);\r\n\r\n                assert(lowerItem instanceof ShapeItem, \"Input for lower stack is not a shape\");\r\n                assert(upperItem instanceof ShapeItem, \"Input for upper stack is not a shape\");\r\n\r\n                const stackedDefinition = this.root.shapeDefinitionMgr.shapeActionStack(\r\n                    lowerItem.definition,\r\n                    upperItem.definition\r\n                );\r\n                outItems.push({\r\n                    item: new ShapeItem(stackedDefinition),\r\n                });\r\n                break;\r\n            }\r\n\r\n            // TRASH\r\n\r\n            case enumItemProcessorTypes.trash: {\r\n                // Well this one is easy .. simply do nothing with the item\r\n                break;\r\n            }\r\n\r\n            // MIXER\r\n\r\n            case enumItemProcessorTypes.mixer: {\r\n                // Find both colors and combine them\r\n                const item1 = /** @type {ColorItem} */ (items[0].item);\r\n                const item2 = /** @type {ColorItem} */ (items[1].item);\r\n                assert(item1 instanceof ColorItem, \"Input for color mixer is not a color\");\r\n                assert(item2 instanceof ColorItem, \"Input for color mixer is not a color\");\r\n\r\n                const color1 = item1.color;\r\n                const color2 = item2.color;\r\n\r\n                // Try finding mixer color, and if we can't mix it we simply return the same color\r\n                const mixedColor = enumColorMixingResults[color1][color2];\r\n                let resultColor = color1;\r\n                if (mixedColor) {\r\n                    resultColor = mixedColor;\r\n                }\r\n                outItems.push({\r\n                    item: new ColorItem(resultColor),\r\n                });\r\n\r\n                break;\r\n            }\r\n\r\n            // PAINTER\r\n\r\n            case enumItemProcessorTypes.painter: {\r\n                const shapeItem = /** @type {ShapeItem} */ (itemsBySlot[0].item);\r\n                const colorItem = /** @type {ColorItem} */ (itemsBySlot[1].item);\r\n\r\n                const colorizedDefinition = this.root.shapeDefinitionMgr.shapeActionPaintWith(\r\n                    shapeItem.definition,\r\n                    colorItem.color\r\n                );\r\n\r\n                outItems.push({\r\n                    item: new ShapeItem(colorizedDefinition),\r\n                });\r\n\r\n                break;\r\n            }\r\n\r\n            // PAINTER (DOUBLE)\r\n\r\n            case enumItemProcessorTypes.painterDouble: {\r\n                const shapeItem1 = /** @type {ShapeItem} */ (itemsBySlot[0].item);\r\n                const shapeItem2 = /** @type {ShapeItem} */ (itemsBySlot[1].item);\r\n                const colorItem = /** @type {ColorItem} */ (itemsBySlot[2].item);\r\n\r\n                assert(shapeItem1 instanceof ShapeItem, \"Input for painter is not a shape\");\r\n                assert(shapeItem2 instanceof ShapeItem, \"Input for painter is not a shape\");\r\n                assert(colorItem instanceof ColorItem, \"Input for painter is not a color\");\r\n\r\n                const colorizedDefinition1 = this.root.shapeDefinitionMgr.shapeActionPaintWith(\r\n                    shapeItem1.definition,\r\n                    colorItem.color\r\n                );\r\n\r\n                const colorizedDefinition2 = this.root.shapeDefinitionMgr.shapeActionPaintWith(\r\n                    shapeItem2.definition,\r\n                    colorItem.color\r\n                );\r\n                outItems.push({\r\n                    item: new ShapeItem(colorizedDefinition1),\r\n                });\r\n\r\n                outItems.push({\r\n                    item: new ShapeItem(colorizedDefinition2),\r\n                });\r\n\r\n                break;\r\n            }\r\n\r\n            // PAINTER (QUAD)\r\n\r\n            case enumItemProcessorTypes.painterQuad: {\r\n                const shapeItem = /** @type {ShapeItem} */ (itemsBySlot[0].item);\r\n                const colorItem1 = /** @type {ColorItem} */ (itemsBySlot[1].item);\r\n                const colorItem2 = /** @type {ColorItem} */ (itemsBySlot[2].item);\r\n                const colorItem3 = /** @type {ColorItem} */ (itemsBySlot[3].item);\r\n                const colorItem4 = /** @type {ColorItem} */ (itemsBySlot[4].item);\r\n\r\n                assert(shapeItem instanceof ShapeItem, \"Input for painter is not a shape\");\r\n                assert(colorItem1 instanceof ColorItem, \"Input for painter is not a color\");\r\n                assert(colorItem2 instanceof ColorItem, \"Input for painter is not a color\");\r\n                assert(colorItem3 instanceof ColorItem, \"Input for painter is not a color\");\r\n                assert(colorItem4 instanceof ColorItem, \"Input for painter is not a color\");\r\n\r\n                const colorizedDefinition = this.root.shapeDefinitionMgr.shapeActionPaintWith4Colors(\r\n                    shapeItem.definition,\r\n                    [colorItem2.color, colorItem3.color, colorItem4.color, colorItem1.color]\r\n                );\r\n\r\n                outItems.push({\r\n                    item: new ShapeItem(colorizedDefinition),\r\n                });\r\n\r\n                break;\r\n            }\r\n\r\n            // HUB\r\n\r\n            case enumItemProcessorTypes.hub: {\r\n                trackProduction = false;\r\n\r\n                const hubComponent = entity.components.Hub;\r\n                assert(hubComponent, \"Hub item processor has no hub component\");\r\n\r\n                for (let i = 0; i < items.length; ++i) {\r\n                    const shapeItem = /** @type {ShapeItem} */ (items[i].item);\r\n                    hubComponent.queueShapeDefinition(shapeItem.definition);\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            // ADVANCED PROCESSING\r\n\r\n            case enumItemProcessorTypes.advancedProcessor: {\r\n                const item = items[0].item;\r\n\r\n                if (item.getItemType() === enumItemType.color) {\r\n                    const colorItem = /** @type {ColorItem} */ (items[0].item);\r\n                    const newColor = enumInvertedColors[colorItem.color];\r\n                    outItems.push({\r\n                        item: new ColorItem(newColor),\r\n                        requiredSlot: 0,\r\n                    });\r\n                } else if (item.getItemType() === enumItemType.shape) {\r\n                    const shapeItem = /** @type {ShapeItem} */ (items[0].item);\r\n                    const newItem = this.root.shapeDefinitionMgr.shapeActionInvertColors(\r\n                        shapeItem.definition\r\n                    );\r\n\r\n                    outItems.push({\r\n                        item: new ShapeItem(newItem),\r\n                        requiredSlot: 0,\r\n                    });\r\n                } else {\r\n                    assertAlways(false, \"Bad item type: \" + item.getItemType() + \" for advanced processor.\");\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            default:\r\n                assertAlways(false, \"Unkown item processor type: \" + processorComp.type);\r\n        }\r\n\r\n        // Track produced items\r\n        if (trackProduction) {\r\n            for (let i = 0; i < outItems.length; ++i) {\r\n                this.root.signals.itemProduced.dispatch(outItems[i].item);\r\n            }\r\n        }\r\n\r\n        processorComp.itemsToEject = outItems;\r\n    }\r\n}\r\n","import { GameSystem } from \"../game_system\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\n\r\nexport class MapResourcesSystem extends GameSystem {\r\n    /**\r\n     * Draws the map resources\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk(parameters, chunk) {\r\n        const renderItems = parameters.zoomLevel >= globalConfig.mapChunkOverviewMinZoom;\r\n\r\n        parameters.context.globalAlpha = 0.5;\r\n\r\n        const layer = chunk.lowerLayer;\r\n        for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n            const row = layer[x];\r\n            const worldX = (chunk.tileX + x) * globalConfig.tileSize;\r\n            for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n                const lowerItem = row[y];\r\n                if (lowerItem) {\r\n                    const worldY = (chunk.tileY + y) * globalConfig.tileSize;\r\n\r\n                    if (\r\n                        !parameters.visibleRect.containsRect4Params(\r\n                            worldX,\r\n                            worldY,\r\n                            globalConfig.tileSize,\r\n                            globalConfig.tileSize\r\n                        )\r\n                    ) {\r\n                        // Clipped\r\n                        continue;\r\n                    }\r\n\r\n                    parameters.context.fillStyle = lowerItem.getBackgroundColorAsResource();\r\n                    parameters.context.fillRect(worldX, worldY, globalConfig.tileSize, globalConfig.tileSize);\r\n                    if (renderItems) {\r\n                        lowerItem.draw(\r\n                            worldX + globalConfig.halfTileSize,\r\n                            worldY + globalConfig.halfTileSize,\r\n                            parameters\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        parameters.context.globalAlpha = 1;\r\n\r\n        if (!renderItems) {\r\n            // Render patches instead\r\n            const patches = chunk.patches;\r\n            for (let i = 0; i < patches.length; ++i) {\r\n                const { pos, item, size } = patches[i];\r\n\r\n                item.draw(\r\n                    (chunk.tileX + pos.x + 0.5) * globalConfig.tileSize,\r\n                    (chunk.tileY + pos.y + 0.5) * globalConfig.tileSize,\r\n                    parameters,\r\n                    80\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { enumDirectionToVector } from \"../../core/vector\";\r\nimport { BaseItem } from \"../base_item\";\r\nimport { MinerComponent } from \"../components/miner\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\nimport { enumLayer } from \"../root\";\r\n\r\nexport class MinerSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [MinerComponent]);\r\n    }\r\n\r\n    update() {\r\n        let miningSpeed = this.root.hubGoals.getMinerBaseSpeed();\r\n        if (G_IS_DEV && globalConfig.debug.instantMiners) {\r\n            miningSpeed *= 100;\r\n        }\r\n\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n\r\n            // Check if miner is above an actual tile\r\n\r\n            const minerComp = entity.components.Miner;\r\n\r\n            if (!minerComp.cachedMinedItem) {\r\n                const staticComp = entity.components.StaticMapEntity;\r\n                const tileBelow = this.root.map.getLowerLayerContentXY(\r\n                    staticComp.origin.x,\r\n                    staticComp.origin.y\r\n                );\r\n                if (!tileBelow) {\r\n                    continue;\r\n                }\r\n                minerComp.cachedMinedItem = tileBelow;\r\n            }\r\n\r\n            // First, try to get rid of chained items\r\n            if (minerComp.itemChainBuffer.length > 0) {\r\n                if (this.tryPerformMinerEject(entity, minerComp.itemChainBuffer[0])) {\r\n                    minerComp.itemChainBuffer.shift();\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if (this.root.time.isIngameTimerExpired(minerComp.lastMiningTime, 1 / miningSpeed)) {\r\n                if (this.tryPerformMinerEject(entity, minerComp.cachedMinedItem)) {\r\n                    // Analytics hook\r\n                    this.root.signals.itemProduced.dispatch(minerComp.cachedMinedItem);\r\n\r\n                    // Actually mine\r\n                    minerComp.lastMiningTime = this.root.time.now();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     * @param {BaseItem} item\r\n     */\r\n    tryPerformMinerEject(entity, item) {\r\n        const minerComp = entity.components.Miner;\r\n        const ejectComp = entity.components.ItemEjector;\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        // Check if we are a chained miner\r\n        if (minerComp.chainable) {\r\n            const ejectingSlot = ejectComp.slots[0];\r\n            const ejectingPos = staticComp.localTileToWorld(ejectingSlot.pos);\r\n            const ejectingDirection = staticComp.localDirectionToWorld(ejectingSlot.direction);\r\n\r\n            const targetTile = ejectingPos.add(enumDirectionToVector[ejectingDirection]);\r\n            const targetContents = this.root.map.getTileContent(targetTile, enumLayer.regular);\r\n\r\n            // Check if we are connected to another miner and thus do not eject directly\r\n            if (targetContents) {\r\n                const targetMinerComp = targetContents.components.Miner;\r\n                if (targetMinerComp) {\r\n                    if (targetMinerComp.tryAcceptChainedItem(item)) {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Seems we are a regular miner or at the end of a row, try actually ejecting\r\n        if (ejectComp.tryEject(0, item)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk(parameters, chunk) {\r\n        const contents = chunk.contents;\r\n        for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const entity = contents[x][y];\r\n\r\n                if (entity && entity.components.Miner) {\r\n                    const staticComp = entity.components.StaticMapEntity;\r\n                    const minerComp = entity.components.Miner;\r\n                    if (!staticComp.shouldBeDrawn(parameters)) {\r\n                        continue;\r\n                    }\r\n                    if (!minerComp.cachedMinedItem) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (minerComp.cachedMinedItem) {\r\n                        const padding = 3;\r\n                        parameters.context.fillStyle = minerComp.cachedMinedItem.getBackgroundColorAsResource();\r\n                        parameters.context.fillRect(\r\n                            staticComp.origin.x * globalConfig.tileSize + padding,\r\n                            staticComp.origin.y * globalConfig.tileSize + padding,\r\n                            globalConfig.tileSize - 2 * padding,\r\n                            globalConfig.tileSize - 2 * padding\r\n                        );\r\n                    }\r\n\r\n                    if (minerComp.cachedMinedItem) {\r\n                        minerComp.cachedMinedItem.draw(\r\n                            (0.5 + staticComp.origin.x) * globalConfig.tileSize,\r\n                            (0.5 + staticComp.origin.y) * globalConfig.tileSize,\r\n                            parameters\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { GameSystem } from \"../game_system\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { MapChunkView } from \"../map_chunk_view\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { enumDirection } from \"../../core/vector\";\r\nimport { enumLayer } from \"../root\";\r\n\r\nexport class StaticMapEntitySystem extends GameSystem {\r\n    constructor(root) {\r\n        super(root);\r\n\r\n        this.beltOverviewSprites = {\r\n            [enumDirection.top]: Loader.getSprite(\"sprites/map_overview/belt_forward.png\"),\r\n            [enumDirection.right]: Loader.getSprite(\"sprites/map_overview/belt_right.png\"),\r\n            [enumDirection.left]: Loader.getSprite(\"sprites/map_overview/belt_left.png\"),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Draws the static entities\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawChunk(parameters, chunk) {\r\n        if (G_IS_DEV && globalConfig.debug.doNotRenderStatics) {\r\n            return;\r\n        }\r\n\r\n        const drawOutlinesOnly = parameters.zoomLevel < globalConfig.mapChunkOverviewMinZoom;\r\n\r\n        const drawnUids = new Set();\r\n\r\n        const contents = chunk.contents;\r\n        for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const entity = contents[x][y];\r\n\r\n                if (entity) {\r\n                    if (drawnUids.has(entity.uid)) {\r\n                        continue;\r\n                    }\r\n                    drawnUids.add(entity.uid);\r\n                    const staticComp = entity.components.StaticMapEntity;\r\n                    if (drawOutlinesOnly) {\r\n                        const rect = staticComp.getTileSpaceBounds();\r\n                        parameters.context.fillStyle = staticComp.getSilhouetteColor() || \"#aaa\";\r\n                        const beltComp = entity.components.Belt;\r\n                        if (beltComp) {\r\n                            const sprite = this.beltOverviewSprites[beltComp.direction];\r\n                            staticComp.drawSpriteOnFullEntityBounds(parameters, sprite, 0, false);\r\n                        } else {\r\n                            parameters.context.fillRect(\r\n                                rect.x * globalConfig.tileSize,\r\n                                rect.y * globalConfig.tileSize,\r\n                                rect.w * globalConfig.tileSize,\r\n                                rect.h * globalConfig.tileSize\r\n                            );\r\n                        }\r\n                    } else {\r\n                        const sprite = staticComp.getSprite();\r\n                        if (sprite) {\r\n                            staticComp.drawSpriteOnFullEntityBounds(parameters, sprite, 2, false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draws the static wire entities\r\n     * @param {DrawParameters} parameters\r\n     * @param {MapChunkView} chunk\r\n     */\r\n    drawWiresChunk(parameters, chunk) {\r\n        if (G_IS_DEV && globalConfig.debug.doNotRenderStatics) {\r\n            return;\r\n        }\r\n\r\n        const drawnUids = new Set();\r\n        const contents = chunk.wireContents;\r\n        for (let y = 0; y < globalConfig.mapChunkSize; ++y) {\r\n            for (let x = 0; x < globalConfig.mapChunkSize; ++x) {\r\n                const entity = contents[x][y];\r\n                if (entity) {\r\n                    if (drawnUids.has(entity.uid)) {\r\n                        continue;\r\n                    }\r\n                    drawnUids.add(entity.uid);\r\n                    const staticComp = entity.components.StaticMapEntity;\r\n\r\n                    const sprite = staticComp.getSprite();\r\n                    if (sprite) {\r\n                        staticComp.drawSpriteOnFullEntityBounds(parameters, sprite, 2, false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { StorageComponent } from \"../components/storage\";\r\nimport { Entity } from \"../entity\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { formatBigNumber, lerp } from \"../../core/utils\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { enumLayer } from \"../root\";\r\n\r\nexport class StorageSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [StorageComponent]);\r\n\r\n        this.storageOverlaySprite = Loader.getSprite(\"sprites/misc/storage_overlay.png\");\r\n    }\r\n\r\n    update() {\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const storageComp = entity.components.Storage;\r\n\r\n            // Eject from storage\r\n            if (storageComp.storedItem && storageComp.storedCount > 0) {\r\n                const ejectorComp = entity.components.ItemEjector;\r\n\r\n                /* FIXME: WIRES */\r\n                const nextSlot = ejectorComp.getFirstFreeSlot(enumLayer.regular);\r\n                if (nextSlot !== null) {\r\n                    if (ejectorComp.tryEject(nextSlot, storageComp.storedItem)) {\r\n                        storageComp.storedCount--;\r\n\r\n                        if (storageComp.storedCount === 0) {\r\n                            storageComp.storedItem = null;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            let targetAlpha = storageComp.storedCount > 0 ? 1 : 0;\r\n            storageComp.overlayOpacity = lerp(storageComp.overlayOpacity, targetAlpha, 0.05);\r\n        }\r\n    }\r\n\r\n    draw(parameters) {\r\n        this.forEachMatchingEntityOnScreen(parameters, this.drawEntity.bind(this));\r\n    }\r\n\r\n    /**\r\n     * @param {DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawEntity(parameters, entity) {\r\n        const context = parameters.context;\r\n        const staticComp = entity.components.StaticMapEntity;\r\n\r\n        if (!staticComp.shouldBeDrawn(parameters)) {\r\n            return;\r\n        }\r\n\r\n        const storageComp = entity.components.Storage;\r\n\r\n        const storedItem = storageComp.storedItem;\r\n        if (storedItem !== null) {\r\n            context.globalAlpha = storageComp.overlayOpacity;\r\n            const center = staticComp.getTileSpaceBounds().getCenter().toWorldSpace();\r\n            storedItem.draw(center.x, center.y, parameters, 30);\r\n\r\n            this.storageOverlaySprite.drawCached(parameters, center.x - 15, center.y + 15, 30, 15);\r\n\r\n            context.font = \"bold 10px GameFont\";\r\n            context.textAlign = \"center\";\r\n            context.fillStyle = \"#64666e\";\r\n            context.fillText(formatBigNumber(storageComp.storedCount), center.x, center.y + 25.5);\r\n\r\n            context.textAlign = \"left\";\r\n            context.globalAlpha = 1;\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { Rectangle } from \"../../core/rectangle\";\r\nimport {\r\n    enumAngleToDirection,\r\n    enumDirection,\r\n    enumDirectionToAngle,\r\n    enumDirectionToVector,\r\n    enumInvertedDirections,\r\n} from \"../../core/vector\";\r\nimport { enumUndergroundBeltMode, UndergroundBeltComponent } from \"../components/underground_belt\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { fastArrayDelete } from \"../../core/utils\";\r\nimport { enumLayer } from \"../root\";\r\n\r\nconst logger = createLogger(\"tunnels\");\r\n\r\nexport class UndergroundBeltSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [UndergroundBeltComponent]);\r\n\r\n        this.beltSprites = {\r\n            [enumUndergroundBeltMode.sender]: Loader.getSprite(\r\n                \"sprites/buildings/underground_belt_entry.png\"\r\n            ),\r\n            [enumUndergroundBeltMode.receiver]: Loader.getSprite(\r\n                \"sprites/buildings/underground_belt_exit.png\"\r\n            ),\r\n        };\r\n\r\n        this.root.signals.entityManuallyPlaced.add(this.onEntityManuallyPlaced, this);\r\n\r\n        /**\r\n         * @type {Rectangle}\r\n         */\r\n        this.areaToRecompute = null;\r\n\r\n        this.root.signals.entityAdded.add(this.onEntityChanged, this);\r\n        this.root.signals.entityDestroyed.add(this.onEntityChanged, this);\r\n    }\r\n\r\n    /**\r\n     * Called when an entity got added or removed\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityChanged(entity) {\r\n        if (!this.root.gameInitialized) {\r\n            return;\r\n        }\r\n        const undergroundComp = entity.components.UndergroundBelt;\r\n        if (!undergroundComp) {\r\n            return;\r\n        }\r\n\r\n        const affectedArea = entity.components.StaticMapEntity.getTileSpaceBounds().expandedInAllDirections(\r\n            globalConfig.undergroundBeltMaxTilesByTier[\r\n                globalConfig.undergroundBeltMaxTilesByTier.length - 1\r\n            ] + 1\r\n        );\r\n\r\n        if (this.areaToRecompute) {\r\n            this.areaToRecompute = this.areaToRecompute.getUnion(affectedArea);\r\n        } else {\r\n            this.areaToRecompute = affectedArea;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback when an entity got placed, used to remove belts between underground belts\r\n     * @param {Entity} entity\r\n     */\r\n    onEntityManuallyPlaced(entity) {\r\n        if (!this.root.app.settings.getAllSettings().enableTunnelSmartplace) {\r\n            // Smart-place disabled\r\n            return;\r\n        }\r\n\r\n        const undergroundComp = entity.components.UndergroundBelt;\r\n        if (undergroundComp && undergroundComp.mode === enumUndergroundBeltMode.receiver) {\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const tile = staticComp.origin;\r\n\r\n            const direction = enumAngleToDirection[staticComp.rotation];\r\n            const inverseDirection = enumInvertedDirections[direction];\r\n            const offset = enumDirectionToVector[inverseDirection];\r\n\r\n            let currentPos = tile.copy();\r\n\r\n            const tier = undergroundComp.tier;\r\n            const range = globalConfig.undergroundBeltMaxTilesByTier[tier];\r\n\r\n            // FIND ENTRANCE\r\n            // Search for the entrance which is furthes apart (this is why we can't reuse logic here)\r\n            let matchingEntrance = null;\r\n            for (let i = 0; i < range; ++i) {\r\n                currentPos.addInplace(offset);\r\n                const contents = this.root.map.getTileContent(currentPos, entity.layer);\r\n                if (!contents) {\r\n                    continue;\r\n                }\r\n\r\n                const contentsUndergroundComp = contents.components.UndergroundBelt;\r\n                const contentsStaticComp = contents.components.StaticMapEntity;\r\n                if (\r\n                    contentsUndergroundComp &&\r\n                    contentsUndergroundComp.tier === undergroundComp.tier &&\r\n                    contentsUndergroundComp.mode === enumUndergroundBeltMode.sender &&\r\n                    enumAngleToDirection[contentsStaticComp.rotation] === direction\r\n                ) {\r\n                    matchingEntrance = {\r\n                        entity: contents,\r\n                        range: i,\r\n                    };\r\n                }\r\n            }\r\n\r\n            if (!matchingEntrance) {\r\n                // Nothing found\r\n                return;\r\n            }\r\n\r\n            // DETECT OBSOLETE BELTS BETWEEN\r\n            // Remove any belts between entrance and exit which have the same direction,\r\n            // but only if they *all* have the right direction\r\n            currentPos = tile.copy();\r\n            let allBeltsMatch = true;\r\n            for (let i = 0; i < matchingEntrance.range; ++i) {\r\n                currentPos.addInplace(offset);\r\n\r\n                const contents = this.root.map.getTileContent(currentPos, entity.layer);\r\n                if (!contents) {\r\n                    allBeltsMatch = false;\r\n                    break;\r\n                }\r\n\r\n                const contentsStaticComp = contents.components.StaticMapEntity;\r\n                const contentsBeltComp = contents.components.Belt;\r\n                if (!contentsBeltComp) {\r\n                    allBeltsMatch = false;\r\n                    break;\r\n                }\r\n\r\n                // It's a belt\r\n                if (\r\n                    contentsBeltComp.direction !== enumDirection.top ||\r\n                    enumAngleToDirection[contentsStaticComp.rotation] !== direction\r\n                ) {\r\n                    allBeltsMatch = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            currentPos = tile.copy();\r\n            if (allBeltsMatch) {\r\n                // All belts between this are obsolete, so drop them\r\n                for (let i = 0; i < matchingEntrance.range; ++i) {\r\n                    currentPos.addInplace(offset);\r\n                    const contents = this.root.map.getTileContent(currentPos, entity.layer);\r\n                    assert(contents, \"Invalid smart underground belt logic\");\r\n                    this.root.logic.tryDeleteBuilding(contents);\r\n                }\r\n            }\r\n\r\n            // REMOVE OBSOLETE TUNNELS\r\n            // Remove any double tunnels, by checking the tile plus the tile above\r\n            currentPos = tile.copy().add(offset);\r\n            for (let i = 0; i < matchingEntrance.range - 1; ++i) {\r\n                const posBefore = currentPos.copy();\r\n                currentPos.addInplace(offset);\r\n\r\n                const entityBefore = this.root.map.getTileContent(posBefore, entity.layer);\r\n                const entityAfter = this.root.map.getTileContent(currentPos, entity.layer);\r\n\r\n                if (!entityBefore || !entityAfter) {\r\n                    continue;\r\n                }\r\n\r\n                const undergroundBefore = entityBefore.components.UndergroundBelt;\r\n                const undergroundAfter = entityAfter.components.UndergroundBelt;\r\n\r\n                if (!undergroundBefore || !undergroundAfter) {\r\n                    // Not an underground belt\r\n                    continue;\r\n                }\r\n\r\n                if (\r\n                    // Both same tier\r\n                    undergroundBefore.tier !== undergroundAfter.tier ||\r\n                    // And same tier as our original entity\r\n                    undergroundBefore.tier !== undergroundComp.tier\r\n                ) {\r\n                    // Mismatching tier\r\n                    continue;\r\n                }\r\n\r\n                if (\r\n                    undergroundBefore.mode !== enumUndergroundBeltMode.sender ||\r\n                    undergroundAfter.mode !== enumUndergroundBeltMode.receiver\r\n                ) {\r\n                    // Not the right mode\r\n                    continue;\r\n                }\r\n\r\n                // Check rotations\r\n                const staticBefore = entityBefore.components.StaticMapEntity;\r\n                const staticAfter = entityAfter.components.StaticMapEntity;\r\n\r\n                if (\r\n                    enumAngleToDirection[staticBefore.rotation] !== direction ||\r\n                    enumAngleToDirection[staticAfter.rotation] !== direction\r\n                ) {\r\n                    // Wrong rotation\r\n                    continue;\r\n                }\r\n\r\n                // All good, can remove\r\n                this.root.logic.tryDeleteBuilding(entityBefore);\r\n                this.root.logic.tryDeleteBuilding(entityAfter);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recomputes the cache in the given area, invalidating all entries there\r\n     */\r\n    recomputeArea() {\r\n        const area = this.areaToRecompute;\r\n        logger.log(\"Recomputing area:\", area.x, area.y, \"/\", area.w, area.h);\r\n        if (G_IS_DEV && globalConfig.debug.renderChanges) {\r\n            this.root.hud.parts.changesDebugger.renderChange(\"tunnels\", this.areaToRecompute, \"#fc03be\");\r\n        }\r\n\r\n        for (let x = area.x; x < area.right(); ++x) {\r\n            for (let y = area.y; y < area.bottom(); ++y) {\r\n                const entities = this.root.map.getLayersContentsMultipleXY(x, y);\r\n                for (let i = 0; i < entities.length; ++i) {\r\n                    const entity = entities[i];\r\n                    const undergroundComp = entity.components.UndergroundBelt;\r\n                    if (!undergroundComp) {\r\n                        continue;\r\n                    }\r\n\r\n                    undergroundComp.cachedLinkedEntity = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (this.areaToRecompute) {\r\n            this.recomputeArea();\r\n            this.areaToRecompute = null;\r\n        }\r\n\r\n        const delta = this.root.dynamicTickrate.deltaSeconds;\r\n\r\n        for (let i = 0; i < this.allEntities.length; ++i) {\r\n            const entity = this.allEntities[i];\r\n            const undergroundComp = entity.components.UndergroundBelt;\r\n            const pendingItems = undergroundComp.pendingItems;\r\n\r\n            // Decrease remaining time of all items in belt\r\n            for (let k = 0; k < pendingItems.length; ++k) {\r\n                const item = pendingItems[k];\r\n                item[1] = Math.max(0, item[1] - delta);\r\n                if (G_IS_DEV && globalConfig.debug.instantBelts) {\r\n                    item[1] = 0;\r\n                }\r\n            }\r\n            if (undergroundComp.mode === enumUndergroundBeltMode.sender) {\r\n                this.handleSender(entity);\r\n            } else {\r\n                this.handleReceiver(entity);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds the receiver for a given sender\r\n     * @param {Entity} entity\r\n     * @returns {import(\"../components/underground_belt\").LinkedUndergroundBelt}\r\n     */\r\n    findRecieverForSender(entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const undergroundComp = entity.components.UndergroundBelt;\r\n        const searchDirection = staticComp.localDirectionToWorld(enumDirection.top);\r\n        const searchVector = enumDirectionToVector[searchDirection];\r\n        const targetRotation = enumDirectionToAngle[searchDirection];\r\n        let currentTile = staticComp.origin;\r\n\r\n        // Search in the direction of the tunnel\r\n        for (\r\n            let searchOffset = 0;\r\n            searchOffset < globalConfig.undergroundBeltMaxTilesByTier[undergroundComp.tier];\r\n            ++searchOffset\r\n        ) {\r\n            currentTile = currentTile.add(searchVector);\r\n\r\n            const potentialReceiver = this.root.map.getTileContent(currentTile, enumLayer.regular);\r\n            if (!potentialReceiver) {\r\n                // Empty tile\r\n                continue;\r\n            }\r\n            const receiverUndergroundComp = potentialReceiver.components.UndergroundBelt;\r\n            if (!receiverUndergroundComp || receiverUndergroundComp.tier !== undergroundComp.tier) {\r\n                // Not a tunnel, or not on the same tier\r\n                continue;\r\n            }\r\n\r\n            const receiverStaticComp = potentialReceiver.components.StaticMapEntity;\r\n            if (receiverStaticComp.rotation !== targetRotation) {\r\n                // Wrong rotation\r\n                continue;\r\n            }\r\n\r\n            if (receiverUndergroundComp.mode !== enumUndergroundBeltMode.receiver) {\r\n                // Not a receiver, but a sender -> Abort to make sure we don't deliver double\r\n                break;\r\n            }\r\n\r\n            return { entity: potentialReceiver, distance: searchOffset };\r\n        }\r\n\r\n        // None found\r\n        return { entity: null, distance: 0 };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    handleSender(entity) {\r\n        const undergroundComp = entity.components.UndergroundBelt;\r\n\r\n        // Find the current receiver\r\n        let receiver = undergroundComp.cachedLinkedEntity;\r\n        if (!receiver) {\r\n            // We don't have a receiver, compute it\r\n            receiver = undergroundComp.cachedLinkedEntity = this.findRecieverForSender(entity);\r\n\r\n            if (G_IS_DEV && globalConfig.debug.renderChanges) {\r\n                this.root.hud.parts.changesDebugger.renderChange(\r\n                    \"sender\",\r\n                    entity.components.StaticMapEntity.getTileSpaceBounds(),\r\n                    \"#fc03be\"\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!receiver.entity) {\r\n            // If there is no connection to a receiver, ignore this one\r\n            return;\r\n        }\r\n\r\n        // Check if we have any item\r\n        if (undergroundComp.pendingItems.length > 0) {\r\n            assert(undergroundComp.pendingItems.length === 1, \"more than 1 pending\");\r\n            const nextItemAndDuration = undergroundComp.pendingItems[0];\r\n            const remainingTime = nextItemAndDuration[1];\r\n            const nextItem = nextItemAndDuration[0];\r\n\r\n            // Check if the item is ready to be emitted\r\n            if (remainingTime === 0) {\r\n                // Check if the receiver can accept it\r\n                if (\r\n                    receiver.entity.components.UndergroundBelt.tryAcceptTunneledItem(\r\n                        nextItem,\r\n                        receiver.distance,\r\n                        this.root.hubGoals.getUndergroundBeltBaseSpeed()\r\n                    )\r\n                ) {\r\n                    // Drop this item\r\n                    fastArrayDelete(undergroundComp.pendingItems, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Entity} entity\r\n     */\r\n    handleReceiver(entity) {\r\n        const undergroundComp = entity.components.UndergroundBelt;\r\n\r\n        // Try to eject items, we only check the first one because it is sorted by remaining time\r\n        const items = undergroundComp.pendingItems;\r\n        if (items.length > 0) {\r\n            const nextItemAndDuration = undergroundComp.pendingItems[0];\r\n            const remainingTime = nextItemAndDuration[1];\r\n            const nextItem = nextItemAndDuration[0];\r\n\r\n            if (remainingTime <= 0) {\r\n                const ejectorComp = entity.components.ItemEjector;\r\n\r\n                const nextSlotIndex = ejectorComp.getFirstFreeSlot(entity.layer);\r\n                if (nextSlotIndex !== null) {\r\n                    if (ejectorComp.tryEject(nextSlotIndex, nextItem)) {\r\n                        items.shift();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { DrawParameters } from \"../../core/draw_parameters\";\r\nimport { Loader } from \"../../core/loader\";\r\nimport { Vector } from \"../../core/vector\";\r\nimport { enumPinSlotType, WiredPinsComponent } from \"../components/wired_pins\";\r\nimport { Entity } from \"../entity\";\r\nimport { GameSystemWithFilter } from \"../game_system_with_filter\";\r\nimport { enumLayer } from \"../root\";\r\nimport { STOP_PROPAGATION } from \"../../core/signal\";\r\nimport { drawRotatedSprite } from \"../../core/draw_utils\";\r\n\r\nexport class WiredPinsSystem extends GameSystemWithFilter {\r\n    constructor(root) {\r\n        super(root, [WiredPinsComponent]);\r\n\r\n        this.pinSprites = {\r\n            [enumPinSlotType.positiveEnergyEjector]: Loader.getSprite(\"sprites/wires/pin_positive_eject.png\"),\r\n            [enumPinSlotType.positiveEnergyAcceptor]: Loader.getSprite(\r\n                \"sprites/wires/pin_positive_accept.png\"\r\n            ),\r\n            [enumPinSlotType.negativeEnergyEjector]: Loader.getSprite(\"sprites/wires/pin_negative_eject.png\"),\r\n            [enumPinSlotType.negativeEnergyAcceptor]: Loader.getSprite(\r\n                \"sprites/wires/pin_negative_accept.png\"\r\n            ),\r\n        };\r\n\r\n        this.root.signals.prePlacementCheck.add(this.prePlacementCheck, this);\r\n        this.root.signals.freeEntityAreaBeforeBuild.add(this.freeEntityAreaBeforeBuild, this);\r\n    }\r\n\r\n    /**\r\n     * Performs pre-placement checks\r\n     * @param {Entity} entity\r\n     * @param {Vector} offset\r\n     */\r\n    prePlacementCheck(entity, offset) {\r\n        // Compute area of the building\r\n        const rect = entity.components.StaticMapEntity.getTileSpaceBounds();\r\n        if (offset) {\r\n            rect.x += offset.x;\r\n            rect.y += offset.y;\r\n        }\r\n\r\n        // If this entity is placed on the wires layer, make sure we don't\r\n        // place it above a pin\r\n        if (entity.layer === enumLayer.wires) {\r\n            for (let x = rect.x; x < rect.x + rect.w; ++x) {\r\n                for (let y = rect.y; y < rect.y + rect.h; ++y) {\r\n                    // Find which entities are in same tiles of both layers\r\n                    const entities = this.root.map.getLayersContentsMultipleXY(x, y);\r\n                    for (let i = 0; i < entities.length; ++i) {\r\n                        const otherEntity = entities[i];\r\n\r\n                        // Check if entity has a wired component\r\n                        const pinComponent = otherEntity.components.WiredPins;\r\n                        const staticComp = otherEntity.components.StaticMapEntity;\r\n                        if (!pinComponent) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (otherEntity.components.ReplaceableMapEntity) {\r\n                            // Don't mind here, even if there would be a collision we\r\n                            // could replace it\r\n                            continue;\r\n                        }\r\n\r\n                        // Go over all pins and check if they are blocking\r\n                        const pins = pinComponent.slots;\r\n                        for (let pinSlot = 0; pinSlot < pins.length; ++pinSlot) {\r\n                            const pos = staticComp.localTileToWorld(pins[pinSlot].pos);\r\n                            // Occupied by a pin\r\n                            if (pos.x === x && pos.y === y) {\r\n                                return STOP_PROPAGATION;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check for collisions on the wires layer\r\n        if (this.checkEntityPinsCollide(entity, offset)) {\r\n            return STOP_PROPAGATION;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the pins of the given entity collide on the wires layer\r\n     * @param {Entity} entity\r\n     * @param {Vector=} offset Optional, move the entity by the given offset first\r\n     * @returns {boolean} True if the pins collide\r\n     */\r\n    checkEntityPinsCollide(entity, offset) {\r\n        const pinsComp = entity.components.WiredPins;\r\n        if (!pinsComp) {\r\n            return false;\r\n        }\r\n\r\n        // Go over all slots\r\n        for (let slotIndex = 0; slotIndex < pinsComp.slots.length; ++slotIndex) {\r\n            const slot = pinsComp.slots[slotIndex];\r\n\r\n            // Figure out which tile this slot is on\r\n            const worldPos = entity.components.StaticMapEntity.localTileToWorld(slot.pos);\r\n            if (offset) {\r\n                worldPos.x += offset.x;\r\n                worldPos.y += offset.y;\r\n            }\r\n\r\n            // Check if there is any entity on that tile (Wired pins are always on the wires layer)\r\n            const collidingEntity = this.root.map.getLayerContentXY(worldPos.x, worldPos.y, enumLayer.wires);\r\n\r\n            // If there's an entity, and it can't get removed -> That's a collision\r\n            if (collidingEntity && !collidingEntity.components.ReplaceableMapEntity) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Called to free space for the given entity\r\n     * @param {Entity} entity\r\n     */\r\n    freeEntityAreaBeforeBuild(entity) {\r\n        const pinsComp = entity.components.WiredPins;\r\n        if (!pinsComp) {\r\n            // Entity has no pins\r\n            return;\r\n        }\r\n\r\n        // Remove any stuff which collides with the pins\r\n        for (let i = 0; i < pinsComp.slots.length; ++i) {\r\n            const slot = pinsComp.slots[i];\r\n            const worldPos = entity.components.StaticMapEntity.localTileToWorld(slot.pos);\r\n            const collidingEntity = this.root.map.getLayerContentXY(worldPos.x, worldPos.y, enumLayer.wires);\r\n            if (collidingEntity) {\r\n                assertAlways(\r\n                    collidingEntity.components.ReplaceableMapEntity,\r\n                    \"Tried to replace non-repleaceable entity for pins\"\r\n                );\r\n                if (!this.root.logic.tryDeleteBuilding(collidingEntity)) {\r\n                    assertAlways(false, \"Tried to replace non-repleaceable entity for pins #2\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        // TODO\r\n    }\r\n\r\n    /**\r\n     * Draws the pins\r\n     * @param {DrawParameters} parameters\r\n     */\r\n    draw(parameters) {\r\n        this.forEachMatchingEntityOnScreen(parameters, this.drawSingleEntity.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Draws a given entity\r\n     * @param {DrawParameters} parameters\r\n     * @param {Entity} entity\r\n     */\r\n    drawSingleEntity(parameters, entity) {\r\n        const staticComp = entity.components.StaticMapEntity;\r\n        const slots = entity.components.WiredPins.slots;\r\n\r\n        for (let i = 0; i < slots.length; ++i) {\r\n            const slot = slots[i];\r\n            const tile = staticComp.localTileToWorld(slot.pos);\r\n\r\n            const worldPos = tile.toWorldSpaceCenterOfTile();\r\n\r\n            drawRotatedSprite({\r\n                parameters,\r\n                sprite: this.pinSprites[slot.type],\r\n                x: worldPos.x,\r\n                y: worldPos.y,\r\n                angle: Math.radians(staticComp.rotation),\r\n                size: globalConfig.tileSize,\r\n                offsetX: 0,\r\n                offsetY: 0,\r\n            });\r\n        }\r\n    }\r\n}\r\n","export const THEMES = {\r\n    dark: require(\"./themes/dark.json\"),\r\n    light: require(\"./themes/light.json\"),\r\n};\r\n\r\nexport let THEME = THEMES.light;\r\n\r\nexport function applyGameTheme(id) {\r\n    THEME = THEMES[id];\r\n}\r\n","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4WAUABFEEQK4EsDKAXAngGwKYwFywBMBDAJwGsYAacaWAWyIAc8JRJboYAjIgYzIDmJAPZwAdgRYwAxACYssgGYBmAOxUaHKDCEJJ+GCQE8AFLICs5yhAtWbl6wAYAdI9kBKDey06SegDIIYlgA6nooABYsLlbgmj4AzljYvCgIwmIA8gBuWCQYRGhSRqaqACzWAIwAbMrWsrJ1EC6qntTeHDBJKWkZmXAoGEE4BiVEJuVVtfWNTs7mbfGd3Vip6WIAQnyCIuL6sGMTFRA1TQ1NLh5eS7QwBAgkq71i-sL8LGxaPo8CcAUkHxuX1uvGEGGEANGxiO9TUVWUZUWHWBtx4-CEogkxWM40mNjhJwRcyuQK0AF92ijOAB3B5YBKA5FU2Cg8GQg7Q2SOACcVUcqnqjmUSOZnTRO0x+0MOLMPL5ApsQuJnlJHDJqopcSZ2lZEI2QwkAAUEPw8gAVBDYbGmWz1Bz2OwxJGqwz00QkXj0xmiroRJgjWDSZQEZSKMpELw+x5S6Th4OhyPM3xYLBiKRBrBxySUpNcDBwAMyZTmZQADnDMA1OZ8vAi4jIOTy2QQWGp3qTWDojHQ6bKfdL5mqiapMEUluwMeqZWqXFUkirWuBMFpjwZ+E+ScYQTXrFVS9TeQEaAAogArJ4Q9O8MoWAjqPfQdXaiBP2iasBLGAIFCdncbnyiIMwzppUoFlJUpbDp0gEGqE4RRPgLSxM+MC8A8vDYFs6K7FiUI2o41jKAREBlMRLjCpWHRPk+QA\"));\n    })()","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4WAUABFEEQK4EsDKAXAngGwKYwFywwQHMALFGAGnGlgFsBDABzwlEhuhgCN6BjAayIAnAPZwAdgBMWMAMQAzRZWocoMYQmn458+rt3L2q9UM0AZBOKwB1TShIsAjFTArjAZyzZeKBCPEA8gBuWEIY9GgyQkQ8ABQA7AAsFBCOAGwAzCkATNlZEAAMAHTxAJSGqmqe3r7+AXAohFZRMfQJyamZOXkpxQCs5S6VsNVYPn7iAEJ8gqISWrDRcUkp6fm5+cXZg+BuHDCSCEJjteJmIgIsbMM0MMdEcOFCV3s3nLwiGCLP2kvtORl4qsMokdkY3pweAJhGIpC1lh08kDUiDekVtjBXpUAL5DCEwADuRyw7he4IhsA+Xx+ixisWyBQAnKsCsiGRkwRTblDZrCFndWvSmSy2QVNujyljVNipRBcbtye9Pt9Jk1JAAFBACUIAFQQ2HhbT6BRSxtNJsKRVBhlldxJYiEvBJZIpMHcJCYOG0siw9CwXDGFXxx35CnkXHkvEcQbeJiwWHEMlkvAjkcSMZu3AwcC9sFkEckenkmMVUHlrlLlJIEn4wVCQQQWAJLvxWFojHQSfoaT0XC4GeGMHk+uwod4fV4vEkaRLw3LtqJx1J+Gu+MYlmXrFlg4ToSIaAAogArE7fJO8RLZPqSeKziEyysPmjz8EwBAoNub1fGMSNSy5uQ+iA+I+noAdOF-JobDsBx8GKEC8WMXgjl4bBpmhOY4V+QVEgtM0IDSPo0UcSVwQfB8gA\"));\n    })()","\r\n\r\nimport { BasicSerializableObject } from \"../../savegame/serialization\";\r\n\r\nexport class BaseGameSpeed extends BasicSerializableObject {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n        this.root = root;\r\n        this.initializeAfterDeserialize(root);\r\n    }\r\n\r\n    /** @returns {string} */\r\n    static getId() {\r\n        abstract;\r\n        return \"unknown-speed\";\r\n    }\r\n\r\n    getId() {\r\n        // @ts-ignore\r\n        return this.constructor.getId();\r\n    }\r\n\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    initializeAfterDeserialize(root) {\r\n        this.root = root;\r\n    }\r\n\r\n    /**\r\n     * Returns the time multiplier\r\n     */\r\n    getTimeMultiplier() {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * Returns how many logic steps there may be queued\r\n     */\r\n    getMaxLogicStepsInQueue() {\r\n        return 3;\r\n    }\r\n\r\n    // Internals\r\n    /** @returns {BaseGameSpeed} */\r\n    newSpeed(instance) {\r\n        return new instance(this.root);\r\n    }\r\n}\r\n","import { BaseGameSpeed } from \"./base_game_speed\";\r\nimport { globalConfig } from \"../../core/config\";\r\n\r\nexport class FastForwardGameSpeed extends BaseGameSpeed {\r\n    static getId() {\r\n        return \"fast-forward\";\r\n    }\r\n\r\n    getTimeMultiplier() {\r\n        return globalConfig.fastForwardSpeed;\r\n    }\r\n\r\n    getMaxLogicStepsInQueue() {\r\n        return 3 * globalConfig.fastForwardSpeed;\r\n    }\r\n}\r\n","\r\n\r\nimport { types, BasicSerializableObject } from \"../../savegame/serialization\";\r\nimport { RegularGameSpeed } from \"./regular_game_speed\";\r\nimport { BaseGameSpeed } from \"./base_game_speed\";\r\nimport { PausedGameSpeed } from \"./paused_game_speed\";\r\nimport { FastForwardGameSpeed } from \"./fast_forward_game_speed\";\r\nimport { gGameSpeedRegistry } from \"../../core/global_registries\";\r\nimport { globalConfig } from \"../../core/config\";\r\nimport { checkTimerExpired, quantizeFloat } from \"../../core/utils\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst logger = createLogger(\"game_time\");\r\n\r\nexport class GameTime extends BasicSerializableObject {\r\n    /**\r\n     * @param {GameRoot} root\r\n     */\r\n    constructor(root) {\r\n        super();\r\n        this.root = root;\r\n\r\n        // Current ingame time seconds, not incremented while paused\r\n        this.timeSeconds = 0;\r\n\r\n        // Current \"realtime\", a timer which always is incremented no matter whether the game is paused or no\r\n        this.realtimeSeconds = 0;\r\n\r\n        // The adjustment, used when loading savegames so we can continue where we were\r\n        this.realtimeAdjust = 0;\r\n\r\n        /** @type {BaseGameSpeed} */\r\n        this.speed = new RegularGameSpeed(this.root);\r\n\r\n        // Store how much time we have in bucket\r\n        this.logicTimeBudget = 0;\r\n    }\r\n\r\n    static getId() {\r\n        return \"GameTime\";\r\n    }\r\n\r\n    static getSchema() {\r\n        return {\r\n            timeSeconds: types.float,\r\n            speed: types.obj(gGameSpeedRegistry),\r\n            realtimeSeconds: types.float,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Fetches the new \"real\" time, called from the core once per frame, since performance now() is kinda slow\r\n     */\r\n    updateRealtimeNow() {\r\n        this.realtimeSeconds = performance.now() / 1000.0 + this.realtimeAdjust;\r\n    }\r\n\r\n    /**\r\n     * Returns the ingame time in milliseconds\r\n     */\r\n    getTimeMs() {\r\n        return this.timeSeconds * 1000.0;\r\n    }\r\n\r\n    /**\r\n     * Safe check to check if a timer is expired. quantizes numbers\r\n     * @param {number} lastTick Last tick of the timer\r\n     * @param {number} tickRateSeconds Interval of the timer in seconds\r\n     */\r\n    isIngameTimerExpired(lastTick, tickRateSeconds) {\r\n        return checkTimerExpired(this.timeSeconds, lastTick, tickRateSeconds);\r\n    }\r\n\r\n    /**\r\n     * Returns how many seconds we are in the grace period\r\n     * @returns {number}\r\n     */\r\n    getRemainingGracePeriodSeconds() {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if we are currently in the grace period\r\n     * @returns {boolean}\r\n     */\r\n    getIsWithinGracePeriod() {\r\n        return this.getRemainingGracePeriodSeconds() > 0;\r\n    }\r\n\r\n    /**\r\n     * Internal method to generate new logic time budget\r\n     * @param {number} deltaMs\r\n     */\r\n    internalAddDeltaToBudget(deltaMs) {\r\n        // Only update if game is supposed to update\r\n        if (this.root.hud.shouldPauseGame()) {\r\n            this.logicTimeBudget = 0;\r\n        } else {\r\n            const multiplier = this.getSpeed().getTimeMultiplier();\r\n            this.logicTimeBudget += deltaMs * multiplier;\r\n        }\r\n\r\n        // Check for too big pile of updates -> reduce it to 1\r\n        let maxLogicSteps = Math.max(\r\n            3,\r\n            (this.speed.getMaxLogicStepsInQueue() * this.root.dynamicTickrate.currentTickRate) / 60\r\n        );\r\n        if (G_IS_DEV && globalConfig.debug.framePausesBetweenTicks) {\r\n            maxLogicSteps *= 1 + globalConfig.debug.framePausesBetweenTicks;\r\n        }\r\n\r\n        if (this.logicTimeBudget > this.root.dynamicTickrate.deltaMs * maxLogicSteps) {\r\n            this.logicTimeBudget = this.root.dynamicTickrate.deltaMs * maxLogicSteps;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs update ticks based on the queued logic budget\r\n     * @param {number} deltaMs\r\n     * @param {function():boolean} updateMethod\r\n     */\r\n    performTicks(deltaMs, updateMethod) {\r\n        this.internalAddDeltaToBudget(deltaMs);\r\n\r\n        const speedAtStart = this.root.time.getSpeed();\r\n\r\n        let effectiveDelta = this.root.dynamicTickrate.deltaMs;\r\n        if (G_IS_DEV && globalConfig.debug.framePausesBetweenTicks) {\r\n            effectiveDelta += globalConfig.debug.framePausesBetweenTicks * this.root.dynamicTickrate.deltaMs;\r\n        }\r\n\r\n        // Update physics & logic\r\n        while (this.logicTimeBudget >= effectiveDelta) {\r\n            this.logicTimeBudget -= effectiveDelta;\r\n\r\n            if (!updateMethod()) {\r\n                // Gameover happened or so, do not update anymore\r\n                return;\r\n            }\r\n\r\n            // Step game time\r\n            this.timeSeconds = quantizeFloat(this.timeSeconds + this.root.dynamicTickrate.deltaSeconds);\r\n\r\n            // Game time speed changed, need to abort since our logic steps are no longer valid\r\n            if (speedAtStart.getId() !== this.speed.getId()) {\r\n                logger.warn(\r\n                    \"Skipping update because speed changed from\",\r\n                    speedAtStart.getId(),\r\n                    \"to\",\r\n                    this.speed.getId()\r\n                );\r\n                break;\r\n            }\r\n\r\n            // If we queued async tasks, perform them next frame and do not update anymore\r\n            if (this.root.hud.parts.processingOverlay.hasTasks()) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns ingame time in seconds\r\n     * @returns {number} seconds\r\n     */\r\n    now() {\r\n        return this.timeSeconds;\r\n    }\r\n\r\n    /**\r\n     * Returns \"real\" time in seconds\r\n     * @returns {number} seconds\r\n     */\r\n    realtimeNow() {\r\n        return this.realtimeSeconds;\r\n    }\r\n\r\n    /**\r\n     * Returns \"real\" time in seconds\r\n     * @returns {number} seconds\r\n     */\r\n    systemNow() {\r\n        return (this.realtimeSeconds - this.realtimeAdjust) * 1000.0;\r\n    }\r\n\r\n    getIsPaused() {\r\n        return this.speed.getId() === PausedGameSpeed.getId();\r\n    }\r\n\r\n    getSpeed() {\r\n        return this.speed;\r\n    }\r\n\r\n    setSpeed(speed) {\r\n        assert(speed instanceof BaseGameSpeed, \"Not a valid game speed\");\r\n        if (this.speed.getId() === speed.getId()) {\r\n            logger.warn(\"Same speed set than current one:\", speed.constructor.getId());\r\n        }\r\n        this.speed = speed;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const errorCode = super.deserialize(data);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n\r\n        // Adjust realtime now difference so they match\r\n        this.realtimeAdjust = this.realtimeSeconds - performance.now() / 1000.0;\r\n        this.updateRealtimeNow();\r\n\r\n        // Make sure we have a quantizied time\r\n        this.timeSeconds = quantizeFloat(this.timeSeconds);\r\n\r\n        this.speed.initializeAfterDeserialize(this.root);\r\n    }\r\n}\r\n","import { BaseGameSpeed } from \"./base_game_speed\";\r\n\r\nexport class PausedGameSpeed extends BaseGameSpeed {\r\n    static getId() {\r\n        return \"paused\";\r\n    }\r\n\r\n    getTimeMultiplier() {\r\n        return 0;\r\n    }\r\n\r\n    getMaxLogicStepsInQueue() {\r\n        return 0;\r\n    }\r\n}\r\n","import { BaseGameSpeed } from \"./base_game_speed\";\r\n\r\nexport class RegularGameSpeed extends BaseGameSpeed {\r\n    static getId() {\r\n        return \"regular\";\r\n    }\r\n\r\n    getTimeMultiplier() {\r\n        return 1;\r\n    }\r\n}\r\n","import { ShapeDefinition } from \"./shape_definition\";\r\nimport { finalGameShape } from \"./upgrades\";\r\n\r\n/**\r\n * Don't forget to also update tutorial_goals_mappings.js as well as the translations!\r\n * @enum {string}\r\n */\r\nexport const enumHubGoalRewards = {\r\n    reward_cutter_and_trash: \"reward_cutter_and_trash\",\r\n    reward_rotater: \"reward_rotater\",\r\n    reward_painter: \"reward_painter\",\r\n    reward_mixer: \"reward_mixer\",\r\n    reward_stacker: \"reward_stacker\",\r\n    reward_splitter: \"reward_splitter\",\r\n    reward_tunnel: \"reward_tunnel\",\r\n\r\n    reward_rotater_ccw: \"reward_rotater_ccw\",\r\n    reward_rotater_fl: \"reward_rotater_fl\",\r\n    reward_miner_chainable: \"reward_miner_chainable\",\r\n    reward_underground_belt_tier_2: \"reward_underground_belt_tier_2\",\r\n    reward_splitter_compact: \"reward_splitter_compact\",\r\n    reward_cutter_quad: \"reward_cutter_quad\",\r\n    reward_painter_double: \"reward_painter_double\",\r\n    reward_painter_quad: \"reward_painter_quad\",\r\n    reward_storage: \"reward_storage\",\r\n\r\n    reward_blueprints: \"reward_blueprints\",\r\n    reward_freeplay: \"reward_freeplay\",\r\n\r\n    no_reward: \"no_reward\",\r\n    no_reward_freeplay: \"no_reward_freeplay\",\r\n};\r\n\r\nexport const tutorialGoals = [\r\n    // 1\r\n    // Circle\r\n    {\r\n        shape: \"CuCuCuCu\", // belts t1\r\n        required: 40,\r\n        reward: enumHubGoalRewards.reward_cutter_and_trash,\r\n    },\r\n\r\n    // 2\r\n    // Cutter\r\n    {\r\n        shape: \"----CuCu\", //\r\n        required: 40,\r\n        reward: enumHubGoalRewards.no_reward,\r\n    },\r\n\r\n    // 3\r\n    // Rectangle\r\n    {\r\n        shape: \"RuRuRuRu\", // miners t1\r\n        required: 100,\r\n        reward: enumHubGoalRewards.reward_splitter,\r\n    },\r\n\r\n    // 4\r\n    {\r\n        shape: \"RuRu----\", // processors t2\r\n        required: 120,\r\n        reward: enumHubGoalRewards.reward_rotater,\r\n    },\r\n\r\n    // 5\r\n    // Rotater\r\n    {\r\n        shape: \"Cu----Cu\", // belts t2\r\n        required: 200,\r\n        reward: enumHubGoalRewards.reward_tunnel,\r\n    },\r\n\r\n    // 6\r\n    {\r\n        shape: \"Cu------\", // miners t2\r\n        required: 400,\r\n        reward: enumHubGoalRewards.reward_painter,\r\n    },\r\n\r\n    // 6.5\r\n    // Blueprints\r\n    {\r\n        shape: \"CbCbCbCb\",\r\n        required: 600,\r\n        reward: enumHubGoalRewards.reward_blueprints,\r\n    },\r\n\r\n    // 7\r\n    // Painter\r\n    {\r\n        shape: \"CrCrCrCr\", // unused\r\n        required: 800,\r\n        reward: enumHubGoalRewards.reward_rotater_ccw,\r\n    },\r\n\r\n    // 8\r\n    {\r\n        shape: \"RbRb----\", // painter t2\r\n        required: 1000,\r\n        reward: enumHubGoalRewards.reward_mixer,\r\n    },\r\n\r\n    // 9\r\n    // Mixing (purple)\r\n    {\r\n        shape: \"CmCmCmCm\", // belts t3\r\n        required: 1400,\r\n        reward: enumHubGoalRewards.reward_splitter_compact,\r\n    },\r\n\r\n    // 10\r\n    // Star shape + cyan\r\n    {\r\n        shape: \"ScScScSc\", // miners t3\r\n        required: 1600,\r\n        reward: enumHubGoalRewards.reward_stacker,\r\n    },\r\n\r\n    // 11\r\n    // Stacker\r\n    {\r\n        shape: \"CgScScCg\", // processors t3\r\n        required: 1800,\r\n        reward: enumHubGoalRewards.reward_miner_chainable,\r\n    },\r\n\r\n    // 12\r\n    // Blueprints\r\n    {\r\n        shape: \"CbCbCbRb:CwCwCwCw\",\r\n        required: 2000,\r\n        reward: enumHubGoalRewards.reward_blueprints,\r\n    },\r\n\r\n    // 13\r\n    {\r\n        shape: \"RmRmRmRm:CwCwCwCw\", // painting t3\r\n        required: 3000,\r\n        reward: enumHubGoalRewards.reward_underground_belt_tier_2,\r\n    },\r\n\r\n    // 14\r\n    {\r\n        shape: \"SrSrSrSr:CyCyCyCy\", // unused\r\n        required: 4000,\r\n        reward: enumHubGoalRewards.reward_storage,\r\n    },\r\n\r\n    // 15\r\n    {\r\n        shape: \"SrSrSrSr:CyCyCyCy:SwSwSwSw\", // belts t4 (two variants)\r\n        required: 5000,\r\n        reward: enumHubGoalRewards.reward_cutter_quad,\r\n    },\r\n\r\n    // 16\r\n    {\r\n        shape: \"CbRbRbCb:CwCwCwCw:WbWbWbWb\", // miner t4 (two variants)\r\n        required: 10000,\r\n        reward: enumHubGoalRewards.reward_painter_double,\r\n    },\r\n\r\n    // 17\r\n    {\r\n        shape: \"WrRgWrRg:CwCrCwCr:SgSgSgSg\", // processors t4 (two variants)\r\n        required: 15000,\r\n        reward: enumHubGoalRewards.reward_painter_quad,\r\n    },\r\n\r\n    // 18\r\n    {\r\n        shape: finalGameShape,\r\n        required: 250000,\r\n        reward: enumHubGoalRewards.reward_freeplay,\r\n    },\r\n];\r\n\r\nif (G_IS_DEV) {\r\n    tutorialGoals.forEach(({ shape }) => {\r\n        try {\r\n            ShapeDefinition.fromShortKey(shape);\r\n        } catch (ex) {\r\n            throw new Error(\"Invalid tutorial goal: '\" + ex + \"' for shape\" + shape);\r\n        }\r\n    });\r\n}\r\n","import { MetaBuilding, defaultBuildingVariant } from \"./meta_building\";\r\nimport { MetaCutterBuilding, enumCutterVariants } from \"./buildings/cutter\";\r\nimport { MetaRotaterBuilding, enumRotaterVariants } from \"./buildings/rotater\";\r\nimport { MetaPainterBuilding, enumPainterVariants } from \"./buildings/painter\";\r\nimport { MetaMixerBuilding } from \"./buildings/mixer\";\r\nimport { MetaStackerBuilding } from \"./buildings/stacker\";\r\nimport { MetaSplitterBuilding, enumSplitterVariants } from \"./buildings/splitter\";\r\nimport { MetaUndergroundBeltBuilding, enumUndergroundBeltVariants } from \"./buildings/underground_belt\";\r\nimport { MetaMinerBuilding, enumMinerVariants } from \"./buildings/miner\";\r\nimport { MetaTrashBuilding, enumTrashVariants } from \"./buildings/trash\";\r\n\r\n/** @typedef {Array<[typeof MetaBuilding, string]>} TutorialGoalReward */\r\n\r\nimport { enumHubGoalRewards } from \"./tutorial_goals\";\r\n\r\n/**\r\n * Helper method for proper types\r\n *  @returns {TutorialGoalReward}\r\n */\r\nconst typed = x => x;\r\n\r\n/**\r\n * Stores which reward unlocks what\r\n * @enum {TutorialGoalReward?}\r\n */\r\nexport const enumHubGoalRewardsToContentUnlocked = {\r\n    [enumHubGoalRewards.reward_cutter_and_trash]: typed([[MetaCutterBuilding, defaultBuildingVariant]]),\r\n    [enumHubGoalRewards.reward_rotater]: typed([[MetaRotaterBuilding, defaultBuildingVariant]]),\r\n    [enumHubGoalRewards.reward_painter]: typed([[MetaPainterBuilding, defaultBuildingVariant]]),\r\n    [enumHubGoalRewards.reward_mixer]: typed([[MetaMixerBuilding, defaultBuildingVariant]]),\r\n    [enumHubGoalRewards.reward_stacker]: typed([[MetaStackerBuilding, defaultBuildingVariant]]),\r\n    [enumHubGoalRewards.reward_splitter]: typed([[MetaSplitterBuilding, defaultBuildingVariant]]),\r\n    [enumHubGoalRewards.reward_tunnel]: typed([[MetaUndergroundBeltBuilding, defaultBuildingVariant]]),\r\n\r\n    [enumHubGoalRewards.reward_rotater_ccw]: typed([[MetaRotaterBuilding, enumRotaterVariants.ccw]]),\r\n    [enumHubGoalRewards.reward_rotater_fl]: typed([[MetaRotaterBuilding, enumRotaterVariants.fl]]),\r\n    [enumHubGoalRewards.reward_miner_chainable]: typed([[MetaMinerBuilding, enumMinerVariants.chainable]]),\r\n    [enumHubGoalRewards.reward_underground_belt_tier_2]: typed([\r\n        [MetaUndergroundBeltBuilding, enumUndergroundBeltVariants.tier2],\r\n    ]),\r\n    [enumHubGoalRewards.reward_splitter_compact]: typed([\r\n        [MetaSplitterBuilding, enumSplitterVariants.compact],\r\n    ]),\r\n    [enumHubGoalRewards.reward_cutter_quad]: typed([[MetaCutterBuilding, enumCutterVariants.quad]]),\r\n    [enumHubGoalRewards.reward_painter_double]: typed([[MetaPainterBuilding, enumPainterVariants.double]]),\r\n    [enumHubGoalRewards.reward_painter_quad]: typed([[MetaPainterBuilding, enumPainterVariants.quad]]),\r\n    [enumHubGoalRewards.reward_storage]: typed([[MetaTrashBuilding, enumTrashVariants.storage]]),\r\n\r\n    [enumHubGoalRewards.reward_freeplay]: null,\r\n    [enumHubGoalRewards.no_reward]: null,\r\n    [enumHubGoalRewards.no_reward_freeplay]: null,\r\n};\r\n","import { findNiceIntegerValue } from \"../core/utils\";\r\nimport { ShapeDefinition } from \"./shape_definition\";\r\n\r\nexport const finalGameShape = \"RuCw--Cw:----Ru--\";\r\nexport const blueprintShape = \"CbCbCbRb:CwCwCwCw\";\r\n\r\nexport const UPGRADES = {\r\n    belt: {\r\n        tiers: [\r\n            {\r\n                required: [{ shape: \"CuCuCuCu\", amount: 150 }],\r\n                improvement: 1,\r\n            },\r\n            {\r\n                required: [{ shape: \"--CuCu--\", amount: 1200 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"CmCmCmCm\", amount: 5000 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"SrSrSrSr:CyCyCyCy\", amount: 10000 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"SrSrSrSr:CyCyCyCy:SwSwSwSw\", amount: 10000 }],\r\n                improvement: 2,\r\n            },\r\n            // {\r\n            //     required: [{ shape: finalGameShape, amount: 150000 }],\r\n            //     improvement: 5,\r\n            //     excludePrevious: true,\r\n            // },\r\n        ],\r\n    },\r\n\r\n    miner: {\r\n        tiers: [\r\n            {\r\n                required: [{ shape: \"RuRuRuRu\", amount: 400 }],\r\n                improvement: 1,\r\n            },\r\n            {\r\n                required: [{ shape: \"Cu------\", amount: 4000 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"ScScScSc\", amount: 6000 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"CwCwCwCw:WbWbWbWb\", amount: 10000 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"CbRbRbCb:CwCwCwCw:WbWbWbWb\", amount: 10000 }],\r\n                improvement: 2,\r\n            },\r\n            // {\r\n            //     required: [{ shape: finalGameShape, amount: 150000 }],\r\n            //     improvement: 5,\r\n            //     excludePrevious: true,\r\n            // },\r\n        ],\r\n    },\r\n\r\n    processors: {\r\n        tiers: [\r\n            {\r\n                required: [{ shape: \"SuSuSuSu\", amount: 1000 }],\r\n                improvement: 1,\r\n            },\r\n            {\r\n                required: [{ shape: \"RuRu----\", amount: 2000 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"CgScScCg\", amount: 7000 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"CwCrCwCr:SgSgSgSg\", amount: 10000 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"WrRgWrRg:CwCrCwCr:SgSgSgSg\", amount: 10000 }],\r\n                improvement: 2,\r\n            },\r\n            // {\r\n            //     required: [{ shape: finalGameShape, amount: 150000 }],\r\n            //     improvement: 5,\r\n            //     excludePrevious: true,\r\n            // },\r\n        ],\r\n    },\r\n\r\n    painting: {\r\n        tiers: [\r\n            {\r\n                required: [{ shape: \"RbRb----\", amount: 1500 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"WrWrWrWr\", amount: 4000 }],\r\n                improvement: 1,\r\n            },\r\n            {\r\n                required: [{ shape: \"RmRmRmRm:CwCwCwCw\", amount: 8000 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"WmWmWmWm:CwCwCwCw:WmWmWmWm\", amount: 10000 }],\r\n                improvement: 2,\r\n            },\r\n            {\r\n                required: [{ shape: \"WmWmWmWm:CwCwCwCw:WmWmWmWm:CwCwCwCw\", amount: 10000 }],\r\n                improvement: 2,\r\n            },\r\n            // {\r\n            //     required: [{ shape: finalGameShape, amount: 150000 }],\r\n            //     improvement: 5,\r\n            //     excludePrevious: true,\r\n            // },\r\n        ],\r\n    },\r\n};\r\n\r\n// Tiers need % of the previous tier as requirement too\r\nconst tierGrowth = 2.5;\r\n\r\n// Automatically generate tier levels\r\nfor (const upgradeId in UPGRADES) {\r\n    const upgrade = UPGRADES[upgradeId];\r\n\r\n    let currentTierRequirements = [];\r\n    for (let i = 0; i < upgrade.tiers.length; ++i) {\r\n        const tierHandle = upgrade.tiers[i];\r\n        const originalRequired = tierHandle.required.slice();\r\n\r\n        for (let k = currentTierRequirements.length - 1; k >= 0; --k) {\r\n            const oldTierRequirement = currentTierRequirements[k];\r\n            if (!tierHandle.excludePrevious) {\r\n                tierHandle.required.unshift({\r\n                    shape: oldTierRequirement.shape,\r\n                    amount: oldTierRequirement.amount,\r\n                });\r\n            }\r\n        }\r\n        currentTierRequirements.push(\r\n            ...originalRequired.map(req => ({\r\n                amount: req.amount,\r\n                shape: req.shape,\r\n            }))\r\n        );\r\n        currentTierRequirements.forEach(tier => {\r\n            tier.amount = findNiceIntegerValue(tier.amount * tierGrowth);\r\n        });\r\n    }\r\n}\r\n\r\nif (G_IS_DEV) {\r\n    for (const upgradeId in UPGRADES) {\r\n        const upgrade = UPGRADES[upgradeId];\r\n        upgrade.tiers.forEach(tier => {\r\n            tier.required.forEach(({ shape }) => {\r\n                try {\r\n                    ShapeDefinition.fromShortKey(shape);\r\n                } catch (ex) {\r\n                    throw new Error(\"Invalid upgrade goal: '\" + ex + \"' for shape\" + shape);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","/**\r\n * @type {Object<string, {name: string, data: any, code: string, region: string}>}\r\n */\r\nexport const LANGUAGES = {\r\n    \"en\": {\r\n        name: \"English\",\r\n        data: null,\r\n        code: \"en\",\r\n        region: \"\",\r\n    },\r\n    \"de\": {\r\n        name: \"Deutsch\",\r\n        data: require(\"./built-temp/base-de.json\"),\r\n        code: \"de\",\r\n        region: \"\",\r\n    },\r\n    \"fr\": {\r\n        name: \"Français\",\r\n        data: require(\"./built-temp/base-fr.json\"),\r\n        code: \"fr\",\r\n        region: \"\",\r\n    },\r\n    \"ja\": {\r\n        name: \"日本語\",\r\n        data: require(\"./built-temp/base-ja.json\"),\r\n        code: \"ja\",\r\n        region: \"\",\r\n    },\r\n    \"pt-PT\": {\r\n        name: \"Português (Portugal)\",\r\n        data: require(\"./built-temp/base-pt-PT.json\"),\r\n        code: \"pt\",\r\n        region: \"PT\",\r\n    },\r\n    \"pt-BR\": {\r\n        name: \"Português (Brasil)\",\r\n        data: require(\"./built-temp/base-pt-BR.json\"),\r\n        code: \"pt\",\r\n        region: \"BR\",\r\n    },\r\n    \"ru\": {\r\n        name: \"Русский\",\r\n        data: require(\"./built-temp/base-ru.json\"),\r\n        code: \"ru\",\r\n        region: \"\",\r\n    },\r\n    \"cs\": {\r\n        name: \"Čeština\",\r\n        data: require(\"./built-temp/base-cz.json\"),\r\n        code: \"cs\",\r\n        region: \"\",\r\n    },\r\n    \"es-419\": {\r\n        name: \"Español\",\r\n        data: require(\"./built-temp/base-es.json\"),\r\n        code: \"es\",\r\n        region: \"\",\r\n    },\r\n    \"pl\": {\r\n        name: \"Polski\",\r\n        data: require(\"./built-temp/base-pl.json\"),\r\n        code: \"pl\",\r\n        region: \"\",\r\n    },\r\n    \"kor\": {\r\n        name: \"한국어\",\r\n        data: require(\"./built-temp/base-kor.json\"),\r\n        code: \"kor\",\r\n        region: \"\",\r\n    },\r\n    \"nl\": {\r\n        name: \"Nederlands\",\r\n        data: require(\"./built-temp/base-nl.json\"),\r\n        code: \"nl\",\r\n        region: \"\",\r\n    },\r\n    \"no\": {\r\n        name: \"Norsk\",\r\n        data: require(\"./built-temp/base-no.json\"),\r\n        code: \"no\",\r\n        region: \"\",\r\n    },\r\n\r\n    \"tr\": {\r\n        name: \"Türkçe\",\r\n        data: require(\"./built-temp/base-tr.json\"),\r\n        code: \"tr\",\r\n        region: \"\",\r\n    },\r\n\r\n    \"zh-CN\": {\r\n        // simplified\r\n        name: \"中文简体\",\r\n        data: require(\"./built-temp/base-zh-CN.json\"),\r\n        code: \"zh\",\r\n        region: \"CN\",\r\n    },\r\n\r\n    \"zh-TW\": {\r\n        // traditional\r\n        name: \"中文繁體\",\r\n        data: require(\"./built-temp/base-zh-TW.json\"),\r\n        code: \"zh\",\r\n        region: \"TW\",\r\n    },\r\n\r\n    \"sv\": {\r\n        name: \"Svenska\",\r\n        data: require(\"./built-temp/base-sv.json\"),\r\n        code: \"sv\",\r\n        region: \"\",\r\n    },\r\n};\r\n","import \"./core/polyfills\";\r\nimport \"./core/assert\";\r\nimport \"./core/error_handler\";\r\n\r\nimport { createLogger, logSection } from \"./core/logging\";\r\nimport { Application } from \"./application\";\r\nimport { IS_DEBUG } from \"./core/config\";\r\nimport { initComponentRegistry } from \"./game/component_registry\";\r\nimport { initDrawUtils } from \"./core/draw_utils\";\r\nimport { initItemRegistry } from \"./game/item_registry\";\r\nimport { initMetaBuildingRegistry } from \"./game/meta_building_registry\";\r\nimport { initGameSpeedRegistry } from \"./game/game_speed_registry\";\r\n\r\nconst logger = createLogger(\"main\");\r\n\r\nif (window.coreThreadLoadedCb) {\r\n    logger.log(\"Javascript parsed, calling html thread\");\r\n    window.coreThreadLoadedCb();\r\n}\r\n\r\n// Logrocket\r\n// if (!G_IS_DEV && !G_IS_STANDALONE) {\r\n//     const monthlyUsers = 300; // thousand\r\n//     const logrocketLimit = 10; // thousand\r\n//     const percentageOfUsers = logrocketLimit / monthlyUsers;\r\n\r\n//     if (Math.random() <= percentageOfUsers) {\r\n//         logger.log(\"Analyzing this session with logrocket\");\r\n//         const logrocket = require(\"logrocket\");\r\n//         logrocket.init(\"p1x9zh/shapezio\");\r\n\r\n//         try {\r\n//             logrocket.getSessionURL(function (sessionURL) {\r\n//                 logger.log(\"Connected lockrocket to GA\");\r\n//                 // @ts-ignore\r\n//                 try {\r\n//                     window.ga(\"send\", {\r\n//                         hitType: \"event\",\r\n//                         eventCategory: \"LogRocket\",\r\n//                         eventAction: sessionURL,\r\n//                     });\r\n//                 } catch (ex) {\r\n//                     logger.warn(\"Logrocket connection to analytics failed:\", ex);\r\n//                 }\r\n//             });\r\n//         } catch (ex) {\r\n//             logger.warn(\"Logrocket connection to analytics failed:\", ex);\r\n//         }\r\n//     }\r\n// }\r\n\r\nconsole.log(\r\n    `%cshapez.io ️%c\\n© 2020 Tobias Springer IT Solutions\\nCommit %c${G_BUILD_COMMIT_HASH}%c on %c${new Date(\r\n        G_BUILD_TIME\r\n    ).toLocaleString()}\\n`,\r\n    \"font-size: 35px; font-family: Arial;font-weight: bold; padding: 10px 0;\",\r\n    \"color: #aaa\",\r\n    \"color: #7f7\",\r\n    \"color: #aaa\",\r\n    \"color: #7f7\"\r\n);\r\n\r\nconsole.log(\"Environment: %c\" + G_APP_ENVIRONMENT, \"color: #fff\");\r\n\r\nif (G_IS_DEV && IS_DEBUG) {\r\n    console.log(\"\\n%c🛑 DEBUG ENVIRONMENT 🛑\\n\", \"color: #f77\");\r\n}\r\n\r\n\r\n\r\n/* dev:start */\r\nconsole.log(\"%cDEVCODE BUILT IN\", \"color: #f77\");\r\n/* dev:end */\r\n\r\nlogSection(\"Boot Process\", \"#f9a825\");\r\n\r\ninitDrawUtils();\r\ninitComponentRegistry();\r\ninitItemRegistry();\r\ninitMetaBuildingRegistry();\r\ninitGameSpeedRegistry();\r\n\r\nlet app = null;\r\n\r\nfunction bootApp() {\r\n    logger.log(\"Page Loaded\");\r\n    app = new Application();\r\n    app.boot();\r\n}\r\n\r\nwindow.addEventListener(\"load\", bootApp);\r\n","\r\n\r\nexport class AdProviderInterface {\r\n    /** @param {Application} app */\r\n    constructor(app) {\r\n        this.app = app;\r\n    }\r\n\r\n    /**\r\n     * Initializes the storage\r\n     * @returns {Promise<void>}\r\n     */\r\n    initialize() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Returns if this provider serves ads at all\r\n     * @returns {boolean}\r\n     */\r\n    getHasAds() {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns if it would be possible to show a video ad *now*. This can be false if for\r\n     * example the last video ad is\r\n     * @returns {boolean}\r\n     */\r\n    getCanShowVideoAd() {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Shows an video ad\r\n     * @returns {Promise<void>}\r\n     */\r\n    showVideoAd() {\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","\r\n\r\nimport { AdProviderInterface } from \"../ad_provider\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst minimumTimeBetweenVideoAdsMs = G_IS_DEV ? 1 : 5 * 60 * 1000;\r\n\r\nconst logger = createLogger(\"gamedistribution\");\r\n\r\nexport class GamedistributionAdProvider extends AdProviderInterface {\r\n    /**\r\n     *\r\n     * @param {Application} app\r\n     */\r\n    constructor(app) {\r\n        super(app);\r\n\r\n        /**\r\n         * The resolve function to finish the current video ad. Null if none is currently running\r\n         * @type {Function}\r\n         */\r\n        this.videoAdResolveFunction = null;\r\n\r\n        /**\r\n         * The current timer which will timeout the resolve\r\n         */\r\n        this.videoAdResolveTimer = null;\r\n\r\n        /**\r\n         * When we showed the last video ad\r\n         */\r\n        this.lastVideoAdShowTime = -1e20;\r\n\r\n        console.error(\"X\");\r\n    }\r\n\r\n    getHasAds() {\r\n        return true;\r\n    }\r\n\r\n    getCanShowVideoAd() {\r\n        return (\r\n            this.getHasAds() &&\r\n            !this.videoAdResolveFunction &&\r\n            performance.now() - this.lastVideoAdShowTime > minimumTimeBetweenVideoAdsMs\r\n        );\r\n    }\r\n\r\n    initialize() {\r\n        // No point to initialize everything if ads are not supported\r\n        if (!this.getHasAds()) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        logger.log(\"🎬 Initializing gamedistribution ads\");\r\n\r\n        try {\r\n            parent.postMessage(\"shapezio://gd.game_loaded\", \"*\");\r\n        } catch (ex) {\r\n            return Promise.reject(\"Frame communication not allowed\");\r\n        }\r\n\r\n        window.addEventListener(\r\n            \"message\",\r\n            event => {\r\n                if (event.data === \"shapezio://gd.ad_started\") {\r\n                    console.log(\"🎬 Got ad started callback\");\r\n                } else if (event.data === \"shapezio://gd.ad_finished\") {\r\n                    console.log(\"🎬 Got ad finished callback\");\r\n                    if (this.videoAdResolveFunction) {\r\n                        this.videoAdResolveFunction();\r\n                    }\r\n                }\r\n            },\r\n            false\r\n        );\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    showVideoAd() {\r\n        assert(this.getHasAds(), \"Called showVideoAd but ads are not supported!\");\r\n        assert(!this.videoAdResolveFunction, \"Video ad still running, can not show again!\");\r\n        this.lastVideoAdShowTime = performance.now();\r\n\r\n        console.log(\"🎬 Gamedistribution: Start ad\");\r\n        try {\r\n            parent.postMessage(\"shapezio://gd.show_ad\", \"*\");\r\n        } catch (ex) {\r\n            logger.warn(\"🎬 Failed to send message for gd ad:\", ex);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        document.body.classList.add(\"externalAdOpen\");\r\n\r\n        return new Promise(resolve => {\r\n            // So, wait for the remove call but also remove after N seconds\r\n            this.videoAdResolveFunction = () => {\r\n                this.videoAdResolveFunction = null;\r\n                clearTimeout(this.videoAdResolveTimer);\r\n                this.videoAdResolveTimer = null;\r\n\r\n                // When the ad closed, also set the time\r\n                this.lastVideoAdShowTime = performance.now();\r\n                resolve();\r\n            };\r\n\r\n            this.videoAdResolveTimer = setTimeout(() => {\r\n                logger.warn(\"Automatically closing ad after not receiving callback\");\r\n                if (this.videoAdResolveFunction) {\r\n                    this.videoAdResolveFunction();\r\n                }\r\n            }, 35000);\r\n        })\r\n            .catch(err => {\r\n                logger.error(this, \"Error while resolving video ad:\", err);\r\n            })\r\n            .then(() => {\r\n                document.body.classList.remove(\"externalAdOpen\");\r\n            });\r\n    }\r\n}\r\n","import { AdProviderInterface } from \"../ad_provider\";\r\n\r\nexport class NoAdProvider extends AdProviderInterface {\r\n    getHasAds() {\r\n        return false;\r\n    }\r\n\r\n    getCanShowVideoAd() {\r\n        return false;\r\n    }\r\n}\r\n","\r\n\r\nexport class AnalyticsInterface {\r\n    constructor(app) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n    }\r\n\r\n    /**\r\n     * Initializes the analytics\r\n     * @returns {Promise<void>}\r\n     */\r\n    initialize() {\r\n        abstract;\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Sets the player name for analytics\r\n     * @param {string} userName\r\n     */\r\n    setUserContext(userName) {}\r\n\r\n    /**\r\n     * Tracks a click no an ui element\r\n     * @param {string} elementName\r\n     */\r\n    trackUiClick(elementName) {}\r\n\r\n    /**\r\n     * Tracks when a new state is entered\r\n     * @param {string} stateId\r\n     */\r\n    trackStateEnter(stateId) {}\r\n\r\n    /**\r\n     * Tracks a new user decision\r\n     * @param {string} name\r\n     */\r\n    trackDecision(name) {}\r\n}\r\n","import { globalConfig } from \"../../core/config\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { GameRoot } from \"../../game/root\";\r\nimport { InGameState } from \"../../states/ingame\";\r\nimport { GameAnalyticsInterface } from \"../game_analytics\";\r\nimport { FILE_NOT_FOUND } from \"../storage\";\r\nimport { blueprintShape, UPGRADES } from \"../../game/upgrades\";\r\nimport { tutorialGoals } from \"../../game/tutorial_goals\";\r\nimport { BeltComponent } from \"../../game/components/belt\";\r\nimport { StaticMapEntityComponent } from \"../../game/components/static_map_entity\";\r\n\r\nconst logger = createLogger(\"game_analytics\");\r\n\r\nconst analyticsUrl = G_IS_DEV ? \"http://localhost:8001\" : \"https://analytics.shapez.io\";\r\n\r\n// Be sure to increment the ID whenever it changes to make sure all\r\n// users are tracked\r\nconst analyticsLocalFile = \"shapez_token_123.bin\";\r\n\r\nexport class ShapezGameAnalytics extends GameAnalyticsInterface {\r\n    get environment() {\r\n        if (G_IS_DEV) {\r\n            return \"dev\";\r\n        }\r\n\r\n        if (G_IS_STANDALONE) {\r\n            return \"steam\";\r\n        }\r\n\r\n        if (G_IS_RELEASE) {\r\n            return \"prod\";\r\n        }\r\n\r\n        return \"beta\";\r\n    }\r\n\r\n    /**\r\n     * @returns {Promise<void>}\r\n     */\r\n    initialize() {\r\n        this.syncKey = null;\r\n\r\n        setInterval(() => this.sendTimePoints(), 60 * 1000);\r\n\r\n        // Retrieve sync key from player\r\n        return this.app.storage.readFileAsync(analyticsLocalFile).then(\r\n            syncKey => {\r\n                this.syncKey = syncKey;\r\n                logger.log(\"Player sync key read:\", this.syncKey);\r\n            },\r\n            error => {\r\n                // File was not found, retrieve new key\r\n                if (error === FILE_NOT_FOUND) {\r\n                    logger.log(\"Retrieving new player key\");\r\n\r\n                    // Perform call to get a new key from the API\r\n                    this.sendToApi(\"/v1/register\", {\r\n                        environment: this.environment,\r\n                    })\r\n                        .then(res => {\r\n                            // Try to read and parse the key from the api\r\n                            if (res.key && typeof res.key === \"string\" && res.key.length === 40) {\r\n                                this.syncKey = res.key;\r\n                                logger.log(\"Key retrieved:\", this.syncKey);\r\n                                this.app.storage.writeFileAsync(analyticsLocalFile, res.key);\r\n                            } else {\r\n                                throw new Error(\"Bad response from analytics server: \" + res);\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            logger.error(\"Failed to register on analytics api:\", err);\r\n                        });\r\n                } else {\r\n                    logger.error(\"Failed to read ga key:\", error);\r\n                }\r\n                return;\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Sends a request to the api\r\n     * @param {string} endpoint Endpoint without base url\r\n     * @param {object} data payload\r\n     * @returns {Promise<any>}\r\n     */\r\n    sendToApi(endpoint, data) {\r\n        return Promise.race([\r\n            new Promise((resolve, reject) => {\r\n                setTimeout(() => reject(\"Request to \" + endpoint + \" timed out\"), 20000);\r\n            }),\r\n            fetch(analyticsUrl + endpoint, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                cache: \"no-cache\",\r\n                referrer: \"no-referrer\",\r\n                credentials: \"omit\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\",\r\n                    \"x-api-key\": globalConfig.info.analyticsApiKey,\r\n                },\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then(res => {\r\n                    if (!res.ok || res.status !== 200) {\r\n                        throw new Error(\"Fetch error: Bad status \" + res.status);\r\n                    }\r\n                    return res;\r\n                })\r\n                .then(res => res.json()),\r\n        ]);\r\n    }\r\n\r\n    /**\r\n     * Sends a game event to the analytics\r\n     * @param {string} category\r\n     * @param {string} value\r\n     */\r\n    sendGameEvent(category, value) {\r\n        if (!this.syncKey) {\r\n            logger.warn(\"Can not send event due to missing sync key\");\r\n            return;\r\n        }\r\n\r\n        const gameState = this.app.stateMgr.currentState;\r\n        if (!(gameState instanceof InGameState)) {\r\n            logger.warn(\"Trying to send analytics event outside of ingame state\");\r\n            return;\r\n        }\r\n\r\n        const savegame = gameState.savegame;\r\n        if (!savegame) {\r\n            logger.warn(\"Ingame state has empty savegame\");\r\n            return;\r\n        }\r\n\r\n        const savegameId = savegame.internalId;\r\n        if (!gameState.core) {\r\n            logger.warn(\"Game state has no core\");\r\n            return;\r\n        }\r\n        const root = gameState.core.root;\r\n        if (!root) {\r\n            logger.warn(\"Root is not initialized\");\r\n            return;\r\n        }\r\n\r\n        logger.log(\"Sending event\", category, value);\r\n\r\n        this.sendToApi(\"/v1/game-event\", {\r\n            playerKey: this.syncKey,\r\n            gameKey: savegameId,\r\n            ingameTime: root.time.now(),\r\n            environment: this.environment,\r\n            category,\r\n            value,\r\n            version: G_BUILD_VERSION,\r\n            level: root.hubGoals.level,\r\n            gameDump: this.generateGameDump(root),\r\n        });\r\n    }\r\n\r\n    sendTimePoints() {\r\n        const gameState = this.app.stateMgr.currentState;\r\n        if (gameState instanceof InGameState) {\r\n            logger.log(\"Syncing analytics\");\r\n            this.sendGameEvent(\"sync\", \"\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if the shape is interesting\r\n     * @param {string} key\r\n     */\r\n    isInterestingShape(key) {\r\n        if (key === blueprintShape) {\r\n            return true;\r\n        }\r\n\r\n        // Check if its a story goal\r\n        for (let i = 0; i < tutorialGoals.length; ++i) {\r\n            if (key === tutorialGoals[i].shape) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // Check if its required to unlock an upgrade\r\n        for (const upgradeKey in UPGRADES) {\r\n            const handle = UPGRADES[upgradeKey];\r\n            const tiers = handle.tiers;\r\n            for (let i = 0; i < tiers.length; ++i) {\r\n                const tier = tiers[i];\r\n                const required = tier.required;\r\n                for (let k = 0; k < required.length; ++k) {\r\n                    if (required[k].shape === key) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Generates a game dump\r\n     * @param {GameRoot} root\r\n     */\r\n    generateGameDump(root) {\r\n        const shapeIds = Object.keys(root.hubGoals.storedShapes).filter(this.isInterestingShape.bind(this));\r\n        let shapes = {};\r\n        for (let i = 0; i < shapeIds.length; ++i) {\r\n            shapes[shapeIds[i]] = root.hubGoals.storedShapes[shapeIds[i]];\r\n        }\r\n        return {\r\n            shapes,\r\n            upgrades: root.hubGoals.upgradeLevels,\r\n            belts: root.entityMgr.getAllWithComponent(BeltComponent).length,\r\n            buildings:\r\n                root.entityMgr.getAllWithComponent(StaticMapEntityComponent).length -\r\n                root.entityMgr.getAllWithComponent(BeltComponent).length,\r\n        };\r\n    }\r\n\r\n    /**\r\n     */\r\n    handleGameStarted() {\r\n        this.sendGameEvent(\"game_start\", \"\");\r\n    }\r\n\r\n    /**\r\n     */\r\n    handleGameResumed() {\r\n        this.sendTimePoints();\r\n    }\r\n\r\n    /**\r\n     * Handles the given level completed\r\n     * @param {number} level\r\n     */\r\n    handleLevelCompleted(level) {\r\n        logger.log(\"Complete level\", level);\r\n        this.sendGameEvent(\"level_complete\", \"\" + level);\r\n    }\r\n\r\n    /**\r\n     * Handles the given upgrade completed\r\n     * @param {string} id\r\n     * @param {number} level\r\n     */\r\n    handleUpgradeUnlocked(id, level) {\r\n        logger.log(\"Unlock upgrade\", id, level);\r\n        this.sendGameEvent(\"upgrade_unlock\", id + \"@\" + level);\r\n    }\r\n}\r\n","import { AnalyticsInterface } from \"../analytics\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst logger = createLogger(\"ga\");\r\n\r\nexport class GoogleAnalyticsImpl extends AnalyticsInterface {\r\n    initialize() {\r\n        this.lastUiClickTracked = -1000;\r\n\r\n        setInterval(() => this.internalTrackAfkEvent(), 120 * 1000);\r\n\r\n        // Analytics is already loaded in the html\r\n        return Promise.resolve();\r\n    }\r\n\r\n    setUserContext(userName) {\r\n        try {\r\n            if (window.gtag) {\r\n                logger.log(\"📊 Setting user context:\", userName);\r\n                window.gtag(\"set\", {\r\n                    player: userName,\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            logger.warn(\"📊 Failed to set user context:\", ex);\r\n        }\r\n    }\r\n\r\n    trackStateEnter(stateId) {\r\n        const nonInteractionStates = [\r\n            \"LoginState\",\r\n            \"MainMenuState\",\r\n            \"PreloadState\",\r\n            \"RegisterState\",\r\n            \"WatchAdState\",\r\n        ];\r\n\r\n        try {\r\n            if (window.gtag) {\r\n                logger.log(\"📊 Tracking state enter:\", stateId);\r\n                window.gtag(\"event\", \"enter_state\", {\r\n                    event_category: \"ui\",\r\n                    event_label: stateId,\r\n                    non_interaction: nonInteractionStates.indexOf(stateId) >= 0,\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            logger.warn(\"📊 Failed to track state analytcis:\", ex);\r\n        }\r\n    }\r\n\r\n    trackDecision(decisionName) {\r\n        try {\r\n            if (window.gtag) {\r\n                logger.log(\"📊 Tracking decision:\", decisionName);\r\n                window.gtag(\"event\", \"decision\", {\r\n                    event_category: \"ui\",\r\n                    event_label: decisionName,\r\n                    non_interaction: true,\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            logger.warn(\"📊 Failed to track state analytcis:\", ex);\r\n        }\r\n    }\r\n\r\n    trackUiClick(elementName) {\r\n        const stateKey = this.app.stateMgr.getCurrentState().key;\r\n        const fullSelector = stateKey + \">\" + elementName;\r\n\r\n        try {\r\n            if (window.gtag) {\r\n                logger.log(\"📊 Tracking click on:\", fullSelector);\r\n                window.gtag(\"event\", \"click\", {\r\n                    event_category: \"ui\",\r\n                    event_label: fullSelector,\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            logger.warn(\"📊 Failed to track ui click:\", ex);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Tracks an event so GA keeps track of the user\r\n     */\r\n    internalTrackAfkEvent() {\r\n        if (window.gtag) {\r\n            window.gtag(\"event\", \"afk\", {\r\n                event_category: \"ping\",\r\n                event_label: \"timed\",\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { GameAnalyticsInterface } from \"../game_analytics\";\r\n\r\nexport class NoGameAnalytics extends GameAnalyticsInterface {\r\n    initialize() {\r\n        return Promise.resolve();\r\n    }\r\n}\r\n","import { MusicInstanceInterface, SoundInstanceInterface, SoundInterface, MUSIC, SOUNDS } from \"../sound\";\r\nimport { cachebust } from \"../../core/cachebust\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { globalConfig } from \"../../core/config\";\r\n\r\nconst { Howl, Howler } = require(\"howler\");\r\n\r\nconst logger = createLogger(\"sound/browser\");\r\n\r\n// @ts-ignore\r\nconst sprites = require(\"../../built-temp/sfx.json\");\r\n\r\nclass SoundSpritesContainer {\r\n    constructor() {\r\n        this.howl = null;\r\n\r\n        this.loadingPromise = null;\r\n    }\r\n\r\n    load() {\r\n        if (this.loadingPromise) {\r\n            return this.loadingPromise;\r\n        }\r\n        return (this.loadingPromise = Promise.race([\r\n            new Promise((resolve, reject) => {\r\n                setTimeout(reject, 5000);\r\n            }),\r\n            new Promise(resolve => {\r\n                this.howl = new Howl({\r\n                    src: cachebust(\"res/sounds/sfx.mp3\"),\r\n                    sprite: sprites.sprite,\r\n                    autoplay: false,\r\n                    loop: false,\r\n                    volume: 0,\r\n                    preload: true,\r\n                    pool: 20,\r\n                    onload: () => {\r\n                        resolve();\r\n                    },\r\n                    onloaderror: (id, err) => {\r\n                        logger.warn(\"SFX failed to load:\", id, err);\r\n                        this.howl = null;\r\n                        resolve();\r\n                    },\r\n                    onplayerror: (id, err) => {\r\n                        logger.warn(\"SFX failed to play:\", id, err);\r\n                    },\r\n                });\r\n            }),\r\n        ]));\r\n    }\r\n\r\n    play(volume, key) {\r\n        if (this.howl) {\r\n            const instance = this.howl.play(key);\r\n            this.howl.volume(volume, instance);\r\n        }\r\n    }\r\n\r\n    deinitialize() {\r\n        if (this.howl) {\r\n            this.howl.unload();\r\n            this.howl = null;\r\n        }\r\n    }\r\n}\r\n\r\nclass WrappedSoundInstance extends SoundInstanceInterface {\r\n    /**\r\n     *\r\n     * @param {SoundSpritesContainer} spriteContainer\r\n     * @param {string} key\r\n     */\r\n    constructor(spriteContainer, key) {\r\n        super(key, \"sfx.mp3\");\r\n        this.spriteContainer = spriteContainer;\r\n    }\r\n\r\n    /** @returns {Promise<void>} */\r\n    load() {\r\n        return this.spriteContainer.load();\r\n    }\r\n\r\n    play(volume) {\r\n        this.spriteContainer.play(volume, this.key);\r\n    }\r\n\r\n    deinitialize() {\r\n        return this.spriteContainer.deinitialize();\r\n    }\r\n}\r\n\r\nclass MusicInstance extends MusicInstanceInterface {\r\n    constructor(key, url) {\r\n        super(key, url);\r\n        this.howl = null;\r\n        this.instance = null;\r\n        this.playing = false;\r\n    }\r\n    load() {\r\n        return Promise.race([\r\n            new Promise((resolve, reject) => {\r\n                setTimeout(reject, 5000);\r\n            }),\r\n            new Promise((resolve, reject) => {\r\n                this.howl = new Howl({\r\n                    src: cachebust(\"res/sounds/music/\" + this.url + \".mp3\"),\r\n                    autoplay: false,\r\n                    loop: true,\r\n                    html5: true,\r\n                    volume: 1,\r\n                    preload: true,\r\n                    pool: 2,\r\n\r\n                    onunlock: () => {\r\n                        if (this.playing) {\r\n                            logger.log(\"Playing music after manual unlock\");\r\n                            this.play();\r\n                        }\r\n                    },\r\n\r\n                    onload: () => {\r\n                        resolve();\r\n                    },\r\n                    onloaderror: (id, err) => {\r\n                        logger.warn(this, \"Music\", this.url, \"failed to load:\", id, err);\r\n                        this.howl = null;\r\n                        resolve();\r\n                    },\r\n                    onplayerror: (id, err) => {\r\n                        logger.warn(this, \"Music\", this.url, \"failed to play:\", id, err);\r\n                    },\r\n                });\r\n            }),\r\n        ]);\r\n    }\r\n\r\n    stop() {\r\n        if (this.howl && this.instance) {\r\n            this.playing = false;\r\n            this.howl.pause(this.instance);\r\n        }\r\n    }\r\n\r\n    isPlaying() {\r\n        return this.playing;\r\n    }\r\n\r\n    play() {\r\n        if (this.howl) {\r\n            this.playing = true;\r\n            if (this.instance) {\r\n                this.howl.play(this.instance);\r\n            } else {\r\n                this.instance = this.howl.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    deinitialize() {\r\n        if (this.howl) {\r\n            this.howl.unload();\r\n            this.howl = null;\r\n            this.instance = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class SoundImplBrowser extends SoundInterface {\r\n    constructor(app) {\r\n        Howler.mobileAutoEnable = true;\r\n        Howler.autoUnlock = true;\r\n        Howler.autoSuspend = false;\r\n        Howler.html5PoolSize = 20;\r\n        Howler.pos(0, 0, 0);\r\n\r\n        super(app, WrappedSoundInstance, MusicInstance);\r\n    }\r\n\r\n    initialize() {\r\n        this.sfxHandle = new SoundSpritesContainer();\r\n\r\n        // @ts-ignore\r\n        const keys = Object.values(SOUNDS);\r\n        keys.forEach(key => {\r\n            this.sounds[key] = new WrappedSoundInstance(this.sfxHandle, key);\r\n        });\r\n        for (const musicKey in MUSIC) {\r\n            const musicPath = MUSIC[musicKey];\r\n            const music = new this.musicClass(musicKey, musicPath);\r\n            this.music[musicPath] = music;\r\n        }\r\n\r\n        this.musicMuted = this.app.settings.getAllSettings().musicMuted;\r\n        this.soundsMuted = this.app.settings.getAllSettings().soundsMuted;\r\n\r\n        if (G_IS_DEV && globalConfig.debug.disableMusic) {\r\n            this.musicMuted = true;\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    deinitialize() {\r\n        return super.deinitialize().then(() => Howler.unload());\r\n    }\r\n}\r\n","import { FILE_NOT_FOUND, StorageInterface } from \"../storage\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst logger = createLogger(\"storage/browser\");\r\n\r\nconst LOCAL_STORAGE_UNAVAILABLE = \"local-storage-unavailable\";\r\nconst LOCAL_STORAGE_NO_WRITE_PERMISSION = \"local-storage-no-write-permission\";\r\n\r\nlet randomDelay = () => 0;\r\n\r\nif (G_IS_DEV) {\r\n    // Random delay for testing\r\n    // randomDelay = () => 500;\r\n}\r\n\r\nexport class StorageImplBrowser extends StorageInterface {\r\n    constructor(app) {\r\n        super(app);\r\n        this.currentBusyFilename = false;\r\n    }\r\n\r\n    initialize() {\r\n        logger.error(\"Using localStorage, please update to a newer browser\");\r\n        return new Promise((resolve, reject) => {\r\n            // Check for local storage availability in general\r\n            if (!window.localStorage) {\r\n                alert(\"Local storage is not available! Please upgrade to a newer browser!\");\r\n                reject(LOCAL_STORAGE_UNAVAILABLE);\r\n            }\r\n\r\n            // Check if we can set and remove items\r\n            try {\r\n                window.localStorage.setItem(\"storage_availability_test\", \"1\");\r\n                window.localStorage.removeItem(\"storage_availability_test\");\r\n            } catch (e) {\r\n                alert(\r\n                    \"It seems we don't have permission to write to local storage! Please update your browsers settings or use a different browser!\"\r\n                );\r\n                reject(LOCAL_STORAGE_NO_WRITE_PERMISSION);\r\n                return;\r\n            }\r\n            setTimeout(resolve, 0);\r\n        });\r\n    }\r\n\r\n    writeFileAsync(filename, contents) {\r\n        if (this.currentBusyFilename === filename) {\r\n            logger.warn(\"Attempt to write\", filename, \"while write process is not finished!\");\r\n        }\r\n\r\n        this.currentBusyFilename = filename;\r\n        window.localStorage.setItem(filename, contents);\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                this.currentBusyFilename = false;\r\n                resolve();\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    writeFileSyncIfSupported(filename, contents) {\r\n        window.localStorage.setItem(filename, contents);\r\n        return true;\r\n    }\r\n\r\n    readFileAsync(filename) {\r\n        if (this.currentBusyFilename === filename) {\r\n            logger.warn(\"Attempt to read\", filename, \"while write progress on it is ongoing!\");\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const contents = window.localStorage.getItem(filename);\r\n            if (!contents) {\r\n                // File not found\r\n                setTimeout(() => reject(FILE_NOT_FOUND), randomDelay());\r\n                return;\r\n            }\r\n\r\n            // File read, simulate delay\r\n            setTimeout(() => resolve(contents), 0);\r\n        });\r\n    }\r\n\r\n    deleteFileAsync(filename) {\r\n        if (this.currentBusyFilename === filename) {\r\n            logger.warn(\"Attempt to delete\", filename, \"while write progres on it is ongoing!\");\r\n        }\r\n\r\n        this.currentBusyFilename = filename;\r\n        return new Promise((resolve, reject) => {\r\n            window.localStorage.removeItem(filename);\r\n            setTimeout(() => {\r\n                this.currentBusyFilename = false;\r\n                resolve();\r\n            }, 0);\r\n        });\r\n    }\r\n}\r\n","import { FILE_NOT_FOUND, StorageInterface } from \"../storage\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst logger = createLogger(\"storage/browserIDB\");\r\n\r\nconst LOCAL_STORAGE_UNAVAILABLE = \"local-storage-unavailable\";\r\nconst LOCAL_STORAGE_NO_WRITE_PERMISSION = \"local-storage-no-write-permission\";\r\n\r\nlet randomDelay = () => 0;\r\n\r\nif (G_IS_DEV) {\r\n    // Random delay for testing\r\n    // randomDelay = () => 500;\r\n}\r\n\r\nexport class StorageImplBrowserIndexedDB extends StorageInterface {\r\n    constructor(app) {\r\n        super(app);\r\n        this.currentBusyFilename = false;\r\n\r\n        /** @type {IDBDatabase} */\r\n        this.database = null;\r\n    }\r\n\r\n    initialize() {\r\n        logger.log(\"Using indexed DB storage\");\r\n        return new Promise((resolve, reject) => {\r\n            const request = window.indexedDB.open(\"app_storage\", 10);\r\n            request.onerror = event => {\r\n                logger.error(\"IDB error:\", event);\r\n                alert(\r\n                    \"Sorry, it seems your browser has blocked the access to the storage system. This might be the case if you are browsing in private mode for example. I recommend to use google chrome or disable private browsing.\"\r\n                );\r\n                reject(\"Indexed DB access error\");\r\n            };\r\n\r\n            // @ts-ignore\r\n            request.onsuccess = event => resolve(event.target.result);\r\n\r\n            request.onupgradeneeded = /** @type {IDBVersionChangeEvent} */ event => {\r\n                /** @type {IDBDatabase} */\r\n                // @ts-ignore\r\n                const database = event.target.result;\r\n\r\n                const objectStore = database.createObjectStore(\"files\", {\r\n                    keyPath: \"filename\",\r\n                });\r\n\r\n                objectStore.createIndex(\"filename\", \"filename\", { unique: true });\r\n\r\n                objectStore.transaction.onerror = event => {\r\n                    logger.error(\"IDB transaction error:\", event);\r\n                    reject(\"Indexed DB transaction error during migration, check console output.\");\r\n                };\r\n\r\n                objectStore.transaction.oncomplete = event => {\r\n                    logger.log(\"Object store completely initialized\");\r\n                    resolve(database);\r\n                };\r\n            };\r\n        }).then(database => {\r\n            this.database = database;\r\n        });\r\n    }\r\n\r\n    writeFileAsync(filename, contents) {\r\n        if (this.currentBusyFilename === filename) {\r\n            logger.warn(\"Attempt to write\", filename, \"while write process is not finished!\");\r\n        }\r\n        if (!this.database) {\r\n            return Promise.reject(\"Storage not ready\");\r\n        }\r\n\r\n        this.currentBusyFilename = filename;\r\n        const transaction = this.database.transaction([\"files\"], \"readwrite\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n            transaction.oncomplete = () => {\r\n                this.currentBusyFilename = null;\r\n                resolve();\r\n            };\r\n\r\n            transaction.onerror = error => {\r\n                this.currentBusyFilename = null;\r\n                logger.error(\"Error while writing\", filename, \":\", error);\r\n                reject(error);\r\n            };\r\n\r\n            const store = transaction.objectStore(\"files\");\r\n            store.put({\r\n                filename,\r\n                contents,\r\n            });\r\n        });\r\n    }\r\n\r\n    writeFileSyncIfSupported(filename, contents) {\r\n        // Not supported\r\n        this.writeFileAsync(filename, contents);\r\n        return true;\r\n    }\r\n\r\n    readFileAsync(filename) {\r\n        if (!this.database) {\r\n            return Promise.reject(\"Storage not ready\");\r\n        }\r\n\r\n        this.currentBusyFilename = filename;\r\n        const transaction = this.database.transaction([\"files\"], \"readonly\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const store = transaction.objectStore(\"files\");\r\n            const request = store.get(filename);\r\n\r\n            request.onsuccess = event => {\r\n                this.currentBusyFilename = null;\r\n                if (!request.result) {\r\n                    reject(FILE_NOT_FOUND);\r\n                    return;\r\n                }\r\n                resolve(request.result.contents);\r\n            };\r\n\r\n            request.onerror = error => {\r\n                this.currentBusyFilename = null;\r\n                logger.error(\"Error while reading\", filename, \":\", error);\r\n                reject(error);\r\n            };\r\n        });\r\n    }\r\n\r\n    deleteFileAsync(filename) {\r\n        if (this.currentBusyFilename === filename) {\r\n            logger.warn(\"Attempt to delete\", filename, \"while write progres on it is ongoing!\");\r\n        }\r\n\r\n        if (!this.database) {\r\n            return Promise.reject(\"Storage not ready\");\r\n        }\r\n\r\n        this.currentBusyFilename = filename;\r\n        const transaction = this.database.transaction([\"files\"], \"readwrite\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n            transaction.oncomplete = () => {\r\n                this.currentBusyFilename = null;\r\n                resolve();\r\n            };\r\n\r\n            transaction.onerror = error => {\r\n                this.currentBusyFilename = null;\r\n                logger.error(\"Error while deleting\", filename, \":\", error);\r\n                reject(error);\r\n            };\r\n\r\n            const store = transaction.objectStore(\"files\");\r\n            store.delete(filename);\r\n        });\r\n    }\r\n}\r\n","import { globalConfig, IS_DEMO, IS_MOBILE } from \"../../core/config\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { queryParamOptions } from \"../../core/query_parameters\";\r\nimport { clamp } from \"../../core/utils\";\r\nimport { GamedistributionAdProvider } from \"../ad_providers/gamedistribution\";\r\nimport { NoAdProvider } from \"../ad_providers/no_ad_provider\";\r\nimport { PlatformWrapperInterface } from \"../wrapper\";\r\nimport { StorageImplBrowser } from \"./storage\";\r\nimport { StorageImplBrowserIndexedDB } from \"./storage_indexed_db\";\r\n\r\nconst logger = createLogger(\"platform/browser\");\r\n\r\nexport class PlatformWrapperImplBrowser extends PlatformWrapperInterface {\r\n    initialize() {\r\n        this.recaptchaTokenCallback = null;\r\n\r\n        this.embedProvider = {\r\n            id: \"shapezio-website\",\r\n            adProvider: NoAdProvider,\r\n            iframed: false,\r\n            externalLinks: true,\r\n            iogLink: true,\r\n            unlimitedSavegames: IS_DEMO ? false : true,\r\n            showDemoBadge: IS_DEMO,\r\n        };\r\n\r\n        if (!G_IS_STANDALONE && queryParamOptions.embedProvider) {\r\n            const providerId = queryParamOptions.embedProvider;\r\n            this.embedProvider.iframed = true;\r\n            this.embedProvider.iogLink = false;\r\n\r\n            switch (providerId) {\r\n                case \"armorgames\": {\r\n                    this.embedProvider.id = \"armorgames\";\r\n                    break;\r\n                }\r\n\r\n                case \"iogames.space\": {\r\n                    this.embedProvider.id = \"iogames.space\";\r\n                    this.embedProvider.iogLink = true;\r\n                    this.embedProvider.unlimitedSavegames = true;\r\n                    this.embedProvider.showDemoBadge = false;\r\n                    break;\r\n                }\r\n\r\n                case \"miniclip\": {\r\n                    this.embedProvider.id = \"miniclip\";\r\n                    break;\r\n                }\r\n\r\n                case \"gamedistribution\": {\r\n                    this.embedProvider.id = \"gamedistribution\";\r\n                    this.embedProvider.externalLinks = false;\r\n                    this.embedProvider.adProvider = GamedistributionAdProvider;\r\n                    break;\r\n                }\r\n\r\n                case \"kongregate\": {\r\n                    this.embedProvider.id = \"kongregate\";\r\n                    break;\r\n                }\r\n\r\n                case \"crazygames\": {\r\n                    this.embedProvider.id = \"crazygames\";\r\n                    break;\r\n                }\r\n\r\n                default: {\r\n                    logger.error(\"Got unsupported embed provider:\", providerId);\r\n                }\r\n            }\r\n        }\r\n\r\n        logger.log(\"Embed provider:\", this.embedProvider.id);\r\n\r\n        return this.detectStorageImplementation()\r\n            .then(() => this.initializeAdProvider())\r\n            .then(() => super.initialize());\r\n    }\r\n\r\n    detectStorageImplementation() {\r\n        return new Promise(resolve => {\r\n            logger.log(\"Detecting storage\");\r\n\r\n            if (!window.indexedDB || G_IS_DEV) {\r\n                logger.log(\"Indexed DB not supported\");\r\n                this.app.storage = new StorageImplBrowser(this.app);\r\n                resolve();\r\n                return;\r\n            }\r\n\r\n            // Try accessing the indexedb\r\n            let request;\r\n            try {\r\n                request = window.indexedDB.open(\"indexeddb_feature_detection\", 1);\r\n            } catch (ex) {\r\n                logger.warn(\"Error while opening indexed db:\", ex);\r\n                this.app.storage = new StorageImplBrowser(this.app);\r\n                resolve();\r\n                return;\r\n            }\r\n            request.onerror = err => {\r\n                logger.log(\"Indexed DB can *not* be accessed: \", err);\r\n                logger.log(\"Using fallback to local storage\");\r\n                this.app.storage = new StorageImplBrowser(this.app);\r\n                resolve();\r\n            };\r\n            request.onsuccess = () => {\r\n                logger.log(\"Indexed DB *can* be accessed\");\r\n                this.app.storage = new StorageImplBrowserIndexedDB(this.app);\r\n                resolve();\r\n            };\r\n        });\r\n    }\r\n\r\n    getHasUnlimitedSavegames() {\r\n        return this.embedProvider.unlimitedSavegames;\r\n    }\r\n\r\n    getShowDemoBadges() {\r\n        return this.embedProvider.showDemoBadge;\r\n    }\r\n\r\n    getId() {\r\n        return \"browser@\" + this.embedProvider.id;\r\n    }\r\n\r\n    getUiScale() {\r\n        if (IS_MOBILE) {\r\n            return 1;\r\n        }\r\n\r\n        const avgDims = Math.min(this.app.screenWidth, this.app.screenHeight);\r\n        return clamp((avgDims / 1000.0) * 1.9, 0.1, 10);\r\n    }\r\n\r\n    getSupportsRestart() {\r\n        return true;\r\n    }\r\n\r\n    getTouchPanStrength() {\r\n        return IS_MOBILE ? 1 : 0.5;\r\n    }\r\n\r\n    openExternalLink(url, force = false) {\r\n        logger.log(\"Opening external:\", url);\r\n        if (force || this.embedProvider.externalLinks) {\r\n            window.open(url);\r\n        } else {\r\n            // Do nothing\r\n            alert(\r\n                \"This platform does not allow opening external links. You can play on https://shapez.io directly to open them.\\n\\nClicked Link: \" +\r\n                    url\r\n            );\r\n        }\r\n    }\r\n\r\n    performRestart() {\r\n        logger.log(\"Performing restart\");\r\n        window.location.reload(true);\r\n    }\r\n\r\n    /**\r\n     * Detects if there is an adblocker installed\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    detectAdblock() {\r\n        return Promise.race([\r\n            new Promise(resolve => {\r\n                // If the request wasn't blocked within a very short period of time, this means\r\n                // the adblocker is not active and the request was actually made -> ignore it then\r\n                setTimeout(() => resolve(false), 30);\r\n            }),\r\n            new Promise(resolve => {\r\n                fetch(\"https://googleads.g.doubleclick.net/pagead/id\", {\r\n                    method: \"HEAD\",\r\n                    mode: \"no-cors\",\r\n                })\r\n                    .then(res => {\r\n                        resolve(false);\r\n                    })\r\n                    .catch(err => {\r\n                        resolve(true);\r\n                    });\r\n            }),\r\n        ]);\r\n    }\r\n\r\n    initializeAdProvider() {\r\n        if (G_IS_DEV && !globalConfig.debug.testAds) {\r\n            logger.log(\"Ads disabled in local environment\");\r\n            return Promise.resolve();\r\n        }\r\n\r\n        // First, detect adblocker\r\n        return this.detectAdblock().then(hasAdblocker => {\r\n            if (hasAdblocker) {\r\n                logger.log(\"Adblock detected\");\r\n                return;\r\n            }\r\n\r\n            const adProvider = this.embedProvider.adProvider;\r\n            this.app.adProvider = new adProvider(this.app);\r\n            return this.app.adProvider.initialize().catch(err => {\r\n                logger.error(\"Failed to initialize ad provider, disabling ads:\", err);\r\n                this.app.adProvider = new NoAdProvider(this.app);\r\n            });\r\n        });\r\n    }\r\n\r\n    exitApp() {\r\n        // Can not exit app\r\n    }\r\n}\r\n","import { StorageInterface } from \"../storage\";\r\nimport { getIPCRenderer } from \"../../core/utils\";\r\nimport { createLogger } from \"../../core/logging\";\r\n\r\nconst logger = createLogger(\"electron-storage\");\r\n\r\nexport class StorageImplElectron extends StorageInterface {\r\n    constructor(app) {\r\n        super(app);\r\n\r\n        /** @type {Object.<number, {resolve:Function, reject: Function}>} */\r\n        this.jobs = {};\r\n        this.jobId = 0;\r\n\r\n        getIPCRenderer().on(\"fs-response\", (event, arg) => {\r\n            const id = arg.id;\r\n            if (!this.jobs[id]) {\r\n                logger.warn(\"Got unhandled FS response, job not known:\", id);\r\n                return;\r\n            }\r\n            const { resolve, reject } = this.jobs[id];\r\n            if (arg.result.success) {\r\n                resolve(arg.result.data);\r\n            } else {\r\n                reject(arg.result.error);\r\n            }\r\n        });\r\n    }\r\n\r\n    initialize() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    writeFileAsync(filename, contents) {\r\n        return new Promise((resolve, reject) => {\r\n            // ipcMain\r\n            const jobId = ++this.jobId;\r\n            this.jobs[jobId] = { resolve, reject };\r\n\r\n            getIPCRenderer().send(\"fs-job\", {\r\n                type: \"write\",\r\n                filename,\r\n                contents,\r\n                id: jobId,\r\n            });\r\n        });\r\n    }\r\n\r\n    writeFileSyncIfSupported(filename, contents) {\r\n        return getIPCRenderer().sendSync(\"fs-sync-job\", {\r\n            type: \"write\",\r\n            filename,\r\n            contents,\r\n        });\r\n    }\r\n\r\n    readFileAsync(filename) {\r\n        return new Promise((resolve, reject) => {\r\n            // ipcMain\r\n            const jobId = ++this.jobId;\r\n            this.jobs[jobId] = { resolve, reject };\r\n\r\n            getIPCRenderer().send(\"fs-job\", {\r\n                type: \"read\",\r\n                filename,\r\n                id: jobId,\r\n            });\r\n        });\r\n    }\r\n\r\n    deleteFileAsync(filename) {\r\n        return new Promise((resolve, reject) => {\r\n            // ipcMain\r\n            const jobId = ++this.jobId;\r\n            this.jobs[jobId] = { resolve, reject };\r\n            getIPCRenderer().send(\"fs-job\", {\r\n                type: \"delete\",\r\n                filename,\r\n                id: jobId,\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { PlatformWrapperImplBrowser } from \"../browser/wrapper\";\r\nimport { getIPCRenderer } from \"../../core/utils\";\r\nimport { createLogger } from \"../../core/logging\";\r\nimport { StorageImplElectron } from \"./storage\";\r\nimport { PlatformWrapperInterface } from \"../wrapper\";\r\n\r\nconst logger = createLogger(\"electron-wrapper\");\r\n\r\nexport class PlatformWrapperImplElectron extends PlatformWrapperImplBrowser {\r\n    initialize() {\r\n        this.app.storage = new StorageImplElectron(this);\r\n        return PlatformWrapperInterface.prototype.initialize.call(this);\r\n    }\r\n\r\n    getId() {\r\n        return \"electron\";\r\n    }\r\n\r\n    getSupportsRestart() {\r\n        return true;\r\n    }\r\n\r\n    openExternalLink(url) {\r\n        logger.log(this, \"Opening external:\", url);\r\n        window.open(url, \"about:blank\");\r\n    }\r\n\r\n    getSupportsAds() {\r\n        return false;\r\n    }\r\n\r\n    getHasUnlimitedSavegames() {\r\n        return true;\r\n    }\r\n\r\n    getShowDemoBadges() {\r\n        return false;\r\n    }\r\n\r\n    performRestart() {\r\n        logger.log(this, \"Performing restart\");\r\n        window.location.reload(true);\r\n    }\r\n\r\n    initializeAdProvider() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    getSupportsFullscreen() {\r\n        return true;\r\n    }\r\n\r\n    setFullscreen(flag) {\r\n        getIPCRenderer().send(\"set-fullscreen\", flag);\r\n    }\r\n\r\n    getSupportsAppExit() {\r\n        return true;\r\n    }\r\n\r\n    exitApp() {\r\n        logger.log(this, \"Sending app exit signal\");\r\n        getIPCRenderer().send(\"exit-app\");\r\n    }\r\n}\r\n","\r\n\r\nexport class GameAnalyticsInterface {\r\n    constructor(app) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n    }\r\n\r\n    /**\r\n     * Initializes the analytics\r\n     * @returns {Promise<void>}\r\n     */\r\n    initialize() {\r\n        abstract;\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Handles a new game which was started\r\n     */\r\n    handleGameStarted() {}\r\n\r\n    /**\r\n     * Handles a resumed game\r\n     */\r\n    handleGameResumed() {}\r\n\r\n    /**\r\n     * Handles the given level completed\r\n     * @param {number} level\r\n     */\r\n    handleLevelCompleted(level) {}\r\n\r\n    /**\r\n     * Handles the given upgrade completed\r\n     * @param {string} id\r\n     * @param {number} level\r\n     */\r\n    handleUpgradeUnlocked(id, level) {}\r\n}\r\n","\r\n\r\nimport { newEmptyMap, clamp } from \"../core/utils\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { globalConfig } from \"../core/config\";\r\n\r\nconst logger = createLogger(\"sound\");\r\n\r\nexport const SOUNDS = {\r\n    // Menu and such\r\n    uiClick: \"ui_click\",\r\n    uiError: \"ui_error\",\r\n    dialogError: \"dialog_error\",\r\n    dialogOk: \"dialog_ok\",\r\n    swishHide: \"ui_swish_hide\",\r\n    swishShow: \"ui_swish_show\",\r\n    badgeNotification: \"badge_notification\",\r\n\r\n    levelComplete: \"level_complete\",\r\n\r\n    destroyBuilding: \"destroy_building\",\r\n    placeBuilding: \"place_building\",\r\n    placeBelt: \"place_belt\",\r\n};\r\n\r\nexport const MUSIC = {\r\n    theme: \"theme\",\r\n    menu: \"menu\",\r\n};\r\n\r\nexport class SoundInstanceInterface {\r\n    constructor(key, url) {\r\n        this.key = key;\r\n        this.url = url;\r\n    }\r\n\r\n    /** @returns {Promise<void>} */\r\n    load() {\r\n        abstract;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    play(volume) {\r\n        abstract;\r\n    }\r\n\r\n    deinitialize() {}\r\n}\r\n\r\nexport class MusicInstanceInterface {\r\n    constructor(key, url) {\r\n        this.key = key;\r\n        this.url = url;\r\n    }\r\n\r\n    stop() {\r\n        abstract;\r\n    }\r\n\r\n    play() {\r\n        abstract;\r\n    }\r\n\r\n    /** @returns {Promise<void>} */\r\n    load() {\r\n        abstract;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /** @returns {boolean} */\r\n    isPlaying() {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    deinitialize() {}\r\n}\r\n\r\nexport class SoundInterface {\r\n    constructor(app, soundClass, musicClass) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n\r\n        this.soundClass = soundClass;\r\n        this.musicClass = musicClass;\r\n\r\n        /** @type {Object<string, SoundInstanceInterface>} */\r\n        this.sounds = newEmptyMap();\r\n\r\n        /** @type {Object<string, MusicInstanceInterface>} */\r\n        this.music = newEmptyMap();\r\n\r\n        /** @type {MusicInstanceInterface} */\r\n        this.currentMusic = null;\r\n\r\n        this.pageIsVisible = true;\r\n\r\n        this.musicMuted = false;\r\n        this.soundsMuted = false;\r\n    }\r\n\r\n    /**\r\n     * Initializes the sound\r\n     * @returns {Promise<any>}\r\n     */\r\n    initialize() {\r\n        for (const soundKey in SOUNDS) {\r\n            const soundPath = SOUNDS[soundKey];\r\n            const sound = new this.soundClass(soundKey, soundPath);\r\n            this.sounds[soundPath] = sound;\r\n        }\r\n\r\n        for (const musicKey in MUSIC) {\r\n            const musicPath = MUSIC[musicKey];\r\n            const music = new this.musicClass(musicKey, musicPath);\r\n            this.music[musicPath] = music;\r\n        }\r\n\r\n        this.musicMuted = this.app.settings.getAllSettings().musicMuted;\r\n        this.soundsMuted = this.app.settings.getAllSettings().soundsMuted;\r\n\r\n        if (G_IS_DEV && globalConfig.debug.disableMusic) {\r\n            this.musicMuted = true;\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Pre-Loads the given sounds\r\n     * @param {string} key\r\n     * @returns {Promise<void>}\r\n     */\r\n    loadSound(key) {\r\n        if (this.sounds[key]) {\r\n            return this.sounds[key].load();\r\n        } else if (this.music[key]) {\r\n            return this.music[key].load();\r\n        } else {\r\n            logger.error(\"Sound/Music by key not found:\", key);\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    /** Deinits the sound\r\n     * @returns {Promise<void>}\r\n     */\r\n    deinitialize() {\r\n        const promises = [];\r\n        for (const key in this.sounds) {\r\n            promises.push(this.sounds[key].deinitialize());\r\n        }\r\n        for (const key in this.music) {\r\n            promises.push(this.music[key].deinitialize());\r\n        }\r\n        // @ts-ignore\r\n        return Promise.all(...promises);\r\n    }\r\n\r\n    /**\r\n     * Returns if the music is muted\r\n     * @returns {boolean}\r\n     */\r\n    getMusicMuted() {\r\n        return this.musicMuted;\r\n    }\r\n\r\n    /**\r\n     * Returns if sounds are muted\r\n     * @returns {boolean}\r\n     */\r\n    getSoundsMuted() {\r\n        return this.soundsMuted;\r\n    }\r\n\r\n    /**\r\n     * Sets if the music is muted\r\n     * @param {boolean} muted\r\n     */\r\n    setMusicMuted(muted) {\r\n        this.musicMuted = muted;\r\n        if (this.musicMuted) {\r\n            if (this.currentMusic) {\r\n                this.currentMusic.stop();\r\n            }\r\n        } else {\r\n            if (this.currentMusic) {\r\n                this.currentMusic.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets if the sounds are muted\r\n     * @param {boolean} muted\r\n     */\r\n    setSoundsMuted(muted) {\r\n        this.soundsMuted = muted;\r\n    }\r\n\r\n    /**\r\n     * Focus change handler, called by the pap\r\n     * @param {boolean} pageIsVisible\r\n     */\r\n    onPageRenderableStateChanged(pageIsVisible) {\r\n        this.pageIsVisible = pageIsVisible;\r\n        if (this.currentMusic) {\r\n            if (pageIsVisible) {\r\n                if (!this.currentMusic.isPlaying() && !this.musicMuted) {\r\n                    this.currentMusic.play();\r\n                }\r\n            } else {\r\n                this.currentMusic.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    playUiSound(key) {\r\n        if (this.soundsMuted) {\r\n            return;\r\n        }\r\n        if (!this.sounds[key]) {\r\n            logger.warn(\"Sound\", key, \"not found, probably not loaded yet\");\r\n            return;\r\n        }\r\n        this.sounds[key].play(1.0);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} key\r\n     * @param {Vector} worldPosition\r\n     * @param {GameRoot} root\r\n     */\r\n    play3DSound(key, worldPosition, root) {\r\n        if (!this.sounds[key]) {\r\n            logger.warn(\"Music\", key, \"not found, probably not loaded yet\");\r\n            return;\r\n        }\r\n        if (!this.pageIsVisible || this.soundsMuted) {\r\n            return;\r\n        }\r\n\r\n        // hack, but works\r\n        if (root.time.getIsPaused()) {\r\n            return;\r\n        }\r\n\r\n        let volume = 1.0;\r\n        if (!root.camera.isWorldPointOnScreen(worldPosition)) {\r\n            volume = 0.2;\r\n        }\r\n        volume *= clamp(root.camera.zoomLevel / 3);\r\n        this.sounds[key].play(clamp(volume));\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    playThemeMusic(key) {\r\n        const music = this.music[key];\r\n        if (key !== null && !music) {\r\n            logger.warn(\"Music\", key, \"not found\");\r\n        }\r\n        if (this.currentMusic !== music) {\r\n            if (this.currentMusic) {\r\n                logger.log(\"Stopping\", this.currentMusic.key);\r\n                this.currentMusic.stop();\r\n            }\r\n            this.currentMusic = music;\r\n            if (music && this.pageIsVisible && !this.musicMuted) {\r\n                logger.log(\"Starting\", this.currentMusic.key);\r\n                music.play();\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\n\r\nexport const FILE_NOT_FOUND = \"file_not_found\";\r\n\r\nexport class StorageInterface {\r\n    constructor(app) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n    }\r\n\r\n    /**\r\n     * Initializes the storage\r\n     * @returns {Promise<void>}\r\n     */\r\n    initialize() {\r\n        abstract;\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Writes a string to a file asynchronously\r\n     * @param {string} filename\r\n     * @param {string} contents\r\n     * @returns {Promise<void>}\r\n     */\r\n    writeFileAsync(filename, contents) {\r\n        abstract;\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Tries to write a file synchronously, used in unload handler\r\n     * @param {string} filename\r\n     * @param {string} contents\r\n     */\r\n    writeFileSyncIfSupported(filename, contents) {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Reads a string asynchronously. Returns Promise<FILE_NOT_FOUND> if file was not found.\r\n     * @param {string} filename\r\n     * @returns {Promise<string>}\r\n     */\r\n    readFileAsync(filename) {\r\n        abstract;\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Tries to delete a file\r\n     * @param {string} filename\r\n     * @returns {Promise<void>}\r\n     */\r\n    deleteFileAsync(filename) {\r\n        // Default implementation does not allow deleting files\r\n        return Promise.reject();\r\n    }\r\n}\r\n","\r\n\r\nimport { IS_MOBILE } from \"../core/config\";\r\n\r\nexport class PlatformWrapperInterface {\r\n    constructor(app) {\r\n        /** @type {Application} */\r\n        this.app = app;\r\n    }\r\n\r\n    /** @returns {string} */\r\n    getId() {\r\n        abstract;\r\n        return \"unknown-platform\";\r\n    }\r\n\r\n    /**\r\n     * Returns the UI scale, called on every resize\r\n     * @returns {number} */\r\n    getUiScale() {\r\n        return 1;\r\n    }\r\n\r\n    /** @returns {boolean} */\r\n    getSupportsRestart() {\r\n        abstract;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Whether the user has unlimited savegames\r\n     */\r\n    getHasUnlimitedSavegames() {\r\n        return true;\r\n    }\r\n\r\n    getShowDemoBadges() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns the strength of touch pans with the mouse\r\n     */\r\n    getTouchPanStrength() {\r\n        return 1;\r\n    }\r\n\r\n    /** @returns {Promise<void>} */\r\n    initialize() {\r\n        document.documentElement.classList.add(\"p-\" + this.getId());\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Should initialize the apps ad provider in case supported\r\n     *  @returns {Promise<void>}\r\n     */\r\n    initializeAdProvider() {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Should return the minimum supported zoom level\r\n     * @returns {number}\r\n     */\r\n    getMinimumZoom() {\r\n        return 0.2 * this.getScreenScale();\r\n    }\r\n\r\n    /**\r\n     * Should return the maximum supported zoom level\r\n     * @returns {number}\r\n     */\r\n    getMaximumZoom() {\r\n        return 4 * this.getScreenScale();\r\n    }\r\n\r\n    getScreenScale() {\r\n        return Math.min(window.innerWidth, window.innerHeight) / 1024.0;\r\n    }\r\n\r\n    /**\r\n     * Should return if this platform supports ads at all\r\n     */\r\n    getSupportsAds() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Attempt to open an external url\r\n     * @param {string} url\r\n     * @param {boolean=} force Whether to always open the url even if not allowed\r\n     */\r\n    openExternalLink(url, force = false) {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Attempt to restart the app\r\n     */\r\n    performRestart() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this platform supports a toggleable fullscreen\r\n     */\r\n    getSupportsFullscreen() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Should set the apps fullscreen state to the desired state\r\n     * @param {boolean} flag\r\n     */\r\n    setFullscreen(flag) {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Returns whether this platform supports quitting the app\r\n     */\r\n    getSupportsAppExit() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Attempts to quit the app\r\n     */\r\n    exitApp() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Whether this platform supports a keyboard\r\n     */\r\n    getSupportsKeyboard() {\r\n        return !IS_MOBILE;\r\n    }\r\n}\r\n","\r\n\r\nimport { ReadWriteProxy } from \"../core/read_write_proxy\";\r\nimport { BoolSetting, EnumSetting, BaseSetting } from \"./setting_types\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { ExplainedResult } from \"../core/explained_result\";\r\nimport { THEMES, THEME, applyGameTheme } from \"../game/theme\";\r\nimport { IS_DEMO } from \"../core/config\";\r\nimport { T } from \"../translations\";\r\nimport { LANGUAGES } from \"../languages\";\r\nimport { globalConfig, IS_DEBUG } from \"../core/config\";\r\n\r\nconst logger = createLogger(\"application_settings\");\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const enumCategories = {\r\n    general: \"general\",\r\n    userInterface: \"userInterface\",\r\n    advanced: \"advanced\",\r\n    debug: \"debug\",\r\n};\r\n\r\nexport const uiScales = [\r\n    {\r\n        id: \"super_small\",\r\n        size: 0.6,\r\n    },\r\n    {\r\n        id: \"small\",\r\n        size: 0.8,\r\n    },\r\n    {\r\n        id: \"regular\",\r\n        size: 1,\r\n    },\r\n    {\r\n        id: \"large\",\r\n        size: 1.05,\r\n    },\r\n    {\r\n        id: \"huge\",\r\n        size: 1.1,\r\n    },\r\n];\r\n\r\nexport const scrollWheelSensitivities = [\r\n    {\r\n        id: \"super_slow\",\r\n        scale: 0.25,\r\n    },\r\n    {\r\n        id: \"slow\",\r\n        scale: 0.5,\r\n    },\r\n    {\r\n        id: \"regular\",\r\n        scale: 1,\r\n    },\r\n    {\r\n        id: \"fast\",\r\n        scale: 2,\r\n    },\r\n    {\r\n        id: \"super_fast\",\r\n        scale: 4,\r\n    },\r\n];\r\n\r\nexport const movementSpeeds = [\r\n    {\r\n        id: \"super_slow\",\r\n        multiplier: 0.25,\r\n    },\r\n    {\r\n        id: \"slow\",\r\n        multiplier: 0.5,\r\n    },\r\n    {\r\n        id: \"regular\",\r\n        multiplier: 1,\r\n    },\r\n    {\r\n        id: \"fast\",\r\n        multiplier: 2,\r\n    },\r\n    {\r\n        id: \"super_fast\",\r\n        multiplier: 4,\r\n    },\r\n    {\r\n        id: \"extremely_fast\",\r\n        multiplier: 8,\r\n    },\r\n];\r\n\r\nexport const autosaveIntervals = [\r\n    {\r\n        id: \"one_minute\",\r\n        seconds: 60,\r\n    },\r\n    {\r\n        id: \"two_minutes\",\r\n        seconds: 120,\r\n    },\r\n    {\r\n        id: \"five_minutes\",\r\n        seconds: 5 * 60,\r\n    },\r\n    {\r\n        id: \"ten_minutes\",\r\n        seconds: 10 * 60,\r\n    },\r\n    {\r\n        id: \"twenty_minutes\",\r\n        seconds: 20 * 60,\r\n    },\r\n    {\r\n        id: \"disabled\",\r\n        seconds: null,\r\n    },\r\n];\r\n\r\n/** @type {Array<BaseSetting>} */\r\nexport const allApplicationSettings = [\r\n    new EnumSetting(\"language\", {\r\n        options: Object.keys(LANGUAGES),\r\n        valueGetter: key => key,\r\n        textGetter: key => LANGUAGES[key].name,\r\n        category: enumCategories.general,\r\n        restartRequired: true,\r\n        changeCb: (app, id) => null,\r\n        magicValue: \"auto-detect\",\r\n    }),\r\n\r\n    new EnumSetting(\"uiScale\", {\r\n        options: uiScales.sort((a, b) => a.size - b.size),\r\n        valueGetter: scale => scale.id,\r\n        textGetter: scale => T.settings.labels.uiScale.scales[scale.id],\r\n        category: enumCategories.userInterface,\r\n        restartRequired: false,\r\n        changeCb:\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n            (app, id) => app.updateAfterUiScaleChanged(),\r\n    }),\r\n\r\n    new BoolSetting(\r\n        \"fullscreen\",\r\n        enumCategories.general,\r\n        /**\r\n         * @param {Application} app\r\n         */\r\n        (app, value) => {\r\n            if (app.platformWrapper.getSupportsFullscreen()) {\r\n                app.platformWrapper.setFullscreen(value);\r\n            }\r\n        },\r\n        !IS_DEMO\r\n    ),\r\n\r\n    new BoolSetting(\r\n        \"soundsMuted\",\r\n        enumCategories.general,\r\n        /**\r\n         * @param {Application} app\r\n         */\r\n        (app, value) => app.sound.setSoundsMuted(value)\r\n    ),\r\n    new BoolSetting(\r\n        \"musicMuted\",\r\n        enumCategories.general,\r\n        /**\r\n         * @param {Application} app\r\n         */\r\n        (app, value) => app.sound.setMusicMuted(value)\r\n    ),\r\n\r\n    new BoolSetting(\r\n        \"enableColorBlindHelper\",\r\n        enumCategories.general,\r\n        /**\r\n         * @param {Application} app\r\n         */\r\n        (app, value) => null\r\n    ),\r\n\r\n    // GAME\r\n    new BoolSetting(\"offerHints\", enumCategories.userInterface, (app, value) => {}),\r\n\r\n    new EnumSetting(\"theme\", {\r\n        options: Object.keys(THEMES),\r\n        valueGetter: theme => theme,\r\n        textGetter: theme => T.settings.labels.theme.themes[theme],\r\n        category: enumCategories.userInterface,\r\n        restartRequired: false,\r\n        changeCb:\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n            (app, id) => {\r\n                applyGameTheme(id);\r\n                document.documentElement.setAttribute(\"data-theme\", id);\r\n            },\r\n        enabled: !IS_DEMO,\r\n    }),\r\n\r\n    new EnumSetting(\"autosaveInterval\", {\r\n        options: autosaveIntervals,\r\n        valueGetter: interval => interval.id,\r\n        textGetter: interval => T.settings.labels.autosaveInterval.intervals[interval.id],\r\n        category: enumCategories.advanced,\r\n        restartRequired: false,\r\n        changeCb:\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n            (app, id) => null,\r\n    }),\r\n\r\n    new EnumSetting(\"refreshRate\", {\r\n        options: [\"60\", \"100\", \"120\", \"144\", \"165\", \"250\", G_IS_DEV ? \"10\" : \"500\"],\r\n        valueGetter: rate => rate,\r\n        textGetter: rate => rate + \" Hz\",\r\n        category: enumCategories.advanced,\r\n        restartRequired: false,\r\n        changeCb: (app, id) => {},\r\n        enabled: !IS_DEMO,\r\n    }),\r\n\r\n    new EnumSetting(\"scrollWheelSensitivity\", {\r\n        options: scrollWheelSensitivities.sort((a, b) => a.scale - b.scale),\r\n        valueGetter: scale => scale.id,\r\n        textGetter: scale => T.settings.labels.scrollWheelSensitivity.sensitivity[scale.id],\r\n        category: enumCategories.advanced,\r\n        restartRequired: false,\r\n        changeCb:\r\n            /**\r\n             * @param {Application} app\r\n             */\r\n            (app, id) => app.updateAfterUiScaleChanged(),\r\n    }),\r\n\r\n    new EnumSetting(\"movementSpeed\", {\r\n        options: movementSpeeds.sort((a, b) => a.multiplier - b.multiplier),\r\n        valueGetter: multiplier => multiplier.id,\r\n        textGetter: multiplier => T.settings.labels.movementSpeed.speeds[multiplier.id],\r\n        category: enumCategories.advanced,\r\n        restartRequired: false,\r\n        changeCb: (app, id) => {},\r\n    }),\r\n\r\n    new BoolSetting(\"alwaysMultiplace\", enumCategories.advanced, (app, value) => {}),\r\n    new BoolSetting(\"enableTunnelSmartplace\", enumCategories.advanced, (app, value) => {}),\r\n    new BoolSetting(\"vignette\", enumCategories.userInterface, (app, value) => {}),\r\n    new BoolSetting(\"compactBuildingInfo\", enumCategories.userInterface, (app, value) => {}),\r\n    new BoolSetting(\"disableCutDeleteWarnings\", enumCategories.advanced, (app, value) => {}),\r\n    new BoolSetting(\"rotationByBuilding\", enumCategories.advanced, (app, value) => {}),\r\n];\r\n\r\nif (IS_DEBUG) {\r\n    for (let k in globalConfig.debug) {\r\n        if (k.startsWith('_')) continue;\r\n        const setting = new BoolSetting(`debug_${ k }`, enumCategories.debug, (app, value) => {\r\n            globalConfig.debug[k] = value;\r\n        });\r\n        setting.validate = () => true;\r\n        T.settings.labels[`debug_${ k }`] = {\r\n            title: k.replace(/(?!^)([A-Z])/g, \" $1\"),\r\n            description: globalConfig.debug[`_${ k }`],\r\n        };\r\n        allApplicationSettings.push(setting);\r\n    }\r\n}\r\n\r\nexport function getApplicationSettingById(id) {\r\n    return allApplicationSettings.find(setting => setting.id === id);\r\n}\r\n\r\nclass SettingsStorage {\r\n    constructor() {\r\n        this.uiScale = \"regular\";\r\n        this.fullscreen = G_IS_STANDALONE;\r\n\r\n        this.soundsMuted = false;\r\n        this.musicMuted = false;\r\n        this.theme = \"light\";\r\n        this.refreshRate = \"60\";\r\n        this.scrollWheelSensitivity = \"regular\";\r\n        this.movementSpeed = \"regular\";\r\n        this.language = \"auto-detect\";\r\n        this.autosaveInterval = \"two_minutes\";\r\n\r\n        this.alwaysMultiplace = false;\r\n        this.offerHints = true;\r\n        this.enableTunnelSmartplace = true;\r\n        this.vignette = true;\r\n        this.compactBuildingInfo = false;\r\n        this.disableCutDeleteWarnings = false;\r\n        this.rotationByBuilding = true;\r\n\r\n        this.enableColorBlindHelper = false;\r\n\r\n        /**\r\n         * @type {Object.<string, number>}\r\n         */\r\n        this.keybindingOverrides = {};\r\n    }\r\n}\r\n\r\nexport class ApplicationSettings extends ReadWriteProxy {\r\n    constructor(app) {\r\n        super(app, \"app_settings.bin\");\r\n    }\r\n\r\n    initialize() {\r\n        // Read and directly write latest data back\r\n        return this.readAsync()\r\n            .then(() => {\r\n                // Apply default setting callbacks\r\n                const settings = this.getAllSettings();\r\n                for (let i = 0; i < allApplicationSettings.length; ++i) {\r\n                    const handle = allApplicationSettings[i];\r\n                    handle.apply(this.app, settings[handle.id]);\r\n                }\r\n            })\r\n\r\n            .then(() => this.writeAsync());\r\n    }\r\n\r\n    save() {\r\n        return this.writeAsync();\r\n    }\r\n\r\n    // Getters\r\n\r\n    /**\r\n     * @returns {SettingsStorage}\r\n     */\r\n    getAllSettings() {\r\n        return this.getCurrentData().settings;\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    getSetting(key) {\r\n        if (!key.startsWith('debug_')) {\r\n            assert(this.getAllSettings().hasOwnProperty(key), \"Setting not known: \" + key);\r\n        }\r\n        return this.getAllSettings()[key];\r\n    }\r\n\r\n    getInterfaceScaleId() {\r\n        if (!this.currentData) {\r\n            // Not initialized yet\r\n            return \"regular\";\r\n        }\r\n        return this.getAllSettings().uiScale;\r\n    }\r\n\r\n    getDesiredFps() {\r\n        return parseInt(this.getAllSettings().refreshRate);\r\n    }\r\n\r\n    getInterfaceScaleValue() {\r\n        const id = this.getInterfaceScaleId();\r\n        for (let i = 0; i < uiScales.length; ++i) {\r\n            if (uiScales[i].id === id) {\r\n                return uiScales[i].size;\r\n            }\r\n        }\r\n        logger.error(\"Unknown ui scale id:\", id);\r\n        return 1;\r\n    }\r\n\r\n    getScrollWheelSensitivity() {\r\n        const id = this.getAllSettings().scrollWheelSensitivity;\r\n        for (let i = 0; i < scrollWheelSensitivities.length; ++i) {\r\n            if (scrollWheelSensitivities[i].id === id) {\r\n                return scrollWheelSensitivities[i].scale;\r\n            }\r\n        }\r\n        logger.error(\"Unknown scroll wheel sensitivity id:\", id);\r\n        return 1;\r\n    }\r\n\r\n    getMovementSpeed() {\r\n        const id = this.getAllSettings().movementSpeed;\r\n        for (let i = 0; i < movementSpeeds.length; ++i) {\r\n            if (movementSpeeds[i].id === id) {\r\n                return movementSpeeds[i].multiplier;\r\n            }\r\n        }\r\n        logger.error(\"Unknown movement speed id:\", id);\r\n        return 1;\r\n    }\r\n\r\n    getAutosaveIntervalSeconds() {\r\n        const id = this.getAllSettings().autosaveInterval;\r\n        for (let i = 0; i < autosaveIntervals.length; ++i) {\r\n            if (autosaveIntervals[i].id === id) {\r\n                return autosaveIntervals[i].seconds;\r\n            }\r\n        }\r\n        logger.error(\"Unknown autosave interval id:\", id);\r\n        return 120;\r\n    }\r\n\r\n    getIsFullScreen() {\r\n        return this.getAllSettings().fullscreen;\r\n    }\r\n\r\n    getKeybindingOverrides() {\r\n        return this.getAllSettings().keybindingOverrides;\r\n    }\r\n\r\n    getLanguage() {\r\n        return this.getAllSettings().language;\r\n    }\r\n\r\n    // Setters\r\n\r\n    updateLanguage(id) {\r\n        assert(LANGUAGES[id], \"Language not known: \" + id);\r\n        return this.updateSetting(\"language\", id);\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @param {string|boolean} value\r\n     */\r\n    updateSetting(key, value) {\r\n        for (let i = 0; i < allApplicationSettings.length; ++i) {\r\n            const setting = allApplicationSettings[i];\r\n            if (setting.id === key) {\r\n                if (!setting.validate(value)) {\r\n                    assertAlways(false, \"Bad setting value: \" + key);\r\n                }\r\n                this.getAllSettings()[key] = value;\r\n                if (setting.changeCb) {\r\n                    setting.changeCb(this.app, value);\r\n                }\r\n                return this.writeAsync();\r\n            }\r\n        }\r\n        assertAlways(false, \"Unknown setting: \" + key);\r\n    }\r\n\r\n    /**\r\n     * Sets a new keybinding override\r\n     * @param {string} keybindingId\r\n     * @param {number} keyCode\r\n     */\r\n    updateKeybindingOverride(keybindingId, keyCode) {\r\n        assert(Number.isInteger(keyCode), \"Not a valid key code: \" + keyCode);\r\n        this.getAllSettings().keybindingOverrides[keybindingId] = keyCode;\r\n        return this.writeAsync();\r\n    }\r\n\r\n    /**\r\n     * Resets a given keybinding override\r\n     * @param {string} id\r\n     */\r\n    resetKeybindingOverride(id) {\r\n        delete this.getAllSettings().keybindingOverrides[id];\r\n        return this.writeAsync();\r\n    }\r\n    /**\r\n     * Resets all keybinding overrides\r\n     */\r\n    resetKeybindingOverrides() {\r\n        this.getAllSettings().keybindingOverrides = {};\r\n        return this.writeAsync();\r\n    }\r\n\r\n    // RW Proxy impl\r\n    verify(data) {\r\n        if (!data.settings) {\r\n            return ExplainedResult.bad(\"missing key 'settings'\");\r\n        }\r\n        if (typeof data.settings !== \"object\") {\r\n            return ExplainedResult.bad(\"Bad settings object\");\r\n        }\r\n\r\n        const settings = data.settings;\r\n        for (let i = 0; i < allApplicationSettings.length; ++i) {\r\n            const setting = allApplicationSettings[i];\r\n            const storedValue = settings[setting.id];\r\n            if (!setting.validate(storedValue)) {\r\n                return ExplainedResult.bad(\"Bad setting value for \" + setting.id + \": \" + storedValue);\r\n            }\r\n        }\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    getDefaultData() {\r\n        return {\r\n            version: this.getCurrentVersion(),\r\n            settings: new SettingsStorage(),\r\n        };\r\n    }\r\n\r\n    getCurrentVersion() {\r\n        return 18;\r\n    }\r\n\r\n    /** @param {{settings: SettingsStorage, version: number}} data */\r\n    migrate(data) {\r\n        // Simply reset before\r\n        if (data.version < 5) {\r\n            data.settings = new SettingsStorage();\r\n            data.version = this.getCurrentVersion();\r\n            return ExplainedResult.good();\r\n        }\r\n\r\n        if (data.version < 6) {\r\n            data.settings.alwaysMultiplace = false;\r\n            data.version = 6;\r\n        }\r\n\r\n        if (data.version < 7) {\r\n            data.settings.offerHints = true;\r\n            data.version = 7;\r\n        }\r\n\r\n        if (data.version < 8) {\r\n            data.settings.scrollWheelSensitivity = \"regular\";\r\n            data.version = 8;\r\n        }\r\n\r\n        if (data.version < 9) {\r\n            data.settings.language = \"auto-detect\";\r\n            data.version = 9;\r\n        }\r\n\r\n        if (data.version < 10) {\r\n            data.settings.movementSpeed = \"regular\";\r\n            data.version = 10;\r\n        }\r\n\r\n        if (data.version < 11) {\r\n            data.settings.enableTunnelSmartplace = true;\r\n            data.version = 11;\r\n        }\r\n\r\n        if (data.version < 12) {\r\n            data.settings.vignette = true;\r\n            data.version = 12;\r\n        }\r\n\r\n        if (data.version < 13) {\r\n            data.settings.compactBuildingInfo = false;\r\n            data.version = 13;\r\n        }\r\n\r\n        if (data.version < 14) {\r\n            data.settings.disableCutDeleteWarnings = false;\r\n            data.version = 14;\r\n        }\r\n\r\n        if (data.version < 15) {\r\n            data.settings.autosaveInterval = \"two_minutes\";\r\n            data.version = 15;\r\n        }\r\n\r\n        if (data.version < 16) {\r\n            // RE-ENABLE this setting, it already existed\r\n            data.settings.enableTunnelSmartplace = true;\r\n            data.version = 16;\r\n        }\r\n\r\n        if (data.version < 17) {\r\n            data.settings.enableColorBlindHelper = false;\r\n            data.version = 17;\r\n        }\r\n\r\n        if (data.version < 18) {\r\n            data.settings.rotationByBuilding = true;\r\n            data.version = 18;\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n}\r\n","\r\n\r\nimport { createLogger } from \"../core/logging\";\r\nimport { T } from \"../translations\";\r\n\r\nconst logger = createLogger(\"setting_types\");\r\n\r\nexport class BaseSetting {\r\n    /**\r\n     *\r\n     * @param {string} id\r\n     * @param {string} categoryId\r\n     * @param {function(Application, any):void} changeCb\r\n     * @param {boolean} enabled\r\n     */\r\n    constructor(id, categoryId, changeCb, enabled) {\r\n        this.id = id;\r\n        this.categoryId = categoryId;\r\n        this.changeCb = changeCb;\r\n        this.enabled = enabled;\r\n\r\n        /** @type {Application} */\r\n        this.app = null;\r\n\r\n        this.element = null;\r\n        this.dialogs = null;\r\n    }\r\n\r\n    /**\r\n     * @param {Application} app\r\n     * @param {any} value\r\n     */\r\n    apply(app, value) {\r\n        if (this.changeCb) {\r\n            this.changeCb(app, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Application} app\r\n     * @param {HTMLElement} element\r\n     * @param {any} dialogs\r\n     */\r\n    bind(app, element, dialogs) {\r\n        this.app = app;\r\n        this.element = element;\r\n        this.dialogs = dialogs;\r\n    }\r\n\r\n    getHtml() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n\r\n    syncValueToElement() {\r\n        abstract;\r\n    }\r\n\r\n    modify() {\r\n        abstract;\r\n    }\r\n\r\n    showRestartRequiredDialog() {\r\n        const { restart } = this.dialogs.showInfo(\r\n            T.dialogs.restartRequired.title,\r\n            T.dialogs.restartRequired.text,\r\n            this.app.platformWrapper.getSupportsRestart() ? [\"later:grey\", \"restart:misc\"] : [\"ok:good\"]\r\n        );\r\n        if (restart) {\r\n            restart.add(() => this.app.platformWrapper.performRestart());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {any} value\r\n     * @returns {boolean}\r\n     */\r\n    validate(value) {\r\n        abstract;\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class EnumSetting extends BaseSetting {\r\n    constructor(\r\n        id,\r\n        {\r\n            options,\r\n            valueGetter,\r\n            textGetter,\r\n            descGetter = null,\r\n            category,\r\n            restartRequired = true,\r\n            iconPrefix = null,\r\n            changeCb = null,\r\n            magicValue = null,\r\n            enabled = true,\r\n        }\r\n    ) {\r\n        super(id, category, changeCb, enabled);\r\n\r\n        this.options = options;\r\n        this.valueGetter = valueGetter;\r\n        this.textGetter = textGetter;\r\n        this.descGetter = descGetter || (() => null);\r\n        this.restartRequired = restartRequired;\r\n        this.iconPrefix = iconPrefix;\r\n        this.magicValue = magicValue;\r\n    }\r\n\r\n    getHtml() {\r\n        return `\r\n            <div class=\"setting cardbox ${this.enabled ? \"enabled\" : \"disabled\"}\">\r\n                ${this.enabled ? \"\" : `<span class=\"standaloneOnlyHint\">${T.demo.settingNotAvailable}</span>`}\r\n                <div class=\"row\">\r\n                    <label>${T.settings.labels[this.id].title}</label>\r\n                    <div class=\"value enum\" data-setting=\"${this.id}\"></div>\r\n                </div>\r\n                <div class=\"desc\">\r\n                    ${T.settings.labels[this.id].description}\r\n                </div>\r\n            </div>`;\r\n    }\r\n\r\n    validate(value) {\r\n        if (value === this.magicValue) {\r\n            return true;\r\n        }\r\n\r\n        const availableValues = this.options.map(option => this.valueGetter(option));\r\n        if (availableValues.indexOf(value) < 0) {\r\n            logger.error(\r\n                \"Value '\" + value + \"' is not contained in available values:\",\r\n                availableValues,\r\n                \"of\",\r\n                this.id\r\n            );\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    syncValueToElement() {\r\n        const value = this.app.settings.getSetting(this.id);\r\n        let displayText = \"???\";\r\n        const matchedInstance = this.options.find(data => this.valueGetter(data) === value);\r\n        if (matchedInstance) {\r\n            displayText = this.textGetter(matchedInstance);\r\n        } else {\r\n            logger.warn(\"Setting value\", value, \"not found for\", this.id, \"!\");\r\n        }\r\n        this.element.innerText = displayText;\r\n    }\r\n\r\n    modify() {\r\n        const { optionSelected } = this.dialogs.showOptionChooser(T.settings.labels[this.id].title, {\r\n            active: this.app.settings.getSetting(this.id),\r\n            options: this.options.map(option => ({\r\n                value: this.valueGetter(option),\r\n                text: this.textGetter(option),\r\n                desc: this.descGetter(option),\r\n                iconPrefix: this.iconPrefix,\r\n            })),\r\n        });\r\n        optionSelected.add(value => {\r\n            this.app.settings.updateSetting(this.id, value);\r\n            this.syncValueToElement();\r\n\r\n            if (this.restartRequired) {\r\n                this.showRestartRequiredDialog();\r\n            }\r\n\r\n            if (this.changeCb) {\r\n                this.changeCb(this.app, value);\r\n            }\r\n        }, this);\r\n    }\r\n}\r\n\r\nexport class BoolSetting extends BaseSetting {\r\n    constructor(id, category, changeCb = null, enabled = true) {\r\n        super(id, category, changeCb, enabled);\r\n    }\r\n\r\n    getHtml() {\r\n        if (!T.settings.labels[this.id].description) {\r\n            let a = T;\r\n            let b = a;\r\n        }\r\n        return `\r\n        <div class=\"setting cardbox ${this.enabled ? \"enabled\" : \"disabled\"}\">\r\n            ${this.enabled ? \"\" : `<span class=\"standaloneOnlyHint\">${T.demo.settingNotAvailable}</span>`}\r\n\r\n            <div class=\"row\">\r\n                <label>${T.settings.labels[this.id].title}</label>\r\n                <div class=\"value checkbox checked\" data-setting=\"${this.id}\">\r\n                <span class=\"knob\"></span>\r\n                </div>\r\n            </div>\r\n            <div class=\"desc\">\r\n                ${T.settings.labels[this.id].description}\r\n            </div>\r\n        </div>`;\r\n    }\r\n\r\n    syncValueToElement() {\r\n        const value = this.app.settings.getSetting(this.id);\r\n        this.element.classList.toggle(\"checked\", value);\r\n    }\r\n\r\n    modify() {\r\n        const newValue = !this.app.settings.getSetting(this.id);\r\n        this.app.settings.updateSetting(this.id, newValue);\r\n        this.syncValueToElement();\r\n\r\n        if (this.changeCb) {\r\n            this.changeCb(this.app, newValue);\r\n        }\r\n    }\r\n\r\n    validate(value) {\r\n        return typeof value === \"boolean\";\r\n    }\r\n}\r\n","\r\n\r\nimport { ReadWriteProxy } from \"../core/read_write_proxy\";\r\nimport { ExplainedResult } from \"../core/explained_result\";\r\nimport { SavegameSerializer } from \"./savegame_serializer\";\r\nimport { BaseSavegameInterface } from \"./savegame_interface\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { getSavegameInterface, savegameInterfaces } from \"./savegame_interface_registry\";\r\nimport { SavegameInterface_V1001 } from \"./schemas/1001\";\r\nimport { SavegameInterface_V1002 } from \"./schemas/1002\";\r\nimport { SavegameInterface_V1003 } from \"./schemas/1003\";\r\nimport { SavegameInterface_V1004 } from \"./schemas/1004\";\r\nimport { SavegameInterface_V1005 } from \"./schemas/1005\";\r\n\r\nconst logger = createLogger(\"savegame\");\r\n\r\nexport class Savegame extends ReadWriteProxy {\r\n    /**\r\n     *\r\n     * @param {Application} app\r\n     * @param {object} param0\r\n     * @param {string} param0.internalId\r\n     * @param {import(\"./savegame_manager\").SavegameMetadata} param0.metaDataRef Handle to the meta data\r\n     */\r\n    constructor(app, { internalId, metaDataRef }) {\r\n        super(app, \"savegame-\" + internalId + \".bin\");\r\n        this.internalId = internalId;\r\n        this.metaDataRef = metaDataRef;\r\n\r\n        /** @type {import(\"./savegame_typedefs\").SavegameData} */\r\n        this.currentData = this.getDefaultData();\r\n\r\n        assert(\r\n            savegameInterfaces[Savegame.getCurrentVersion()],\r\n            \"Savegame interface not defined: \" + Savegame.getCurrentVersion()\r\n        );\r\n    }\r\n\r\n    //////// RW Proxy Impl //////////\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    static getCurrentVersion() {\r\n        return 1005;\r\n    }\r\n\r\n    /**\r\n     * @returns {typeof BaseSavegameInterface}\r\n     */\r\n    static getReaderClass() {\r\n        return savegameInterfaces[Savegame.getCurrentVersion()];\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    getCurrentVersion() {\r\n        return /** @type {typeof Savegame} */ (this.constructor).getCurrentVersion();\r\n    }\r\n\r\n    /**\r\n     * Returns the savegames default data\r\n     * @returns {import(\"./savegame_typedefs\").SavegameData}\r\n     */\r\n    getDefaultData() {\r\n        return {\r\n            version: this.getCurrentVersion(),\r\n            dump: null,\r\n            stats: {},\r\n            lastUpdate: Date.now(),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Migrates the savegames data\r\n     * @param {import(\"./savegame_typedefs\").SavegameData} data\r\n     */\r\n    migrate(data) {\r\n        if (data.version < 1000) {\r\n            return ExplainedResult.bad(\"Can not migrate savegame, too old\");\r\n        }\r\n\r\n        if (data.version === 1000) {\r\n            SavegameInterface_V1001.migrate1000to1001(data);\r\n            data.version = 1001;\r\n        }\r\n\r\n        if (data.version === 1001) {\r\n            SavegameInterface_V1002.migrate1001to1002(data);\r\n            data.version = 1002;\r\n        }\r\n\r\n        if (data.version === 1002) {\r\n            SavegameInterface_V1003.migrate1002to1003(data);\r\n            data.version = 1003;\r\n        }\r\n\r\n        if (data.version === 1003) {\r\n            SavegameInterface_V1004.migrate1003to1004(data);\r\n            data.version = 1004;\r\n        }\r\n\r\n        if (data.version === 1004) {\r\n            SavegameInterface_V1005.migrate1004to1005(data);\r\n            data.version = 1005;\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    /**\r\n     * Verifies the savegames data\r\n     * @param {import(\"./savegame_typedefs\").SavegameData} data\r\n     */\r\n    verify(data) {\r\n        if (!data.dump) {\r\n            // Well, guess that works\r\n            return ExplainedResult.good();\r\n        }\r\n\r\n        if (!this.getDumpReaderForExternalData(data).validate()) {\r\n            return ExplainedResult.bad(\"dump-reader-failed-validation\");\r\n        }\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    //////// Subclasses interface  ////////\r\n\r\n    /**\r\n     * Returns if this game can be saved on disc\r\n     * @returns {boolean}\r\n     */\r\n    isSaveable() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns the statistics of the savegame\r\n     * @returns {import(\"./savegame_typedefs\").SavegameStats}\r\n     */\r\n    getStatistics() {\r\n        return this.currentData.stats;\r\n    }\r\n\r\n    /**\r\n     * Returns the *real* last update of the savegame, not the one of the metadata\r\n     * which could also be the servers one\r\n     */\r\n    getRealLastUpdate() {\r\n        return this.currentData.lastUpdate;\r\n    }\r\n\r\n    /**\r\n     * Returns if this game has a serialized game dump\r\n     */\r\n    hasGameDump() {\r\n        return !!this.currentData.dump && this.currentData.dump.entities.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns the current game dump\r\n     * @returns {import(\"./savegame_typedefs\").SerializedGame}\r\n     */\r\n    getCurrentDump() {\r\n        return this.currentData.dump;\r\n    }\r\n\r\n    /**\r\n     * Returns a reader to access the data\r\n     * @returns {BaseSavegameInterface}\r\n     */\r\n    getDumpReader() {\r\n        if (!this.currentData.dump) {\r\n            logger.warn(\"Getting reader on null-savegame dump\");\r\n        }\r\n\r\n        const cls = /** @type {typeof Savegame} */ (this.constructor).getReaderClass();\r\n        return new cls(this.currentData);\r\n    }\r\n\r\n    /**\r\n     * Returns a reader to access external data\r\n     * @returns {BaseSavegameInterface}\r\n     */\r\n    getDumpReaderForExternalData(data) {\r\n        assert(data.version, \"External data contains no version\");\r\n        return getSavegameInterface(data);\r\n    }\r\n\r\n    ///////// Public Interface ///////////\r\n\r\n    /**\r\n     * Updates the last update field so we can send the savegame to the server,\r\n     * WITHOUT Saving!\r\n     */\r\n    setLastUpdate(time) {\r\n        this.currentData.lastUpdate = time;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     */\r\n    updateData(root) {\r\n        // Construct a new serializer\r\n        const serializer = new SavegameSerializer();\r\n\r\n        // let timer = performance.now();\r\n        const dump = serializer.generateDumpFromGameRoot(root);\r\n        if (!dump) {\r\n            return false;\r\n        }\r\n\r\n        const shadowData = Object.assign({}, this.currentData);\r\n        shadowData.dump = dump;\r\n        shadowData.lastUpdate = new Date().getTime();\r\n        shadowData.version = this.getCurrentVersion();\r\n\r\n        const reader = this.getDumpReaderForExternalData(shadowData);\r\n\r\n        // Validate (not in prod though)\r\n        if (!G_IS_RELEASE) {\r\n            const validationResult = reader.validate();\r\n            if (!validationResult) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Save data\r\n        this.currentData = shadowData;\r\n    }\r\n\r\n    /**\r\n     * Writes the savegame as well as its metadata\r\n     */\r\n    writeSavegameAndMetadata() {\r\n        return this.writeAsync().then(() => this.saveMetadata());\r\n    }\r\n\r\n    /**\r\n     * Updates the savegames metadata\r\n     */\r\n    saveMetadata() {\r\n        this.metaDataRef.lastUpdate = new Date().getTime();\r\n        this.metaDataRef.version = this.getCurrentVersion();\r\n        if (!this.hasGameDump()) {\r\n            this.metaDataRef.level = 0;\r\n        } else {\r\n            this.metaDataRef.level = this.currentData.dump.hubGoals.level;\r\n        }\r\n\r\n        return this.app.savegameMgr.writeAsync();\r\n    }\r\n\r\n    /**\r\n     * @see ReadWriteProxy.writeAsync\r\n     * @returns {Promise<any>}\r\n     */\r\n    writeAsync() {\r\n        if (G_IS_DEV && globalConfig.debug.disableSavegameWrite) {\r\n            return Promise.resolve();\r\n        }\r\n        return super.writeAsync();\r\n    }\r\n}\r\n","const charmap =\r\n    \"!#%&'()*+,-./:;<=>?@[]^_`{|}~¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\nlet compressionCache = {};\r\nlet decompressionCache = {};\r\n\r\n/**\r\n * Compresses an integer into a tight string representation\r\n * @param {number} i\r\n * @returns {string}\r\n */\r\nfunction compressInt(i) {\r\n    // Zero value breaks\r\n    i += 1;\r\n\r\n    if (compressionCache[i]) {\r\n        return compressionCache[i];\r\n    }\r\n    let result = \"\";\r\n    do {\r\n        result += charmap[i % charmap.length];\r\n        i = Math.floor(i / charmap.length);\r\n    } while (i > 0);\r\n    return (compressionCache[i] = result);\r\n}\r\n\r\n/**\r\n * Decompresses an integer from its tight string representation\r\n * @param {string} s\r\n * @returns {number}\r\n */\r\nfunction decompressInt(s) {\r\n    if (decompressionCache[s]) {\r\n        return decompressionCache[s];\r\n    }\r\n    s = \"\" + s;\r\n    let result = 0;\r\n    for (let i = s.length - 1; i >= 0; --i) {\r\n        result = result * charmap.length + charmap.indexOf(s.charAt(i));\r\n    }\r\n    // Fixes zero value break fix from above\r\n    result -= 1;\r\n    return (decompressionCache[s] = result);\r\n}\r\n\r\n// Sanity\r\nif (G_IS_DEV) {\r\n    for (let i = 0; i < 10000; ++i) {\r\n        if (decompressInt(compressInt(i)) !== i) {\r\n            throw new Error(\r\n                \"Bad compression for: \" +\r\n                    i +\r\n                    \" compressed: \" +\r\n                    compressInt(i) +\r\n                    \" decompressed: \" +\r\n                    decompressInt(compressInt(i))\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction compressObjectInternal(obj, keys = [], values = []) {\r\n    if (Array.isArray(obj)) {\r\n        let result = [];\r\n        for (let i = 0; i < obj.length; ++i) {\r\n            result.push(compressObjectInternal(obj[i], keys, values));\r\n        }\r\n        return result;\r\n    } else if (typeof obj === \"object\" && obj !== null) {\r\n        let result = {};\r\n        for (const key in obj) {\r\n            let index = keys.indexOf(key);\r\n            if (index < 0) {\r\n                keys.push(key);\r\n                index = keys.length - 1;\r\n            }\r\n            const value = obj[key];\r\n            result[compressInt(index)] = compressObjectInternal(value, keys, values);\r\n        }\r\n        return result;\r\n    } else if (typeof obj === \"string\") {\r\n        let index = values.indexOf(obj);\r\n        if (index < 0) {\r\n            values.push(obj);\r\n            index = values.length - 1;\r\n        }\r\n        return compressInt(index);\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport function compressObject(obj) {\r\n    if (G_IS_DEV) {\r\n        return obj;\r\n    }\r\n    const keys = [];\r\n    const values = [];\r\n    const data = compressObjectInternal(obj, keys, values);\r\n    return {\r\n        keys,\r\n        values,\r\n        data,\r\n    };\r\n}\r\n\r\nfunction decompressObjectInternal(obj, keys = [], values = []) {\r\n    if (Array.isArray(obj)) {\r\n        let result = [];\r\n        for (let i = 0; i < obj.length; ++i) {\r\n            result.push(decompressObjectInternal(obj[i], keys, values));\r\n        }\r\n        return result;\r\n    } else if (typeof obj === \"object\" && obj !== null) {\r\n        let result = {};\r\n        for (const key in obj) {\r\n            const realIndex = decompressInt(key);\r\n            const value = obj[key];\r\n            result[keys[realIndex]] = decompressObjectInternal(value, keys, values);\r\n        }\r\n        return result;\r\n    } else if (typeof obj === \"string\") {\r\n        const realIndex = decompressInt(obj);\r\n        return values[realIndex];\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport function decompressObject(obj) {\r\n    if (obj.keys && obj.values && obj.data) {\r\n        const keys = obj.keys;\r\n        const values = obj.values;\r\n        const result = decompressObjectInternal(obj.data, keys, values);\r\n        return result;\r\n    }\r\n    return obj;\r\n}\r\n","import { createLogger } from \"../core/logging\";\r\n\r\nconst Ajv = require(\"ajv\");\r\nconst ajv = new Ajv({\r\n    allErrors: false,\r\n    uniqueItems: false,\r\n    unicode: false,\r\n    nullable: false,\r\n});\r\n\r\nconst validators = {};\r\n\r\nconst logger = createLogger(\"savegame_interface\");\r\n\r\nexport class BaseSavegameInterface {\r\n    /**\r\n     * Returns the interfaces version\r\n     */\r\n    getVersion() {\r\n        throw new Error(\"Implement get version\");\r\n    }\r\n\r\n    /**\r\n     * Returns the uncached json schema\r\n     * @returns {object}\r\n     */\r\n    getSchemaUncached() {\r\n        throw new Error(\"Implement get schema\");\r\n    }\r\n\r\n    getValidator() {\r\n        const version = this.getVersion();\r\n        if (validators[version]) {\r\n            return validators[version];\r\n        }\r\n        logger.log(\"Compiling schema for savegame version\", version);\r\n        const schema = this.getSchemaUncached();\r\n        try {\r\n            validators[version] = ajv.compile(schema);\r\n        } catch (ex) {\r\n            logger.error(\"SCHEMA FOR\", this.getVersion(), \"IS INVALID!\");\r\n            logger.error(ex);\r\n            throw new Error(\"Invalid schema for version \" + version);\r\n        }\r\n        return validators[version];\r\n    }\r\n\r\n    /**\r\n     * Constructs an new interface for the given savegame\r\n     * @param {any} data\r\n     */\r\n    constructor(data) {\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * Validates the data\r\n     * @returns {boolean}\r\n     */\r\n    validate() {\r\n        const validator = this.getValidator();\r\n\r\n        if (!validator(this.data)) {\r\n            logger.error(\r\n                \"Savegame failed validation! ErrorText:\",\r\n                ajv.errorsText(validator.errors),\r\n                \"RawErrors:\",\r\n                validator.errors\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    ///// INTERFACE (Override when the schema changes) /////\r\n\r\n    /**\r\n     * Returns the time of last update\r\n     * @returns {number}\r\n     */\r\n    readLastUpdate() {\r\n        return this.data.lastUpdate;\r\n    }\r\n\r\n    /**\r\n     * Returns the ingame time in seconds\r\n     * @returns {number}\r\n     */\r\n    readIngameTimeSeconds() {\r\n        return this.data.dump.time.timeSeconds;\r\n    }\r\n}\r\n","import { BaseSavegameInterface } from \"./savegame_interface\";\r\nimport { SavegameInterface_V1000 } from \"./schemas/1000\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { SavegameInterface_V1001 } from \"./schemas/1001\";\r\nimport { SavegameInterface_V1002 } from \"./schemas/1002\";\r\nimport { SavegameInterface_V1003 } from \"./schemas/1003\";\r\nimport { SavegameInterface_V1004 } from \"./schemas/1004\";\r\nimport { SavegameInterface_V1005 } from \"./schemas/1005\";\r\n\r\n/** @type {Object.<number, typeof BaseSavegameInterface>} */\r\nexport const savegameInterfaces = {\r\n    1000: SavegameInterface_V1000,\r\n    1001: SavegameInterface_V1001,\r\n    1002: SavegameInterface_V1002,\r\n    1003: SavegameInterface_V1003,\r\n    1004: SavegameInterface_V1004,\r\n    1005: SavegameInterface_V1005,\r\n};\r\n\r\nconst logger = createLogger(\"savegame_interface_registry\");\r\n\r\n/**\r\n * Returns if the given savegame has any supported interface\r\n * @param {any} savegame\r\n * @returns {BaseSavegameInterface|null}\r\n */\r\nexport function getSavegameInterface(savegame) {\r\n    if (!savegame || !savegame.version) {\r\n        logger.warn(\"Savegame does not contain a valid version (undefined)\");\r\n        return null;\r\n    }\r\n    const version = savegame.version;\r\n    if (!Number.isInteger(version)) {\r\n        logger.warn(\"Savegame does not contain a valid version (non-integer):\", version);\r\n        return null;\r\n    }\r\n\r\n    const interfaceClass = savegameInterfaces[version];\r\n    if (!interfaceClass) {\r\n        logger.warn(\"Version\", version, \"has no implemented interface!\");\r\n        return null;\r\n    }\r\n\r\n    return new interfaceClass(savegame);\r\n}\r\n","import { ExplainedResult } from \"../core/explained_result\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { ReadWriteProxy } from \"../core/read_write_proxy\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { Savegame } from \"./savegame\";\r\nconst logger = createLogger(\"savegame_manager\");\r\n\r\nconst Rusha = require(\"rusha\");\r\n\r\n/** @enum {string} */\r\nexport const enumLocalSavegameStatus = {\r\n    offline: \"offline\",\r\n    synced: \"synced\",\r\n};\r\n\r\n/**\r\n * @typedef {{\r\n *   lastUpdate: number,\r\n *   version: number,\r\n *   internalId: string,\r\n *   level: number\r\n * }} SavegameMetadata\r\n *\r\n * @typedef {{\r\n *   version: number,\r\n *   savegames: Array<SavegameMetadata>\r\n * }} SavegamesData\r\n */\r\n\r\nexport class SavegameManager extends ReadWriteProxy {\r\n    constructor(app) {\r\n        super(app, \"savegames.bin\");\r\n\r\n        /** @type {SavegamesData} */\r\n        this.currentData = this.getDefaultData();\r\n    }\r\n\r\n    // RW Proxy Impl\r\n    /**\r\n     * @returns {SavegamesData}\r\n     */\r\n    getDefaultData() {\r\n        return {\r\n            version: this.getCurrentVersion(),\r\n            savegames: [],\r\n        };\r\n    }\r\n\r\n    getCurrentVersion() {\r\n        return 1001;\r\n    }\r\n\r\n    /**\r\n     * @returns {SavegamesData}\r\n     */\r\n    getCurrentData() {\r\n        return super.getCurrentData();\r\n    }\r\n\r\n    verify(data) {\r\n        // TODO / FIXME!!!!\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {SavegamesData} data\r\n     */\r\n    migrate(data) {\r\n        if (data.version < 1001) {\r\n            data.savegames.forEach(savegame => {\r\n                savegame.level = 0;\r\n            });\r\n            data.version = 1001;\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    // End rw proxy\r\n\r\n    /**\r\n     * @returns {Array<SavegameMetadata>}\r\n     */\r\n    getSavegamesMetaData() {\r\n        return this.currentData.savegames;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} internalId\r\n     * @returns {Savegame}\r\n     */\r\n    getSavegameById(internalId) {\r\n        const metadata = this.getGameMetaDataByInternalId(internalId);\r\n        if (!metadata) {\r\n            return null;\r\n        }\r\n        return new Savegame(this.app, { internalId, metaDataRef: metadata });\r\n    }\r\n\r\n    /**\r\n     * Deletes a savegame\r\n     * @param {SavegameMetadata} game\r\n     */\r\n    deleteSavegame(game) {\r\n        const handle = new Savegame(this.app, {\r\n            internalId: game.internalId,\r\n            metaDataRef: game,\r\n        });\r\n\r\n        return handle.deleteAsync().then(() => {\r\n            for (let i = 0; i < this.currentData.savegames.length; ++i) {\r\n                const potentialGame = this.currentData.savegames[i];\r\n                if (potentialGame.internalId === handle.internalId) {\r\n                    this.currentData.savegames.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return this.writeAsync();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns a given games metadata by id\r\n     * @param {string} id\r\n     * @returns {SavegameMetadata}\r\n     */\r\n    getGameMetaDataByInternalId(id) {\r\n        for (let i = 0; i < this.currentData.savegames.length; ++i) {\r\n            const data = this.currentData.savegames[i];\r\n            if (data.internalId === id) {\r\n                return data;\r\n            }\r\n        }\r\n        logger.error(\"Savegame internal id not found:\", id);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Creates a new savegame\r\n     * @returns {Savegame}\r\n     */\r\n    createNewSavegame() {\r\n        const id = this.generateInternalId();\r\n\r\n        const metaData = /** @type {SavegameMetadata} */ ({\r\n            lastUpdate: Date.now(),\r\n            version: Savegame.getCurrentVersion(),\r\n            internalId: id,\r\n        });\r\n\r\n        this.currentData.savegames.push(metaData);\r\n        this.sortSavegames();\r\n\r\n        return new Savegame(this.app, {\r\n            internalId: id,\r\n            metaDataRef: metaData,\r\n        });\r\n    }\r\n\r\n    importSavegame(data) {\r\n        const savegame = this.createNewSavegame();\r\n        const migrationResult = savegame.migrate(data);\r\n        if (migrationResult.isBad()) {\r\n            return Promise.reject(\"Failed to migrate: \" + migrationResult.reason);\r\n        }\r\n\r\n        savegame.currentData = data;\r\n        const verification = savegame.verify(data);\r\n        if (verification.isBad()) {\r\n            return Promise.reject(\"Verification failed: \" + verification.result);\r\n        }\r\n\r\n        return savegame.writeSavegameAndMetadata().then(() => this.sortSavegames());\r\n    }\r\n\r\n    /**\r\n     * Sorts all savegames by their creation time descending\r\n     * @returns {Promise<any>}\r\n     */\r\n    sortSavegames() {\r\n        this.currentData.savegames.sort((a, b) => b.lastUpdate - a.lastUpdate);\r\n        let promiseChain = Promise.resolve();\r\n        while (this.currentData.savegames.length > 30) {\r\n            const toRemove = this.currentData.savegames.pop();\r\n\r\n            // Try to remove the savegame since its no longer available\r\n            const game = new Savegame(this.app, {\r\n                internalId: toRemove.internalId,\r\n                metaDataRef: toRemove,\r\n            });\r\n            promiseChain = promiseChain\r\n                .then(() => game.deleteAsync())\r\n                .then(\r\n                    () => {},\r\n                    err => {\r\n                        logger.error(this, \"Failed to remove old savegame:\", toRemove, \":\", err);\r\n                    }\r\n                );\r\n        }\r\n\r\n        return promiseChain;\r\n    }\r\n\r\n    /**\r\n     * Helper method to generate a new internal savegame id\r\n     */\r\n    generateInternalId() {\r\n        return Rusha.createHash()\r\n            .update(Date.now() + \"/\" + Math.random())\r\n            .digest(\"hex\");\r\n    }\r\n\r\n    // End\r\n\r\n    initialize() {\r\n        // First read, then directly write to ensure we have the latest data\r\n        // @ts-ignore\r\n        return this.readAsync().then(() => {\r\n            if (G_IS_DEV && globalConfig.debug.disableSavegameWrite) {\r\n                return Promise.resolve();\r\n            }\r\n            return this.sortSavegames().then(() => this.writeAsync());\r\n        });\r\n    }\r\n}\r\n","\r\n\r\nimport { ExplainedResult } from \"../core/explained_result\";\r\nimport { createLogger } from \"../core/logging\";\r\n// import { BuildingComponent } from \"../components/impl/building\";\r\nimport { gComponentRegistry } from \"../core/global_registries\";\r\nimport { SerializerInternal } from \"./serializer_internal\";\r\n\r\nconst logger = createLogger(\"savegame_serializer\");\r\n\r\n/**\r\n * Allows to serialize a savegame\r\n */\r\nexport class SavegameSerializer {\r\n    constructor() {\r\n        this.internal = new SerializerInternal();\r\n    }\r\n\r\n    /**\r\n     * Serializes the game root into a dump\r\n     * @param {GameRoot} root\r\n     * @param {boolean=} sanityChecks Whether to check for validity\r\n     * @returns {object}\r\n     */\r\n    generateDumpFromGameRoot(root, sanityChecks = true) {\r\n        // Now store generic savegame payload\r\n        const data = {\r\n            camera: root.camera.serialize(),\r\n            time: root.time.serialize(),\r\n            map: root.map.serialize(),\r\n            entityMgr: root.entityMgr.serialize(),\r\n            hubGoals: root.hubGoals.serialize(),\r\n            pinnedShapes: root.hud.parts.pinnedShapes.serialize(),\r\n            waypoints: root.hud.parts.waypoints.serialize(),\r\n            beltPaths: root.systemMgr.systems.belt.serializePaths(),\r\n        };\r\n\r\n        data.entities = this.internal.serializeEntityArray(root.entityMgr.entities);\r\n\r\n        if (!G_IS_RELEASE) {\r\n            if (sanityChecks) {\r\n                // Sanity check\r\n                const sanity = this.verifyLogicalErrors(data);\r\n                if (!sanity.result) {\r\n                    logger.error(\"Created invalid savegame:\", sanity.reason, \"savegame:\", data);\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Verifies if there are logical errors in the savegame\r\n     * @param {object} savegame\r\n     * @returns {ExplainedResult}\r\n     */\r\n    verifyLogicalErrors(savegame) {\r\n        if (!savegame.entities) {\r\n            return ExplainedResult.bad(\"Savegame has no entities\");\r\n        }\r\n\r\n        const seenUids = [];\r\n\r\n        // Check for duplicate UIDS\r\n        for (const entityListId in savegame.entities) {\r\n            for (let i = 0; i < savegame.entities[entityListId].length; ++i) {\r\n                const list = savegame.entities[entityListId][i];\r\n                for (let k = 0; k < list.length; ++k) {\r\n                    const entity = list[k];\r\n                    const uid = entity.uid;\r\n                    if (!Number.isInteger(uid)) {\r\n                        return ExplainedResult.bad(\"Entity has invalid uid: \" + uid);\r\n                    }\r\n                    if (seenUids.indexOf(uid) >= 0) {\r\n                        return ExplainedResult.bad(\"Duplicate uid \" + uid);\r\n                    }\r\n                    seenUids.push(uid);\r\n\r\n                    // Verify components\r\n                    if (!entity.components) {\r\n                        return ExplainedResult.bad(\r\n                            \"Entity is missing key 'components': \" + JSON.stringify(entity)\r\n                        );\r\n                    }\r\n                    const components = entity.components;\r\n                    for (const componentId in components) {\r\n                        // Verify component data\r\n                        const componentData = components[componentId];\r\n                        const componentClass = gComponentRegistry.findById(componentId);\r\n\r\n                        // Check component id is known\r\n                        if (!componentClass) {\r\n                            return ExplainedResult.bad(\"Unknown component id: \" + componentId);\r\n                        }\r\n\r\n                        // Check component data is ok\r\n                        const componentVerifyError = /** @type {typeof Component} */ (componentClass).verify(\r\n                            componentData\r\n                        );\r\n                        if (componentVerifyError) {\r\n                            return ExplainedResult.bad(\r\n                                \"Component \" + componentId + \" has invalid data: \" + componentVerifyError\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n\r\n    /**\r\n     * Tries to load the savegame from a given dump\r\n     * @param {import(\"./savegame_typedefs\").SerializedGame} savegame\r\n     * @param {GameRoot} root\r\n     * @returns {ExplainedResult}\r\n     */\r\n    deserialize(savegame, root) {\r\n        // Sanity\r\n        const verifyResult = this.verifyLogicalErrors(savegame);\r\n        if (!verifyResult.result) {\r\n            return ExplainedResult.bad(verifyResult.reason);\r\n        }\r\n        let errorReason = null;\r\n\r\n        errorReason = errorReason || root.entityMgr.deserialize(savegame.entityMgr);\r\n        errorReason = errorReason || root.time.deserialize(savegame.time);\r\n        errorReason = errorReason || root.camera.deserialize(savegame.camera);\r\n        errorReason = errorReason || root.map.deserialize(savegame.map);\r\n        errorReason = errorReason || root.hubGoals.deserialize(savegame.hubGoals);\r\n        errorReason = errorReason || root.hud.parts.pinnedShapes.deserialize(savegame.pinnedShapes);\r\n        errorReason = errorReason || root.hud.parts.waypoints.deserialize(savegame.waypoints);\r\n        errorReason = errorReason || this.internal.deserializeEntityArray(root, savegame.entities);\r\n        errorReason = errorReason || root.systemMgr.systems.belt.deserializePaths(savegame.beltPaths);\r\n\r\n        // Check for errors\r\n        if (errorReason) {\r\n            return ExplainedResult.bad(errorReason);\r\n        }\r\n\r\n        return ExplainedResult.good();\r\n    }\r\n}\r\n","import { BaseSavegameInterface } from \"../savegame_interface.js\";\r\n\r\nconst schema = require(\"./1000.json\");\r\n\r\nexport class SavegameInterface_V1000 extends BaseSavegameInterface {\r\n    getVersion() {\r\n        return 1000;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n}\r\n","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4WAUABFEEQC4E8AOBTGAuWB7ARgKxQGM4YAacaWAJxQEcBXASxoBMMIBtAXXMmhgCGLFoziMsAOwEAbAApUsqKmJQBndnCr0U4AL7ggA\"));\n    })()","import { SavegameInterface_V1000 } from \"./1000.js\";\r\nimport { createLogger } from \"../../core/logging.js\";\r\nimport { T } from \"../../translations.js\";\r\n\r\nconst schema = require(\"./1001.json\");\r\n\r\nconst logger = createLogger(\"savegame_interface/1001\");\r\n\r\nexport class SavegameInterface_V1001 extends SavegameInterface_V1000 {\r\n    getVersion() {\r\n        return 1001;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1000to1001(data) {\r\n        logger.log(\"Migrating 1000 to 1001\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        dump.pinnedShapes = {\r\n            shapes: [],\r\n        };\r\n        dump.waypoints = {\r\n            waypoints: [\r\n                {\r\n                    label: T.ingame.waypoints.hub,\r\n                    center: { x: 0, y: 0 },\r\n                    zoomLevel: 3,\r\n                    deletable: false,\r\n                },\r\n            ],\r\n        };\r\n\r\n        const entities = dump.entities;\r\n        for (let i = 0; i < entities.length; ++i) {\r\n            const entity = entities[i];\r\n\r\n            const staticComp = entity.components.StaticMapEntity;\r\n            const beltComp = entity.components.Belt;\r\n            if (staticComp) {\r\n                if (staticComp.spriteKey) {\r\n                    staticComp.blueprintSpriteKey = staticComp.spriteKey.replace(\r\n                        \"sprites/buildings\",\r\n                        \"sprites/blueprints\"\r\n                    );\r\n                } else {\r\n                    if (entity.components.Hub) {\r\n                        staticComp.blueprintSpriteKey = \"\";\r\n                    } else if (beltComp) {\r\n                        const direction = beltComp.direction;\r\n                        staticComp.blueprintSpriteKey = \"sprites/blueprints/belt_\" + direction + \".png\";\r\n                    } else {\r\n                        assertAlways(false, \"Could not deduct entity type for migrating 1000 -> 1001\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4WAUABFEEQC4E8AOBTGAuWB7ARgKxQGM4YAacaWAJxQEcBXASxoBMMIBtAXXMmhgCGLFoziMsAOwEAbAApUsqKmJQBndnCr0U4AL7ggA\"));\n    })()","import { createLogger } from \"../../core/logging.js\";\r\nimport { T } from \"../../translations.js\";\r\nimport { SavegameInterface_V1001 } from \"./1001.js\";\r\n\r\nconst schema = require(\"./1002.json\");\r\nconst logger = createLogger(\"savegame_interface/1002\");\r\n\r\nexport class SavegameInterface_V1002 extends SavegameInterface_V1001 {\r\n    getVersion() {\r\n        return 1002;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1001to1002(data) {\r\n        logger.log(\"Migrating 1001 to 1002\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        const entities = dump.entities;\r\n        for (let i = 0; i < entities.length; ++i) {\r\n            const entity = entities[i];\r\n            const beltComp = entity.components.Belt;\r\n            const ejectorComp = entity.components.ItemEjector;\r\n            if (beltComp && ejectorComp) {\r\n                ejectorComp.instantEject = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4WAUABFEEQC4E8AOBTGAuWB7ARgKxQGM4YAacaWAJxQEcBXASxoBMMIBtAXXMmhgCGLFoziMsAOwEAbAApUsqKmJQBndnCr0U4AL7ggA\"));\n    })()","import { createLogger } from \"../../core/logging.js\";\r\nimport { SavegameInterface_V1002 } from \"./1002.js\";\r\n\r\nconst schema = require(\"./1003.json\");\r\nconst logger = createLogger(\"savegame_interface/1003\");\r\n\r\nexport class SavegameInterface_V1003 extends SavegameInterface_V1002 {\r\n    getVersion() {\r\n        return 1003;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1002to1003(data) {\r\n        logger.log(\"Migrating 1002 to 1003\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        dump.pinnedShapes = { shapes: [] };\r\n    }\r\n}\r\n","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4WAUABFEEQC4E8AOBTGAuWB7ARgKxQGM4YAacaWAJxQEcBXASxoBMMIBtAXXMmhgCGLFoziMsAOwEAbAApUsqKmJQBndnCr0U4AL7ggA\"));\n    })()","import { createLogger } from \"../../core/logging.js\";\r\nimport { SavegameInterface_V1003 } from \"./1003.js\";\r\n\r\nconst schema = require(\"./1004.json\");\r\nconst logger = createLogger(\"savegame_interface/1004\");\r\n\r\nexport class SavegameInterface_V1004 extends SavegameInterface_V1003 {\r\n    getVersion() {\r\n        return 1004;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1003to1004(data) {\r\n        logger.log(\"Migrating 1003 to 1004\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        // The hub simply has an empty label\r\n        const waypointData = dump.waypoints.waypoints;\r\n        for (let i = 0; i < waypointData.length; ++i) {\r\n            const waypoint = waypointData[i];\r\n            if (!waypoint.deletable) {\r\n                waypoint.label = null;\r\n            }\r\n            delete waypoint.deletable;\r\n        }\r\n    }\r\n}\r\n","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4WAUABFEEQC4E8AOBTGAuWB7ARgKxQGM4YAacaWAJxQEcBXASxoBMMIBtAXXMmhgCGLFoziMsAOwEAbAApUsqKmJQBndnCr0U4AL7ggA\"));\n    })()","import { createLogger } from \"../../core/logging.js\";\r\nimport { SavegameInterface_V1004 } from \"./1004.js\";\r\n\r\nconst schema = require(\"./1005.json\");\r\nconst logger = createLogger(\"savegame_interface/1005\");\r\n\r\nexport class SavegameInterface_V1005 extends SavegameInterface_V1004 {\r\n    getVersion() {\r\n        return 1005;\r\n    }\r\n\r\n    getSchemaUncached() {\r\n        return schema;\r\n    }\r\n\r\n    /**\r\n     * @param {import(\"../savegame_typedefs.js\").SavegameData} data\r\n     */\r\n    static migrate1004to1005(data) {\r\n        logger.log(\"Migrating 1004 to 1005\");\r\n        const dump = data.dump;\r\n        if (!dump) {\r\n            return true;\r\n        }\r\n\r\n        // just reset belt paths for now\r\n        dump.beltPaths = [];\r\n\r\n        const entities = dump.entities;\r\n\r\n        // clear ejector slots\r\n        for (let i = 0; i < entities.length; ++i) {\r\n            const entity = entities[i];\r\n            const itemEjector = entity.components.ItemEjector;\r\n            if (itemEjector) {\r\n                const slots = itemEjector.slots;\r\n                for (let k = 0; k < slots.length; ++k) {\r\n                    const slot = slots[k];\r\n                    slot.item = null;\r\n                    slot.progress = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","module.exports = (function() {\n        return JSON.parse(require(\"global-compression\").decompressX64(\"N4WAUABFEEQC4E8AOBTGAuWB7ARgKxQGM4YAacaWAJxQEcBXASxoBMMIBtAXXMmhgCGLFoziMsAOwEAbAApUsqKmJQBndnCr0U4AL7ggA\"));\n    })()","import {\r\n    BaseDataType,\r\n    TypeArray,\r\n    TypeBoolean,\r\n    TypeClass,\r\n    TypeClassId,\r\n    TypeEntity,\r\n    TypeEntityWeakref,\r\n    TypeEnum,\r\n    TypeFixedClass,\r\n    TypeInteger,\r\n    TypeKeyValueMap,\r\n    TypeMetaClass,\r\n    TypeNullable,\r\n    TypeNumber,\r\n    TypePair,\r\n    TypePositiveInteger,\r\n    TypePositiveNumber,\r\n    TypeString,\r\n    TypeVector,\r\n    TypeClassFromMetaclass,\r\n    TypeClassData,\r\n    TypeStructuredObject,\r\n} from \"./serialization_data_types\";\r\nimport { createLogger } from \"../core/logging\";\r\n\r\nconst logger = createLogger(\"serialization\");\r\n\r\n// Schema declarations\r\nexport const types = {\r\n    int: new TypeInteger(),\r\n    uint: new TypePositiveInteger(),\r\n    float: new TypeNumber(),\r\n    ufloat: new TypePositiveNumber(),\r\n    string: new TypeString(),\r\n    entity: new TypeEntity(),\r\n    weakEntityRef: new TypeEntityWeakref(),\r\n    vector: new TypeVector(),\r\n    tileVector: new TypeVector(),\r\n    bool: new TypeBoolean(),\r\n\r\n    /**\r\n     * @param {BaseDataType} wrapped\r\n     */\r\n    nullable(wrapped) {\r\n        return new TypeNullable(wrapped);\r\n    },\r\n\r\n    /**\r\n     * @param {FactoryTemplate<*>|SingletonFactoryTemplate<*>} registry\r\n     */\r\n    classId(registry) {\r\n        return new TypeClassId(registry);\r\n    },\r\n    /**\r\n     * @param {BaseDataType} valueType\r\n     * @param {boolean=} includeEmptyValues\r\n     */\r\n    keyValueMap(valueType, includeEmptyValues = true) {\r\n        return new TypeKeyValueMap(valueType, includeEmptyValues);\r\n    },\r\n\r\n    /**\r\n     * @param {Object<string, any>} values\r\n     */\r\n    enum(values) {\r\n        return new TypeEnum(values);\r\n    },\r\n\r\n    /**\r\n     * @param {FactoryTemplate<*>} registry\r\n     */\r\n    obj(registry) {\r\n        return new TypeClass(registry);\r\n    },\r\n\r\n    /**\r\n     * @param {FactoryTemplate<*>} registry\r\n     */\r\n    objData(registry) {\r\n        return new TypeClassData(registry);\r\n    },\r\n\r\n    /**\r\n     * @param {typeof BasicSerializableObject} cls\r\n     */\r\n    knownType(cls) {\r\n        return new TypeFixedClass(cls);\r\n    },\r\n\r\n    /**\r\n     * @param {BaseDataType} innerType\r\n     */\r\n    array(innerType) {\r\n        return new TypeArray(innerType);\r\n    },\r\n\r\n    /**\r\n     * @param {SingletonFactoryTemplate<*>} innerType\r\n     */\r\n    classRef(registry) {\r\n        return new TypeMetaClass(registry);\r\n    },\r\n\r\n    /**\r\n     * @param {Object.<string, BaseDataType>} descriptor\r\n     */\r\n    structured(descriptor) {\r\n        return new TypeStructuredObject(descriptor);\r\n    },\r\n\r\n    /**\r\n     * @param {BaseDataType} a\r\n     * @param {BaseDataType} b\r\n     */\r\n    pair(a, b) {\r\n        return new TypePair(a, b);\r\n    },\r\n\r\n    /**\r\n     * @param {typeof BasicSerializableObject} classHandle\r\n     * @param {SingletonFactoryTemplate<*>} registry\r\n     */\r\n    classWithMetaclass(classHandle, registry) {\r\n        return new TypeClassFromMetaclass(classHandle, registry);\r\n    },\r\n};\r\n\r\n/**\r\n * A full schema declaration\r\n * @typedef {Object.<string, BaseDataType>} Schema\r\n */\r\n\r\nconst globalSchemaCache = {};\r\n\r\n/* dev:start */\r\nconst classnamesCache = {};\r\n/* dev:end*/\r\n\r\nexport class BasicSerializableObject {\r\n    /* dev:start */\r\n    /**\r\n     * Fixes typeof DerivedComponent is not assignable to typeof Component, compiled out\r\n     * in non-dev builds\r\n     */\r\n    constructor(...args) {}\r\n\r\n    /* dev:end */\r\n\r\n    static getId() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Should return the serialization schema\r\n     * @returns {Schema}\r\n     */\r\n    static getSchema() {\r\n        return {};\r\n    }\r\n\r\n    // Implementation\r\n    /** @returns {Schema} */\r\n    static getCachedSchema() {\r\n        const id = this.getId();\r\n\r\n        /* dev:start */\r\n        assert(\r\n            classnamesCache[id] === this || classnamesCache[id] === undefined,\r\n            \"Class name taken twice: \" + id + \" (from \" + this.name + \")\"\r\n        );\r\n        classnamesCache[id] = this;\r\n        /* dev:end */\r\n\r\n        const entry = globalSchemaCache[id];\r\n        if (entry) {\r\n            return entry;\r\n        }\r\n\r\n        const schema = this.getSchema();\r\n        globalSchemaCache[id] = schema;\r\n        return schema;\r\n    }\r\n\r\n    /** @returns {object} */\r\n    serialize() {\r\n        return serializeSchema(\r\n            this,\r\n            /** @type {typeof BasicSerializableObject} */ (this.constructor).getCachedSchema()\r\n        );\r\n    }\r\n\r\n    /** @returns {string|void} */\r\n    deserialize(data) {\r\n        return deserializeSchema(\r\n            this,\r\n            /** @type {typeof BasicSerializableObject} */ (this.constructor).getCachedSchema(),\r\n            data\r\n        );\r\n    }\r\n\r\n    /** @returns {string|void} */\r\n    static verify(data) {\r\n        return verifySchema(this.getCachedSchema(), data);\r\n    }\r\n}\r\n\r\n/**\r\n * Serializes an object using the given schema, mergin with the given properties\r\n * @param {object} obj The object to serialize\r\n * @param {Schema} schema The schema to use\r\n * @param {object=} mergeWith Any additional properties to merge with the schema, useful for super calls\r\n * @returns {object} Serialized data object\r\n */\r\nexport function serializeSchema(obj, schema, mergeWith = {}) {\r\n    for (const key in schema) {\r\n        if (!obj.hasOwnProperty(key)) {\r\n            logger.error(\"Invalid schema, property\", key, \"does not exist on\", obj, \"(schema=\", schema, \")\");\r\n            assert(\r\n                obj.hasOwnProperty(key),\r\n                \"serialization: invalid schema, property does not exist on object: \" + key\r\n            );\r\n        }\r\n        if (!schema[key]) {\r\n            assert(false, \"Invalid schema (bad key '\" + key + \"'): \" + JSON.stringify(schema));\r\n        }\r\n\r\n        if (G_IS_DEV) {\r\n            try {\r\n                mergeWith[key] = schema[key].serialize(obj[key]);\r\n            } catch (ex) {\r\n                logger.error(\r\n                    \"Serialization of\",\r\n                    obj,\r\n                    \"failed on key '\" + key + \"' ->\",\r\n                    ex,\r\n                    \"(schema was\",\r\n                    schema,\r\n                    \")\"\r\n                );\r\n                throw ex;\r\n            }\r\n        } else {\r\n            mergeWith[key] = schema[key].serialize(obj[key]);\r\n        }\r\n    }\r\n    return mergeWith;\r\n}\r\n\r\n/**\r\n * Deserializes data into an object\r\n * @param {object} obj The object to store the deserialized data into\r\n * @param {Schema} schema The schema to use\r\n * @param {object} data The serialized data\r\n * @param {string|void|null=} baseclassErrorResult Convenience, if this is a string error code, do nothing and return it\r\n * @returns {string|void} String error code or nothing on success\r\n */\r\nexport function deserializeSchema(obj, schema, data, baseclassErrorResult = null) {\r\n    if (baseclassErrorResult) {\r\n        return baseclassErrorResult;\r\n    }\r\n\r\n    if (!data) {\r\n        logger.error(\"Got 'NULL' data for\", obj, \"and schema\", schema, \"!\");\r\n        return \"Got null data\";\r\n    }\r\n\r\n    for (const key in schema) {\r\n        if (!data.hasOwnProperty(key)) {\r\n            logger.error(\"Data\", data, \"does not contain\", key, \"(schema:\", schema, \")\");\r\n            return \"Missing key in schema: \" + key + \" of class \" + obj.constructor.name;\r\n        }\r\n        if (!schema[key].allowNull() && (data[key] === null || data[key] === undefined)) {\r\n            logger.error(\"Data\", data, \"has null value for\", key, \"(schema:\", schema, \")\");\r\n            return \"Non-nullable entry is null: \" + key + \" of class \" + obj.constructor.name;\r\n        }\r\n\r\n        const errorStatus = schema[key].deserializeWithVerify(data[key], obj, key, obj.root);\r\n        if (errorStatus) {\r\n            logger.error(\r\n                \"Deserialization failed with error '\" + errorStatus + \"' on object\",\r\n                obj,\r\n                \"and key\",\r\n                key,\r\n                \"(root? =\",\r\n                obj.root ? \"y\" : \"n\",\r\n                \")\"\r\n            );\r\n            return errorStatus;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Verifies stored data using the given schema\r\n * @param {Schema} schema The schema to use\r\n * @param {object} data The data to verify\r\n * @returns {string|void} String error code or nothing on success\r\n */\r\nexport function verifySchema(schema, data) {\r\n    for (const key in schema) {\r\n        if (!data.hasOwnProperty(key)) {\r\n            logger.error(\"Data\", data, \"does not contain\", key, \"(schema:\", schema, \")\");\r\n            return \"verify: missing key required by schema in stored data: \" + key;\r\n        }\r\n        if (!schema[key].allowNull() && (data[key] === null || data[key] === undefined)) {\r\n            logger.error(\"Data\", data, \"has null value for\", key, \"(schema:\", schema, \")\");\r\n            return \"verify: non-nullable entry is null: \" + key;\r\n        }\r\n\r\n        const errorStatus = schema[key].verifySerializedValue(data[key]);\r\n        if (errorStatus) {\r\n            logger.error(errorStatus);\r\n            return \"verify: \" + errorStatus;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Extends a schema by adding the properties from the new schema to the existing base schema\r\n * @param {Schema} base\r\n * @param {Schema} newOne\r\n * @returns {Schema}\r\n */\r\nexport function extendSchema(base, newOne) {\r\n    /** @type {Schema} */\r\n    const result = Object.assign({}, base);\r\n    for (const key in newOne) {\r\n        if (result.hasOwnProperty(key)) {\r\n            logger.error(\"Extend schema got duplicate key:\", key);\r\n            continue;\r\n        }\r\n        result[key] = newOne[key];\r\n    }\r\n    return result;\r\n}\r\n","\r\n\r\nimport { Vector } from \"../core/vector\";\r\nimport { round4Digits, schemaObject, accessNestedPropertyReverse } from \"../core/utils\";\r\nexport const globalJsonSchemaDefs = {};\r\n\r\n/**\r\n *\r\n * @param {import(\"./serialization\").Schema} schema\r\n */\r\nexport function schemaToJsonSchema(schema) {\r\n    const jsonSchema = {\r\n        type: \"object\",\r\n        additionalProperties: false,\r\n        required: [],\r\n        properties: {},\r\n    };\r\n\r\n    for (const key in schema) {\r\n        const subSchema = schema[key].getAsJsonSchema();\r\n        jsonSchema.required.push(key);\r\n        jsonSchema.properties[key] = subSchema;\r\n    }\r\n\r\n    return jsonSchema;\r\n}\r\n\r\n/**\r\n * Base serialization data type\r\n */\r\nexport class BaseDataType {\r\n    /**\r\n     * Serializes a given raw value\r\n     * @param {any} value\r\n     */\r\n    serialize(value) {\r\n        abstract;\r\n        return {};\r\n    }\r\n\r\n    /**\r\n     * Verifies a given serialized value\r\n     * @param {any} value\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    verifySerializedValue(value) {}\r\n\r\n    /**\r\n     * Deserializes a serialized value into the target object under the given key\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Returns the json schema\r\n     */\r\n    getAsJsonSchema() {\r\n        const key = this.getCacheKey();\r\n        const schema = this.getAsJsonSchemaUncached();\r\n\r\n        if (!globalJsonSchemaDefs[key]) {\r\n            // schema.$id = key;\r\n            globalJsonSchemaDefs[key] = schema;\r\n        }\r\n\r\n        return {\r\n            $ref: \"#/definitions/\" + key,\r\n        };\r\n\r\n        // return this.getAsJsonSchemaUncached();\r\n        // if (!globalJsonSchemaDefs[key]) {\r\n        //     // schema.$id = key;\r\n        //     globalJsonSchemaDefs[key] = {\r\n        //         $id: key,\r\n        //         definitions: {\r\n        //             [\"d-\" + key]: schema\r\n        //         }\r\n        //     };\r\n        // }\r\n\r\n        // return {\r\n        //     $ref: key + \"#/definitions/d-\" + key\r\n        // }\r\n\r\n        // // return this.getAsJsonSchemaUncached();\r\n    }\r\n\r\n    /**\r\n     * INTERNAL Should return the json schema representation\r\n     */\r\n    getAsJsonSchemaUncached() {\r\n        abstract;\r\n    }\r\n\r\n    /**\r\n     * Returns whether null values are okay\r\n     * @returns {boolean}\r\n     */\r\n    allowNull() {\r\n        return false;\r\n    }\r\n\r\n    // Helper methods\r\n\r\n    /**\r\n     * Deserializes a serialized value, but performs integrity checks before\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserializeWithVerify(value, targetObject, targetKey, root) {\r\n        const errorCode = this.verifySerializedValue(value);\r\n        if (errorCode) {\r\n            return (\r\n                \"serialization verify failed: \" +\r\n                errorCode +\r\n                \" [value \" +\r\n                JSON.stringify(value).substr(0, 100) +\r\n                \"]\"\r\n            );\r\n        }\r\n        return this.deserialize(value, targetObject, targetKey, root);\r\n    }\r\n\r\n    /**\r\n     * Should return a cacheable key\r\n     */\r\n    getCacheKey() {\r\n        abstract;\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport class TypeInteger extends BaseDataType {\r\n    serialize(value) {\r\n        assert(Number.isInteger(value), \"Type integer got non integer for serialize: \" + value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"integer\",\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isInteger(value)) {\r\n            return \"Not a valid number\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"int\";\r\n    }\r\n}\r\n\r\nexport class TypePositiveInteger extends BaseDataType {\r\n    serialize(value) {\r\n        assert(Number.isInteger(value), \"Type integer got non integer for serialize: \" + value);\r\n        assert(value >= 0, \"value < 0: \" + value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"integer\",\r\n            minimum: 0,\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isInteger(value)) {\r\n            return \"Not a valid number\";\r\n        }\r\n        if (value < 0) {\r\n            return \"Negative value for positive integer\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"uint\";\r\n    }\r\n}\r\n\r\nexport class TypeBoolean extends BaseDataType {\r\n    serialize(value) {\r\n        assert(value === true || value === false, \"Type bool got non bool for serialize: \" + value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"boolean\",\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (value !== true && value !== false) {\r\n            return \"Not a boolean\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"bool\";\r\n    }\r\n}\r\n\r\nexport class TypeString extends BaseDataType {\r\n    serialize(value) {\r\n        assert(typeof value === \"string\", \"Type string got non string for serialize: \" + value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"string\",\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (typeof value !== \"string\") {\r\n            return \"Not a valid string\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"string\";\r\n    }\r\n}\r\n\r\nexport class TypeVector extends BaseDataType {\r\n    serialize(value) {\r\n        assert(value instanceof Vector, \"Type vector got non vector for serialize: \" + value);\r\n        return {\r\n            x: round4Digits(value.x),\r\n            y: round4Digits(value.y),\r\n        };\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return schemaObject({\r\n            x: {\r\n                type: \"number\",\r\n            },\r\n            y: {\r\n                type: \"number\",\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = new Vector(value.x, value.y);\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isFinite(value.x) || !Number.isFinite(value.y)) {\r\n            return \"Not a valid vector, missing x/y or bad data type\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"vector\";\r\n    }\r\n}\r\n\r\nexport class TypeTileVector extends BaseDataType {\r\n    serialize(value) {\r\n        assert(value instanceof Vector, \"Type vector got non vector for serialize: \" + value);\r\n        assert(Number.isInteger(value.x) && value.x > 0, \"Invalid tile x:\" + value.x);\r\n        assert(Number.isInteger(value.y) && value.y > 0, \"Invalid tile x:\" + value.y);\r\n        return { x: value.x, y: value.y };\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return schemaObject({\r\n            x: {\r\n                type: \"integer\",\r\n                minimum: 0,\r\n                maximum: 256,\r\n            },\r\n            y: {\r\n                type: \"integer\",\r\n                minimum: 0,\r\n                maximum: 256,\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = new Vector(value.x, value.y);\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isInteger(value.x) || !Number.isInteger(value.y)) {\r\n            return \"Not a valid tile vector, missing x/y or bad data type\";\r\n        }\r\n        if (value.x < 0 || value.y < 0) {\r\n            return \"Invalid tile vector, x or y < 0\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"tilevector\";\r\n    }\r\n}\r\n\r\nexport class TypeNumber extends BaseDataType {\r\n    serialize(value) {\r\n        assert(Number.isFinite(value), \"Type number got non number for serialize: \" + value);\r\n        assert(!Number.isNaN(value), \"Value is nan: \" + value);\r\n        return round4Digits(value);\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"number\",\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isFinite(value)) {\r\n            return \"Not a valid number: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"float\";\r\n    }\r\n}\r\n\r\nexport class TypePositiveNumber extends BaseDataType {\r\n    serialize(value) {\r\n        assert(Number.isFinite(value), \"Type number got non number for serialize: \" + value);\r\n        assert(value >= 0, \"Postitive number got negative value: \" + value);\r\n        return round4Digits(value);\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"number\",\r\n            minimum: 0,\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isFinite(value)) {\r\n            return \"Not a valid number: \" + value;\r\n        }\r\n        if (value < 0) {\r\n            return \"Positive number got negative value: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"ufloat\";\r\n    }\r\n}\r\n\r\nexport class TypeEnum extends BaseDataType {\r\n    /**\r\n     * @param {Object.<string, any>} enumeration\r\n     */\r\n    constructor(enumeration = {}) {\r\n        super();\r\n        this.availableValues = Object.keys(enumeration);\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(this.availableValues.indexOf(value) >= 0, \"Unknown value: \" + value);\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"string\",\r\n            enum: this.availableValues,\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (this.availableValues.indexOf(value) < 0) {\r\n            return \"Unknown enum value: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"enum.\" + this.availableValues.join(\",\");\r\n    }\r\n}\r\n\r\nexport class TypeEntity extends BaseDataType {\r\n    serialize(value) {\r\n        // assert(value instanceof Entity, \"Not a valid entity ref: \" + value);\r\n        assert(value.uid, \"Entity has no uid yet\");\r\n        assert(!value.destroyed, \"Entity already destroyed\");\r\n        assert(!value.queuedForDestroy, \"Entity queued for destroy\");\r\n\r\n        return value.uid;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"integer\",\r\n            minimum: 0,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const entity = root.entityMgr.findByUid(value);\r\n        if (!entity) {\r\n            return \"Entity not found by uid: \" + value;\r\n        }\r\n        targetObject[targetKey] = entity;\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Number.isFinite(value)) {\r\n            return \"Not a valid uuid: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"entity\";\r\n    }\r\n}\r\n\r\nexport class TypeEntityWeakref extends BaseDataType {\r\n    serialize(value) {\r\n        if (value === null) {\r\n            return null;\r\n        }\r\n\r\n        // assert(value instanceof Entity, \"Not a valid entity ref (weak): \" + value);\r\n        assert(value.uid, \"Entity has no uid yet\");\r\n        if (value.destroyed || value.queuedForDestroy) {\r\n            return null;\r\n        }\r\n        return value.uid;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        if (value === null) {\r\n            targetObject[targetKey] = null;\r\n            return;\r\n        }\r\n        const entity = root.entityMgr.findByUid(value, false);\r\n        targetObject[targetKey] = entity;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: [\"null\", \"integer\"],\r\n            minimum: 0,\r\n        };\r\n    }\r\n\r\n    allowNull() {\r\n        return true;\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (value !== null && !Number.isFinite(value)) {\r\n            return \"Not a valid uuid: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"entity-weakref\";\r\n    }\r\n}\r\n\r\nexport class TypeClass extends BaseDataType {\r\n    /**\r\n     *\r\n     * @param {FactoryTemplate<*>} registry\r\n     */\r\n    constructor(registry) {\r\n        super();\r\n        this.registry = registry;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"object\", \"Not a class instance: \" + value);\r\n        return {\r\n            $: value.constructor.getId(),\r\n            data: value.serialize(),\r\n        };\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        const options = [];\r\n        const entries = this.registry.getEntries();\r\n        for (let i = 0; i < entries.length; ++i) {\r\n            const entry = entries[i];\r\n\r\n            options.push(\r\n                schemaObject({\r\n                    $: {\r\n                        type: \"string\",\r\n                        // @ts-ignore\r\n                        enum: [entry.getId()],\r\n                    },\r\n                    // @ts-ignore\r\n                    data: schemaToJsonSchema(entry.getCachedSchema()),\r\n                })\r\n            );\r\n        }\r\n\r\n        return { oneOf: options };\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const instanceClass = this.registry.findById(value.$);\r\n        if (!instanceClass || !instanceClass.prototype) {\r\n            return \"Invalid class id (runtime-err): \" + value.$ + \"->\" + instanceClass;\r\n        }\r\n        const instance = Object.create(instanceClass.prototype);\r\n        const errorState = instance.deserialize(value.data);\r\n        if (errorState) {\r\n            return errorState;\r\n        }\r\n        targetObject[targetKey] = instance;\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!value) {\r\n            return \"Got null data\";\r\n        }\r\n\r\n        if (!this.registry.hasId(value.$)) {\r\n            return \"Invalid class id: \" + value.$ + \" (factory is \" + this.registry.getId() + \")\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"class.\" + this.registry.getId();\r\n    }\r\n}\r\n\r\nexport class TypeClassData extends BaseDataType {\r\n    /**\r\n     *\r\n     * @param {FactoryTemplate<*>} registry\r\n     */\r\n    constructor(registry) {\r\n        super();\r\n        this.registry = registry;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"object\", \"Not a class instance: \" + value);\r\n        return value.serialize();\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        const options = [];\r\n        const entries = this.registry.getEntries();\r\n        for (let i = 0; i < entries.length; ++i) {\r\n            const entry = entries[i];\r\n            options.push(\r\n                schemaToJsonSchema(/** @type {typeof BasicSerializableObject} */ (entry).getCachedSchema())\r\n            );\r\n        }\r\n        return { oneOf: options };\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        assert(false, \"can not deserialize class data of type \" + this.registry.getId());\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!value) {\r\n            return \"Got null data\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"class.\" + this.registry.getId();\r\n    }\r\n}\r\n\r\nexport class TypeClassFromMetaclass extends BaseDataType {\r\n    /**\r\n     *\r\n     * @param {typeof BasicSerializableObject} classHandle\r\n     * @param {SingletonFactoryTemplate<*>} registry\r\n     */\r\n    constructor(classHandle, registry) {\r\n        super();\r\n        this.registry = registry;\r\n        this.classHandle = classHandle;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"object\", \"Not a class instance: \" + value);\r\n        return {\r\n            $: value.getMetaclass().getId(),\r\n            data: value.serialize(),\r\n        };\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        // const options = [];\r\n        const ids = this.registry.getAllIds();\r\n\r\n        return {\r\n            $: {\r\n                type: \"string\",\r\n                enum: ids,\r\n            },\r\n            data: schemaToJsonSchema(this.classHandle.getCachedSchema()),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const metaClassInstance = this.registry.findById(value.$);\r\n        if (!metaClassInstance || !metaClassInstance.prototype) {\r\n            return \"Invalid meta class id (runtime-err): \" + value.$ + \"->\" + metaClassInstance;\r\n        }\r\n\r\n        const instanceClass = metaClassInstance.getInstanceClass();\r\n        const instance = Object.create(instanceClass.prototype);\r\n        const errorState = instance.deserialize(value.data);\r\n        if (errorState) {\r\n            return errorState;\r\n        }\r\n        targetObject[targetKey] = instance;\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!value) {\r\n            return \"Got null data\";\r\n        }\r\n\r\n        if (!this.registry.hasId(value.$)) {\r\n            return \"Invalid class id: \" + value.$ + \" (factory is \" + this.registry.getId() + \")\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"classofmetaclass.\" + this.registry.getId();\r\n    }\r\n}\r\n\r\nexport class TypeMetaClass extends BaseDataType {\r\n    /**\r\n     *\r\n     * @param {SingletonFactoryTemplate<*>} registry\r\n     */\r\n    constructor(registry) {\r\n        super();\r\n        this.registry = registry;\r\n    }\r\n\r\n    serialize(value) {\r\n        return value.getId();\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const instanceClass = this.registry.findById(value);\r\n        if (!instanceClass) {\r\n            return \"Invalid class id (runtime-err): \" + value;\r\n        }\r\n        targetObject[targetKey] = instanceClass;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"string\",\r\n            enum: this.registry.getAllIds(),\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!value) {\r\n            return \"Got null data\";\r\n        }\r\n\r\n        if (typeof value !== \"string\") {\r\n            return \"Got non string data\";\r\n        }\r\n\r\n        if (!this.registry.hasId(value)) {\r\n            return \"Invalid class id: \" + value + \" (factory is \" + this.registry.getId() + \")\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"metaclass.\" + this.registry.getId();\r\n    }\r\n}\r\n\r\nexport class TypeArray extends BaseDataType {\r\n    /**\r\n     * @param {BaseDataType} innerType\r\n     */\r\n    constructor(innerType) {\r\n        super();\r\n        this.innerType = innerType;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(Array.isArray(value), \"Not an array\");\r\n        const result = new Array(value.length);\r\n        for (let i = 0; i < value.length; ++i) {\r\n            result[i] = this.innerType.serialize(value[i]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const result = new Array(value.length);\r\n        for (let i = 0; i < value.length; ++i) {\r\n            const errorStatus = this.innerType.deserializeWithVerify(value[i], result, i, root);\r\n            if (errorStatus) {\r\n                return errorStatus;\r\n            }\r\n        }\r\n        targetObject[targetKey] = result;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"array\",\r\n            items: this.innerType.getAsJsonSchema(),\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Array.isArray(value)) {\r\n            return \"Not an array: \" + value;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"array.\" + this.innerType.getCacheKey();\r\n    }\r\n}\r\n\r\nexport class TypeFixedClass extends BaseDataType {\r\n    /**\r\n     *\r\n     * @param {typeof BasicSerializableObject} baseclass\r\n     */\r\n    constructor(baseclass) {\r\n        super();\r\n        this.baseclass = baseclass;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(value instanceof this.baseclass, \"Not a valid class instance\");\r\n        return value.serialize();\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const instance = Object.create(this.baseclass.prototype);\r\n        const errorState = instance.deserialize(value);\r\n        if (errorState) {\r\n            return \"Failed to deserialize class: \" + errorState;\r\n        }\r\n        targetObject[targetKey] = instance;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        this.baseclass.getSchema();\r\n        this.baseclass.getCachedSchema();\r\n        return schemaToJsonSchema(this.baseclass.getCachedSchema());\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!value) {\r\n            return \"Got null data\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"fixedclass.\" + this.baseclass.getId();\r\n    }\r\n}\r\n\r\nexport class TypeKeyValueMap extends BaseDataType {\r\n    /**\r\n     * @param {BaseDataType} valueType\r\n     * @param {boolean=} includeEmptyValues\r\n     */\r\n    constructor(valueType, includeEmptyValues = true) {\r\n        super();\r\n        this.valueType = valueType;\r\n        this.includeEmptyValues = includeEmptyValues;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"object\", \"not an object\");\r\n        let result = {};\r\n        for (const key in value) {\r\n            const serialized = this.valueType.serialize(value[key]);\r\n            if (!this.includeEmptyValues && typeof serialized === \"object\") {\r\n                if (\r\n                    serialized.$ &&\r\n                    typeof serialized.data === \"object\" &&\r\n                    Object.keys(serialized.data).length === 0\r\n                ) {\r\n                    continue;\r\n                } else if (Object.keys(serialized).length === 0) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            result[key] = serialized;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        let result = {};\r\n        for (const key in value) {\r\n            const errorCode = this.valueType.deserializeWithVerify(value[key], result, key, root);\r\n            if (errorCode) {\r\n                return errorCode;\r\n            }\r\n        }\r\n        targetObject[targetKey] = result;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"object\",\r\n            additionalProperties: this.valueType.getAsJsonSchema(),\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (typeof value !== \"object\") {\r\n            return \"KV map is not an object\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"kvmap.\" + this.valueType.getCacheKey();\r\n    }\r\n}\r\n\r\nexport class TypeClassId extends BaseDataType {\r\n    /**\r\n     * @param {FactoryTemplate<*>|SingletonFactoryTemplate<*>} registry\r\n     */\r\n    constructor(registry) {\r\n        super();\r\n        this.registry = registry;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"string\", \"Not a valid string\");\r\n        assert(this.registry.hasId(value), \"Id \" + value + \" not found in registry\");\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        targetObject[targetKey] = value;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"string\",\r\n            enum: this.registry.getAllIds(),\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (typeof value !== \"string\") {\r\n            return \"Not a valid registry id key: \" + value;\r\n        }\r\n        if (!this.registry.hasId(value)) {\r\n            return \"Id \" + value + \" not known to registry\";\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"classid.\" + this.registry.getId();\r\n    }\r\n}\r\n\r\nexport class TypePair extends BaseDataType {\r\n    /**\r\n     * @param {BaseDataType} type1\r\n     * @param {BaseDataType} type2\r\n     */\r\n    constructor(type1, type2) {\r\n        super();\r\n        assert(type1 && type1 instanceof BaseDataType, \"bad first type given for pair\");\r\n        assert(type2 && type2 instanceof BaseDataType, \"bad second type given for pair\");\r\n        this.type1 = type1;\r\n        this.type2 = type2;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(Array.isArray(value), \"pair: not an array\");\r\n        assert(value.length === 2, \"pair: length != 2\");\r\n        return [this.type1.serialize(value[0]), this.type2.serialize(value[1])];\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        const result = [undefined, undefined];\r\n\r\n        let errorCode = this.type1.deserialize(value[0], result, 0, root);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n        errorCode = this.type2.deserialize(value[1], result, 1, root);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n\r\n        targetObject[targetKey] = result;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            type: \"array\",\r\n            minLength: 2,\r\n            maxLength: 2,\r\n            items: [this.type1.getAsJsonSchema(), this.type2.getAsJsonSchema()],\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (!Array.isArray(value)) {\r\n            return \"Pair is not an array\";\r\n        }\r\n        if (value.length !== 2) {\r\n            return \"Pair length != 2\";\r\n        }\r\n        let errorCode = this.type1.verifySerializedValue(value[0]);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n        errorCode = this.type2.verifySerializedValue(value[1]);\r\n        if (errorCode) {\r\n            return errorCode;\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"pair.(\" + this.type1.getCacheKey() + \",\" + this.type2.getCacheKey + \")\";\r\n    }\r\n}\r\n\r\nexport class TypeNullable extends BaseDataType {\r\n    /**\r\n     * @param {BaseDataType} wrapped\r\n     */\r\n    constructor(wrapped) {\r\n        super();\r\n        this.wrapped = wrapped;\r\n    }\r\n\r\n    serialize(value) {\r\n        if (value === null || value === undefined) {\r\n            return null;\r\n        }\r\n        return this.wrapped.serialize(value);\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        if (value === null || value === undefined) {\r\n            targetObject[targetKey] = null;\r\n            return;\r\n        }\r\n        return this.wrapped.deserialize(value, targetObject, targetKey, root);\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (value === null) {\r\n            return;\r\n        }\r\n        return this.wrapped.verifySerializedValue(value);\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        return {\r\n            oneOf: [\r\n                {\r\n                    type: \"null\",\r\n                },\r\n                this.wrapped.getAsJsonSchema(),\r\n            ],\r\n        };\r\n    }\r\n\r\n    allowNull() {\r\n        return true;\r\n    }\r\n\r\n    getCacheKey() {\r\n        return \"nullable.\" + this.wrapped.getCacheKey();\r\n    }\r\n}\r\n\r\nexport class TypeStructuredObject extends BaseDataType {\r\n    /**\r\n     * @param {Object.<string, BaseDataType>} descriptor\r\n     */\r\n    constructor(descriptor) {\r\n        super();\r\n        this.descriptor = descriptor;\r\n    }\r\n\r\n    serialize(value) {\r\n        assert(typeof value === \"object\", \"not an object\");\r\n        let result = {};\r\n        for (const key in this.descriptor) {\r\n            // assert(value.hasOwnProperty(key), \"Serialization: Object does not have\", key, \"property!\");\r\n            result[key] = this.descriptor[key].serialize(value[key]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @see BaseDataType.deserialize\r\n     * @param {any} value\r\n     * @param {GameRoot} root\r\n     * @param {object} targetObject\r\n     * @param {string|number} targetKey\r\n     * @returns {string|void} String error code or null on success\r\n     */\r\n    deserialize(value, targetObject, targetKey, root) {\r\n        let result = {};\r\n        for (const key in value) {\r\n            const valueType = this.descriptor[key];\r\n            const errorCode = valueType.deserializeWithVerify(value[key], result, key, root);\r\n            if (errorCode) {\r\n                return errorCode;\r\n            }\r\n        }\r\n        targetObject[targetKey] = result;\r\n    }\r\n\r\n    getAsJsonSchemaUncached() {\r\n        let properties = {};\r\n        for (const key in this.descriptor) {\r\n            properties[key] = this.descriptor[key].getAsJsonSchema();\r\n        }\r\n\r\n        return {\r\n            type: \"object\",\r\n            required: Object.keys(this.descriptor),\r\n            properties,\r\n        };\r\n    }\r\n\r\n    verifySerializedValue(value) {\r\n        if (typeof value !== \"object\") {\r\n            return \"structured object is not an object\";\r\n        }\r\n        for (const key in this.descriptor) {\r\n            if (!value.hasOwnProperty(key)) {\r\n                return \"structured object is missing key \" + key;\r\n            }\r\n            const subError = this.descriptor[key].verifySerializedValue(value[key]);\r\n            if (subError) {\r\n                return \"structured object::\" + subError;\r\n            }\r\n        }\r\n    }\r\n\r\n    getCacheKey() {\r\n        let props = [];\r\n        for (const key in this.descriptor) {\r\n            props.push(key + \"=\" + this.descriptor[key].getCacheKey());\r\n        }\r\n        return \"structured[\" + props.join(\",\") + \"]\";\r\n    }\r\n}\r\n","import { gComponentRegistry } from \"../core/global_registries\";\r\nimport { Entity } from \"../game/entity\";\r\nimport { enumLayer, GameRoot } from \"../game/root\";\r\n\r\n// Internal serializer methods\r\nexport class SerializerInternal {\r\n    /**\r\n     * Serializes an array of entities\r\n     * @param {Array<Entity>} array\r\n     */\r\n    serializeEntityArray(array) {\r\n        const serialized = [];\r\n        for (let i = 0; i < array.length; ++i) {\r\n            const entity = array[i];\r\n            if (!entity.queuedForDestroy && !entity.destroyed) {\r\n                serialized.push(entity.serialize());\r\n            }\r\n        }\r\n        return serialized;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {Array<any>} array\r\n     * @returns {string|void}\r\n     */\r\n    deserializeEntityArray(root, array) {\r\n        for (let i = 0; i < array.length; ++i) {\r\n            this.deserializeEntity(root, array[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {GameRoot} root\r\n     * @param {Entity} payload\r\n     */\r\n    deserializeEntity(root, payload) {\r\n        const entity = new Entity(root);\r\n        this.deserializeComponents(entity, payload.components);\r\n        entity.layer = payload.layer;\r\n\r\n        if (!enumLayer[payload.layer]) {\r\n            assert(false, \"Invalid layer: \" + payload.layer);\r\n        }\r\n\r\n        root.entityMgr.registerEntity(entity, payload.uid);\r\n\r\n        if (entity.components.StaticMapEntity) {\r\n            root.map.placeStaticEntity(entity);\r\n        }\r\n    }\r\n\r\n    /////// COMPONENTS ////\r\n\r\n    /**\r\n     * Deserializes components of an entity\r\n     * @param {Entity} entity\r\n     * @param {Object.<string, any>} data\r\n     * @returns {string|void}\r\n     */\r\n    deserializeComponents(entity, data) {\r\n        for (const componentId in data) {\r\n            const componentClass = gComponentRegistry.findById(componentId);\r\n            const componentHandle = new componentClass({});\r\n            entity.addComponent(componentHandle);\r\n            const errorStatus = componentHandle.deserialize(data[componentId]);\r\n            if (errorStatus) {\r\n                return errorStatus;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { TextualGameState } from \"../core/textual_game_state\";\r\nimport { T } from \"../translations\";\r\nimport { THIRDPARTY_URLS } from \"../core/config\";\r\nimport { cachebust } from \"../core/cachebust\";\r\n\r\nexport class AboutState extends TextualGameState {\r\n    constructor() {\r\n        super(\"AboutState\");\r\n    }\r\n\r\n    getStateHeaderTitle() {\r\n        return T.about.title;\r\n    }\r\n\r\n    getMainContentHTML() {\r\n        return `\r\n            <div class=\"head\">\r\n                <img src=\"${cachebust(\"res/logo.png\")}\" alt=\"shapez.io Logo\">\r\n            </div>\r\n            <div class=\"text\">\r\n            ${T.about.body\r\n                .replace(\"<githublink>\", THIRDPARTY_URLS.github)\r\n                .replace(\"<discordlink>\", THIRDPARTY_URLS.discord)}\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    onEnter() {\r\n        const links = this.htmlElement.querySelectorAll(\"a[href]\");\r\n        links.forEach(link => {\r\n            this.trackClicks(\r\n                link,\r\n                () => this.app.platformWrapper.openExternalLink(link.getAttribute(\"href\")),\r\n                { preventClick: true }\r\n            );\r\n        });\r\n    }\r\n\r\n    getDefaultPreviousState() {\r\n        return \"SettingsState\";\r\n    }\r\n}\r\n","import { TextualGameState } from \"../core/textual_game_state\";\r\nimport { T } from \"../translations\";\r\nimport { CHANGELOG } from \"../changelog\";\r\n\r\nexport class ChangelogState extends TextualGameState {\r\n    constructor() {\r\n        super(\"ChangelogState\");\r\n    }\r\n\r\n    getStateHeaderTitle() {\r\n        return T.changelog.title;\r\n    }\r\n\r\n    getMainContentHTML() {\r\n        const entries = CHANGELOG;\r\n\r\n        let html = \"\";\r\n\r\n        for (let i = 0; i < entries.length; ++i) {\r\n            const entry = entries[i];\r\n            html += `\r\n                <div class=\"entry\">\r\n                    <span class=\"version\">${entry.version}</span>\r\n                    <span class=\"date\">${entry.date}</span>\r\n                    <ul class=\"changes\">\r\n                        ${entry.entries.map(text => `<li>${text}</li>`).join(\"\")}\r\n                    </ul>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        return html;\r\n    }\r\n\r\n    onEnter() {\r\n        const links = this.htmlElement.querySelectorAll(\"a[href]\");\r\n        links.forEach(link => {\r\n            this.trackClicks(\r\n                link,\r\n                () => this.app.platformWrapper.openExternalLink(link.getAttribute(\"href\")),\r\n                { preventClick: true }\r\n            );\r\n        });\r\n    }\r\n}\r\n","import { APPLICATION_ERROR_OCCURED } from \"../core/error_handler\";\r\nimport { GameState } from \"../core/game_state\";\r\nimport { logSection, createLogger } from \"../core/logging\";\r\nimport { waitNextFrame } from \"../core/utils\";\r\nimport { globalConfig } from \"../core/config\";\r\nimport { GameLoadingOverlay } from \"../game/game_loading_overlay\";\r\nimport { KeyActionMapper } from \"../game/key_action_mapper\";\r\nimport { Savegame } from \"../savegame/savegame\";\r\nimport { GameCore } from \"../game/core\";\r\nimport { MUSIC } from \"../platform/sound\";\r\n\r\nconst logger = createLogger(\"state/ingame\");\r\n\r\n// Different sub-states\r\nconst stages = {\r\n    s3_createCore: \"🌈 3: Create core\",\r\n    s4_A_initEmptyGame: \"🌈 4/A: Init empty game\",\r\n    s4_B_resumeGame: \"🌈 4/B: Resume game\",\r\n\r\n    s5_firstUpdate: \"🌈 5: First game update\",\r\n    s6_postLoadHook: \"🌈 6: Post load hook\",\r\n    s7_warmup: \"🌈 7: Warmup\",\r\n\r\n    s10_gameRunning: \"🌈 10: Game finally running\",\r\n\r\n    leaving: \"🌈 Saving, then leaving the game\",\r\n    destroyed: \"🌈 DESTROYED: Core is empty and waits for state leave\",\r\n    initFailed: \"🌈 ERROR: Initialization failed!\",\r\n};\r\n\r\nexport const gameCreationAction = {\r\n    new: \"new-game\",\r\n    resume: \"resume-game\",\r\n};\r\n\r\n// Typehints\r\nexport class GameCreationPayload {\r\n    constructor() {\r\n        /** @type {boolean|undefined} */\r\n        this.fastEnter;\r\n\r\n        /** @type {Savegame} */\r\n        this.savegame;\r\n    }\r\n}\r\n\r\nexport class InGameState extends GameState {\r\n    constructor() {\r\n        super(\"InGameState\");\r\n\r\n        /** @type {GameCreationPayload} */\r\n        this.creationPayload = null;\r\n\r\n        // Stores current stage\r\n        this.stage = \"\";\r\n\r\n        /** @type {GameCore} */\r\n        this.core = null;\r\n\r\n        /** @type {KeyActionMapper} */\r\n        this.keyActionMapper = null;\r\n\r\n        /** @type {GameLoadingOverlay} */\r\n        this.loadingOverlay = null;\r\n\r\n        /** @type {Savegame} */\r\n        this.savegame;\r\n\r\n        this.boundInputFilter = this.filterInput.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Switches the game into another sub-state\r\n     * @param {string} stage\r\n     */\r\n    switchStage(stage) {\r\n        assert(stage, \"Got empty stage\");\r\n        if (stage !== this.stage) {\r\n            this.stage = stage;\r\n            logger.log(this.stage);\r\n            return true;\r\n        } else {\r\n            // log(this, \"Re entering\", stage);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // GameState implementation\r\n    getInnerHTML() {\r\n        return \"\";\r\n    }\r\n\r\n    getThemeMusic() {\r\n        return MUSIC.theme;\r\n    }\r\n\r\n    onBeforeExit() {\r\n        // logger.log(\"Saving before quitting\");\r\n        // return this.doSave().then(() => {\r\n        //     logger.log(this, \"Successfully saved\");\r\n        //     // this.stageDestroyed();\r\n        // });\r\n    }\r\n\r\n    onAppPause() {\r\n        // if (this.stage === stages.s10_gameRunning) {\r\n        //     logger.log(\"Saving because app got paused\");\r\n        //     this.doSave();\r\n        // }\r\n    }\r\n\r\n    getHasFadeIn() {\r\n        return false;\r\n    }\r\n\r\n    getPauseOnFocusLost() {\r\n        return false;\r\n    }\r\n\r\n    getHasUnloadConfirmation() {\r\n        return true;\r\n    }\r\n\r\n    onLeave() {\r\n        if (this.core) {\r\n            this.stageDestroyed();\r\n        }\r\n        this.app.inputMgr.dismountFilter(this.boundInputFilter);\r\n    }\r\n\r\n    onResized(w, h) {\r\n        super.onResized(w, h);\r\n        if (this.stage === stages.s10_gameRunning) {\r\n            this.core.resize(w, h);\r\n        }\r\n    }\r\n\r\n    // ---- End of GameState implementation\r\n\r\n    /**\r\n     * Goes back to the menu state\r\n     */\r\n    goBackToMenu() {\r\n        this.saveThenGoToState(\"MainMenuState\");\r\n    }\r\n\r\n    /**\r\n     * Goes back to the settings state\r\n     */\r\n    goToSettings() {\r\n        this.saveThenGoToState(\"SettingsState\", {\r\n            backToStateId: this.key,\r\n            backToStatePayload: this.creationPayload,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Goes back to the settings state\r\n     */\r\n    goToKeybindings() {\r\n        this.saveThenGoToState(\"KeybindingsState\", {\r\n            backToStateId: this.key,\r\n            backToStatePayload: this.creationPayload,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Moves to a state outside of the game\r\n     * @param {string} stateId\r\n     * @param {any=} payload\r\n     */\r\n    saveThenGoToState(stateId, payload) {\r\n        if (this.stage === stages.leaving || this.stage === stages.destroyed) {\r\n            logger.warn(\r\n                \"Tried to leave game twice or during destroy:\",\r\n                this.stage,\r\n                \"(attempted to move to\",\r\n                stateId,\r\n                \")\"\r\n            );\r\n            return;\r\n        }\r\n        this.stageLeavingGame();\r\n        this.doSave().then(() => {\r\n            this.stageDestroyed();\r\n            this.moveToState(stateId, payload);\r\n        });\r\n    }\r\n\r\n    onBackButton() {\r\n        // do nothing\r\n    }\r\n\r\n    /**\r\n     * Called when the game somehow failed to initialize. Resets everything to basic state and\r\n     * then goes to the main menu, showing the error\r\n     * @param {string} err\r\n     */\r\n    onInitializationFailure(err) {\r\n        if (this.switchStage(stages.initFailed)) {\r\n            logger.error(\"Init failure:\", err);\r\n            this.stageDestroyed();\r\n            this.moveToState(\"MainMenuState\", { loadError: err });\r\n        }\r\n    }\r\n\r\n    // STAGES\r\n\r\n    /**\r\n     * Creates the game core instance, and thus the root\r\n     */\r\n    stage3CreateCore() {\r\n        if (this.switchStage(stages.s3_createCore)) {\r\n            logger.log(\"Creating new game core\");\r\n            this.core = new GameCore(this.app);\r\n\r\n            this.core.initializeRoot(this, this.savegame);\r\n\r\n            if (this.savegame.hasGameDump()) {\r\n                this.stage4bResumeGame();\r\n            } else {\r\n                this.app.gameAnalytics.handleGameStarted();\r\n                this.stage4aInitEmptyGame();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes a new empty game\r\n     */\r\n    stage4aInitEmptyGame() {\r\n        if (this.switchStage(stages.s4_A_initEmptyGame)) {\r\n            this.core.initNewGame();\r\n            this.stage5FirstUpdate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resumes an existing game\r\n     */\r\n    stage4bResumeGame() {\r\n        if (this.switchStage(stages.s4_B_resumeGame)) {\r\n            if (!this.core.initExistingGame()) {\r\n                this.onInitializationFailure(\"Savegame is corrupt and can not be restored.\");\r\n                return;\r\n            }\r\n            this.app.gameAnalytics.handleGameResumed();\r\n            this.stage5FirstUpdate();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs the first game update on the game which initializes most caches\r\n     */\r\n    stage5FirstUpdate() {\r\n        if (this.switchStage(stages.s5_firstUpdate)) {\r\n            this.core.root.logicInitialized = true;\r\n            this.core.updateLogic();\r\n            this.stage6PostLoadHook();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Call the post load hook, this means that we have loaded the game, and all systems\r\n     * can operate and start to work now.\r\n     */\r\n    stage6PostLoadHook() {\r\n        if (this.switchStage(stages.s6_postLoadHook)) {\r\n            logger.log(\"Post load hook\");\r\n            this.core.postLoadHook();\r\n            this.stage7Warmup();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This makes the game idle and draw for a while, because we run most code this way\r\n     * the V8 engine can already start to optimize it. Also this makes sure the resources\r\n     * are in the VRAM and we have a smooth experience once we start.\r\n     */\r\n    stage7Warmup() {\r\n        if (this.switchStage(stages.s7_warmup)) {\r\n            if (G_IS_DEV && globalConfig.debug.noArtificialDelays) {\r\n                this.warmupTimeSeconds = 0.05;\r\n            } else {\r\n                if (this.creationPayload.fastEnter) {\r\n                    this.warmupTimeSeconds = globalConfig.warmupTimeSecondsFast;\r\n                } else {\r\n                    this.warmupTimeSeconds = globalConfig.warmupTimeSecondsRegular;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The final stage where this game is running and updating regulary.\r\n     */\r\n    stage10GameRunning() {\r\n        if (this.switchStage(stages.s10_gameRunning)) {\r\n            this.core.root.signals.readyToRender.dispatch();\r\n\r\n            logSection(\"GAME STARTED\", \"#26a69a\");\r\n\r\n            // Initial resize, might have changed during loading (this is possible)\r\n            this.core.resize(this.app.screenWidth, this.app.screenHeight);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This stage destroys the whole game, used to cleanup\r\n     */\r\n    stageDestroyed() {\r\n        if (this.switchStage(stages.destroyed)) {\r\n            // Cleanup all api calls\r\n            this.cancelAllAsyncOperations();\r\n\r\n            if (this.syncer) {\r\n                this.syncer.cancelSync();\r\n                this.syncer = null;\r\n            }\r\n\r\n            // Cleanup core\r\n            if (this.core) {\r\n                this.core.destruct();\r\n                this.core = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * When leaving the game\r\n     */\r\n    stageLeavingGame() {\r\n        if (this.switchStage(stages.leaving)) {\r\n            // ...\r\n        }\r\n    }\r\n\r\n    // END STAGES\r\n\r\n    /**\r\n     * Filters the input (keybindings)\r\n     */\r\n    filterInput() {\r\n        return this.stage === stages.s10_gameRunning;\r\n    }\r\n\r\n    /**\r\n     * @param {GameCreationPayload} payload\r\n     */\r\n    onEnter(payload) {\r\n        this.app.inputMgr.installFilter(this.boundInputFilter);\r\n\r\n        this.creationPayload = payload;\r\n        this.savegame = payload.savegame;\r\n\r\n        this.loadingOverlay = new GameLoadingOverlay(this.app, this.getDivElement());\r\n        this.loadingOverlay.showBasic();\r\n\r\n        // Remove unneded default element\r\n        document.body.querySelector(\".modalDialogParent\").remove();\r\n\r\n        this.asyncChannel.watch(waitNextFrame()).then(() => this.stage3CreateCore());\r\n    }\r\n\r\n    /**\r\n     * Render callback\r\n     * @param {number} dt\r\n     */\r\n    onRender(dt) {\r\n        if (APPLICATION_ERROR_OCCURED) {\r\n            // Application somehow crashed, do not do anything\r\n            return;\r\n        }\r\n\r\n        if (this.stage === stages.s7_warmup) {\r\n            this.core.draw();\r\n            this.warmupTimeSeconds -= dt / 1000.0;\r\n            if (this.warmupTimeSeconds < 0) {\r\n                logger.log(\"Warmup completed\");\r\n                this.stage10GameRunning();\r\n            }\r\n        }\r\n\r\n        // // Check if we can show an ad\r\n        // // DISABLED\r\n        // if (this.stage === stages.s10_gameRunning && !this.core.root.hud.parts.processingOverlay.hasTasks()) {\r\n        //     if (this.app.isRenderable() && this.app.adProvider.getCanShowVideoAd()) {\r\n        //         this.saveThenGoToState(\"WatchAdState\", {\r\n        //             nextStateId: \"RunningGameState\",\r\n        //             nextStatePayload: this.creationPayload,\r\n        //         });\r\n        //     }\r\n        // }\r\n\r\n        if (this.stage === stages.s10_gameRunning) {\r\n            this.core.tick(dt);\r\n        }\r\n\r\n        // If the stage is still active (This might not be the case if tick() moved us to game over)\r\n        if (this.stage === stages.s10_gameRunning) {\r\n            // Only draw if page visible\r\n            if (this.app.pageVisible) {\r\n                this.core.draw();\r\n            }\r\n\r\n            this.loadingOverlay.removeIfAttached();\r\n        } else {\r\n            if (!this.loadingOverlay.isAttached()) {\r\n                this.loadingOverlay.showBasic();\r\n            }\r\n        }\r\n    }\r\n\r\n    onBackgroundTick(dt) {\r\n        this.onRender(dt);\r\n    }\r\n\r\n    /**\r\n     * Saves the game\r\n     */\r\n\r\n    doSave() {\r\n        if (!this.savegame || !this.savegame.isSaveable()) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (APPLICATION_ERROR_OCCURED) {\r\n            logger.warn(\"skipping save because application crashed\");\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (\r\n            this.stage !== stages.s10_gameRunning &&\r\n            this.stage !== stages.s7_warmup &&\r\n            this.stage !== stages.leaving\r\n        ) {\r\n            logger.warn(\"Skipping save because game is not ready\");\r\n            return Promise.resolve();\r\n        }\r\n\r\n        // First update the game data\r\n        logger.log(\"Starting to save game ...\");\r\n        this.core.root.signals.gameSaved.dispatch();\r\n        this.savegame.updateData(this.core.root);\r\n        return this.savegame.writeSavegameAndMetadata().catch(err => {\r\n            logger.warn(\"Failed to save:\", err);\r\n        });\r\n    }\r\n}\r\n","import { TextualGameState } from \"../core/textual_game_state\";\r\nimport { SOUNDS } from \"../platform/sound\";\r\nimport { T } from \"../translations\";\r\nimport { KEYMAPPINGS, getStringForKeyCode } from \"../game/key_action_mapper\";\r\nimport { Dialog } from \"../core/modal_dialog_elements\";\r\nimport { IS_DEMO } from \"../core/config\";\r\n\r\nexport class KeybindingsState extends TextualGameState {\r\n    constructor() {\r\n        super(\"KeybindingsState\");\r\n    }\r\n\r\n    getStateHeaderTitle() {\r\n        return T.keybindings.title;\r\n    }\r\n\r\n    getMainContentHTML() {\r\n        return `\r\n\r\n            <div class=\"topEntries\">\r\n                <span class=\"hint\">${T.keybindings.hint}</span>\r\n                <button class=\"styledButton resetBindings\">${T.keybindings.resetKeybindings}</button>\r\n            \r\n            </div>\r\n\r\n            <div class=\"keybindings\">\r\n\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    onEnter() {\r\n        const keybindingsElem = this.htmlElement.querySelector(\".keybindings\");\r\n\r\n        this.trackClicks(this.htmlElement.querySelector(\".resetBindings\"), this.resetBindings);\r\n\r\n        for (const category in KEYMAPPINGS) {\r\n            const categoryDiv = document.createElement(\"div\");\r\n            categoryDiv.classList.add(\"category\");\r\n            keybindingsElem.appendChild(categoryDiv);\r\n\r\n            const labelDiv = document.createElement(\"strong\");\r\n            labelDiv.innerText = T.keybindings.categoryLabels[category];\r\n            labelDiv.classList.add(\"categoryLabel\");\r\n            categoryDiv.appendChild(labelDiv);\r\n\r\n            for (const keybindingId in KEYMAPPINGS[category]) {\r\n                const mapped = KEYMAPPINGS[category][keybindingId];\r\n\r\n                const elem = document.createElement(\"div\");\r\n                elem.classList.add(\"entry\");\r\n                elem.setAttribute(\"data-keybinding\", keybindingId);\r\n                categoryDiv.appendChild(elem);\r\n\r\n                const title = document.createElement(\"span\");\r\n                title.classList.add(\"title\");\r\n                title.innerText = T.keybindings.mappings[keybindingId];\r\n                elem.appendChild(title);\r\n\r\n                const mappingDiv = document.createElement(\"span\");\r\n                mappingDiv.classList.add(\"mapping\");\r\n                elem.appendChild(mappingDiv);\r\n\r\n                const editBtn = document.createElement(\"button\");\r\n                editBtn.classList.add(\"styledButton\", \"editKeybinding\");\r\n\r\n                const resetBtn = document.createElement(\"button\");\r\n                resetBtn.classList.add(\"styledButton\", \"resetKeybinding\");\r\n\r\n                if (mapped.builtin) {\r\n                    editBtn.classList.add(\"disabled\");\r\n                    resetBtn.classList.add(\"disabled\");\r\n                } else {\r\n                    this.trackClicks(editBtn, () => this.editKeybinding(keybindingId));\r\n                    this.trackClicks(resetBtn, () => this.resetKeybinding(keybindingId));\r\n                }\r\n                elem.appendChild(editBtn);\r\n                elem.appendChild(resetBtn);\r\n            }\r\n        }\r\n        this.updateKeybindings();\r\n    }\r\n\r\n    editKeybinding(id) {\r\n        // if (IS_DEMO) {\r\n        //     this.dialogs.showFeatureRestrictionInfo(T.demo.features.customizeKeybindings);\r\n        //     return;\r\n        // }\r\n\r\n        const dialog = new Dialog({\r\n            app: this.app,\r\n            title: T.dialogs.editKeybinding.title,\r\n            contentHTML: T.dialogs.editKeybinding.desc,\r\n            buttons: [\"cancel:good\"],\r\n            type: \"info\",\r\n        });\r\n\r\n        dialog.inputReciever.keydown.add(({ keyCode, shift, alt, event }) => {\r\n            if (keyCode === 27) {\r\n                this.dialogs.closeDialog(dialog);\r\n                return;\r\n            }\r\n\r\n            if (event) {\r\n                event.preventDefault();\r\n            }\r\n\r\n            if (event.target && event.target.tagName === \"BUTTON\" && keyCode === 1) {\r\n                return;\r\n            }\r\n\r\n            if (\r\n                // Enter\r\n                keyCode === 13\r\n            ) {\r\n                // Ignore builtins\r\n                return;\r\n            }\r\n\r\n            this.app.settings.updateKeybindingOverride(id, keyCode);\r\n\r\n            this.dialogs.closeDialog(dialog);\r\n            this.updateKeybindings();\r\n        });\r\n\r\n        dialog.inputReciever.backButton.add(() => {});\r\n        this.dialogs.internalShowDialog(dialog);\r\n\r\n        this.app.sound.playUiSound(SOUNDS.dialogOk);\r\n    }\r\n\r\n    updateKeybindings() {\r\n        const overrides = this.app.settings.getKeybindingOverrides();\r\n        for (const category in KEYMAPPINGS) {\r\n            for (const keybindingId in KEYMAPPINGS[category]) {\r\n                const mapped = KEYMAPPINGS[category][keybindingId];\r\n\r\n                const container = this.htmlElement.querySelector(\"[data-keybinding='\" + keybindingId + \"']\");\r\n                assert(container, \"Container for keybinding not found: \" + keybindingId);\r\n\r\n                let keyCode = mapped.keyCode;\r\n                if (overrides[keybindingId]) {\r\n                    keyCode = overrides[keybindingId];\r\n                }\r\n\r\n                const mappingDiv = container.querySelector(\".mapping\");\r\n                mappingDiv.innerHTML = getStringForKeyCode(keyCode);\r\n                mappingDiv.classList.toggle(\"changed\", !!overrides[keybindingId]);\r\n\r\n                const resetBtn = container.querySelector(\"button.resetKeybinding\");\r\n                resetBtn.classList.toggle(\"disabled\", mapped.builtin || !overrides[keybindingId]);\r\n            }\r\n        }\r\n    }\r\n\r\n    resetKeybinding(id) {\r\n        this.app.settings.resetKeybindingOverride(id);\r\n        this.updateKeybindings();\r\n    }\r\n\r\n    resetBindings() {\r\n        const { reset } = this.dialogs.showWarning(\r\n            T.dialogs.resetKeybindingsConfirmation.title,\r\n            T.dialogs.resetKeybindingsConfirmation.desc,\r\n            [\"cancel:good\", \"reset:bad\"]\r\n        );\r\n\r\n        reset.add(() => {\r\n            this.app.settings.resetKeybindingOverrides();\r\n            this.updateKeybindings();\r\n\r\n            this.dialogs.showInfo(T.dialogs.keybindingsResetOk.title, T.dialogs.keybindingsResetOk.desc);\r\n        });\r\n    }\r\n\r\n    getDefaultPreviousState() {\r\n        return \"SettingsState\";\r\n    }\r\n}\r\n","import { GameState } from \"../core/game_state\";\r\nimport { cachebust } from \"../core/cachebust\";\r\nimport { globalConfig, IS_DEBUG, IS_DEMO, THIRDPARTY_URLS } from \"../core/config\";\r\nimport {\r\n    makeDiv,\r\n    makeButtonElement,\r\n    formatSecondsToTimeAgo,\r\n    generateFileDownload,\r\n    waitNextFrame,\r\n    isSupportedBrowser,\r\n    makeButton,\r\n    removeAllChildren,\r\n} from \"../core/utils\";\r\nimport { ReadWriteProxy } from \"../core/read_write_proxy\";\r\nimport { HUDModalDialogs } from \"../game/hud/parts/modal_dialogs\";\r\nimport { T } from \"../translations\";\r\nimport { PlatformWrapperImplBrowser } from \"../platform/browser/wrapper\";\r\nimport { getApplicationSettingById } from \"../profile/application_settings\";\r\nimport { EnumSetting } from \"../profile/setting_types\";\r\n\r\nexport class MainMenuState extends GameState {\r\n    constructor() {\r\n        super(\"MainMenuState\");\r\n    }\r\n\r\n    getInnerHTML() {\r\n        const bannerHtml = `\r\n            <h3>${T.demoBanners.title}</h3>\r\n\r\n            <p>${T.demoBanners.intro}</p>\r\n\r\n            <a href=\"#\" class=\"steamLink\" target=\"_blank\">Get the shapez.io standalone!</a>\r\n        `;\r\n\r\n        return `\r\n\r\n            <div class=\"topButtons\">\r\n                <button class=\"languageChoose\" data-languageicon=\"${this.app.settings.getLanguage()}\"></button>\r\n                <button class=\"settingsButton\"></button>\r\n\r\n            ${\r\n                G_IS_STANDALONE || G_IS_DEV\r\n                    ? `\r\n                <button class=\"exitAppButton\"></button>\r\n            `\r\n                    : \"\"\r\n            }\r\n            </div>\r\n\r\n            <video autoplay muted loop class=\"fullscreenBackgroundVideo\">\r\n                <source src=\"${cachebust(\"res/bg_render.webm\")}\" type=\"video/webm\">\r\n            </video>\r\n\r\n\r\n            <div class=\"logo\">\r\n                <img src=\"${cachebust(\"res/logo.png\")}\" alt=\"shapez.io Logo\">\r\n                <span class=\"updateLabel\">Wires update!</span>\r\n            </div>\r\n\r\n\r\n            <div class=\"mainWrapper ${IS_DEMO ? \"demo\" : \"noDemo\"}\">\r\n\r\n                <div class=\"sideContainer\">\r\n                    ${IS_DEMO ? `<div class=\"standaloneBanner\">${bannerHtml}</div>` : \"\"}\r\n                </div>\r\n\r\n                <div class=\"mainContainer\">\r\n                    ${\r\n                        isSupportedBrowser()\r\n                            ? \"\"\r\n                            : `<div class=\"browserWarning\">${T.mainMenu.browserWarning}</div>`\r\n                    }\r\n                    <div class=\"buttons\"></div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"footer\">\r\n\r\n                <a class=\"githubLink boxLink\" target=\"_blank\">\r\n                    ${T.mainMenu.openSourceHint}\r\n                    <span class=\"thirdpartyLogo githubLogo\"></span>\r\n                </a>\r\n\r\n                <a class=\"discordLink boxLink\" target=\"_blank\">\r\n                    ${T.mainMenu.discordLink}\r\n                    <span class=\"thirdpartyLogo  discordLogo\"></span>\r\n                </a>\r\n\r\n                <div class=\"sidelinks\">\r\n                    <a class=\"redditLink\">${T.mainMenu.subreddit}</a>\r\n\r\n                    <a class=\"changelog\">${T.changelog.title}</a>\r\n\r\n                    <a class=\"helpTranslate\">${T.mainMenu.helpTranslate}</a>\r\n                </div>\r\n\r\n                <div class=\"author\">${T.mainMenu.madeBy.replace(\r\n                    \"<author-link>\",\r\n                    '<a class=\"producerLink\" target=\"_blank\">Tobias Springer</a>'\r\n                )}</div>\r\n\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    requestImportSavegame() {\r\n        if (\r\n            IS_DEMO &&\r\n            this.app.savegameMgr.getSavegamesMetaData().length > 0 &&\r\n            !this.app.platformWrapper.getHasUnlimitedSavegames()\r\n        ) {\r\n            this.app.analytics.trackUiClick(\"importgame_slot_limit_show\");\r\n            this.dialogs.showWarning(T.dialogs.oneSavegameLimit.title, T.dialogs.oneSavegameLimit.desc);\r\n            return;\r\n        }\r\n\r\n        var input = document.createElement(\"input\");\r\n        input.type = \"file\";\r\n        input.accept = \".bin\";\r\n\r\n        input.onchange = e => {\r\n            const file = input.files[0];\r\n            if (file) {\r\n                waitNextFrame().then(() => {\r\n                    this.app.analytics.trackUiClick(\"import_savegame\");\r\n                    const closeLoader = this.dialogs.showLoadingDialog();\r\n                    const reader = new FileReader();\r\n                    reader.addEventListener(\"load\", event => {\r\n                        // @ts-ignore\r\n                        const contents = event.target.result;\r\n                        let realContent;\r\n\r\n                        try {\r\n                            realContent = ReadWriteProxy.deserializeObject(contents);\r\n                        } catch (err) {\r\n                            closeLoader();\r\n                            this.dialogs.showWarning(\r\n                                T.dialogs.importSavegameError.title,\r\n                                T.dialogs.importSavegameError.text + \"<br><br>\" + err\r\n                            );\r\n                            return;\r\n                        }\r\n\r\n                        this.app.savegameMgr.importSavegame(realContent).then(\r\n                            () => {\r\n                                closeLoader();\r\n                                this.dialogs.showWarning(\r\n                                    T.dialogs.importSavegameSuccess.title,\r\n                                    T.dialogs.importSavegameSuccess.text\r\n                                );\r\n\r\n                                this.renderMainMenu();\r\n                                this.renderSavegames();\r\n                            },\r\n                            err => {\r\n                                closeLoader();\r\n                                this.dialogs.showWarning(\r\n                                    T.dialogs.importSavegameError.title,\r\n                                    T.dialogs.importSavegameError.text + \":<br><br>\" + err\r\n                                );\r\n                            }\r\n                        );\r\n                    });\r\n                    reader.addEventListener(\"error\", error => {\r\n                        this.dialogs.showWarning(\r\n                            T.dialogs.importSavegameError.title,\r\n                            T.dialogs.importSavegameError.text + \":<br><br>\" + error\r\n                        );\r\n                    });\r\n                    reader.readAsText(file, \"utf-8\");\r\n                });\r\n            }\r\n        };\r\n        input.click();\r\n    }\r\n\r\n    onBackButton() {\r\n        this.app.platformWrapper.exitApp();\r\n    }\r\n\r\n    onEnter(payload) {\r\n        this.dialogs = new HUDModalDialogs(null, this.app);\r\n        const dialogsElement = document.body.querySelector(\".modalDialogParent\");\r\n        this.dialogs.initializeToElement(dialogsElement);\r\n\r\n        if (payload.loadError) {\r\n            this.dialogs.showWarning(\r\n                T.dialogs.gameLoadFailure.title,\r\n                T.dialogs.gameLoadFailure.text + \"<br><br>\" + payload.loadError\r\n            );\r\n        }\r\n\r\n        const qs = this.htmlElement.querySelector.bind(this.htmlElement);\r\n\r\n        if (G_IS_DEV && globalConfig.debug.fastGameEnter) {\r\n            const games = this.app.savegameMgr.getSavegamesMetaData();\r\n            if (games.length > 0 && globalConfig.debug.resumeGameOnFastEnter) {\r\n                this.resumeGame(games[0]);\r\n            } else {\r\n                this.onPlayButtonClicked();\r\n            }\r\n        }\r\n\r\n        // Initialize video\r\n        this.videoElement = this.htmlElement.querySelector(\"video\");\r\n        this.videoElement.playbackRate = 0.9;\r\n        this.videoElement.addEventListener(\"canplay\", () => {\r\n            if (this.videoElement) {\r\n                this.videoElement.classList.add(\"loaded\");\r\n            }\r\n        });\r\n\r\n        this.trackClicks(qs(\".settingsButton\"), this.onSettingsButtonClicked);\r\n        this.trackClicks(qs(\".changelog\"), this.onChangelogClicked);\r\n        this.trackClicks(qs(\".redditLink\"), this.onRedditClicked);\r\n        this.trackClicks(qs(\".languageChoose\"), this.onLanguageChooseClicked);\r\n        this.trackClicks(qs(\".helpTranslate\"), this.onTranslationHelpLinkClicked);\r\n\r\n        if (G_IS_STANDALONE) {\r\n            this.trackClicks(qs(\".exitAppButton\"), this.onExitAppButtonClicked);\r\n        }\r\n\r\n        this.renderMainMenu();\r\n        this.renderSavegames();\r\n\r\n        const steamLink = this.htmlElement.querySelector(\".steamLink\");\r\n        if (steamLink) {\r\n            this.trackClicks(steamLink, () => this.onSteamLinkClicked(), { preventClick: true });\r\n        }\r\n\r\n        const discordLink = this.htmlElement.querySelector(\".discordLink\");\r\n        this.trackClicks(\r\n            discordLink,\r\n            () => this.app.platformWrapper.openExternalLink(THIRDPARTY_URLS.discord),\r\n            { preventClick: true }\r\n        );\r\n\r\n        const githubLink = this.htmlElement.querySelector(\".githubLink\");\r\n        this.trackClicks(\r\n            githubLink,\r\n            () => this.app.platformWrapper.openExternalLink(THIRDPARTY_URLS.github),\r\n            { preventClick: true }\r\n        );\r\n\r\n        const producerLink = this.htmlElement.querySelector(\".producerLink\");\r\n        this.trackClicks(\r\n            producerLink,\r\n            () => this.app.platformWrapper.openExternalLink(\"https://tobspr.com\"),\r\n            { preventClick: true }\r\n        );\r\n    }\r\n\r\n    renderMainMenu() {\r\n        const buttonContainer = this.htmlElement.querySelector(\".mainContainer .buttons\");\r\n        removeAllChildren(buttonContainer);\r\n\r\n        // Import button\r\n        const importButtonElement = makeButtonElement(\r\n            [\"importButton\", \"styledButton\"],\r\n            T.mainMenu.importSavegame\r\n        );\r\n        this.trackClicks(importButtonElement, this.requestImportSavegame);\r\n\r\n        if (this.savedGames.length > 0) {\r\n            // Continue game\r\n            const continueButton = makeButton(\r\n                buttonContainer,\r\n                [\"continueButton\", \"styledButton\"],\r\n                T.mainMenu.continue\r\n            );\r\n            this.trackClicks(continueButton, this.onContinueButtonClicked);\r\n\r\n            const outerDiv = makeDiv(buttonContainer, null, [\"outer\"], null);\r\n            outerDiv.appendChild(importButtonElement);\r\n            const newGameButton = makeButton(\r\n                this.htmlElement.querySelector(\".mainContainer .outer\"),\r\n                [\"newGameButton\", \"styledButton\"],\r\n                T.mainMenu.newGame\r\n            );\r\n            this.trackClicks(newGameButton, this.onPlayButtonClicked);\r\n        } else {\r\n            // New game\r\n            const playBtn = makeButton(buttonContainer, [\"playButton\", \"styledButton\"], T.mainMenu.play);\r\n            this.trackClicks(playBtn, this.onPlayButtonClicked);\r\n            buttonContainer.appendChild(importButtonElement);\r\n        }\r\n    }\r\n\r\n    onSteamLinkClicked() {\r\n        this.app.analytics.trackUiClick(\"main_menu_steam_link_2\");\r\n        this.app.platformWrapper.openExternalLink(THIRDPARTY_URLS.standaloneStorePage);\r\n        return false;\r\n    }\r\n\r\n    onExitAppButtonClicked() {\r\n        this.app.platformWrapper.exitApp();\r\n    }\r\n\r\n    onChangelogClicked() {\r\n        this.moveToState(\"ChangelogState\");\r\n    }\r\n\r\n    onRedditClicked() {\r\n        this.app.analytics.trackUiClick(\"main_menu_reddit_link\");\r\n        this.app.platformWrapper.openExternalLink(THIRDPARTY_URLS.reddit);\r\n    }\r\n\r\n    onLanguageChooseClicked() {\r\n        this.app.analytics.trackUiClick(\"choose_language\");\r\n        const setting = /** @type {EnumSetting} */ (getApplicationSettingById(\"language\"));\r\n\r\n        const { optionSelected } = this.dialogs.showOptionChooser(T.settings.labels.language.title, {\r\n            active: this.app.settings.getLanguage(),\r\n            options: setting.options.map(option => ({\r\n                value: setting.valueGetter(option),\r\n                text: setting.textGetter(option),\r\n                desc: setting.descGetter(option),\r\n                iconPrefix: setting.iconPrefix,\r\n            })),\r\n        });\r\n\r\n        optionSelected.add(value => {\r\n            this.app.settings.updateLanguage(value);\r\n            if (setting.restartRequired) {\r\n                if (this.app.platformWrapper.getSupportsRestart()) {\r\n                    this.app.platformWrapper.performRestart();\r\n                } else {\r\n                    this.dialogs.showInfo(T.dialogs.restartRequired.title, T.dialogs.restartRequired.text, [\r\n                        \"ok:good\",\r\n                    ]);\r\n                }\r\n            }\r\n\r\n            if (setting.changeCb) {\r\n                setting.changeCb(this.app, value);\r\n            }\r\n\r\n            // Update current icon\r\n            this.htmlElement.querySelector(\"button.languageChoose\").setAttribute(\"data-languageIcon\", value);\r\n        }, this);\r\n    }\r\n\r\n    get savedGames() {\r\n        return this.app.savegameMgr.getSavegamesMetaData();\r\n    }\r\n\r\n    renderSavegames() {\r\n        const oldContainer = this.htmlElement.querySelector(\".mainContainer .savegames\");\r\n        if (oldContainer) {\r\n            oldContainer.remove();\r\n        }\r\n        const games = this.savedGames;\r\n        if (games.length > 0) {\r\n            const parent = makeDiv(this.htmlElement.querySelector(\".mainContainer\"), null, [\"savegames\"]);\r\n\r\n            for (let i = 0; i < games.length; ++i) {\r\n                const elem = makeDiv(parent, null, [\"savegame\"]);\r\n\r\n                makeDiv(\r\n                    elem,\r\n                    null,\r\n                    [\"playtime\"],\r\n                    formatSecondsToTimeAgo((new Date().getTime() - games[i].lastUpdate) / 1000.0)\r\n                );\r\n\r\n                makeDiv(\r\n                    elem,\r\n                    null,\r\n                    [\"level\"],\r\n                    games[i].level\r\n                        ? T.mainMenu.savegameLevel.replace(\"<x>\", \"\" + games[i].level)\r\n                        : T.mainMenu.savegameLevelUnknown\r\n                );\r\n\r\n                const deleteButton = document.createElement(\"button\");\r\n                deleteButton.classList.add(\"styledButton\", \"deleteGame\");\r\n                elem.appendChild(deleteButton);\r\n\r\n                const downloadButton = document.createElement(\"button\");\r\n                downloadButton.classList.add(\"styledButton\", \"downloadGame\");\r\n                elem.appendChild(downloadButton);\r\n\r\n                const resumeButton = document.createElement(\"button\");\r\n                resumeButton.classList.add(\"styledButton\", \"resumeGame\");\r\n                elem.appendChild(resumeButton);\r\n\r\n                this.trackClicks(deleteButton, () => this.deleteGame(games[i]));\r\n                this.trackClicks(downloadButton, () => this.downloadGame(games[i]));\r\n                this.trackClicks(resumeButton, () => this.resumeGame(games[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {object} game\r\n     */\r\n    resumeGame(game) {\r\n        this.app.analytics.trackUiClick(\"resume_game\");\r\n\r\n        this.app.adProvider.showVideoAd().then(() => {\r\n            this.app.analytics.trackUiClick(\"resume_game_adcomplete\");\r\n            const savegame = this.app.savegameMgr.getSavegameById(game.internalId);\r\n            savegame\r\n                .readAsync()\r\n                .then(() => {\r\n                    this.moveToState(\"InGameState\", {\r\n                        savegame,\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    this.dialogs.showWarning(\r\n                        T.dialogs.gameLoadFailure.title,\r\n                        T.dialogs.gameLoadFailure.text + \"<br><br>\" + err\r\n                    );\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {object} game\r\n     */\r\n    deleteGame(game) {\r\n        this.app.analytics.trackUiClick(\"delete_game\");\r\n\r\n        const signals = this.dialogs.showWarning(\r\n            T.dialogs.confirmSavegameDelete.title,\r\n            T.dialogs.confirmSavegameDelete.text,\r\n            [\"delete:bad\", \"cancel:good\"]\r\n        );\r\n\r\n        signals.delete.add(() => {\r\n            this.app.savegameMgr.deleteSavegame(game).then(\r\n                () => {\r\n                    this.renderSavegames();\r\n                    if (this.savedGames.length <= 0) this.renderMainMenu();\r\n                },\r\n                err => {\r\n                    this.dialogs.showWarning(\r\n                        T.dialogs.savegameDeletionError.title,\r\n                        T.dialogs.savegameDeletionError.text + \"<br><br>\" + err\r\n                    );\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {object} game\r\n     */\r\n    downloadGame(game) {\r\n        this.app.analytics.trackUiClick(\"download_game\");\r\n\r\n        const savegame = this.app.savegameMgr.getSavegameById(game.internalId);\r\n        savegame.readAsync().then(() => {\r\n            const data = ReadWriteProxy.serializeObject(savegame.currentData);\r\n            generateFileDownload(savegame.filename, data);\r\n        });\r\n    }\r\n\r\n    onSettingsButtonClicked() {\r\n        this.moveToState(\"SettingsState\");\r\n    }\r\n\r\n    onTranslationHelpLinkClicked() {\r\n        this.app.analytics.trackUiClick(\"translation_help_link\");\r\n        this.app.platformWrapper.openExternalLink(\r\n            \"https://github.com/tobspr/shapez.io/blob/master/translations\"\r\n        );\r\n    }\r\n\r\n    onPlayButtonClicked() {\r\n        if (\r\n            IS_DEMO &&\r\n            this.app.savegameMgr.getSavegamesMetaData().length > 0 &&\r\n            !this.app.platformWrapper.getHasUnlimitedSavegames()\r\n        ) {\r\n            this.app.analytics.trackUiClick(\"startgame_slot_limit_show\");\r\n            this.dialogs.showWarning(T.dialogs.oneSavegameLimit.title, T.dialogs.oneSavegameLimit.desc);\r\n            return;\r\n        }\r\n\r\n        this.app.analytics.trackUiClick(\"startgame\");\r\n        this.app.adProvider.showVideoAd().then(() => {\r\n            const savegame = this.app.savegameMgr.createNewSavegame();\r\n\r\n            this.moveToState(\"InGameState\", {\r\n                savegame,\r\n            });\r\n            this.app.analytics.trackUiClick(\"startgame_adcomplete\");\r\n        });\r\n    }\r\n\r\n    onContinueButtonClicked() {\r\n        let latestLastUpdate = 0;\r\n        let latestInternalId;\r\n        this.app.savegameMgr.currentData.savegames.forEach(saveGame => {\r\n            if (saveGame.lastUpdate > latestLastUpdate) {\r\n                latestLastUpdate = saveGame.lastUpdate;\r\n                latestInternalId = saveGame.internalId;\r\n            }\r\n        });\r\n\r\n        const savegame = this.app.savegameMgr.getSavegameById(latestInternalId);\r\n        savegame.readAsync().then(() => {\r\n            this.moveToState(\"InGameState\", {\r\n                savegame,\r\n            });\r\n        });\r\n    }\r\n\r\n    onLeave() {\r\n        this.dialogs.cleanup();\r\n    }\r\n}\r\n","import { GameState } from \"../core/game_state\";\r\nimport { cachebust } from \"../core/cachebust\";\r\nimport { THIRDPARTY_URLS } from \"../core/config\";\r\n\r\nexport class MobileWarningState extends GameState {\r\n    constructor() {\r\n        super(\"MobileWarningState\");\r\n    }\r\n\r\n    getInnerHTML() {\r\n        return `\r\n    \r\n            <img class=\"logo\" src=\"${cachebust(\"res/logo.png\")}\" alt=\"shapez.io Logo\">\r\n\r\n            <p>\r\n                I'm sorry, but shapez.io is not available on mobile devices yet!\r\n                There is also no estimate when this will change, but feel to make a contribution! It's\r\n                &nbsp;<a href=\"https://github.com/tobspr/shapez.io\" target=\"_blank\">open source</a>!</p>\r\n            \r\n            <p>If you want to play on your computer, you can also get the standalone on steam:</p>\r\n\r\n            \r\n            <a href=\"${\r\n                THIRDPARTY_URLS.standaloneStorePage\r\n            }\" class=\"standaloneLink\" target=\"_blank\">Get the shapez.io standalone!</a>\r\n        `;\r\n    }\r\n\r\n    getThemeMusic() {\r\n        return null;\r\n    }\r\n\r\n    getHasFadeIn() {\r\n        return false;\r\n    }\r\n\r\n    onEnter() {\r\n        try {\r\n            if (window.gtag) {\r\n                window.gtag(\"event\", \"click\", {\r\n                    event_category: \"ui\",\r\n                    event_label: \"mobile_warning\",\r\n                });\r\n            }\r\n        } catch (ex) {\r\n            console.warn(\"Failed to track mobile click:\", ex);\r\n        }\r\n    }\r\n    onLeave() {\r\n        // this.dialogs.cleanup();\r\n    }\r\n}\r\n","import { GameState } from \"../core/game_state\";\r\nimport { createLogger } from \"../core/logging\";\r\nimport { findNiceValue, waitNextFrame } from \"../core/utils\";\r\nimport { cachebust } from \"../core/cachebust\";\r\nimport { PlatformWrapperImplBrowser } from \"../platform/browser/wrapper\";\r\nimport { T, autoDetectLanguageId, updateApplicationLanguage } from \"../translations\";\r\nimport { HUDModalDialogs } from \"../game/hud/parts/modal_dialogs\";\r\nimport { CHANGELOG } from \"../changelog\";\r\nimport { globalConfig } from \"../core/config\";\r\n\r\nconst logger = createLogger(\"state/preload\");\r\n\r\nexport class PreloadState extends GameState {\r\n    constructor() {\r\n        super(\"PreloadState\");\r\n    }\r\n\r\n    getInnerHTML() {\r\n        return `\r\n            <div class=\"loadingImage\"></div>\r\n            <div class=\"loadingStatus\">\r\n                <span class=\"desc\">Booting</span>\r\n                <span class=\"bar\">\r\n                    <span class=\"inner\" style=\"width: 0%\"></span>\r\n                    <span class=\"status\">0%</span>\r\n                </span>\r\n            </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    getThemeMusic() {\r\n        return null;\r\n    }\r\n\r\n    getHasFadeIn() {\r\n        return false;\r\n    }\r\n\r\n    onEnter() {\r\n        this.htmlElement.classList.add(\"prefab_LoadingState\");\r\n\r\n        const elementsToRemove = [\"#loadingPreload\", \"#fontPreload\"];\r\n        for (let i = 0; i < elementsToRemove.length; ++i) {\r\n            const elem = document.querySelector(elementsToRemove[i]);\r\n            if (elem) {\r\n                elem.remove();\r\n            }\r\n        }\r\n\r\n        this.dialogs = new HUDModalDialogs(null, this.app);\r\n        const dialogsElement = document.body.querySelector(\".modalDialogParent\");\r\n        this.dialogs.initializeToElement(dialogsElement);\r\n\r\n        /** @type {HTMLElement} */\r\n        this.statusText = this.htmlElement.querySelector(\".loadingStatus > .desc\");\r\n        /** @type {HTMLElement} */\r\n        this.statusBar = this.htmlElement.querySelector(\".loadingStatus > .bar > .inner\");\r\n        /** @type {HTMLElement} */\r\n        this.statusBarText = this.htmlElement.querySelector(\".loadingStatus > .bar > .status\");\r\n\r\n        this.currentStatus = \"booting\";\r\n        this.currentIndex = 0;\r\n\r\n        this.startLoading();\r\n    }\r\n\r\n    onLeave() {\r\n        // this.dialogs.cleanup();\r\n    }\r\n\r\n    startLoading() {\r\n        this.setStatus(\"Booting\")\r\n\r\n            .then(() => this.setStatus(\"Creating platform wrapper\"))\r\n            .then(() => this.app.platformWrapper.initialize())\r\n\r\n            .then(() => this.setStatus(\"Initializing local storage\"))\r\n            .then(() => {\r\n                const wrapper = this.app.platformWrapper;\r\n                if (wrapper instanceof PlatformWrapperImplBrowser) {\r\n                    try {\r\n                        window.localStorage.setItem(\"local_storage_test\", \"1\");\r\n                        window.localStorage.removeItem(\"local_storage_test\");\r\n                    } catch (ex) {\r\n                        logger.error(\"Failed to read/write local storage:\", ex);\r\n                        return new Promise(() => {\r\n                            alert(`Your brower does not support thirdparty cookies or you have disabled it in your security settings.\\n\\n\r\n                                In Chrome this setting is called \"Block third-party cookies and site data\".\\n\\n\r\n                                Please allow third party cookies and then reload the page.`);\r\n                            // Never return\r\n                        });\r\n                    }\r\n                }\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Creating storage\"))\r\n            .then(() => {\r\n                return this.app.storage.initialize();\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Initializing libraries\"))\r\n            .then(() => this.app.analytics.initialize())\r\n            .then(() => this.app.gameAnalytics.initialize())\r\n\r\n            .then(() => this.setStatus(\"Initializing settings\"))\r\n            .then(() => {\r\n                return this.app.settings.initialize();\r\n            })\r\n\r\n            .then(() => {\r\n                // Initialize fullscreen\r\n                if (this.app.platformWrapper.getSupportsFullscreen()) {\r\n                    this.app.platformWrapper.setFullscreen(this.app.settings.getIsFullScreen());\r\n                }\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Initializing language\"))\r\n            .then(() => {\r\n                if (this.app.settings.getLanguage() === \"auto-detect\") {\r\n                    const language = autoDetectLanguageId();\r\n                    logger.log(\"Setting language to\", language);\r\n                    return this.app.settings.updateLanguage(language);\r\n                }\r\n            })\r\n            .then(() => {\r\n                const language = this.app.settings.getLanguage();\r\n                updateApplicationLanguage(language);\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Initializing sounds\"))\r\n            .then(() => {\r\n                // Notice: We don't await the sounds loading itself\r\n                return this.app.sound.initialize();\r\n            })\r\n\r\n            .then(() => {\r\n                this.app.backgroundResourceLoader.startLoading();\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Initializing savegame\"))\r\n            .then(() => {\r\n                return this.app.savegameMgr.initialize().catch(err => {\r\n                    logger.error(\"Failed to initialize savegames:\", err);\r\n                    alert(\r\n                        \"Your savegames failed to load, it seems your data files got corrupted. I'm so sorry!\\n\\n(This can happen if your pc crashed while a game was saved).\\n\\nYou can try re-importing your savegames.\"\r\n                    );\r\n                    return this.app.savegameMgr.writeAsync();\r\n                });\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Downloading resources\"))\r\n            .then(() => {\r\n                return this.app.backgroundResourceLoader.getPromiseForBareGame();\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Checking changelog\"))\r\n            .then(() => {\r\n                if (G_IS_DEV && globalConfig.debug.disableUpgradeNotification) {\r\n                    return;\r\n                }\r\n\r\n                return this.app.storage\r\n                    .readFileAsync(\"lastversion.bin\")\r\n                    .catch(err => {\r\n                        logger.warn(\"Failed to read lastversion:\", err);\r\n                        return G_BUILD_VERSION;\r\n                    })\r\n                    .then(version => {\r\n                        logger.log(\"Last version:\", version, \"App version:\", G_BUILD_VERSION);\r\n                        this.app.storage.writeFileAsync(\"lastversion.bin\", G_BUILD_VERSION);\r\n                        return version;\r\n                    })\r\n                    .then(version => {\r\n                        let changelogEntries = [];\r\n                        logger.log(\"Last seen version:\", version);\r\n\r\n                        for (let i = 0; i < CHANGELOG.length; ++i) {\r\n                            if (CHANGELOG[i].version === version) {\r\n                                break;\r\n                            }\r\n                            changelogEntries.push(CHANGELOG[i]);\r\n                        }\r\n                        if (changelogEntries.length === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        let dialogHtml = T.dialogs.updateSummary.desc;\r\n                        for (let i = 0; i < changelogEntries.length; ++i) {\r\n                            const entry = changelogEntries[i];\r\n                            dialogHtml += `\r\n                            <div class=\"changelogDialogEntry\">\r\n                                <span class=\"version\">${entry.version}</span>\r\n                                <span class=\"date\">${entry.date}</span>\r\n                                <ul class=\"changes\">\r\n                                    ${entry.entries.map(text => `<li>${text}</li>`).join(\"\")}\r\n                                </ul>\r\n                            </div>\r\n                        `;\r\n                        }\r\n\r\n                        return new Promise(resolve => {\r\n                            this.dialogs.showInfo(T.dialogs.updateSummary.title, dialogHtml).ok.add(resolve);\r\n                        });\r\n                    });\r\n            })\r\n\r\n            .then(() => this.setStatus(\"Launching\"))\r\n            .then(\r\n                () => {\r\n                    this.moveToState(\"MainMenuState\");\r\n                },\r\n                err => {\r\n                    this.showFailMessage(err);\r\n                }\r\n            );\r\n    }\r\n\r\n    setStatus(text) {\r\n        logger.log(\"✅ \" + text);\r\n        this.currentIndex += 1;\r\n        this.currentStatus = text;\r\n        this.statusText.innerText = text;\r\n\r\n        const numSteps = 10; // FIXME\r\n\r\n        const percentage = (this.currentIndex / numSteps) * 100.0;\r\n        this.statusBar.style.width = percentage + \"%\";\r\n        this.statusBarText.innerText = findNiceValue(percentage) + \"%\";\r\n\r\n        if (G_IS_DEV) {\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.resolve();\r\n        // return waitNextFrame();\r\n    }\r\n\r\n    showFailMessage(text) {\r\n        logger.error(\"App init failed:\", text);\r\n\r\n        const email = \"bugs@shapez.io\";\r\n\r\n        const subElement = document.createElement(\"div\");\r\n        subElement.classList.add(\"failureBox\");\r\n\r\n        subElement.innerHTML = `\r\n                <div class=\"logo\">\r\n                    <img src=\"${cachebust(\"res/logo.png\")}\" alt=\"Shapez.io Logo\">\r\n                </div>\r\n                <div class=\"failureInner\">\r\n                    <div class=\"errorHeader\">\r\n                    Failed to initialize application!\r\n                    </div>\r\n                    <div class=\"errorMessage\">\r\n                        ${this.currentStatus} failed:<br/>\r\n                        ${text}\r\n                    </div>\r\n\r\n                    <div class=\"supportHelp\">\r\n                    Please send me an email with steps to reproduce and what you did before this happened:\r\n                        <br /><a class=\"email\" href=\"mailto:${email}?subject=App%20does%20not%20launch\">${email}</a>\r\n                    </div>\r\n\r\n                    <div class=\"lower\">\r\n                        <button class=\"resetApp styledButton\">Reset App</button>\r\n                        <i>Build ${G_BUILD_VERSION} @ ${G_BUILD_COMMIT_HASH}</i>\r\n                    </div>\r\n                </div>\r\n        `;\r\n\r\n        this.htmlElement.classList.add(\"failure\");\r\n        this.htmlElement.appendChild(subElement);\r\n\r\n        const resetBtn = subElement.querySelector(\"button.resetApp\");\r\n        this.trackClicks(resetBtn, this.showResetConfirm);\r\n    }\r\n\r\n    showResetConfirm() {\r\n        if (confirm(\"Are you sure you want to reset the app? This will delete all your savegames\")) {\r\n            this.resetApp();\r\n        }\r\n        // const signals = this.dialogs.showWarning(T.preload.reset_app_warning.title, T.preload.reset_app_warning.desc, [\r\n        //     \"delete:bad:timeout\",\r\n        //     \"cancel:good\",\r\n        // ]);\r\n        // signals.delete.add(this.resetApp, this);\r\n    }\r\n\r\n    resetApp() {\r\n        this.app.settings\r\n            .resetEverythingAsync()\r\n            .then(() => {\r\n                this.app.savegameMgr.resetEverythingAsync();\r\n            })\r\n            .then(() => {\r\n                this.app.settings.resetEverythingAsync();\r\n            })\r\n            .then(() => {\r\n                window.location.reload();\r\n            });\r\n    }\r\n}\r\n","import { TextualGameState } from \"../core/textual_game_state\";\r\nimport { formatSecondsToTimeAgo } from \"../core/utils\";\r\nimport { allApplicationSettings, enumCategories } from \"../profile/application_settings\";\r\nimport { T } from \"../translations\";\r\n\r\nexport class SettingsState extends TextualGameState {\r\n    constructor() {\r\n        super(\"SettingsState\");\r\n    }\r\n\r\n    getStateHeaderTitle() {\r\n        return T.settings.title;\r\n    }\r\n\r\n    getMainContentHTML() {\r\n        return `\r\n\r\n        <div class=\"sidebar\">\r\n            ${this.getCategoryButtonsHtml()}\r\n\r\n            ${\r\n                this.app.platformWrapper.getSupportsKeyboard()\r\n                    ? `\r\n            <button class=\"styledButton categoryButton editKeybindings\">\r\n            ${T.keybindings.title}\r\n            </button>`\r\n                    : \"\"\r\n            }\r\n\r\n            <div class=\"other\">\r\n                <button class=\"styledButton about\">${T.about.title}</button>\r\n\r\n                <div class=\"versionbar\">\r\n                    <div class=\"buildVersion\">${T.global.loading} ...</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"categoryContainer\">\r\n            ${this.getSettingsHtml()}\r\n        </div>\r\n\r\n        `;\r\n    }\r\n\r\n    getCategoryButtonsHtml() {\r\n        return Object.keys(enumCategories)\r\n            .map(key => enumCategories[key])\r\n            .map(\r\n                category =>\r\n                    `\r\n                    <button class=\"styledButton categoryButton\" data-category-btn=\"${category}\">\r\n                        ${T.settings.categories[category]}\r\n                    </button>\r\n                    `\r\n            )\r\n            .join(\"\");\r\n    }\r\n\r\n    getSettingsHtml() {\r\n        const categoriesHTML = {};\r\n\r\n        Object.keys(enumCategories).forEach(key => {\r\n            const catName = enumCategories[key];\r\n            categoriesHTML[catName] = `<div class=\"category\" data-category=\"${catName}\">`;\r\n        });\r\n\r\n        for (let i = 0; i < allApplicationSettings.length; ++i) {\r\n            const setting = allApplicationSettings[i];\r\n\r\n            categoriesHTML[setting.categoryId] += setting.getHtml();\r\n        }\r\n\r\n        return Object.keys(categoriesHTML)\r\n            .map(k => categoriesHTML[k] + \"</div>\")\r\n            .join(\"\");\r\n    }\r\n\r\n    renderBuildText() {\r\n        const labelVersion = this.htmlElement.querySelector(\".buildVersion\");\r\n        const lastBuildMs = new Date().getTime() - G_BUILD_TIME;\r\n        const lastBuildText = formatSecondsToTimeAgo(lastBuildMs / 1000.0);\r\n\r\n        const version = T.settings.versionBadges[G_APP_ENVIRONMENT];\r\n\r\n        labelVersion.innerHTML = `\r\n            <span class='version'>\r\n                ${G_BUILD_VERSION} @ ${version} @ ${G_BUILD_COMMIT_HASH}\r\n            </span>\r\n            <span class='buildTime'>\r\n                ${T.settings.buildDate.replace(\"<at-date>\", lastBuildText)}<br />\r\n            </span>`;\r\n    }\r\n\r\n    onEnter(payload) {\r\n        this.renderBuildText();\r\n        this.trackClicks(this.htmlElement.querySelector(\".about\"), this.onAboutClicked, {\r\n            preventDefault: false,\r\n        });\r\n\r\n        const keybindingsButton = this.htmlElement.querySelector(\".editKeybindings\");\r\n\r\n        if (keybindingsButton) {\r\n            this.trackClicks(keybindingsButton, this.onKeybindingsClicked, { preventDefault: false });\r\n        }\r\n\r\n        this.initSettings();\r\n        this.initCategoryButtons();\r\n\r\n        this.htmlElement.querySelector(\".category\").classList.add(\"active\");\r\n        this.htmlElement.querySelector(\".categoryButton\").classList.add(\"active\");\r\n    }\r\n\r\n    setActiveCategory(category) {\r\n        const previousCategory = this.htmlElement.querySelector(\".category.active\");\r\n        const previousCategoryButton = this.htmlElement.querySelector(\".categoryButton.active\");\r\n\r\n        if (previousCategory.getAttribute(\"data-category\") == category) {\r\n            return;\r\n        }\r\n\r\n        previousCategory.classList.remove(\"active\");\r\n        previousCategoryButton.classList.remove(\"active\");\r\n\r\n        const newCategory = this.htmlElement.querySelector(\"[data-category='\" + category + \"']\");\r\n        const newCategoryButton = this.htmlElement.querySelector(\"[data-category-btn='\" + category + \"']\");\r\n\r\n        newCategory.classList.add(\"active\");\r\n        newCategoryButton.classList.add(\"active\");\r\n    }\r\n\r\n    initSettings() {\r\n        allApplicationSettings.forEach(setting => {\r\n            /** @type {HTMLElement} */\r\n            const element = this.htmlElement.querySelector(\"[data-setting='\" + setting.id + \"']\");\r\n            setting.bind(this.app, element, this.dialogs);\r\n            setting.syncValueToElement();\r\n            this.trackClicks(\r\n                element,\r\n                () => {\r\n                    setting.modify();\r\n                },\r\n                { preventDefault: false }\r\n            );\r\n        });\r\n    }\r\n\r\n    initCategoryButtons() {\r\n        Object.keys(enumCategories).forEach(key => {\r\n            const category = enumCategories[key];\r\n            const button = this.htmlElement.querySelector(\"[data-category-btn='\" + category + \"']\");\r\n            this.trackClicks(\r\n                button,\r\n                () => {\r\n                    this.setActiveCategory(category);\r\n                },\r\n                { preventDefault: false }\r\n            );\r\n        });\r\n    }\r\n\r\n    onAboutClicked() {\r\n        this.moveToStateAddGoBack(\"AboutState\");\r\n    }\r\n\r\n    onKeybindingsClicked() {\r\n        this.moveToStateAddGoBack(\"KeybindingsState\");\r\n    }\r\n}\r\n","import { globalConfig } from \"./core/config\";\r\nimport { createLogger } from \"./core/logging\";\r\nimport { LANGUAGES } from \"./languages\";\r\n\r\nconst logger = createLogger(\"translations\");\r\n\r\n// @ts-ignore\r\nconst baseTranslations = require(\"./built-temp/base-en.json\");\r\n\r\nexport let T = baseTranslations;\r\n\r\nif (G_IS_DEV && globalConfig.debug.testTranslations) {\r\n    // Replaces all translations by fake translations to see whats translated and what not\r\n    const mapTranslations = obj => {\r\n        for (const key in obj) {\r\n            const value = obj[key];\r\n            if (typeof value === \"string\") {\r\n                obj[key] = value.replace(/[a-z]/gi, \"x\");\r\n            } else {\r\n                mapTranslations(value);\r\n            }\r\n        }\r\n    };\r\n    mapTranslations(T);\r\n}\r\n\r\nexport function applyLanguage(languageCode) {\r\n    logger.log(\"Applying language:\", languageCode);\r\n    const data = LANGUAGES[languageCode];\r\n    if (!data) {\r\n        logger.error(\"Language not found:\", languageCode);\r\n        return false;\r\n    }\r\n}\r\n\r\n// Language key is something like de-DE or en or en-US\r\nfunction mapLanguageCodeToId(languageKey) {\r\n    const key = languageKey.toLowerCase();\r\n    const shortKey = key.split(\"-\")[0];\r\n\r\n    // Try to match by key or short key\r\n    for (const id in LANGUAGES) {\r\n        const data = LANGUAGES[id];\r\n        const code = data.code.toLowerCase();\r\n        if (code === key) {\r\n            console.log(\"-> Match\", languageKey, \"->\", id);\r\n            return id;\r\n        }\r\n        if (code === shortKey) {\r\n            console.log(\"-> Match by short key\", languageKey, \"->\", id);\r\n            return id;\r\n        }\r\n    }\r\n\r\n    // If none found, try to find a better alternative by using the base language at least\r\n    for (const id in LANGUAGES) {\r\n        const data = LANGUAGES[id];\r\n        const code = data.code.toLowerCase();\r\n        const shortCode = code.split(\"-\")[0];\r\n\r\n        if (shortCode === key) {\r\n            console.log(\"-> Desperate Match\", languageKey, \"->\", id);\r\n            return id;\r\n        }\r\n        if (shortCode === shortKey) {\r\n            console.log(\"-> Desperate Match by short key\", languageKey, \"->\", id);\r\n            return id;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Tries to auto-detect a language\r\n * @returns {string}\r\n */\r\nexport function autoDetectLanguageId() {\r\n    let languages = [];\r\n    if (navigator.languages) {\r\n        languages = navigator.languages.slice();\r\n    } else if (navigator.language) {\r\n        languages = [navigator.language];\r\n    } else {\r\n        logger.warn(\"Navigator has no languages prop\");\r\n    }\r\n\r\n    for (let i = 0; i < languages.length; ++i) {\r\n        logger.log(\"Trying to find language target for\", languages[i]);\r\n        const trans = mapLanguageCodeToId(languages[i]);\r\n        if (trans) {\r\n            return trans;\r\n        }\r\n    }\r\n\r\n    // Fallback\r\n    return \"en\";\r\n}\r\n\r\nfunction matchDataRecursive(dest, src) {\r\n    if (typeof dest !== \"object\" || typeof src !== \"object\") {\r\n        return;\r\n    }\r\n\r\n    for (const key in dest) {\r\n        if (src[key]) {\r\n            // console.log(\"copy\", key);\r\n            const data = dest[key];\r\n            if (typeof data === \"object\") {\r\n                matchDataRecursive(dest[key], src[key]);\r\n            } else if (typeof data === \"string\" || typeof data === \"number\") {\r\n                // console.log(\"match string\", key);\r\n                dest[key] = src[key];\r\n            } else {\r\n                logger.log(\"Unknown type:\", typeof data, \"in key\", key);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateApplicationLanguage(id) {\r\n    logger.log(\"Setting application language:\", id);\r\n\r\n    const data = LANGUAGES[id];\r\n\r\n    if (!data) {\r\n        logger.error(\"Unknown language:\", id);\r\n        return;\r\n    }\r\n\r\n    if (data.data) {\r\n        logger.log(\"Applying translations ...\");\r\n        matchDataRecursive(T, data.data);\r\n    }\r\n}\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnzfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjljEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnjRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpjzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxzUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjrejnlGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxtrngBA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qqrZA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1SA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzzGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrvMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,iBAEA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACldvlnHA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5TA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7HA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChvWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/RA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACteartGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrqnvjhttxJA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAEA;AACA;AACA,aaAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ixpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjolLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvzGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjpvPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvlTA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnxppdzdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjnetznPA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3JA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/HA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7HA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnpNA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3PA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvlenKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5QA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChhlvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxnHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzHA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxhlthNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvrprjihGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzhcbthrrmzxnkzhzHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvvlptpDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfxNA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdnhzHA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAEA;AACA;AACA,qjrNA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvvkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzvIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnhJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClEA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpCA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnCA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuivCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzhclLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qngBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnxsourceRoot":""}