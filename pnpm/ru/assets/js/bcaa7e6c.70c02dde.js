"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2679],{9613:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var a=t(9496);function p(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){p(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,p=function(e,n){if(null==e)return{};var t,a,p={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(p[t]=e[t]);return p}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(p[t]=e[t])}return p}var r=a.createContext({}),s=function(e){var n=a.useContext(r),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=s(e.components);return a.createElement(r.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,p=e.mdxType,i=e.originalType,r=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(t),u=p,k=m["".concat(r,".").concat(u)]||m[u]||c[u]||i;return t?a.createElement(k,l(l({ref:n},d),{},{components:t})):a.createElement(k,l({ref:n},d))}));function u(e,n){var t=arguments,p=n&&n.mdxType;if("string"==typeof e||p){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var r in n)hasOwnProperty.call(n,r)&&(o[r]=n[r]);o.originalType=e,o.mdxType="string"==typeof e?e:p,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5570:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=t(2962),p=t(2742),i=(t(9496),t(9613)),l=["components"],o={id:"package_json",title:"package.json"},r=void 0,s={unversionedId:"package_json",id:"package_json",title:"package.json",description:"\u0424\u0430\u0439\u043b \u043c\u0430\u043d\u0438\u0444\u0435\u0441\u0442\u0430 \u043f\u0430\u043a\u0435\u0442\u0430. \u041e\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u043a\u0435\u0442\u0430, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438, \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u0430\u0432\u0442\u043e\u0440\u0430 \u0438 \u0442.\u0434. \u042d\u0442\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u043f\u0430\u043a\u0435\u0442\u043d\u044b\u0445 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u043e\u0432 Node.JS, \u0432\u043a\u043b\u044e\u0447\u0430\u044f pnpm.",source:"@site/i18n/ru/docusaurus-plugin-content-docs/current/package_json.md",sourceDirName:".",slug:"/package_json",permalink:"/pnpm/ru/next/package_json",draft:!1,editUrl:"https://translate.pnpm.io/project/pnpm/ru",tags:[],version:"current",frontMatter:{id:"package_json",title:"package.json"},sidebar:"docs",previous:{title:"pnpm config",permalink:"/pnpm/ru/next/cli/config"},next:{title:".npmrc",permalink:"/pnpm/ru/next/npmrc"}},d={},c=[{value:"engines",id:"engines",level:2},{value:"dependenciesMeta",id:"dependenciesmeta",level:2},{value:"dependenciesMeta.*.injected",id:"dependenciesmetainjected",level:3},{value:"peerDependenciesMeta",id:"peerdependenciesmeta",level:2},{value:"peerDependenciesMeta.*.optional",id:"peerdependenciesmetaoptional",level:3},{value:"publishConfig",id:"publishconfig",level:2},{value:"publishConfig.executableFiles",id:"publishconfigexecutablefiles",level:3},{value:"publishConfig.directory",id:"publishconfigdirectory",level:3},{value:"publishConfig.linkDirectory",id:"publishconfiglinkdirectory",level:3},{value:"pnpm.overrides",id:"pnpmoverrides",level:2},{value:"pnpm.packageExtensions",id:"pnpmpackageextensions",level:2},{value:"pnpm.peerDependencyRules",id:"pnpmpeerdependencyrules",level:2},{value:"pnpm.peerDependencyRules.ignoreMissing",id:"pnpmpeerdependencyrulesignoremissing",level:3},{value:"pnpm.peerDependencyRules.allowedVersions",id:"pnpmpeerdependencyrulesallowedversions",level:3},{value:"pnpm.peerDependencyRules.allowAny",id:"pnpmpeerdependencyrulesallowany",level:3},{value:"pnpm.neverBuiltDependencies",id:"pnpmneverbuiltdependencies",level:2},{value:"pnpm.onlyBuiltDependencies",id:"pnpmonlybuiltdependencies",level:2},{value:"pnpm.allowedDeprecatedVersions",id:"pnpmalloweddeprecatedversions",level:2},{value:"pnpm.patchedDependencies",id:"pnpmpatcheddependencies",level:2},{value:"pnpm.allowNonAppliedPatches",id:"pnpmallownonappliedpatches",level:2},{value:"pnpm.updateConfig",id:"pnpmupdateconfig",level:2},{value:"pnpm.updateConfig.ignoreDependencies",id:"pnpmupdateconfigignoredependencies",level:3},{value:"pnpm.auditConfig",id:"pnpmauditconfig",level:2},{value:"pnpm.auditConfig.ignoreCves",id:"pnpmauditconfigignorecves",level:3},{value:"pnpm.requiredScripts",id:"pnpmrequiredscripts",level:2},{value:"resolutions",id:"resolutions",level:2}],m={toc:c};function u(e){var n=e.components,t=(0,p.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u0424\u0430\u0439\u043b \u043c\u0430\u043d\u0438\u0444\u0435\u0441\u0442\u0430 \u043f\u0430\u043a\u0435\u0442\u0430. \u041e\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u043a\u0435\u0442\u0430, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438, \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a, \u0430\u0432\u0442\u043e\u0440\u0430 \u0438 \u0442.\u0434. \u042d\u0442\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u043f\u0430\u043a\u0435\u0442\u043d\u044b\u0445 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u043e\u0432 Node.JS, \u0432\u043a\u043b\u044e\u0447\u0430\u044f pnpm."),(0,i.kt)("h2",{id:"engines"},"engines"),(0,i.kt)("p",null,"\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u044e Node \u0438 pnpm, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432\u0430\u0448 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u044b\u0439 \u043f\u0440\u043e\u0434\u0443\u043a\u0442:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "engines": {\n        "node": ">=10",\n        "pnpm": ">=3"\n    }\n}\n')),(0,i.kt)("p",null,"\u0412\u043e \u0432\u0440\u0435\u043c\u044f \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 pnpm \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u044b\u0434\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u0435\u0441\u043b\u0438 \u0435\u0433\u043e \u0432\u0435\u0440\u0441\u0438\u044f \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441 \u0432\u0435\u0440\u0441\u0438\u0435\u0439, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u0432 \u043f\u043e\u043b\u0435 ",(0,i.kt)("inlineCode",{parentName:"p"},"engines"),"."),(0,i.kt)("p",null,"\u0415\u0441\u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b \u0444\u043b\u0430\u0433 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 ",(0,i.kt)("inlineCode",{parentName:"p"},"engine-strict")," (\u0441\u043c. ",(0,i.kt)("a",{parentName:"p",href:"/pnpm/ru/next/npmrc#engine-strict"},".npmrc"),"), \u044d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u043e\u0441\u0438\u0442 \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440 \u0438 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u043e\u0433\u0434\u0430, \u043a\u043e\u0433\u0434\u0430 \u0432\u0430\u0448 \u043f\u0430\u043a\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043a\u0430\u043a \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c."),(0,i.kt)("h2",{id:"dependenciesmeta"},"dependenciesMeta"),(0,i.kt)("p",null,"Additional meta information used for dependencies declared inside ",(0,i.kt)("inlineCode",{parentName:"p"},"dependencies"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"optionalDependencies"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"devDependencies"),"."),(0,i.kt)("h3",{id:"dependenciesmetainjected"},"dependenciesMeta.*.injected"),(0,i.kt)("p",null,"If this is set to true for a local dependency, the package will be hard linked to the modules directory, not symlinked."),(0,i.kt)("p",null,"For instance, the following ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," in a workspace will create a symlink to ",(0,i.kt)("inlineCode",{parentName:"p"},"button")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"node_modules")," directory of ",(0,i.kt)("inlineCode",{parentName:"p"},"card"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "card",\n  "dependencies": {\n    "button": "workspace:1.0.0"\n  }\n}\n')),(0,i.kt)("p",null,"But what if ",(0,i.kt)("inlineCode",{parentName:"p"},"button")," has ",(0,i.kt)("inlineCode",{parentName:"p"},"react")," in its peer dependencies? If all projects in the monorepo use the same version of ",(0,i.kt)("inlineCode",{parentName:"p"},"react"),", then no problem. But what if ",(0,i.kt)("inlineCode",{parentName:"p"},"button")," is required by ",(0,i.kt)("inlineCode",{parentName:"p"},"card")," that uses ",(0,i.kt)("inlineCode",{parentName:"p"},"react@16")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"form")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"react@17"),"? Without using ",(0,i.kt)("inlineCode",{parentName:"p"},"inject"),", you'd have to choose a single version of ",(0,i.kt)("inlineCode",{parentName:"p"},"react")," and install it as dev dependency of ",(0,i.kt)("inlineCode",{parentName:"p"},"button"),". But using the ",(0,i.kt)("inlineCode",{parentName:"p"},"injected")," field you can inject ",(0,i.kt)("inlineCode",{parentName:"p"},"button")," to a package, and ",(0,i.kt)("inlineCode",{parentName:"p"},"button")," will be installed with the ",(0,i.kt)("inlineCode",{parentName:"p"},"react")," version of that package."),(0,i.kt)("p",null,"So this will be the ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"card"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "card",\n  "dependencies": {\n    "button": "workspace:1.0.0",\n    "react": "16"\n  },\n  "dependenciesMeta": {\n    "button": {\n      "injected": true\n    }\n  }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"button")," will be hard linked into the dependencies of ",(0,i.kt)("inlineCode",{parentName:"p"},"card"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"react@16")," will be symlinked to the dependencies of ",(0,i.kt)("inlineCode",{parentName:"p"},"card/node_modules/button"),"."),(0,i.kt)("p",null,"And this will be the ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"form"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "form",\n  "dependencies": {\n    "button": "workspace:1.0.0",\n    "react": "17"\n  },\n  "dependenciesMeta": {\n    "button": {\n      "injected": true\n    }\n  }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"button")," will be hard linked into the dependencies of ",(0,i.kt)("inlineCode",{parentName:"p"},"form"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"react@17")," will be symlinked to the dependencies of ",(0,i.kt)("inlineCode",{parentName:"p"},"form/node_modules/button"),"."),(0,i.kt)("h2",{id:"peerdependenciesmeta"},"peerDependenciesMeta"),(0,i.kt)("p",null,"This field lists some extra information related to the dependencies listed in the ",(0,i.kt)("inlineCode",{parentName:"p"},"peerDependencies")," field."),(0,i.kt)("h3",{id:"peerdependenciesmetaoptional"},"peerDependenciesMeta.*.optional"),(0,i.kt)("p",null,"If this is set to true, the selected peer dependency will be marked as optional by the package manager. Therefore, the consumer omitting it will no longer be reported as an error."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "peerDependencies": {\n        "foo": "1"\n    },\n    "peerDependenciesMeta": {\n        "foo": {\n            "optional": true\n        },\n        "bar": {\n            "optional": true\n        }\n    }\n}\n')),(0,i.kt)("p",null,"Note that even though ",(0,i.kt)("inlineCode",{parentName:"p"},"bar")," was not specified in ",(0,i.kt)("inlineCode",{parentName:"p"},"peerDependencies"),", it is marked as optional. pnpm will therefore assume that any version of bar is fine. However, ",(0,i.kt)("inlineCode",{parentName:"p"},"foo")," is optional, but only to the required version specification."),(0,i.kt)("h2",{id:"publishconfig"},"publishConfig"),(0,i.kt)("p",null,"It is possible to override some fields in the manifest before the package is packed. The following fields may be overridden:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stereobooster/package.json#bin"},(0,i.kt)("inlineCode",{parentName:"a"},"bin"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stereobooster/package.json#main"},(0,i.kt)("inlineCode",{parentName:"a"},"main"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://nodejs.org/api/esm.html#esm_package_exports"},(0,i.kt)("inlineCode",{parentName:"a"},"exports"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stereobooster/package.json#types"},(0,i.kt)("inlineCode",{parentName:"a"},"types")," or ",(0,i.kt)("inlineCode",{parentName:"a"},"typings"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stereobooster/package.json#module"},(0,i.kt)("inlineCode",{parentName:"a"},"module"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stereobooster/package.json#browser"},(0,i.kt)("inlineCode",{parentName:"a"},"browser"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stereobooster/package.json#esnext"},(0,i.kt)("inlineCode",{parentName:"a"},"esnext"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stereobooster/package.json#es2015"},(0,i.kt)("inlineCode",{parentName:"a"},"es2015"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stereobooster/package.json#unpkg-1"},(0,i.kt)("inlineCode",{parentName:"a"},"unpkg"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stereobooster/package.json#microbundle"},(0,i.kt)("inlineCode",{parentName:"a"},"umd:main"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html#version-selection-with-typesversions"},(0,i.kt)("inlineCode",{parentName:"a"},"typesVersions"))),(0,i.kt)("li",{parentName:"ul"},"cpu"),(0,i.kt)("li",{parentName:"ul"},"os")),(0,i.kt)("p",null,"To override a field, add the publish version of the field to ",(0,i.kt)("inlineCode",{parentName:"p"},"publishConfig"),"."),(0,i.kt)("p",null,"For instance, the following ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "foo",\n    "version": "1.0.0",\n    "main": "src/index.ts",\n    "publishConfig": {\n        "main": "lib/index.js",\n        "typings": "lib/index.d.ts"\n    }\n}\n')),(0,i.kt)("p",null,"Will be published as:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "foo",\n    "version": "1.0.0",\n    "main": "lib/index.js",\n    "typings": "lib/index.d.ts"\n}\n')),(0,i.kt)("h3",{id:"publishconfigexecutablefiles"},"publishConfig.executableFiles"),(0,i.kt)("p",null,"\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u0437 \u0441\u043e\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043d\u0438\u043a\u0430\u043a\u0438\u0435 \u0444\u0430\u0439\u043b\u044b, \u043a\u0440\u043e\u043c\u0435 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u0432 \u043f\u043e\u043b\u0435 bin, \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u044b \u043a\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u044b\u0435 \u0432 \u0438\u0442\u043e\u0433\u043e\u0432\u043e\u043c \u0430\u0440\u0445\u0438\u0432\u0435 \u043f\u0430\u043a\u0435\u0442\u043e\u0432. \u041f\u043e\u043b\u0435 ",(0,i.kt)("inlineCode",{parentName:"p"},"executableFiles")," \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u043e\u0431\u044a\u044f\u0432\u043b\u044f\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0444\u043b\u0430\u0433 \u0438\u0441\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 (+x), \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0447\u0435\u0440\u0435\u0437 \u043f\u043e\u043b\u0435 bin."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "publishConfig": {\n    "executableFiles": [\n      "./dist/shim.js"\n    ]\n  }\n}\n')),(0,i.kt)("h3",{id:"publishconfigdirectory"},"publishConfig.directory"),(0,i.kt)("p",null,"You also can use the field ",(0,i.kt)("inlineCode",{parentName:"p"},"publishConfig.directory")," to customize the published subdirectory relative to the current ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,i.kt)("p",null,"It is expected to have a modified version of the current package in the specified directory (usually using third party build tools)."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"In this example the ",(0,i.kt)("inlineCode",{parentName:"p"},'"dist"')," folder must contain a ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "foo",\n  "version": "1.0.0",\n  "publishConfig": {\n    "directory": "dist"\n  }\n}\n')),(0,i.kt)("h3",{id:"publishconfiglinkdirectory"},"publishConfig.linkDirectory"),(0,i.kt)("p",null,"Added in: v7.8.0"),(0,i.kt)("p",null,"When set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", the project will be symlinked from the ",(0,i.kt)("inlineCode",{parentName:"p"},"publishConfig.directory")," location during local development."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "foo",\n  "version": "1.0.0",\n  "publishConfig": {\n    "directory": "dist"\n    "linkDirectory": true\n  }\n}\n')),(0,i.kt)("h2",{id:"pnpmoverrides"},"pnpm.overrides"),(0,i.kt)("p",null,"This field allows you to instruct pnpm to override any dependency in the dependency graph. This is useful to enforce all your packages to use a single version of a dependency, backport a fix, or replace a dependency with a fork."),(0,i.kt)("p",null,"Note that the overrides field can only be set at the root of the project."),(0,i.kt)("p",null,"An example of the ",(0,i.kt)("inlineCode",{parentName:"p"},'"pnpm"."overrides"')," field:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "overrides": {\n      "foo": "^1.0.0",\n      "quux": "npm:@myorg/quux@^1.0.0",\n      "bar@^2.1.0": "3.0.0",\n      "qar@1>zoo": "2"\n    }\n  }\n}\n')),(0,i.kt)("p",null,'You may specify the package the overriden dependency belongs to by separating the package selector from the dependency selector with a ">", for example ',(0,i.kt)("inlineCode",{parentName:"p"},"qar@1>zoo")," will only override the ",(0,i.kt)("inlineCode",{parentName:"p"},"zoo")," dependency of ",(0,i.kt)("inlineCode",{parentName:"p"},"qar@1"),", not for any other dependencies."),(0,i.kt)("p",null,"An override may be defined as a reference to a direct dependency's spec. This is achieved by prefixing the name of the dependency with a ",(0,i.kt)("inlineCode",{parentName:"p"},"$"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "foo": "^1.0.0"\n  },\n  "overrides": {\n    "foo": "$foo"\n  }\n}\n')),(0,i.kt)("p",null,"The referenced package does not need to match the overridden one:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "foo": "^1.0.0"\n  },\n  "overrides": {\n    "bar": "$foo"\n  }\n}\n')),(0,i.kt)("h2",{id:"pnpmpackageextensions"},"pnpm.packageExtensions"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"packageExtensions")," fields offer a way to extend the existing package definitions with additional information. For example, if ",(0,i.kt)("inlineCode",{parentName:"p"},"react-redux")," should have ",(0,i.kt)("inlineCode",{parentName:"p"},"react-dom")," in its ",(0,i.kt)("inlineCode",{parentName:"p"},"peerDependencies")," but it has not, it is possible to patch ",(0,i.kt)("inlineCode",{parentName:"p"},"react-redux")," using ",(0,i.kt)("inlineCode",{parentName:"p"},"packageExtensions"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "packageExtensions": {\n      "react-redux": {\n        "peerDependencies": {\n          "react-dom": "*"\n        }\n      }\n    }\n  }\n}\n')),(0,i.kt)("p",null,"The keys in ",(0,i.kt)("inlineCode",{parentName:"p"},"packageExtensions")," are package names or package names and semver ranges, so it is possible to patch only some versions of a package:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "packageExtensions": {\n      "react-redux@1": {\n        "peerDependencies": {\n          "react-dom": "*"\n        }\n      }\n    }\n  }\n}\n')),(0,i.kt)("p",null,"The following fields may be extended using ",(0,i.kt)("inlineCode",{parentName:"p"},"packageExtensions"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"dependencies"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"optionalDependencies"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"peerDependencies"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"peerDependenciesMeta"),"."),(0,i.kt)("p",null,"A bigger example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "packageExtensions": {\n      "express@1": {\n        "optionalDependencies": {\n          "typescript": "2"\n        }\n      },\n      "fork-ts-checker-webpack-plugin": {\n        "dependencies": {\n          "@babel/core": "1"\n        },\n        "peerDependencies": {\n          "eslint": ">= 6"\n        },\n        "peerDependenciesMeta": {\n          "eslint": {\n            "optional": true\n          }\n        }\n      }\n    }\n  }\n}\n')),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Together with Yarn, we maintain a database of ",(0,i.kt)("inlineCode",{parentName:"p"},"packageExtensions")," to patch broken packages in the ecosystem. If you use ",(0,i.kt)("inlineCode",{parentName:"p"},"packageExtensions"),", consider sending a PR upstream and contributing your extension to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/yarnpkg/berry/blob/master/packages/yarnpkg-extensions/sources/index.ts"},(0,i.kt)("inlineCode",{parentName:"a"},"@yarnpkg/extensions"))," database.")),(0,i.kt)("h2",{id:"pnpmpeerdependencyrules"},"pnpm.peerDependencyRules"),(0,i.kt)("h3",{id:"pnpmpeerdependencyrulesignoremissing"},"pnpm.peerDependencyRules.ignoreMissing"),(0,i.kt)("p",null,"pnpm will not print warnings about missing peer dependencies from this list."),(0,i.kt)("p",null,"For instance, with the following configuration, pnpm will not print warnings if a dependency needs ",(0,i.kt)("inlineCode",{parentName:"p"},"react")," but ",(0,i.kt)("inlineCode",{parentName:"p"},"react")," is not installed:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "peerDependencyRules": {\n      "ignoreMissing": ["react"]\n    }\n  }\n}\n')),(0,i.kt)("p",null,"Package name patterns may also be used:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "peerDependencyRules": {\n      "ignoreMissing": ["@babel/*", "@eslint/*"]\n    }\n  }\n}\n')),(0,i.kt)("h3",{id:"pnpmpeerdependencyrulesallowedversions"},"pnpm.peerDependencyRules.allowedVersions"),(0,i.kt)("p",null,"Unmet peer dependency warnings will not be printed for peer dependencies of the specified range."),(0,i.kt)("p",null,"For instance, if you have some dependencies that need ",(0,i.kt)("inlineCode",{parentName:"p"},"react@16")," but you know that they work fine with ",(0,i.kt)("inlineCode",{parentName:"p"},"react@17"),", then you may use the following configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "peerDependencyRules": {\n      "allowedVersions": {\n        "react": "17"\n      }\n    }\n  }\n}\n')),(0,i.kt)("p",null,"This will tell pnpm that any dependency that has react in its peer dependencies should allow ",(0,i.kt)("inlineCode",{parentName:"p"},"react")," v17 to be installed."),(0,i.kt)("p",null,"It is also possible to suppress the warnings only for peer dependencies of specific packages. For instance, with the following configuration ",(0,i.kt)("inlineCode",{parentName:"p"},"react")," v17 will be only allowed when it is in the peer dependencies of the ",(0,i.kt)("inlineCode",{parentName:"p"},"button")," v2 package or in the dependencies of any ",(0,i.kt)("inlineCode",{parentName:"p"},"card")," package:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "peerDependencyRules": {\n      "allowedVersions": {\n        "button@2>react": "17",\n        "card>react": "17"\n      }\n    }\n  }\n}\n')),(0,i.kt)("h3",{id:"pnpmpeerdependencyrulesallowany"},"pnpm.peerDependencyRules.allowAny"),(0,i.kt)("p",null,"Added in: v7.3.0"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"allowAny")," is an array of package name patterns, any peer dependency matching the pattern will be resolved from any version, regardless of the range specified in ",(0,i.kt)("inlineCode",{parentName:"p"},"peerDependencies"),". For instance:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "peerDependencyRules": {\n      "allowAny": ["@babel/*", "eslint"]\n    }\n  }\n}\n')),(0,i.kt)("p",null,"The above setting will mute any warnings about peer dependency version mismatches related to ",(0,i.kt)("inlineCode",{parentName:"p"},"@babel/")," packages or ",(0,i.kt)("inlineCode",{parentName:"p"},"eslint"),"."),(0,i.kt)("h2",{id:"pnpmneverbuiltdependencies"},"pnpm.neverBuiltDependencies"),(0,i.kt)("p",null,'This field allows to ignore the builds of specific dependencies. The "preinstall", "install", and "postinstall" scripts of the listed packages will not be executed during installation.'),(0,i.kt)("p",null,"An example of the ",(0,i.kt)("inlineCode",{parentName:"p"},'"pnpm"."neverBuiltDependencies"')," field:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "neverBuiltDependencies": ["fsevents", "level"]\n  }\n}\n')),(0,i.kt)("h2",{id:"pnpmonlybuiltdependencies"},"pnpm.onlyBuiltDependencies"),(0,i.kt)("p",null,"A list of package names that are allowed to be executed during installation. If this field exists, only the listed packages will be able to run install scripts."),(0,i.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "onlyBuiltDependencies": ["fsevents"]\n  }\n}\n')),(0,i.kt)("h2",{id:"pnpmalloweddeprecatedversions"},"pnpm.allowedDeprecatedVersions"),(0,i.kt)("p",null,"Added in: v7.2.0"),(0,i.kt)("p",null,"This setting allows muting deprecation warnings of specific packages."),(0,i.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "allowedDeprecatedVersions": {\n      "express": "1",\n      "request": "*"\n    }\n  }\n}\n')),(0,i.kt)("p",null,"With the above configuration pnpm will not print deprecation warnings about any version of ",(0,i.kt)("inlineCode",{parentName:"p"},"request")," and about v1 of ",(0,i.kt)("inlineCode",{parentName:"p"},"express"),"."),(0,i.kt)("h2",{id:"pnpmpatcheddependencies"},"pnpm.patchedDependencies"),(0,i.kt)("p",null,"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043e \u0432: v7.4.0"),(0,i.kt)("p",null,"This field is added/updated automatically when you run ",(0,i.kt)("a",{parentName:"p",href:"/pnpm/ru/next/cli/patch-commit"},"pnpm patch-commit"),". It is a dictionary where the key should be the package name and exact version. The value should be a relative path to a patch file."),(0,i.kt)("p",null,"\u041f\u0440\u0438\u043c\u0435\u0440:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "patchedDependencies": {\n      "express@4.18.1": "patches/express@4.18.1.patch"\n    }\n  }\n}\n')),(0,i.kt)("h2",{id:"pnpmallownonappliedpatches"},"pnpm.allowNonAppliedPatches"),(0,i.kt)("p",null,"Added in: v7.12.0"),(0,i.kt)("p",null,"When ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", installation won't fail if some of the patches from the ",(0,i.kt)("inlineCode",{parentName:"p"},"patchedDependencies")," field were not applied."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "patchedDependencies": {\n      "express@4.18.1": "patches/express@4.18.1.patch"\n    }\n    "allowNonAppliedPatches": true\n}\n')),(0,i.kt)("h2",{id:"pnpmupdateconfig"},"pnpm.updateConfig"),(0,i.kt)("h3",{id:"pnpmupdateconfigignoredependencies"},"pnpm.updateConfig.ignoreDependencies"),(0,i.kt)("p",null,"Added in: v7.13.0"),(0,i.kt)("p",null,"Sometimes you can't update a dependency. For instance, the latest version of the dependency started to use ESM but your project is not yet in ESM. Annoyingly, such a package will be always printed out by the ",(0,i.kt)("inlineCode",{parentName:"p"},"pnpm outdated")," command and updated, when running ",(0,i.kt)("inlineCode",{parentName:"p"},"pnpm update --latest"),". However, you may list packages that you don't want to upgrade in the ",(0,i.kt)("inlineCode",{parentName:"p"},"ignoreDependencies")," field:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "updateConfig": {\n      "ignoreDependencies": ["load-json-file"]\n    }\n  }\n}\n')),(0,i.kt)("p",null,"Patterns are also supported, so you may ignore any packages from a scope: ",(0,i.kt)("inlineCode",{parentName:"p"},"@babel/*"),"."),(0,i.kt)("h2",{id:"pnpmauditconfig"},"pnpm.auditConfig"),(0,i.kt)("h3",{id:"pnpmauditconfigignorecves"},"pnpm.auditConfig.ignoreCves"),(0,i.kt)("p",null,"Added in: v7.15.0"),(0,i.kt)("p",null,"A list of CVE IDs that will be ignored by the ",(0,i.kt)("a",{parentName:"p",href:"/pnpm/ru/next/cli/audit"},(0,i.kt)("inlineCode",{parentName:"a"},"pnpm audit"))," command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pnpm": {\n    "auditConfig": {\n      "ignoreCves": [\n        "CVE-2022-36313"\n      ]\n    }\n  }\n}\n')),(0,i.kt)("h2",{id:"pnpmrequiredscripts"},"pnpm.requiredScripts"),(0,i.kt)("p",null,"Added in: v7.19.0"),(0,i.kt)("p",null,"Scripts listed in this array will be required in each project of the workspace. Otherwise, ",(0,i.kt)("inlineCode",{parentName:"p"},"pnpm -r run <script name>")," will fail."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "pnpm": {\n    "requiredScripts": ["build"]\n  }\n}\n')),(0,i.kt)("h2",{id:"resolutions"},"resolutions"),(0,i.kt)("p",null,"Same as ",(0,i.kt)("a",{parentName:"p",href:"#pnpmoverrides"},(0,i.kt)("inlineCode",{parentName:"a"},"pnpm.overrides")),". We read it for easier migration from Yarn."))}u.isMDXComponent=!0}}]);